// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_vmwareengine_protos || ($protobuf.roots._google_cloud_vmwareengine_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.vmwareengine = (function() {
    
                /**
                 * Namespace vmwareengine.
                 * @memberof google.cloud
                 * @namespace
                 */
                var vmwareengine = {};
    
                vmwareengine.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.vmwareengine
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.VmwareEngine = (function() {
    
                        /**
                         * Constructs a new VmwareEngine service.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a VmwareEngine
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function VmwareEngine(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (VmwareEngine.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = VmwareEngine;
    
                        /**
                         * Creates new VmwareEngine service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {VmwareEngine} RPC service. Useful where requests and/or responses are streamed.
                         */
                        VmwareEngine.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|listPrivateClouds}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ListPrivateCloudsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.ListPrivateCloudsResponse} [response] ListPrivateCloudsResponse
                         */
    
                        /**
                         * Calls ListPrivateClouds.
                         * @function listPrivateClouds
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListPrivateCloudsRequest} request ListPrivateCloudsRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateCloudsCallback} callback Node-style callback called with the error, if any, and ListPrivateCloudsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.listPrivateClouds = function listPrivateClouds(request, callback) {
                            return this.rpcCall(listPrivateClouds, $root.google.cloud.vmwareengine.v1.ListPrivateCloudsRequest, $root.google.cloud.vmwareengine.v1.ListPrivateCloudsResponse, request, callback);
                        }, "name", { value: "ListPrivateClouds" });
    
                        /**
                         * Calls ListPrivateClouds.
                         * @function listPrivateClouds
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListPrivateCloudsRequest} request ListPrivateCloudsRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.ListPrivateCloudsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|getPrivateCloud}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef GetPrivateCloudCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.PrivateCloud} [response] PrivateCloud
                         */
    
                        /**
                         * Calls GetPrivateCloud.
                         * @function getPrivateCloud
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetPrivateCloudRequest} request GetPrivateCloudRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.GetPrivateCloudCallback} callback Node-style callback called with the error, if any, and PrivateCloud
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.getPrivateCloud = function getPrivateCloud(request, callback) {
                            return this.rpcCall(getPrivateCloud, $root.google.cloud.vmwareengine.v1.GetPrivateCloudRequest, $root.google.cloud.vmwareengine.v1.PrivateCloud, request, callback);
                        }, "name", { value: "GetPrivateCloud" });
    
                        /**
                         * Calls GetPrivateCloud.
                         * @function getPrivateCloud
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetPrivateCloudRequest} request GetPrivateCloudRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.PrivateCloud>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|createPrivateCloud}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef CreatePrivateCloudCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreatePrivateCloud.
                         * @function createPrivateCloud
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest} request CreatePrivateCloudRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.CreatePrivateCloudCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.createPrivateCloud = function createPrivateCloud(request, callback) {
                            return this.rpcCall(createPrivateCloud, $root.google.cloud.vmwareengine.v1.CreatePrivateCloudRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreatePrivateCloud" });
    
                        /**
                         * Calls CreatePrivateCloud.
                         * @function createPrivateCloud
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest} request CreatePrivateCloudRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|updatePrivateCloud}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef UpdatePrivateCloudCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdatePrivateCloud.
                         * @function updatePrivateCloud
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest} request UpdatePrivateCloudRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.UpdatePrivateCloudCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.updatePrivateCloud = function updatePrivateCloud(request, callback) {
                            return this.rpcCall(updatePrivateCloud, $root.google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdatePrivateCloud" });
    
                        /**
                         * Calls UpdatePrivateCloud.
                         * @function updatePrivateCloud
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest} request UpdatePrivateCloudRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|deletePrivateCloud}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef DeletePrivateCloudCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeletePrivateCloud.
                         * @function deletePrivateCloud
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest} request DeletePrivateCloudRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.DeletePrivateCloudCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.deletePrivateCloud = function deletePrivateCloud(request, callback) {
                            return this.rpcCall(deletePrivateCloud, $root.google.cloud.vmwareengine.v1.DeletePrivateCloudRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeletePrivateCloud" });
    
                        /**
                         * Calls DeletePrivateCloud.
                         * @function deletePrivateCloud
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest} request DeletePrivateCloudRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|undeletePrivateCloud}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef UndeletePrivateCloudCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UndeletePrivateCloud.
                         * @function undeletePrivateCloud
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest} request UndeletePrivateCloudRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.UndeletePrivateCloudCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.undeletePrivateCloud = function undeletePrivateCloud(request, callback) {
                            return this.rpcCall(undeletePrivateCloud, $root.google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UndeletePrivateCloud" });
    
                        /**
                         * Calls UndeletePrivateCloud.
                         * @function undeletePrivateCloud
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest} request UndeletePrivateCloudRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|listClusters}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ListClustersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.ListClustersResponse} [response] ListClustersResponse
                         */
    
                        /**
                         * Calls ListClusters.
                         * @function listClusters
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListClustersRequest} request ListClustersRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ListClustersCallback} callback Node-style callback called with the error, if any, and ListClustersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.listClusters = function listClusters(request, callback) {
                            return this.rpcCall(listClusters, $root.google.cloud.vmwareengine.v1.ListClustersRequest, $root.google.cloud.vmwareengine.v1.ListClustersResponse, request, callback);
                        }, "name", { value: "ListClusters" });
    
                        /**
                         * Calls ListClusters.
                         * @function listClusters
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListClustersRequest} request ListClustersRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.ListClustersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|getCluster}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef GetClusterCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.Cluster} [response] Cluster
                         */
    
                        /**
                         * Calls GetCluster.
                         * @function getCluster
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetClusterRequest} request GetClusterRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.GetClusterCallback} callback Node-style callback called with the error, if any, and Cluster
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.getCluster = function getCluster(request, callback) {
                            return this.rpcCall(getCluster, $root.google.cloud.vmwareengine.v1.GetClusterRequest, $root.google.cloud.vmwareengine.v1.Cluster, request, callback);
                        }, "name", { value: "GetCluster" });
    
                        /**
                         * Calls GetCluster.
                         * @function getCluster
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetClusterRequest} request GetClusterRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.Cluster>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|createCluster}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef CreateClusterCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateCluster.
                         * @function createCluster
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.ICreateClusterRequest} request CreateClusterRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.CreateClusterCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.createCluster = function createCluster(request, callback) {
                            return this.rpcCall(createCluster, $root.google.cloud.vmwareengine.v1.CreateClusterRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateCluster" });
    
                        /**
                         * Calls CreateCluster.
                         * @function createCluster
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.ICreateClusterRequest} request CreateClusterRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|updateCluster}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef UpdateClusterCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateCluster.
                         * @function updateCluster
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUpdateClusterRequest} request UpdateClusterRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.UpdateClusterCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.updateCluster = function updateCluster(request, callback) {
                            return this.rpcCall(updateCluster, $root.google.cloud.vmwareengine.v1.UpdateClusterRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateCluster" });
    
                        /**
                         * Calls UpdateCluster.
                         * @function updateCluster
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUpdateClusterRequest} request UpdateClusterRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|deleteCluster}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef DeleteClusterCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteCluster.
                         * @function deleteCluster
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IDeleteClusterRequest} request DeleteClusterRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.DeleteClusterCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.deleteCluster = function deleteCluster(request, callback) {
                            return this.rpcCall(deleteCluster, $root.google.cloud.vmwareengine.v1.DeleteClusterRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteCluster" });
    
                        /**
                         * Calls DeleteCluster.
                         * @function deleteCluster
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IDeleteClusterRequest} request DeleteClusterRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|listSubnets}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ListSubnetsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.ListSubnetsResponse} [response] ListSubnetsResponse
                         */
    
                        /**
                         * Calls ListSubnets.
                         * @function listSubnets
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListSubnetsRequest} request ListSubnetsRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ListSubnetsCallback} callback Node-style callback called with the error, if any, and ListSubnetsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.listSubnets = function listSubnets(request, callback) {
                            return this.rpcCall(listSubnets, $root.google.cloud.vmwareengine.v1.ListSubnetsRequest, $root.google.cloud.vmwareengine.v1.ListSubnetsResponse, request, callback);
                        }, "name", { value: "ListSubnets" });
    
                        /**
                         * Calls ListSubnets.
                         * @function listSubnets
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListSubnetsRequest} request ListSubnetsRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.ListSubnetsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|getSubnet}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef GetSubnetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.Subnet} [response] Subnet
                         */
    
                        /**
                         * Calls GetSubnet.
                         * @function getSubnet
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetSubnetRequest} request GetSubnetRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.GetSubnetCallback} callback Node-style callback called with the error, if any, and Subnet
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.getSubnet = function getSubnet(request, callback) {
                            return this.rpcCall(getSubnet, $root.google.cloud.vmwareengine.v1.GetSubnetRequest, $root.google.cloud.vmwareengine.v1.Subnet, request, callback);
                        }, "name", { value: "GetSubnet" });
    
                        /**
                         * Calls GetSubnet.
                         * @function getSubnet
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetSubnetRequest} request GetSubnetRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.Subnet>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|updateSubnet}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef UpdateSubnetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateSubnet.
                         * @function updateSubnet
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUpdateSubnetRequest} request UpdateSubnetRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.UpdateSubnetCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.updateSubnet = function updateSubnet(request, callback) {
                            return this.rpcCall(updateSubnet, $root.google.cloud.vmwareengine.v1.UpdateSubnetRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateSubnet" });
    
                        /**
                         * Calls UpdateSubnet.
                         * @function updateSubnet
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUpdateSubnetRequest} request UpdateSubnetRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|listNodeTypes}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ListNodeTypesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.ListNodeTypesResponse} [response] ListNodeTypesResponse
                         */
    
                        /**
                         * Calls ListNodeTypes.
                         * @function listNodeTypes
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListNodeTypesRequest} request ListNodeTypesRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ListNodeTypesCallback} callback Node-style callback called with the error, if any, and ListNodeTypesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.listNodeTypes = function listNodeTypes(request, callback) {
                            return this.rpcCall(listNodeTypes, $root.google.cloud.vmwareengine.v1.ListNodeTypesRequest, $root.google.cloud.vmwareengine.v1.ListNodeTypesResponse, request, callback);
                        }, "name", { value: "ListNodeTypes" });
    
                        /**
                         * Calls ListNodeTypes.
                         * @function listNodeTypes
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListNodeTypesRequest} request ListNodeTypesRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.ListNodeTypesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|getNodeType}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef GetNodeTypeCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.NodeType} [response] NodeType
                         */
    
                        /**
                         * Calls GetNodeType.
                         * @function getNodeType
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetNodeTypeRequest} request GetNodeTypeRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.GetNodeTypeCallback} callback Node-style callback called with the error, if any, and NodeType
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.getNodeType = function getNodeType(request, callback) {
                            return this.rpcCall(getNodeType, $root.google.cloud.vmwareengine.v1.GetNodeTypeRequest, $root.google.cloud.vmwareengine.v1.NodeType, request, callback);
                        }, "name", { value: "GetNodeType" });
    
                        /**
                         * Calls GetNodeType.
                         * @function getNodeType
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetNodeTypeRequest} request GetNodeTypeRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.NodeType>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|showNsxCredentials}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ShowNsxCredentialsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.Credentials} [response] Credentials
                         */
    
                        /**
                         * Calls ShowNsxCredentials.
                         * @function showNsxCredentials
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest} request ShowNsxCredentialsRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ShowNsxCredentialsCallback} callback Node-style callback called with the error, if any, and Credentials
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.showNsxCredentials = function showNsxCredentials(request, callback) {
                            return this.rpcCall(showNsxCredentials, $root.google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest, $root.google.cloud.vmwareengine.v1.Credentials, request, callback);
                        }, "name", { value: "ShowNsxCredentials" });
    
                        /**
                         * Calls ShowNsxCredentials.
                         * @function showNsxCredentials
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest} request ShowNsxCredentialsRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.Credentials>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|showVcenterCredentials}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ShowVcenterCredentialsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.Credentials} [response] Credentials
                         */
    
                        /**
                         * Calls ShowVcenterCredentials.
                         * @function showVcenterCredentials
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest} request ShowVcenterCredentialsRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ShowVcenterCredentialsCallback} callback Node-style callback called with the error, if any, and Credentials
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.showVcenterCredentials = function showVcenterCredentials(request, callback) {
                            return this.rpcCall(showVcenterCredentials, $root.google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest, $root.google.cloud.vmwareengine.v1.Credentials, request, callback);
                        }, "name", { value: "ShowVcenterCredentials" });
    
                        /**
                         * Calls ShowVcenterCredentials.
                         * @function showVcenterCredentials
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest} request ShowVcenterCredentialsRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.Credentials>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|resetNsxCredentials}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ResetNsxCredentialsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ResetNsxCredentials.
                         * @function resetNsxCredentials
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest} request ResetNsxCredentialsRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ResetNsxCredentialsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.resetNsxCredentials = function resetNsxCredentials(request, callback) {
                            return this.rpcCall(resetNsxCredentials, $root.google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ResetNsxCredentials" });
    
                        /**
                         * Calls ResetNsxCredentials.
                         * @function resetNsxCredentials
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest} request ResetNsxCredentialsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|resetVcenterCredentials}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ResetVcenterCredentialsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ResetVcenterCredentials.
                         * @function resetVcenterCredentials
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest} request ResetVcenterCredentialsRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ResetVcenterCredentialsCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.resetVcenterCredentials = function resetVcenterCredentials(request, callback) {
                            return this.rpcCall(resetVcenterCredentials, $root.google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ResetVcenterCredentials" });
    
                        /**
                         * Calls ResetVcenterCredentials.
                         * @function resetVcenterCredentials
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest} request ResetVcenterCredentialsRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|createHcxActivationKey}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef CreateHcxActivationKeyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateHcxActivationKey.
                         * @function createHcxActivationKey
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest} request CreateHcxActivationKeyRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.CreateHcxActivationKeyCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.createHcxActivationKey = function createHcxActivationKey(request, callback) {
                            return this.rpcCall(createHcxActivationKey, $root.google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateHcxActivationKey" });
    
                        /**
                         * Calls CreateHcxActivationKey.
                         * @function createHcxActivationKey
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest} request CreateHcxActivationKeyRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|listHcxActivationKeys}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ListHcxActivationKeysCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse} [response] ListHcxActivationKeysResponse
                         */
    
                        /**
                         * Calls ListHcxActivationKeys.
                         * @function listHcxActivationKeys
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest} request ListHcxActivationKeysRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ListHcxActivationKeysCallback} callback Node-style callback called with the error, if any, and ListHcxActivationKeysResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.listHcxActivationKeys = function listHcxActivationKeys(request, callback) {
                            return this.rpcCall(listHcxActivationKeys, $root.google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest, $root.google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse, request, callback);
                        }, "name", { value: "ListHcxActivationKeys" });
    
                        /**
                         * Calls ListHcxActivationKeys.
                         * @function listHcxActivationKeys
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest} request ListHcxActivationKeysRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|getHcxActivationKey}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef GetHcxActivationKeyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.HcxActivationKey} [response] HcxActivationKey
                         */
    
                        /**
                         * Calls GetHcxActivationKey.
                         * @function getHcxActivationKey
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest} request GetHcxActivationKeyRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.GetHcxActivationKeyCallback} callback Node-style callback called with the error, if any, and HcxActivationKey
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.getHcxActivationKey = function getHcxActivationKey(request, callback) {
                            return this.rpcCall(getHcxActivationKey, $root.google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest, $root.google.cloud.vmwareengine.v1.HcxActivationKey, request, callback);
                        }, "name", { value: "GetHcxActivationKey" });
    
                        /**
                         * Calls GetHcxActivationKey.
                         * @function getHcxActivationKey
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest} request GetHcxActivationKeyRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.HcxActivationKey>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|getNetworkPolicy}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef GetNetworkPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.NetworkPolicy} [response] NetworkPolicy
                         */
    
                        /**
                         * Calls GetNetworkPolicy.
                         * @function getNetworkPolicy
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest} request GetNetworkPolicyRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.GetNetworkPolicyCallback} callback Node-style callback called with the error, if any, and NetworkPolicy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.getNetworkPolicy = function getNetworkPolicy(request, callback) {
                            return this.rpcCall(getNetworkPolicy, $root.google.cloud.vmwareengine.v1.GetNetworkPolicyRequest, $root.google.cloud.vmwareengine.v1.NetworkPolicy, request, callback);
                        }, "name", { value: "GetNetworkPolicy" });
    
                        /**
                         * Calls GetNetworkPolicy.
                         * @function getNetworkPolicy
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest} request GetNetworkPolicyRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.NetworkPolicy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|listNetworkPolicies}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ListNetworkPoliciesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse} [response] ListNetworkPoliciesResponse
                         */
    
                        /**
                         * Calls ListNetworkPolicies.
                         * @function listNetworkPolicies
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest} request ListNetworkPoliciesRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ListNetworkPoliciesCallback} callback Node-style callback called with the error, if any, and ListNetworkPoliciesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.listNetworkPolicies = function listNetworkPolicies(request, callback) {
                            return this.rpcCall(listNetworkPolicies, $root.google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest, $root.google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse, request, callback);
                        }, "name", { value: "ListNetworkPolicies" });
    
                        /**
                         * Calls ListNetworkPolicies.
                         * @function listNetworkPolicies
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest} request ListNetworkPoliciesRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|createNetworkPolicy}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef CreateNetworkPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateNetworkPolicy.
                         * @function createNetworkPolicy
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest} request CreateNetworkPolicyRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.CreateNetworkPolicyCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.createNetworkPolicy = function createNetworkPolicy(request, callback) {
                            return this.rpcCall(createNetworkPolicy, $root.google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateNetworkPolicy" });
    
                        /**
                         * Calls CreateNetworkPolicy.
                         * @function createNetworkPolicy
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest} request CreateNetworkPolicyRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|updateNetworkPolicy}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef UpdateNetworkPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateNetworkPolicy.
                         * @function updateNetworkPolicy
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest} request UpdateNetworkPolicyRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.UpdateNetworkPolicyCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.updateNetworkPolicy = function updateNetworkPolicy(request, callback) {
                            return this.rpcCall(updateNetworkPolicy, $root.google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateNetworkPolicy" });
    
                        /**
                         * Calls UpdateNetworkPolicy.
                         * @function updateNetworkPolicy
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest} request UpdateNetworkPolicyRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|deleteNetworkPolicy}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef DeleteNetworkPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteNetworkPolicy.
                         * @function deleteNetworkPolicy
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest} request DeleteNetworkPolicyRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.DeleteNetworkPolicyCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.deleteNetworkPolicy = function deleteNetworkPolicy(request, callback) {
                            return this.rpcCall(deleteNetworkPolicy, $root.google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteNetworkPolicy" });
    
                        /**
                         * Calls DeleteNetworkPolicy.
                         * @function deleteNetworkPolicy
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest} request DeleteNetworkPolicyRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|createVmwareEngineNetwork}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef CreateVmwareEngineNetworkCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateVmwareEngineNetwork.
                         * @function createVmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest} request CreateVmwareEngineNetworkRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.CreateVmwareEngineNetworkCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.createVmwareEngineNetwork = function createVmwareEngineNetwork(request, callback) {
                            return this.rpcCall(createVmwareEngineNetwork, $root.google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateVmwareEngineNetwork" });
    
                        /**
                         * Calls CreateVmwareEngineNetwork.
                         * @function createVmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest} request CreateVmwareEngineNetworkRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|updateVmwareEngineNetwork}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef UpdateVmwareEngineNetworkCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateVmwareEngineNetwork.
                         * @function updateVmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest} request UpdateVmwareEngineNetworkRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.UpdateVmwareEngineNetworkCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.updateVmwareEngineNetwork = function updateVmwareEngineNetwork(request, callback) {
                            return this.rpcCall(updateVmwareEngineNetwork, $root.google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateVmwareEngineNetwork" });
    
                        /**
                         * Calls UpdateVmwareEngineNetwork.
                         * @function updateVmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest} request UpdateVmwareEngineNetworkRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|deleteVmwareEngineNetwork}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef DeleteVmwareEngineNetworkCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteVmwareEngineNetwork.
                         * @function deleteVmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest} request DeleteVmwareEngineNetworkRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.DeleteVmwareEngineNetworkCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.deleteVmwareEngineNetwork = function deleteVmwareEngineNetwork(request, callback) {
                            return this.rpcCall(deleteVmwareEngineNetwork, $root.google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteVmwareEngineNetwork" });
    
                        /**
                         * Calls DeleteVmwareEngineNetwork.
                         * @function deleteVmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest} request DeleteVmwareEngineNetworkRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|getVmwareEngineNetwork}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef GetVmwareEngineNetworkCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.VmwareEngineNetwork} [response] VmwareEngineNetwork
                         */
    
                        /**
                         * Calls GetVmwareEngineNetwork.
                         * @function getVmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest} request GetVmwareEngineNetworkRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.GetVmwareEngineNetworkCallback} callback Node-style callback called with the error, if any, and VmwareEngineNetwork
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.getVmwareEngineNetwork = function getVmwareEngineNetwork(request, callback) {
                            return this.rpcCall(getVmwareEngineNetwork, $root.google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest, $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork, request, callback);
                        }, "name", { value: "GetVmwareEngineNetwork" });
    
                        /**
                         * Calls GetVmwareEngineNetwork.
                         * @function getVmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest} request GetVmwareEngineNetworkRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.VmwareEngineNetwork>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|listVmwareEngineNetworks}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ListVmwareEngineNetworksCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse} [response] ListVmwareEngineNetworksResponse
                         */
    
                        /**
                         * Calls ListVmwareEngineNetworks.
                         * @function listVmwareEngineNetworks
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest} request ListVmwareEngineNetworksRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ListVmwareEngineNetworksCallback} callback Node-style callback called with the error, if any, and ListVmwareEngineNetworksResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.listVmwareEngineNetworks = function listVmwareEngineNetworks(request, callback) {
                            return this.rpcCall(listVmwareEngineNetworks, $root.google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest, $root.google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse, request, callback);
                        }, "name", { value: "ListVmwareEngineNetworks" });
    
                        /**
                         * Calls ListVmwareEngineNetworks.
                         * @function listVmwareEngineNetworks
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest} request ListVmwareEngineNetworksRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|createPrivateConnection}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef CreatePrivateConnectionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreatePrivateConnection.
                         * @function createPrivateConnection
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest} request CreatePrivateConnectionRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.CreatePrivateConnectionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.createPrivateConnection = function createPrivateConnection(request, callback) {
                            return this.rpcCall(createPrivateConnection, $root.google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreatePrivateConnection" });
    
                        /**
                         * Calls CreatePrivateConnection.
                         * @function createPrivateConnection
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest} request CreatePrivateConnectionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|getPrivateConnection}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef GetPrivateConnectionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.PrivateConnection} [response] PrivateConnection
                         */
    
                        /**
                         * Calls GetPrivateConnection.
                         * @function getPrivateConnection
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest} request GetPrivateConnectionRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.GetPrivateConnectionCallback} callback Node-style callback called with the error, if any, and PrivateConnection
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.getPrivateConnection = function getPrivateConnection(request, callback) {
                            return this.rpcCall(getPrivateConnection, $root.google.cloud.vmwareengine.v1.GetPrivateConnectionRequest, $root.google.cloud.vmwareengine.v1.PrivateConnection, request, callback);
                        }, "name", { value: "GetPrivateConnection" });
    
                        /**
                         * Calls GetPrivateConnection.
                         * @function getPrivateConnection
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest} request GetPrivateConnectionRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.PrivateConnection>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|listPrivateConnections}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ListPrivateConnectionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse} [response] ListPrivateConnectionsResponse
                         */
    
                        /**
                         * Calls ListPrivateConnections.
                         * @function listPrivateConnections
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest} request ListPrivateConnectionsRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateConnectionsCallback} callback Node-style callback called with the error, if any, and ListPrivateConnectionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.listPrivateConnections = function listPrivateConnections(request, callback) {
                            return this.rpcCall(listPrivateConnections, $root.google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest, $root.google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse, request, callback);
                        }, "name", { value: "ListPrivateConnections" });
    
                        /**
                         * Calls ListPrivateConnections.
                         * @function listPrivateConnections
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest} request ListPrivateConnectionsRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|updatePrivateConnection}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef UpdatePrivateConnectionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdatePrivateConnection.
                         * @function updatePrivateConnection
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest} request UpdatePrivateConnectionRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.UpdatePrivateConnectionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.updatePrivateConnection = function updatePrivateConnection(request, callback) {
                            return this.rpcCall(updatePrivateConnection, $root.google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdatePrivateConnection" });
    
                        /**
                         * Calls UpdatePrivateConnection.
                         * @function updatePrivateConnection
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest} request UpdatePrivateConnectionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|deletePrivateConnection}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef DeletePrivateConnectionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeletePrivateConnection.
                         * @function deletePrivateConnection
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest} request DeletePrivateConnectionRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.DeletePrivateConnectionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.deletePrivateConnection = function deletePrivateConnection(request, callback) {
                            return this.rpcCall(deletePrivateConnection, $root.google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeletePrivateConnection" });
    
                        /**
                         * Calls DeletePrivateConnection.
                         * @function deletePrivateConnection
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest} request DeletePrivateConnectionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.vmwareengine.v1.VmwareEngine|listPrivateConnectionPeeringRoutes}.
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @typedef ListPrivateConnectionPeeringRoutesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse} [response] ListPrivateConnectionPeeringRoutesResponse
                         */
    
                        /**
                         * Calls ListPrivateConnectionPeeringRoutes.
                         * @function listPrivateConnectionPeeringRoutes
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest} request ListPrivateConnectionPeeringRoutesRequest message or plain object
                         * @param {google.cloud.vmwareengine.v1.VmwareEngine.ListPrivateConnectionPeeringRoutesCallback} callback Node-style callback called with the error, if any, and ListPrivateConnectionPeeringRoutesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(VmwareEngine.prototype.listPrivateConnectionPeeringRoutes = function listPrivateConnectionPeeringRoutes(request, callback) {
                            return this.rpcCall(listPrivateConnectionPeeringRoutes, $root.google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest, $root.google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse, request, callback);
                        }, "name", { value: "ListPrivateConnectionPeeringRoutes" });
    
                        /**
                         * Calls ListPrivateConnectionPeeringRoutes.
                         * @function listPrivateConnectionPeeringRoutes
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngine
                         * @instance
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest} request ListPrivateConnectionPeeringRoutesRequest message or plain object
                         * @returns {Promise<google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse>} Promise
                         * @variation 2
                         */
    
                        return VmwareEngine;
                    })();
    
                    v1.ListPrivateCloudsRequest = (function() {
    
                        /**
                         * Properties of a ListPrivateCloudsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListPrivateCloudsRequest
                         * @property {string|null} [parent] ListPrivateCloudsRequest parent
                         * @property {number|null} [pageSize] ListPrivateCloudsRequest pageSize
                         * @property {string|null} [pageToken] ListPrivateCloudsRequest pageToken
                         * @property {string|null} [filter] ListPrivateCloudsRequest filter
                         * @property {string|null} [orderBy] ListPrivateCloudsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListPrivateCloudsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListPrivateCloudsRequest.
                         * @implements IListPrivateCloudsRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListPrivateCloudsRequest=} [properties] Properties to set
                         */
                        function ListPrivateCloudsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPrivateCloudsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @instance
                         */
                        ListPrivateCloudsRequest.prototype.parent = "";
    
                        /**
                         * ListPrivateCloudsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @instance
                         */
                        ListPrivateCloudsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListPrivateCloudsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @instance
                         */
                        ListPrivateCloudsRequest.prototype.pageToken = "";
    
                        /**
                         * ListPrivateCloudsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @instance
                         */
                        ListPrivateCloudsRequest.prototype.filter = "";
    
                        /**
                         * ListPrivateCloudsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @instance
                         */
                        ListPrivateCloudsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListPrivateCloudsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateCloudsRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateCloudsRequest} ListPrivateCloudsRequest instance
                         */
                        ListPrivateCloudsRequest.create = function create(properties) {
                            return new ListPrivateCloudsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListPrivateCloudsRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListPrivateCloudsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateCloudsRequest} message ListPrivateCloudsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateCloudsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPrivateCloudsRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListPrivateCloudsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateCloudsRequest} message ListPrivateCloudsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateCloudsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPrivateCloudsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateCloudsRequest} ListPrivateCloudsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateCloudsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListPrivateCloudsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPrivateCloudsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateCloudsRequest} ListPrivateCloudsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateCloudsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPrivateCloudsRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPrivateCloudsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPrivateCloudsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateCloudsRequest} ListPrivateCloudsRequest
                         */
                        ListPrivateCloudsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListPrivateCloudsRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListPrivateCloudsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPrivateCloudsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListPrivateCloudsRequest} message ListPrivateCloudsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPrivateCloudsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListPrivateCloudsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPrivateCloudsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPrivateCloudsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPrivateCloudsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListPrivateCloudsRequest";
                        };
    
                        return ListPrivateCloudsRequest;
                    })();
    
                    v1.ListPrivateCloudsResponse = (function() {
    
                        /**
                         * Properties of a ListPrivateCloudsResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListPrivateCloudsResponse
                         * @property {Array.<google.cloud.vmwareengine.v1.IPrivateCloud>|null} [privateClouds] ListPrivateCloudsResponse privateClouds
                         * @property {string|null} [nextPageToken] ListPrivateCloudsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListPrivateCloudsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListPrivateCloudsResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListPrivateCloudsResponse.
                         * @implements IListPrivateCloudsResponse
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListPrivateCloudsResponse=} [properties] Properties to set
                         */
                        function ListPrivateCloudsResponse(properties) {
                            this.privateClouds = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPrivateCloudsResponse privateClouds.
                         * @member {Array.<google.cloud.vmwareengine.v1.IPrivateCloud>} privateClouds
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @instance
                         */
                        ListPrivateCloudsResponse.prototype.privateClouds = $util.emptyArray;
    
                        /**
                         * ListPrivateCloudsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @instance
                         */
                        ListPrivateCloudsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListPrivateCloudsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @instance
                         */
                        ListPrivateCloudsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListPrivateCloudsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateCloudsResponse=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateCloudsResponse} ListPrivateCloudsResponse instance
                         */
                        ListPrivateCloudsResponse.create = function create(properties) {
                            return new ListPrivateCloudsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListPrivateCloudsResponse message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListPrivateCloudsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateCloudsResponse} message ListPrivateCloudsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateCloudsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateClouds != null && message.privateClouds.length)
                                for (var i = 0; i < message.privateClouds.length; ++i)
                                    $root.google.cloud.vmwareengine.v1.PrivateCloud.encode(message.privateClouds[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPrivateCloudsResponse message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListPrivateCloudsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateCloudsResponse} message ListPrivateCloudsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateCloudsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPrivateCloudsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateCloudsResponse} ListPrivateCloudsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateCloudsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListPrivateCloudsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.privateClouds && message.privateClouds.length))
                                            message.privateClouds = [];
                                        message.privateClouds.push($root.google.cloud.vmwareengine.v1.PrivateCloud.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPrivateCloudsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateCloudsResponse} ListPrivateCloudsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateCloudsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPrivateCloudsResponse message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPrivateCloudsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateClouds != null && message.hasOwnProperty("privateClouds")) {
                                if (!Array.isArray(message.privateClouds))
                                    return "privateClouds: array expected";
                                for (var i = 0; i < message.privateClouds.length; ++i) {
                                    var error = $root.google.cloud.vmwareengine.v1.PrivateCloud.verify(message.privateClouds[i]);
                                    if (error)
                                        return "privateClouds." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListPrivateCloudsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateCloudsResponse} ListPrivateCloudsResponse
                         */
                        ListPrivateCloudsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListPrivateCloudsResponse)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListPrivateCloudsResponse();
                            if (object.privateClouds) {
                                if (!Array.isArray(object.privateClouds))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListPrivateCloudsResponse.privateClouds: array expected");
                                message.privateClouds = [];
                                for (var i = 0; i < object.privateClouds.length; ++i) {
                                    if (typeof object.privateClouds[i] !== "object")
                                        throw TypeError(".google.cloud.vmwareengine.v1.ListPrivateCloudsResponse.privateClouds: object expected");
                                    message.privateClouds[i] = $root.google.cloud.vmwareengine.v1.PrivateCloud.fromObject(object.privateClouds[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListPrivateCloudsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPrivateCloudsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListPrivateCloudsResponse} message ListPrivateCloudsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPrivateCloudsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.privateClouds = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.privateClouds && message.privateClouds.length) {
                                object.privateClouds = [];
                                for (var j = 0; j < message.privateClouds.length; ++j)
                                    object.privateClouds[j] = $root.google.cloud.vmwareengine.v1.PrivateCloud.toObject(message.privateClouds[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListPrivateCloudsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPrivateCloudsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPrivateCloudsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateCloudsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPrivateCloudsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListPrivateCloudsResponse";
                        };
    
                        return ListPrivateCloudsResponse;
                    })();
    
                    v1.GetPrivateCloudRequest = (function() {
    
                        /**
                         * Properties of a GetPrivateCloudRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IGetPrivateCloudRequest
                         * @property {string|null} [name] GetPrivateCloudRequest name
                         */
    
                        /**
                         * Constructs a new GetPrivateCloudRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a GetPrivateCloudRequest.
                         * @implements IGetPrivateCloudRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IGetPrivateCloudRequest=} [properties] Properties to set
                         */
                        function GetPrivateCloudRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetPrivateCloudRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateCloudRequest
                         * @instance
                         */
                        GetPrivateCloudRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetPrivateCloudRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetPrivateCloudRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.GetPrivateCloudRequest} GetPrivateCloudRequest instance
                         */
                        GetPrivateCloudRequest.create = function create(properties) {
                            return new GetPrivateCloudRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetPrivateCloudRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.GetPrivateCloudRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetPrivateCloudRequest} message GetPrivateCloudRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPrivateCloudRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetPrivateCloudRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.GetPrivateCloudRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetPrivateCloudRequest} message GetPrivateCloudRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPrivateCloudRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetPrivateCloudRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateCloudRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.GetPrivateCloudRequest} GetPrivateCloudRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPrivateCloudRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.GetPrivateCloudRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetPrivateCloudRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateCloudRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.GetPrivateCloudRequest} GetPrivateCloudRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPrivateCloudRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetPrivateCloudRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateCloudRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetPrivateCloudRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetPrivateCloudRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateCloudRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.GetPrivateCloudRequest} GetPrivateCloudRequest
                         */
                        GetPrivateCloudRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.GetPrivateCloudRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.GetPrivateCloudRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetPrivateCloudRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.GetPrivateCloudRequest} message GetPrivateCloudRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetPrivateCloudRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetPrivateCloudRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateCloudRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetPrivateCloudRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetPrivateCloudRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateCloudRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetPrivateCloudRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.GetPrivateCloudRequest";
                        };
    
                        return GetPrivateCloudRequest;
                    })();
    
                    v1.CreatePrivateCloudRequest = (function() {
    
                        /**
                         * Properties of a CreatePrivateCloudRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface ICreatePrivateCloudRequest
                         * @property {string|null} [parent] CreatePrivateCloudRequest parent
                         * @property {string|null} [privateCloudId] CreatePrivateCloudRequest privateCloudId
                         * @property {google.cloud.vmwareengine.v1.IPrivateCloud|null} [privateCloud] CreatePrivateCloudRequest privateCloud
                         * @property {string|null} [requestId] CreatePrivateCloudRequest requestId
                         * @property {boolean|null} [validateOnly] CreatePrivateCloudRequest validateOnly
                         */
    
                        /**
                         * Constructs a new CreatePrivateCloudRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a CreatePrivateCloudRequest.
                         * @implements ICreatePrivateCloudRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest=} [properties] Properties to set
                         */
                        function CreatePrivateCloudRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreatePrivateCloudRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @instance
                         */
                        CreatePrivateCloudRequest.prototype.parent = "";
    
                        /**
                         * CreatePrivateCloudRequest privateCloudId.
                         * @member {string} privateCloudId
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @instance
                         */
                        CreatePrivateCloudRequest.prototype.privateCloudId = "";
    
                        /**
                         * CreatePrivateCloudRequest privateCloud.
                         * @member {google.cloud.vmwareengine.v1.IPrivateCloud|null|undefined} privateCloud
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @instance
                         */
                        CreatePrivateCloudRequest.prototype.privateCloud = null;
    
                        /**
                         * CreatePrivateCloudRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @instance
                         */
                        CreatePrivateCloudRequest.prototype.requestId = "";
    
                        /**
                         * CreatePrivateCloudRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @instance
                         */
                        CreatePrivateCloudRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new CreatePrivateCloudRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.CreatePrivateCloudRequest} CreatePrivateCloudRequest instance
                         */
                        CreatePrivateCloudRequest.create = function create(properties) {
                            return new CreatePrivateCloudRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreatePrivateCloudRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.CreatePrivateCloudRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest} message CreatePrivateCloudRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreatePrivateCloudRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.privateCloudId != null && Object.hasOwnProperty.call(message, "privateCloudId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.privateCloudId);
                            if (message.privateCloud != null && Object.hasOwnProperty.call(message, "privateCloud"))
                                $root.google.cloud.vmwareengine.v1.PrivateCloud.encode(message.privateCloud, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreatePrivateCloudRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.CreatePrivateCloudRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest} message CreatePrivateCloudRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreatePrivateCloudRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreatePrivateCloudRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.CreatePrivateCloudRequest} CreatePrivateCloudRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreatePrivateCloudRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.CreatePrivateCloudRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.privateCloudId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.privateCloud = $root.google.cloud.vmwareengine.v1.PrivateCloud.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreatePrivateCloudRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.CreatePrivateCloudRequest} CreatePrivateCloudRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreatePrivateCloudRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreatePrivateCloudRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreatePrivateCloudRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.privateCloudId != null && message.hasOwnProperty("privateCloudId"))
                                if (!$util.isString(message.privateCloudId))
                                    return "privateCloudId: string expected";
                            if (message.privateCloud != null && message.hasOwnProperty("privateCloud")) {
                                var error = $root.google.cloud.vmwareengine.v1.PrivateCloud.verify(message.privateCloud);
                                if (error)
                                    return "privateCloud." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreatePrivateCloudRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.CreatePrivateCloudRequest} CreatePrivateCloudRequest
                         */
                        CreatePrivateCloudRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.CreatePrivateCloudRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.CreatePrivateCloudRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.privateCloudId != null)
                                message.privateCloudId = String(object.privateCloudId);
                            if (object.privateCloud != null) {
                                if (typeof object.privateCloud !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.CreatePrivateCloudRequest.privateCloud: object expected");
                                message.privateCloud = $root.google.cloud.vmwareengine.v1.PrivateCloud.fromObject(object.privateCloud);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreatePrivateCloudRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.CreatePrivateCloudRequest} message CreatePrivateCloudRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreatePrivateCloudRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.privateCloudId = "";
                                object.privateCloud = null;
                                object.requestId = "";
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.privateCloudId != null && message.hasOwnProperty("privateCloudId"))
                                object.privateCloudId = message.privateCloudId;
                            if (message.privateCloud != null && message.hasOwnProperty("privateCloud"))
                                object.privateCloud = $root.google.cloud.vmwareengine.v1.PrivateCloud.toObject(message.privateCloud, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this CreatePrivateCloudRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreatePrivateCloudRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreatePrivateCloudRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateCloudRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreatePrivateCloudRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.CreatePrivateCloudRequest";
                        };
    
                        return CreatePrivateCloudRequest;
                    })();
    
                    v1.UpdatePrivateCloudRequest = (function() {
    
                        /**
                         * Properties of an UpdatePrivateCloudRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IUpdatePrivateCloudRequest
                         * @property {google.cloud.vmwareengine.v1.IPrivateCloud|null} [privateCloud] UpdatePrivateCloudRequest privateCloud
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdatePrivateCloudRequest updateMask
                         * @property {string|null} [requestId] UpdatePrivateCloudRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdatePrivateCloudRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents an UpdatePrivateCloudRequest.
                         * @implements IUpdatePrivateCloudRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest=} [properties] Properties to set
                         */
                        function UpdatePrivateCloudRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdatePrivateCloudRequest privateCloud.
                         * @member {google.cloud.vmwareengine.v1.IPrivateCloud|null|undefined} privateCloud
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @instance
                         */
                        UpdatePrivateCloudRequest.prototype.privateCloud = null;
    
                        /**
                         * UpdatePrivateCloudRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @instance
                         */
                        UpdatePrivateCloudRequest.prototype.updateMask = null;
    
                        /**
                         * UpdatePrivateCloudRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @instance
                         */
                        UpdatePrivateCloudRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdatePrivateCloudRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest} UpdatePrivateCloudRequest instance
                         */
                        UpdatePrivateCloudRequest.create = function create(properties) {
                            return new UpdatePrivateCloudRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdatePrivateCloudRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest} message UpdatePrivateCloudRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdatePrivateCloudRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateCloud != null && Object.hasOwnProperty.call(message, "privateCloud"))
                                $root.google.cloud.vmwareengine.v1.PrivateCloud.encode(message.privateCloud, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdatePrivateCloudRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest} message UpdatePrivateCloudRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdatePrivateCloudRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdatePrivateCloudRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest} UpdatePrivateCloudRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdatePrivateCloudRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.privateCloud = $root.google.cloud.vmwareengine.v1.PrivateCloud.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdatePrivateCloudRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest} UpdatePrivateCloudRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdatePrivateCloudRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdatePrivateCloudRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdatePrivateCloudRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateCloud != null && message.hasOwnProperty("privateCloud")) {
                                var error = $root.google.cloud.vmwareengine.v1.PrivateCloud.verify(message.privateCloud);
                                if (error)
                                    return "privateCloud." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdatePrivateCloudRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest} UpdatePrivateCloudRequest
                         */
                        UpdatePrivateCloudRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest();
                            if (object.privateCloud != null) {
                                if (typeof object.privateCloud !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest.privateCloud: object expected");
                                message.privateCloud = $root.google.cloud.vmwareengine.v1.PrivateCloud.fromObject(object.privateCloud);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdatePrivateCloudRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest} message UpdatePrivateCloudRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdatePrivateCloudRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.privateCloud = null;
                                object.updateMask = null;
                                object.requestId = "";
                            }
                            if (message.privateCloud != null && message.hasOwnProperty("privateCloud"))
                                object.privateCloud = $root.google.cloud.vmwareengine.v1.PrivateCloud.toObject(message.privateCloud, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdatePrivateCloudRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdatePrivateCloudRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdatePrivateCloudRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdatePrivateCloudRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.UpdatePrivateCloudRequest";
                        };
    
                        return UpdatePrivateCloudRequest;
                    })();
    
                    v1.DeletePrivateCloudRequest = (function() {
    
                        /**
                         * Properties of a DeletePrivateCloudRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IDeletePrivateCloudRequest
                         * @property {string|null} [name] DeletePrivateCloudRequest name
                         * @property {string|null} [requestId] DeletePrivateCloudRequest requestId
                         * @property {boolean|null} [force] DeletePrivateCloudRequest force
                         * @property {number|null} [delayHours] DeletePrivateCloudRequest delayHours
                         */
    
                        /**
                         * Constructs a new DeletePrivateCloudRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a DeletePrivateCloudRequest.
                         * @implements IDeletePrivateCloudRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest=} [properties] Properties to set
                         */
                        function DeletePrivateCloudRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeletePrivateCloudRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @instance
                         */
                        DeletePrivateCloudRequest.prototype.name = "";
    
                        /**
                         * DeletePrivateCloudRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @instance
                         */
                        DeletePrivateCloudRequest.prototype.requestId = "";
    
                        /**
                         * DeletePrivateCloudRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @instance
                         */
                        DeletePrivateCloudRequest.prototype.force = false;
    
                        /**
                         * DeletePrivateCloudRequest delayHours.
                         * @member {number|null|undefined} delayHours
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @instance
                         */
                        DeletePrivateCloudRequest.prototype.delayHours = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DeletePrivateCloudRequest _delayHours.
                         * @member {"delayHours"|undefined} _delayHours
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @instance
                         */
                        Object.defineProperty(DeletePrivateCloudRequest.prototype, "_delayHours", {
                            get: $util.oneOfGetter($oneOfFields = ["delayHours"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DeletePrivateCloudRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.DeletePrivateCloudRequest} DeletePrivateCloudRequest instance
                         */
                        DeletePrivateCloudRequest.create = function create(properties) {
                            return new DeletePrivateCloudRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeletePrivateCloudRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.DeletePrivateCloudRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest} message DeletePrivateCloudRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeletePrivateCloudRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.force);
                            if (message.delayHours != null && Object.hasOwnProperty.call(message, "delayHours"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.delayHours);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeletePrivateCloudRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.DeletePrivateCloudRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest} message DeletePrivateCloudRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeletePrivateCloudRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeletePrivateCloudRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.DeletePrivateCloudRequest} DeletePrivateCloudRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeletePrivateCloudRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.DeletePrivateCloudRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.force = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.delayHours = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeletePrivateCloudRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.DeletePrivateCloudRequest} DeletePrivateCloudRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeletePrivateCloudRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeletePrivateCloudRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeletePrivateCloudRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            if (message.delayHours != null && message.hasOwnProperty("delayHours")) {
                                properties._delayHours = 1;
                                if (!$util.isInteger(message.delayHours))
                                    return "delayHours: integer expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DeletePrivateCloudRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.DeletePrivateCloudRequest} DeletePrivateCloudRequest
                         */
                        DeletePrivateCloudRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.DeletePrivateCloudRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.DeletePrivateCloudRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            if (object.delayHours != null)
                                message.delayHours = object.delayHours | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeletePrivateCloudRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.DeletePrivateCloudRequest} message DeletePrivateCloudRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeletePrivateCloudRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                                object.force = false;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            if (message.delayHours != null && message.hasOwnProperty("delayHours")) {
                                object.delayHours = message.delayHours;
                                if (options.oneofs)
                                    object._delayHours = "delayHours";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DeletePrivateCloudRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeletePrivateCloudRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeletePrivateCloudRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateCloudRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeletePrivateCloudRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.DeletePrivateCloudRequest";
                        };
    
                        return DeletePrivateCloudRequest;
                    })();
    
                    v1.UndeletePrivateCloudRequest = (function() {
    
                        /**
                         * Properties of an UndeletePrivateCloudRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IUndeletePrivateCloudRequest
                         * @property {string|null} [name] UndeletePrivateCloudRequest name
                         * @property {string|null} [requestId] UndeletePrivateCloudRequest requestId
                         */
    
                        /**
                         * Constructs a new UndeletePrivateCloudRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents an UndeletePrivateCloudRequest.
                         * @implements IUndeletePrivateCloudRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest=} [properties] Properties to set
                         */
                        function UndeletePrivateCloudRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UndeletePrivateCloudRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
                         * @instance
                         */
                        UndeletePrivateCloudRequest.prototype.name = "";
    
                        /**
                         * UndeletePrivateCloudRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
                         * @instance
                         */
                        UndeletePrivateCloudRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UndeletePrivateCloudRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest} UndeletePrivateCloudRequest instance
                         */
                        UndeletePrivateCloudRequest.create = function create(properties) {
                            return new UndeletePrivateCloudRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UndeletePrivateCloudRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest} message UndeletePrivateCloudRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeletePrivateCloudRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UndeletePrivateCloudRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest} message UndeletePrivateCloudRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UndeletePrivateCloudRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UndeletePrivateCloudRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest} UndeletePrivateCloudRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeletePrivateCloudRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UndeletePrivateCloudRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest} UndeletePrivateCloudRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UndeletePrivateCloudRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UndeletePrivateCloudRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UndeletePrivateCloudRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UndeletePrivateCloudRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest} UndeletePrivateCloudRequest
                         */
                        UndeletePrivateCloudRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UndeletePrivateCloudRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest} message UndeletePrivateCloudRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UndeletePrivateCloudRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UndeletePrivateCloudRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UndeletePrivateCloudRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UndeletePrivateCloudRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UndeletePrivateCloudRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.UndeletePrivateCloudRequest";
                        };
    
                        return UndeletePrivateCloudRequest;
                    })();
    
                    v1.ListClustersRequest = (function() {
    
                        /**
                         * Properties of a ListClustersRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListClustersRequest
                         * @property {string|null} [parent] ListClustersRequest parent
                         * @property {number|null} [pageSize] ListClustersRequest pageSize
                         * @property {string|null} [pageToken] ListClustersRequest pageToken
                         * @property {string|null} [filter] ListClustersRequest filter
                         * @property {string|null} [orderBy] ListClustersRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListClustersRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListClustersRequest.
                         * @implements IListClustersRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListClustersRequest=} [properties] Properties to set
                         */
                        function ListClustersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListClustersRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @instance
                         */
                        ListClustersRequest.prototype.parent = "";
    
                        /**
                         * ListClustersRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @instance
                         */
                        ListClustersRequest.prototype.pageSize = 0;
    
                        /**
                         * ListClustersRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @instance
                         */
                        ListClustersRequest.prototype.pageToken = "";
    
                        /**
                         * ListClustersRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @instance
                         */
                        ListClustersRequest.prototype.filter = "";
    
                        /**
                         * ListClustersRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @instance
                         */
                        ListClustersRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListClustersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListClustersRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListClustersRequest} ListClustersRequest instance
                         */
                        ListClustersRequest.create = function create(properties) {
                            return new ListClustersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListClustersRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListClustersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListClustersRequest} message ListClustersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListClustersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListClustersRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListClustersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListClustersRequest} message ListClustersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListClustersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListClustersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListClustersRequest} ListClustersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListClustersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListClustersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListClustersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListClustersRequest} ListClustersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListClustersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListClustersRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListClustersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListClustersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListClustersRequest} ListClustersRequest
                         */
                        ListClustersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListClustersRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListClustersRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListClustersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListClustersRequest} message ListClustersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListClustersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListClustersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListClustersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListClustersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListClustersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListClustersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListClustersRequest";
                        };
    
                        return ListClustersRequest;
                    })();
    
                    v1.ListClustersResponse = (function() {
    
                        /**
                         * Properties of a ListClustersResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListClustersResponse
                         * @property {Array.<google.cloud.vmwareengine.v1.ICluster>|null} [clusters] ListClustersResponse clusters
                         * @property {string|null} [nextPageToken] ListClustersResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListClustersResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListClustersResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListClustersResponse.
                         * @implements IListClustersResponse
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListClustersResponse=} [properties] Properties to set
                         */
                        function ListClustersResponse(properties) {
                            this.clusters = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListClustersResponse clusters.
                         * @member {Array.<google.cloud.vmwareengine.v1.ICluster>} clusters
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @instance
                         */
                        ListClustersResponse.prototype.clusters = $util.emptyArray;
    
                        /**
                         * ListClustersResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @instance
                         */
                        ListClustersResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListClustersResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @instance
                         */
                        ListClustersResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListClustersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListClustersResponse=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListClustersResponse} ListClustersResponse instance
                         */
                        ListClustersResponse.create = function create(properties) {
                            return new ListClustersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListClustersResponse message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListClustersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListClustersResponse} message ListClustersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListClustersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.clusters != null && message.clusters.length)
                                for (var i = 0; i < message.clusters.length; ++i)
                                    $root.google.cloud.vmwareengine.v1.Cluster.encode(message.clusters[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListClustersResponse message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListClustersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListClustersResponse} message ListClustersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListClustersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListClustersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListClustersResponse} ListClustersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListClustersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListClustersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.clusters && message.clusters.length))
                                            message.clusters = [];
                                        message.clusters.push($root.google.cloud.vmwareengine.v1.Cluster.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListClustersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListClustersResponse} ListClustersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListClustersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListClustersResponse message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListClustersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.clusters != null && message.hasOwnProperty("clusters")) {
                                if (!Array.isArray(message.clusters))
                                    return "clusters: array expected";
                                for (var i = 0; i < message.clusters.length; ++i) {
                                    var error = $root.google.cloud.vmwareengine.v1.Cluster.verify(message.clusters[i]);
                                    if (error)
                                        return "clusters." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListClustersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListClustersResponse} ListClustersResponse
                         */
                        ListClustersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListClustersResponse)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListClustersResponse();
                            if (object.clusters) {
                                if (!Array.isArray(object.clusters))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListClustersResponse.clusters: array expected");
                                message.clusters = [];
                                for (var i = 0; i < object.clusters.length; ++i) {
                                    if (typeof object.clusters[i] !== "object")
                                        throw TypeError(".google.cloud.vmwareengine.v1.ListClustersResponse.clusters: object expected");
                                    message.clusters[i] = $root.google.cloud.vmwareengine.v1.Cluster.fromObject(object.clusters[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListClustersResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListClustersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListClustersResponse} message ListClustersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListClustersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.clusters = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.clusters && message.clusters.length) {
                                object.clusters = [];
                                for (var j = 0; j < message.clusters.length; ++j)
                                    object.clusters[j] = $root.google.cloud.vmwareengine.v1.Cluster.toObject(message.clusters[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListClustersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListClustersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListClustersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListClustersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListClustersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListClustersResponse";
                        };
    
                        return ListClustersResponse;
                    })();
    
                    v1.GetClusterRequest = (function() {
    
                        /**
                         * Properties of a GetClusterRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IGetClusterRequest
                         * @property {string|null} [name] GetClusterRequest name
                         */
    
                        /**
                         * Constructs a new GetClusterRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a GetClusterRequest.
                         * @implements IGetClusterRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IGetClusterRequest=} [properties] Properties to set
                         */
                        function GetClusterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetClusterRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.GetClusterRequest
                         * @instance
                         */
                        GetClusterRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetClusterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.GetClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetClusterRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.GetClusterRequest} GetClusterRequest instance
                         */
                        GetClusterRequest.create = function create(properties) {
                            return new GetClusterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetClusterRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.GetClusterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.GetClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetClusterRequest} message GetClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetClusterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetClusterRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.GetClusterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetClusterRequest} message GetClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetClusterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.GetClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.GetClusterRequest} GetClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetClusterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.GetClusterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetClusterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.GetClusterRequest} GetClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetClusterRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.GetClusterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetClusterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetClusterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.GetClusterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.GetClusterRequest} GetClusterRequest
                         */
                        GetClusterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.GetClusterRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.GetClusterRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetClusterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.GetClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.GetClusterRequest} message GetClusterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetClusterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetClusterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.GetClusterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetClusterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetClusterRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.GetClusterRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.GetClusterRequest";
                        };
    
                        return GetClusterRequest;
                    })();
    
                    v1.CreateClusterRequest = (function() {
    
                        /**
                         * Properties of a CreateClusterRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface ICreateClusterRequest
                         * @property {string|null} [parent] CreateClusterRequest parent
                         * @property {string|null} [clusterId] CreateClusterRequest clusterId
                         * @property {google.cloud.vmwareengine.v1.ICluster|null} [cluster] CreateClusterRequest cluster
                         * @property {string|null} [requestId] CreateClusterRequest requestId
                         * @property {boolean|null} [validateOnly] CreateClusterRequest validateOnly
                         */
    
                        /**
                         * Constructs a new CreateClusterRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a CreateClusterRequest.
                         * @implements ICreateClusterRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.ICreateClusterRequest=} [properties] Properties to set
                         */
                        function CreateClusterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateClusterRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @instance
                         */
                        CreateClusterRequest.prototype.parent = "";
    
                        /**
                         * CreateClusterRequest clusterId.
                         * @member {string} clusterId
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @instance
                         */
                        CreateClusterRequest.prototype.clusterId = "";
    
                        /**
                         * CreateClusterRequest cluster.
                         * @member {google.cloud.vmwareengine.v1.ICluster|null|undefined} cluster
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @instance
                         */
                        CreateClusterRequest.prototype.cluster = null;
    
                        /**
                         * CreateClusterRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @instance
                         */
                        CreateClusterRequest.prototype.requestId = "";
    
                        /**
                         * CreateClusterRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @instance
                         */
                        CreateClusterRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new CreateClusterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreateClusterRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.CreateClusterRequest} CreateClusterRequest instance
                         */
                        CreateClusterRequest.create = function create(properties) {
                            return new CreateClusterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateClusterRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.CreateClusterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreateClusterRequest} message CreateClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateClusterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.clusterId);
                            if (message.cluster != null && Object.hasOwnProperty.call(message, "cluster"))
                                $root.google.cloud.vmwareengine.v1.Cluster.encode(message.cluster, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateClusterRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.CreateClusterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreateClusterRequest} message CreateClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateClusterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.CreateClusterRequest} CreateClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateClusterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.CreateClusterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.clusterId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.cluster = $root.google.cloud.vmwareengine.v1.Cluster.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateClusterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.CreateClusterRequest} CreateClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateClusterRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateClusterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                                if (!$util.isString(message.clusterId))
                                    return "clusterId: string expected";
                            if (message.cluster != null && message.hasOwnProperty("cluster")) {
                                var error = $root.google.cloud.vmwareengine.v1.Cluster.verify(message.cluster);
                                if (error)
                                    return "cluster." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateClusterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.CreateClusterRequest} CreateClusterRequest
                         */
                        CreateClusterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.CreateClusterRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.CreateClusterRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.clusterId != null)
                                message.clusterId = String(object.clusterId);
                            if (object.cluster != null) {
                                if (typeof object.cluster !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.CreateClusterRequest.cluster: object expected");
                                message.cluster = $root.google.cloud.vmwareengine.v1.Cluster.fromObject(object.cluster);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateClusterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.CreateClusterRequest} message CreateClusterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateClusterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.clusterId = "";
                                object.cluster = null;
                                object.requestId = "";
                                object.validateOnly = false;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                                object.clusterId = message.clusterId;
                            if (message.cluster != null && message.hasOwnProperty("cluster"))
                                object.cluster = $root.google.cloud.vmwareengine.v1.Cluster.toObject(message.cluster, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this CreateClusterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateClusterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateClusterRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.CreateClusterRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.CreateClusterRequest";
                        };
    
                        return CreateClusterRequest;
                    })();
    
                    v1.UpdateClusterRequest = (function() {
    
                        /**
                         * Properties of an UpdateClusterRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IUpdateClusterRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateClusterRequest updateMask
                         * @property {google.cloud.vmwareengine.v1.ICluster|null} [cluster] UpdateClusterRequest cluster
                         * @property {string|null} [requestId] UpdateClusterRequest requestId
                         * @property {boolean|null} [validateOnly] UpdateClusterRequest validateOnly
                         */
    
                        /**
                         * Constructs a new UpdateClusterRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents an UpdateClusterRequest.
                         * @implements IUpdateClusterRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IUpdateClusterRequest=} [properties] Properties to set
                         */
                        function UpdateClusterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateClusterRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @instance
                         */
                        UpdateClusterRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateClusterRequest cluster.
                         * @member {google.cloud.vmwareengine.v1.ICluster|null|undefined} cluster
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @instance
                         */
                        UpdateClusterRequest.prototype.cluster = null;
    
                        /**
                         * UpdateClusterRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @instance
                         */
                        UpdateClusterRequest.prototype.requestId = "";
    
                        /**
                         * UpdateClusterRequest validateOnly.
                         * @member {boolean} validateOnly
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @instance
                         */
                        UpdateClusterRequest.prototype.validateOnly = false;
    
                        /**
                         * Creates a new UpdateClusterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdateClusterRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.UpdateClusterRequest} UpdateClusterRequest instance
                         */
                        UpdateClusterRequest.create = function create(properties) {
                            return new UpdateClusterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateClusterRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.UpdateClusterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdateClusterRequest} message UpdateClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateClusterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.cluster != null && Object.hasOwnProperty.call(message, "cluster"))
                                $root.google.cloud.vmwareengine.v1.Cluster.encode(message.cluster, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.validateOnly);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateClusterRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.UpdateClusterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdateClusterRequest} message UpdateClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateClusterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.UpdateClusterRequest} UpdateClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateClusterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.UpdateClusterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.cluster = $root.google.cloud.vmwareengine.v1.Cluster.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.validateOnly = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateClusterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.UpdateClusterRequest} UpdateClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateClusterRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateClusterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.cluster != null && message.hasOwnProperty("cluster")) {
                                var error = $root.google.cloud.vmwareengine.v1.Cluster.verify(message.cluster);
                                if (error)
                                    return "cluster." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                if (typeof message.validateOnly !== "boolean")
                                    return "validateOnly: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateClusterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.UpdateClusterRequest} UpdateClusterRequest
                         */
                        UpdateClusterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.UpdateClusterRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.UpdateClusterRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.UpdateClusterRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.cluster != null) {
                                if (typeof object.cluster !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.UpdateClusterRequest.cluster: object expected");
                                message.cluster = $root.google.cloud.vmwareengine.v1.Cluster.fromObject(object.cluster);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.validateOnly != null)
                                message.validateOnly = Boolean(object.validateOnly);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateClusterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.UpdateClusterRequest} message UpdateClusterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateClusterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.cluster = null;
                                object.requestId = "";
                                object.validateOnly = false;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.cluster != null && message.hasOwnProperty("cluster"))
                                object.cluster = $root.google.cloud.vmwareengine.v1.Cluster.toObject(message.cluster, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                object.validateOnly = message.validateOnly;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateClusterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateClusterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateClusterRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.UpdateClusterRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.UpdateClusterRequest";
                        };
    
                        return UpdateClusterRequest;
                    })();
    
                    v1.DeleteClusterRequest = (function() {
    
                        /**
                         * Properties of a DeleteClusterRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IDeleteClusterRequest
                         * @property {string|null} [name] DeleteClusterRequest name
                         * @property {string|null} [requestId] DeleteClusterRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteClusterRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a DeleteClusterRequest.
                         * @implements IDeleteClusterRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IDeleteClusterRequest=} [properties] Properties to set
                         */
                        function DeleteClusterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteClusterRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.DeleteClusterRequest
                         * @instance
                         */
                        DeleteClusterRequest.prototype.name = "";
    
                        /**
                         * DeleteClusterRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.DeleteClusterRequest
                         * @instance
                         */
                        DeleteClusterRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteClusterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.DeleteClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeleteClusterRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.DeleteClusterRequest} DeleteClusterRequest instance
                         */
                        DeleteClusterRequest.create = function create(properties) {
                            return new DeleteClusterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteClusterRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.DeleteClusterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.DeleteClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeleteClusterRequest} message DeleteClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteClusterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteClusterRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.DeleteClusterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.DeleteClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeleteClusterRequest} message DeleteClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteClusterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.DeleteClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.DeleteClusterRequest} DeleteClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteClusterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.DeleteClusterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteClusterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.DeleteClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.DeleteClusterRequest} DeleteClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteClusterRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.DeleteClusterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteClusterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteClusterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.DeleteClusterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.DeleteClusterRequest} DeleteClusterRequest
                         */
                        DeleteClusterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.DeleteClusterRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.DeleteClusterRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteClusterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.DeleteClusterRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.DeleteClusterRequest} message DeleteClusterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteClusterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteClusterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.DeleteClusterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteClusterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteClusterRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.DeleteClusterRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.DeleteClusterRequest";
                        };
    
                        return DeleteClusterRequest;
                    })();
    
                    v1.ListSubnetsRequest = (function() {
    
                        /**
                         * Properties of a ListSubnetsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListSubnetsRequest
                         * @property {string|null} [parent] ListSubnetsRequest parent
                         * @property {number|null} [pageSize] ListSubnetsRequest pageSize
                         * @property {string|null} [pageToken] ListSubnetsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListSubnetsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListSubnetsRequest.
                         * @implements IListSubnetsRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListSubnetsRequest=} [properties] Properties to set
                         */
                        function ListSubnetsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSubnetsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @instance
                         */
                        ListSubnetsRequest.prototype.parent = "";
    
                        /**
                         * ListSubnetsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @instance
                         */
                        ListSubnetsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListSubnetsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @instance
                         */
                        ListSubnetsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListSubnetsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListSubnetsRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListSubnetsRequest} ListSubnetsRequest instance
                         */
                        ListSubnetsRequest.create = function create(properties) {
                            return new ListSubnetsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListSubnetsRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListSubnetsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListSubnetsRequest} message ListSubnetsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSubnetsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSubnetsRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListSubnetsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListSubnetsRequest} message ListSubnetsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSubnetsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSubnetsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListSubnetsRequest} ListSubnetsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSubnetsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListSubnetsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSubnetsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListSubnetsRequest} ListSubnetsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSubnetsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSubnetsRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSubnetsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListSubnetsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListSubnetsRequest} ListSubnetsRequest
                         */
                        ListSubnetsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListSubnetsRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListSubnetsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSubnetsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListSubnetsRequest} message ListSubnetsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSubnetsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListSubnetsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSubnetsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSubnetsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSubnetsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListSubnetsRequest";
                        };
    
                        return ListSubnetsRequest;
                    })();
    
                    v1.ListSubnetsResponse = (function() {
    
                        /**
                         * Properties of a ListSubnetsResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListSubnetsResponse
                         * @property {Array.<google.cloud.vmwareengine.v1.ISubnet>|null} [subnets] ListSubnetsResponse subnets
                         * @property {string|null} [nextPageToken] ListSubnetsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListSubnetsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListSubnetsResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListSubnetsResponse.
                         * @implements IListSubnetsResponse
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListSubnetsResponse=} [properties] Properties to set
                         */
                        function ListSubnetsResponse(properties) {
                            this.subnets = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListSubnetsResponse subnets.
                         * @member {Array.<google.cloud.vmwareengine.v1.ISubnet>} subnets
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @instance
                         */
                        ListSubnetsResponse.prototype.subnets = $util.emptyArray;
    
                        /**
                         * ListSubnetsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @instance
                         */
                        ListSubnetsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListSubnetsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @instance
                         */
                        ListSubnetsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListSubnetsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListSubnetsResponse=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListSubnetsResponse} ListSubnetsResponse instance
                         */
                        ListSubnetsResponse.create = function create(properties) {
                            return new ListSubnetsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListSubnetsResponse message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListSubnetsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListSubnetsResponse} message ListSubnetsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSubnetsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.subnets != null && message.subnets.length)
                                for (var i = 0; i < message.subnets.length; ++i)
                                    $root.google.cloud.vmwareengine.v1.Subnet.encode(message.subnets[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListSubnetsResponse message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListSubnetsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListSubnetsResponse} message ListSubnetsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListSubnetsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListSubnetsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListSubnetsResponse} ListSubnetsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSubnetsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListSubnetsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.subnets && message.subnets.length))
                                            message.subnets = [];
                                        message.subnets.push($root.google.cloud.vmwareengine.v1.Subnet.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListSubnetsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListSubnetsResponse} ListSubnetsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListSubnetsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListSubnetsResponse message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListSubnetsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.subnets != null && message.hasOwnProperty("subnets")) {
                                if (!Array.isArray(message.subnets))
                                    return "subnets: array expected";
                                for (var i = 0; i < message.subnets.length; ++i) {
                                    var error = $root.google.cloud.vmwareengine.v1.Subnet.verify(message.subnets[i]);
                                    if (error)
                                        return "subnets." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListSubnetsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListSubnetsResponse} ListSubnetsResponse
                         */
                        ListSubnetsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListSubnetsResponse)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListSubnetsResponse();
                            if (object.subnets) {
                                if (!Array.isArray(object.subnets))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListSubnetsResponse.subnets: array expected");
                                message.subnets = [];
                                for (var i = 0; i < object.subnets.length; ++i) {
                                    if (typeof object.subnets[i] !== "object")
                                        throw TypeError(".google.cloud.vmwareengine.v1.ListSubnetsResponse.subnets: object expected");
                                    message.subnets[i] = $root.google.cloud.vmwareengine.v1.Subnet.fromObject(object.subnets[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListSubnetsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListSubnetsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListSubnetsResponse} message ListSubnetsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListSubnetsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.subnets = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.subnets && message.subnets.length) {
                                object.subnets = [];
                                for (var j = 0; j < message.subnets.length; ++j)
                                    object.subnets[j] = $root.google.cloud.vmwareengine.v1.Subnet.toObject(message.subnets[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListSubnetsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListSubnetsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListSubnetsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListSubnetsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListSubnetsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListSubnetsResponse";
                        };
    
                        return ListSubnetsResponse;
                    })();
    
                    v1.GetSubnetRequest = (function() {
    
                        /**
                         * Properties of a GetSubnetRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IGetSubnetRequest
                         * @property {string|null} [name] GetSubnetRequest name
                         */
    
                        /**
                         * Constructs a new GetSubnetRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a GetSubnetRequest.
                         * @implements IGetSubnetRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IGetSubnetRequest=} [properties] Properties to set
                         */
                        function GetSubnetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetSubnetRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.GetSubnetRequest
                         * @instance
                         */
                        GetSubnetRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetSubnetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.GetSubnetRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetSubnetRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.GetSubnetRequest} GetSubnetRequest instance
                         */
                        GetSubnetRequest.create = function create(properties) {
                            return new GetSubnetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetSubnetRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.GetSubnetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.GetSubnetRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetSubnetRequest} message GetSubnetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSubnetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetSubnetRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.GetSubnetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetSubnetRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetSubnetRequest} message GetSubnetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetSubnetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetSubnetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.GetSubnetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.GetSubnetRequest} GetSubnetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSubnetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.GetSubnetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetSubnetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetSubnetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.GetSubnetRequest} GetSubnetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetSubnetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetSubnetRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.GetSubnetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetSubnetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetSubnetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.GetSubnetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.GetSubnetRequest} GetSubnetRequest
                         */
                        GetSubnetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.GetSubnetRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.GetSubnetRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetSubnetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.GetSubnetRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.GetSubnetRequest} message GetSubnetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetSubnetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetSubnetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.GetSubnetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetSubnetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetSubnetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.GetSubnetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetSubnetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.GetSubnetRequest";
                        };
    
                        return GetSubnetRequest;
                    })();
    
                    v1.UpdateSubnetRequest = (function() {
    
                        /**
                         * Properties of an UpdateSubnetRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IUpdateSubnetRequest
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateSubnetRequest updateMask
                         * @property {google.cloud.vmwareengine.v1.ISubnet|null} [subnet] UpdateSubnetRequest subnet
                         */
    
                        /**
                         * Constructs a new UpdateSubnetRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents an UpdateSubnetRequest.
                         * @implements IUpdateSubnetRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IUpdateSubnetRequest=} [properties] Properties to set
                         */
                        function UpdateSubnetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateSubnetRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.vmwareengine.v1.UpdateSubnetRequest
                         * @instance
                         */
                        UpdateSubnetRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateSubnetRequest subnet.
                         * @member {google.cloud.vmwareengine.v1.ISubnet|null|undefined} subnet
                         * @memberof google.cloud.vmwareengine.v1.UpdateSubnetRequest
                         * @instance
                         */
                        UpdateSubnetRequest.prototype.subnet = null;
    
                        /**
                         * Creates a new UpdateSubnetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.UpdateSubnetRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdateSubnetRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.UpdateSubnetRequest} UpdateSubnetRequest instance
                         */
                        UpdateSubnetRequest.create = function create(properties) {
                            return new UpdateSubnetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateSubnetRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.UpdateSubnetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.UpdateSubnetRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdateSubnetRequest} message UpdateSubnetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSubnetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.subnet != null && Object.hasOwnProperty.call(message, "subnet"))
                                $root.google.cloud.vmwareengine.v1.Subnet.encode(message.subnet, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateSubnetRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.UpdateSubnetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UpdateSubnetRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdateSubnetRequest} message UpdateSubnetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateSubnetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateSubnetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.UpdateSubnetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.UpdateSubnetRequest} UpdateSubnetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSubnetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.UpdateSubnetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.subnet = $root.google.cloud.vmwareengine.v1.Subnet.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateSubnetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UpdateSubnetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.UpdateSubnetRequest} UpdateSubnetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateSubnetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateSubnetRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.UpdateSubnetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateSubnetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.subnet != null && message.hasOwnProperty("subnet")) {
                                var error = $root.google.cloud.vmwareengine.v1.Subnet.verify(message.subnet);
                                if (error)
                                    return "subnet." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateSubnetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.UpdateSubnetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.UpdateSubnetRequest} UpdateSubnetRequest
                         */
                        UpdateSubnetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.UpdateSubnetRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.UpdateSubnetRequest();
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.UpdateSubnetRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.subnet != null) {
                                if (typeof object.subnet !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.UpdateSubnetRequest.subnet: object expected");
                                message.subnet = $root.google.cloud.vmwareengine.v1.Subnet.fromObject(object.subnet);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateSubnetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.UpdateSubnetRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.UpdateSubnetRequest} message UpdateSubnetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateSubnetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.updateMask = null;
                                object.subnet = null;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.subnet != null && message.hasOwnProperty("subnet"))
                                object.subnet = $root.google.cloud.vmwareengine.v1.Subnet.toObject(message.subnet, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateSubnetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.UpdateSubnetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateSubnetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateSubnetRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.UpdateSubnetRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateSubnetRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.UpdateSubnetRequest";
                        };
    
                        return UpdateSubnetRequest;
                    })();
    
                    v1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusMessage] OperationMetadata statusMessage
                         * @property {boolean|null} [requestedCancellation] OperationMetadata requestedCancellation
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusMessage.
                         * @member {string} statusMessage
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusMessage = "";
    
                        /**
                         * OperationMetadata requestedCancellation.
                         * @member {boolean} requestedCancellation
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestedCancellation = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.vmwareengine.v1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                            if (message.requestedCancellation != null && Object.hasOwnProperty.call(message, "requestedCancellation"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requestedCancellation);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusMessage = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.requestedCancellation = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                if (!$util.isString(message.statusMessage))
                                    return "statusMessage: string expected";
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                if (typeof message.requestedCancellation !== "boolean")
                                    return "requestedCancellation: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusMessage != null)
                                message.statusMessage = String(object.statusMessage);
                            if (object.requestedCancellation != null)
                                message.requestedCancellation = Boolean(object.requestedCancellation);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.vmwareengine.v1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusMessage = "";
                                object.requestedCancellation = false;
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                object.statusMessage = message.statusMessage;
                            if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                object.requestedCancellation = message.requestedCancellation;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v1.ListNodeTypesRequest = (function() {
    
                        /**
                         * Properties of a ListNodeTypesRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListNodeTypesRequest
                         * @property {string|null} [parent] ListNodeTypesRequest parent
                         * @property {number|null} [pageSize] ListNodeTypesRequest pageSize
                         * @property {string|null} [pageToken] ListNodeTypesRequest pageToken
                         * @property {string|null} [filter] ListNodeTypesRequest filter
                         */
    
                        /**
                         * Constructs a new ListNodeTypesRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListNodeTypesRequest.
                         * @implements IListNodeTypesRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListNodeTypesRequest=} [properties] Properties to set
                         */
                        function ListNodeTypesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListNodeTypesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @instance
                         */
                        ListNodeTypesRequest.prototype.parent = "";
    
                        /**
                         * ListNodeTypesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @instance
                         */
                        ListNodeTypesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListNodeTypesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @instance
                         */
                        ListNodeTypesRequest.prototype.pageToken = "";
    
                        /**
                         * ListNodeTypesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @instance
                         */
                        ListNodeTypesRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListNodeTypesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListNodeTypesRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListNodeTypesRequest} ListNodeTypesRequest instance
                         */
                        ListNodeTypesRequest.create = function create(properties) {
                            return new ListNodeTypesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListNodeTypesRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListNodeTypesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListNodeTypesRequest} message ListNodeTypesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListNodeTypesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListNodeTypesRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListNodeTypesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListNodeTypesRequest} message ListNodeTypesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListNodeTypesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListNodeTypesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListNodeTypesRequest} ListNodeTypesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListNodeTypesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListNodeTypesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListNodeTypesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListNodeTypesRequest} ListNodeTypesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListNodeTypesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListNodeTypesRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListNodeTypesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListNodeTypesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListNodeTypesRequest} ListNodeTypesRequest
                         */
                        ListNodeTypesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListNodeTypesRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListNodeTypesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListNodeTypesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListNodeTypesRequest} message ListNodeTypesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListNodeTypesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListNodeTypesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListNodeTypesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListNodeTypesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListNodeTypesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListNodeTypesRequest";
                        };
    
                        return ListNodeTypesRequest;
                    })();
    
                    v1.ListNodeTypesResponse = (function() {
    
                        /**
                         * Properties of a ListNodeTypesResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListNodeTypesResponse
                         * @property {Array.<google.cloud.vmwareengine.v1.INodeType>|null} [nodeTypes] ListNodeTypesResponse nodeTypes
                         * @property {string|null} [nextPageToken] ListNodeTypesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListNodeTypesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListNodeTypesResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListNodeTypesResponse.
                         * @implements IListNodeTypesResponse
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListNodeTypesResponse=} [properties] Properties to set
                         */
                        function ListNodeTypesResponse(properties) {
                            this.nodeTypes = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListNodeTypesResponse nodeTypes.
                         * @member {Array.<google.cloud.vmwareengine.v1.INodeType>} nodeTypes
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @instance
                         */
                        ListNodeTypesResponse.prototype.nodeTypes = $util.emptyArray;
    
                        /**
                         * ListNodeTypesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @instance
                         */
                        ListNodeTypesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListNodeTypesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @instance
                         */
                        ListNodeTypesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListNodeTypesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListNodeTypesResponse=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListNodeTypesResponse} ListNodeTypesResponse instance
                         */
                        ListNodeTypesResponse.create = function create(properties) {
                            return new ListNodeTypesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListNodeTypesResponse message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListNodeTypesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListNodeTypesResponse} message ListNodeTypesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListNodeTypesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.nodeTypes != null && message.nodeTypes.length)
                                for (var i = 0; i < message.nodeTypes.length; ++i)
                                    $root.google.cloud.vmwareengine.v1.NodeType.encode(message.nodeTypes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListNodeTypesResponse message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListNodeTypesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListNodeTypesResponse} message ListNodeTypesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListNodeTypesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListNodeTypesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListNodeTypesResponse} ListNodeTypesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListNodeTypesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListNodeTypesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.nodeTypes && message.nodeTypes.length))
                                            message.nodeTypes = [];
                                        message.nodeTypes.push($root.google.cloud.vmwareengine.v1.NodeType.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListNodeTypesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListNodeTypesResponse} ListNodeTypesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListNodeTypesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListNodeTypesResponse message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListNodeTypesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.nodeTypes != null && message.hasOwnProperty("nodeTypes")) {
                                if (!Array.isArray(message.nodeTypes))
                                    return "nodeTypes: array expected";
                                for (var i = 0; i < message.nodeTypes.length; ++i) {
                                    var error = $root.google.cloud.vmwareengine.v1.NodeType.verify(message.nodeTypes[i]);
                                    if (error)
                                        return "nodeTypes." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListNodeTypesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListNodeTypesResponse} ListNodeTypesResponse
                         */
                        ListNodeTypesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListNodeTypesResponse)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListNodeTypesResponse();
                            if (object.nodeTypes) {
                                if (!Array.isArray(object.nodeTypes))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListNodeTypesResponse.nodeTypes: array expected");
                                message.nodeTypes = [];
                                for (var i = 0; i < object.nodeTypes.length; ++i) {
                                    if (typeof object.nodeTypes[i] !== "object")
                                        throw TypeError(".google.cloud.vmwareengine.v1.ListNodeTypesResponse.nodeTypes: object expected");
                                    message.nodeTypes[i] = $root.google.cloud.vmwareengine.v1.NodeType.fromObject(object.nodeTypes[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListNodeTypesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListNodeTypesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListNodeTypesResponse} message ListNodeTypesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListNodeTypesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.nodeTypes = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.nodeTypes && message.nodeTypes.length) {
                                object.nodeTypes = [];
                                for (var j = 0; j < message.nodeTypes.length; ++j)
                                    object.nodeTypes[j] = $root.google.cloud.vmwareengine.v1.NodeType.toObject(message.nodeTypes[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListNodeTypesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListNodeTypesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListNodeTypesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListNodeTypesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListNodeTypesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListNodeTypesResponse";
                        };
    
                        return ListNodeTypesResponse;
                    })();
    
                    v1.GetNodeTypeRequest = (function() {
    
                        /**
                         * Properties of a GetNodeTypeRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IGetNodeTypeRequest
                         * @property {string|null} [name] GetNodeTypeRequest name
                         */
    
                        /**
                         * Constructs a new GetNodeTypeRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a GetNodeTypeRequest.
                         * @implements IGetNodeTypeRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IGetNodeTypeRequest=} [properties] Properties to set
                         */
                        function GetNodeTypeRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetNodeTypeRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.GetNodeTypeRequest
                         * @instance
                         */
                        GetNodeTypeRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetNodeTypeRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.GetNodeTypeRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetNodeTypeRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.GetNodeTypeRequest} GetNodeTypeRequest instance
                         */
                        GetNodeTypeRequest.create = function create(properties) {
                            return new GetNodeTypeRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetNodeTypeRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.GetNodeTypeRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.GetNodeTypeRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetNodeTypeRequest} message GetNodeTypeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetNodeTypeRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetNodeTypeRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.GetNodeTypeRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetNodeTypeRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetNodeTypeRequest} message GetNodeTypeRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetNodeTypeRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetNodeTypeRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.GetNodeTypeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.GetNodeTypeRequest} GetNodeTypeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetNodeTypeRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.GetNodeTypeRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetNodeTypeRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetNodeTypeRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.GetNodeTypeRequest} GetNodeTypeRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetNodeTypeRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetNodeTypeRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.GetNodeTypeRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetNodeTypeRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetNodeTypeRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.GetNodeTypeRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.GetNodeTypeRequest} GetNodeTypeRequest
                         */
                        GetNodeTypeRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.GetNodeTypeRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.GetNodeTypeRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetNodeTypeRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.GetNodeTypeRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.GetNodeTypeRequest} message GetNodeTypeRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetNodeTypeRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetNodeTypeRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.GetNodeTypeRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetNodeTypeRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetNodeTypeRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.GetNodeTypeRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetNodeTypeRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.GetNodeTypeRequest";
                        };
    
                        return GetNodeTypeRequest;
                    })();
    
                    v1.ShowNsxCredentialsRequest = (function() {
    
                        /**
                         * Properties of a ShowNsxCredentialsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IShowNsxCredentialsRequest
                         * @property {string|null} [privateCloud] ShowNsxCredentialsRequest privateCloud
                         */
    
                        /**
                         * Constructs a new ShowNsxCredentialsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ShowNsxCredentialsRequest.
                         * @implements IShowNsxCredentialsRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest=} [properties] Properties to set
                         */
                        function ShowNsxCredentialsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ShowNsxCredentialsRequest privateCloud.
                         * @member {string} privateCloud
                         * @memberof google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest
                         * @instance
                         */
                        ShowNsxCredentialsRequest.prototype.privateCloud = "";
    
                        /**
                         * Creates a new ShowNsxCredentialsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest} ShowNsxCredentialsRequest instance
                         */
                        ShowNsxCredentialsRequest.create = function create(properties) {
                            return new ShowNsxCredentialsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ShowNsxCredentialsRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest} message ShowNsxCredentialsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ShowNsxCredentialsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateCloud != null && Object.hasOwnProperty.call(message, "privateCloud"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.privateCloud);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ShowNsxCredentialsRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest} message ShowNsxCredentialsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ShowNsxCredentialsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ShowNsxCredentialsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest} ShowNsxCredentialsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ShowNsxCredentialsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.privateCloud = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ShowNsxCredentialsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest} ShowNsxCredentialsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ShowNsxCredentialsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ShowNsxCredentialsRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ShowNsxCredentialsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateCloud != null && message.hasOwnProperty("privateCloud"))
                                if (!$util.isString(message.privateCloud))
                                    return "privateCloud: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ShowNsxCredentialsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest} ShowNsxCredentialsRequest
                         */
                        ShowNsxCredentialsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest();
                            if (object.privateCloud != null)
                                message.privateCloud = String(object.privateCloud);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ShowNsxCredentialsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest} message ShowNsxCredentialsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ShowNsxCredentialsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.privateCloud = "";
                            if (message.privateCloud != null && message.hasOwnProperty("privateCloud"))
                                object.privateCloud = message.privateCloud;
                            return object;
                        };
    
                        /**
                         * Converts this ShowNsxCredentialsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ShowNsxCredentialsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ShowNsxCredentialsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ShowNsxCredentialsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ShowNsxCredentialsRequest";
                        };
    
                        return ShowNsxCredentialsRequest;
                    })();
    
                    v1.ShowVcenterCredentialsRequest = (function() {
    
                        /**
                         * Properties of a ShowVcenterCredentialsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IShowVcenterCredentialsRequest
                         * @property {string|null} [privateCloud] ShowVcenterCredentialsRequest privateCloud
                         */
    
                        /**
                         * Constructs a new ShowVcenterCredentialsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ShowVcenterCredentialsRequest.
                         * @implements IShowVcenterCredentialsRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest=} [properties] Properties to set
                         */
                        function ShowVcenterCredentialsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ShowVcenterCredentialsRequest privateCloud.
                         * @member {string} privateCloud
                         * @memberof google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest
                         * @instance
                         */
                        ShowVcenterCredentialsRequest.prototype.privateCloud = "";
    
                        /**
                         * Creates a new ShowVcenterCredentialsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest} ShowVcenterCredentialsRequest instance
                         */
                        ShowVcenterCredentialsRequest.create = function create(properties) {
                            return new ShowVcenterCredentialsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ShowVcenterCredentialsRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest} message ShowVcenterCredentialsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ShowVcenterCredentialsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateCloud != null && Object.hasOwnProperty.call(message, "privateCloud"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.privateCloud);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ShowVcenterCredentialsRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest} message ShowVcenterCredentialsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ShowVcenterCredentialsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ShowVcenterCredentialsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest} ShowVcenterCredentialsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ShowVcenterCredentialsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.privateCloud = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ShowVcenterCredentialsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest} ShowVcenterCredentialsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ShowVcenterCredentialsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ShowVcenterCredentialsRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ShowVcenterCredentialsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateCloud != null && message.hasOwnProperty("privateCloud"))
                                if (!$util.isString(message.privateCloud))
                                    return "privateCloud: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ShowVcenterCredentialsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest} ShowVcenterCredentialsRequest
                         */
                        ShowVcenterCredentialsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest();
                            if (object.privateCloud != null)
                                message.privateCloud = String(object.privateCloud);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ShowVcenterCredentialsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest} message ShowVcenterCredentialsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ShowVcenterCredentialsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.privateCloud = "";
                            if (message.privateCloud != null && message.hasOwnProperty("privateCloud"))
                                object.privateCloud = message.privateCloud;
                            return object;
                        };
    
                        /**
                         * Converts this ShowVcenterCredentialsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ShowVcenterCredentialsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ShowVcenterCredentialsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ShowVcenterCredentialsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ShowVcenterCredentialsRequest";
                        };
    
                        return ShowVcenterCredentialsRequest;
                    })();
    
                    v1.ResetNsxCredentialsRequest = (function() {
    
                        /**
                         * Properties of a ResetNsxCredentialsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IResetNsxCredentialsRequest
                         * @property {string|null} [privateCloud] ResetNsxCredentialsRequest privateCloud
                         * @property {string|null} [requestId] ResetNsxCredentialsRequest requestId
                         */
    
                        /**
                         * Constructs a new ResetNsxCredentialsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ResetNsxCredentialsRequest.
                         * @implements IResetNsxCredentialsRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest=} [properties] Properties to set
                         */
                        function ResetNsxCredentialsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResetNsxCredentialsRequest privateCloud.
                         * @member {string} privateCloud
                         * @memberof google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
                         * @instance
                         */
                        ResetNsxCredentialsRequest.prototype.privateCloud = "";
    
                        /**
                         * ResetNsxCredentialsRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
                         * @instance
                         */
                        ResetNsxCredentialsRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new ResetNsxCredentialsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest} ResetNsxCredentialsRequest instance
                         */
                        ResetNsxCredentialsRequest.create = function create(properties) {
                            return new ResetNsxCredentialsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResetNsxCredentialsRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest} message ResetNsxCredentialsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetNsxCredentialsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateCloud != null && Object.hasOwnProperty.call(message, "privateCloud"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.privateCloud);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResetNsxCredentialsRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest} message ResetNsxCredentialsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetNsxCredentialsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResetNsxCredentialsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest} ResetNsxCredentialsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetNsxCredentialsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.privateCloud = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResetNsxCredentialsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest} ResetNsxCredentialsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetNsxCredentialsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResetNsxCredentialsRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResetNsxCredentialsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateCloud != null && message.hasOwnProperty("privateCloud"))
                                if (!$util.isString(message.privateCloud))
                                    return "privateCloud: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResetNsxCredentialsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest} ResetNsxCredentialsRequest
                         */
                        ResetNsxCredentialsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest();
                            if (object.privateCloud != null)
                                message.privateCloud = String(object.privateCloud);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResetNsxCredentialsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest} message ResetNsxCredentialsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResetNsxCredentialsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.privateCloud = "";
                                object.requestId = "";
                            }
                            if (message.privateCloud != null && message.hasOwnProperty("privateCloud"))
                                object.privateCloud = message.privateCloud;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this ResetNsxCredentialsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResetNsxCredentialsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResetNsxCredentialsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResetNsxCredentialsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ResetNsxCredentialsRequest";
                        };
    
                        return ResetNsxCredentialsRequest;
                    })();
    
                    v1.ResetVcenterCredentialsRequest = (function() {
    
                        /**
                         * Properties of a ResetVcenterCredentialsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IResetVcenterCredentialsRequest
                         * @property {string|null} [privateCloud] ResetVcenterCredentialsRequest privateCloud
                         * @property {string|null} [requestId] ResetVcenterCredentialsRequest requestId
                         */
    
                        /**
                         * Constructs a new ResetVcenterCredentialsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ResetVcenterCredentialsRequest.
                         * @implements IResetVcenterCredentialsRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest=} [properties] Properties to set
                         */
                        function ResetVcenterCredentialsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResetVcenterCredentialsRequest privateCloud.
                         * @member {string} privateCloud
                         * @memberof google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
                         * @instance
                         */
                        ResetVcenterCredentialsRequest.prototype.privateCloud = "";
    
                        /**
                         * ResetVcenterCredentialsRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
                         * @instance
                         */
                        ResetVcenterCredentialsRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new ResetVcenterCredentialsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest} ResetVcenterCredentialsRequest instance
                         */
                        ResetVcenterCredentialsRequest.create = function create(properties) {
                            return new ResetVcenterCredentialsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResetVcenterCredentialsRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest} message ResetVcenterCredentialsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetVcenterCredentialsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateCloud != null && Object.hasOwnProperty.call(message, "privateCloud"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.privateCloud);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResetVcenterCredentialsRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest} message ResetVcenterCredentialsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResetVcenterCredentialsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResetVcenterCredentialsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest} ResetVcenterCredentialsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetVcenterCredentialsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.privateCloud = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResetVcenterCredentialsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest} ResetVcenterCredentialsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResetVcenterCredentialsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResetVcenterCredentialsRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResetVcenterCredentialsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateCloud != null && message.hasOwnProperty("privateCloud"))
                                if (!$util.isString(message.privateCloud))
                                    return "privateCloud: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResetVcenterCredentialsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest} ResetVcenterCredentialsRequest
                         */
                        ResetVcenterCredentialsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest();
                            if (object.privateCloud != null)
                                message.privateCloud = String(object.privateCloud);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResetVcenterCredentialsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest} message ResetVcenterCredentialsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResetVcenterCredentialsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.privateCloud = "";
                                object.requestId = "";
                            }
                            if (message.privateCloud != null && message.hasOwnProperty("privateCloud"))
                                object.privateCloud = message.privateCloud;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this ResetVcenterCredentialsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResetVcenterCredentialsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResetVcenterCredentialsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResetVcenterCredentialsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ResetVcenterCredentialsRequest";
                        };
    
                        return ResetVcenterCredentialsRequest;
                    })();
    
                    v1.ListHcxActivationKeysResponse = (function() {
    
                        /**
                         * Properties of a ListHcxActivationKeysResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListHcxActivationKeysResponse
                         * @property {Array.<google.cloud.vmwareengine.v1.IHcxActivationKey>|null} [hcxActivationKeys] ListHcxActivationKeysResponse hcxActivationKeys
                         * @property {string|null} [nextPageToken] ListHcxActivationKeysResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListHcxActivationKeysResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListHcxActivationKeysResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListHcxActivationKeysResponse.
                         * @implements IListHcxActivationKeysResponse
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse=} [properties] Properties to set
                         */
                        function ListHcxActivationKeysResponse(properties) {
                            this.hcxActivationKeys = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListHcxActivationKeysResponse hcxActivationKeys.
                         * @member {Array.<google.cloud.vmwareengine.v1.IHcxActivationKey>} hcxActivationKeys
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @instance
                         */
                        ListHcxActivationKeysResponse.prototype.hcxActivationKeys = $util.emptyArray;
    
                        /**
                         * ListHcxActivationKeysResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @instance
                         */
                        ListHcxActivationKeysResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListHcxActivationKeysResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @instance
                         */
                        ListHcxActivationKeysResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListHcxActivationKeysResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse} ListHcxActivationKeysResponse instance
                         */
                        ListHcxActivationKeysResponse.create = function create(properties) {
                            return new ListHcxActivationKeysResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListHcxActivationKeysResponse message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse} message ListHcxActivationKeysResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListHcxActivationKeysResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hcxActivationKeys != null && message.hcxActivationKeys.length)
                                for (var i = 0; i < message.hcxActivationKeys.length; ++i)
                                    $root.google.cloud.vmwareengine.v1.HcxActivationKey.encode(message.hcxActivationKeys[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListHcxActivationKeysResponse message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse} message ListHcxActivationKeysResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListHcxActivationKeysResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListHcxActivationKeysResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse} ListHcxActivationKeysResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListHcxActivationKeysResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.hcxActivationKeys && message.hcxActivationKeys.length))
                                            message.hcxActivationKeys = [];
                                        message.hcxActivationKeys.push($root.google.cloud.vmwareengine.v1.HcxActivationKey.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListHcxActivationKeysResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse} ListHcxActivationKeysResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListHcxActivationKeysResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListHcxActivationKeysResponse message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListHcxActivationKeysResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hcxActivationKeys != null && message.hasOwnProperty("hcxActivationKeys")) {
                                if (!Array.isArray(message.hcxActivationKeys))
                                    return "hcxActivationKeys: array expected";
                                for (var i = 0; i < message.hcxActivationKeys.length; ++i) {
                                    var error = $root.google.cloud.vmwareengine.v1.HcxActivationKey.verify(message.hcxActivationKeys[i]);
                                    if (error)
                                        return "hcxActivationKeys." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListHcxActivationKeysResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse} ListHcxActivationKeysResponse
                         */
                        ListHcxActivationKeysResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse();
                            if (object.hcxActivationKeys) {
                                if (!Array.isArray(object.hcxActivationKeys))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse.hcxActivationKeys: array expected");
                                message.hcxActivationKeys = [];
                                for (var i = 0; i < object.hcxActivationKeys.length; ++i) {
                                    if (typeof object.hcxActivationKeys[i] !== "object")
                                        throw TypeError(".google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse.hcxActivationKeys: object expected");
                                    message.hcxActivationKeys[i] = $root.google.cloud.vmwareengine.v1.HcxActivationKey.fromObject(object.hcxActivationKeys[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListHcxActivationKeysResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse} message ListHcxActivationKeysResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListHcxActivationKeysResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.hcxActivationKeys = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.hcxActivationKeys && message.hcxActivationKeys.length) {
                                object.hcxActivationKeys = [];
                                for (var j = 0; j < message.hcxActivationKeys.length; ++j)
                                    object.hcxActivationKeys[j] = $root.google.cloud.vmwareengine.v1.HcxActivationKey.toObject(message.hcxActivationKeys[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListHcxActivationKeysResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListHcxActivationKeysResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListHcxActivationKeysResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListHcxActivationKeysResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListHcxActivationKeysResponse";
                        };
    
                        return ListHcxActivationKeysResponse;
                    })();
    
                    v1.ListHcxActivationKeysRequest = (function() {
    
                        /**
                         * Properties of a ListHcxActivationKeysRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListHcxActivationKeysRequest
                         * @property {string|null} [parent] ListHcxActivationKeysRequest parent
                         * @property {number|null} [pageSize] ListHcxActivationKeysRequest pageSize
                         * @property {string|null} [pageToken] ListHcxActivationKeysRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListHcxActivationKeysRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListHcxActivationKeysRequest.
                         * @implements IListHcxActivationKeysRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest=} [properties] Properties to set
                         */
                        function ListHcxActivationKeysRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListHcxActivationKeysRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @instance
                         */
                        ListHcxActivationKeysRequest.prototype.parent = "";
    
                        /**
                         * ListHcxActivationKeysRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @instance
                         */
                        ListHcxActivationKeysRequest.prototype.pageSize = 0;
    
                        /**
                         * ListHcxActivationKeysRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @instance
                         */
                        ListHcxActivationKeysRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListHcxActivationKeysRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest} ListHcxActivationKeysRequest instance
                         */
                        ListHcxActivationKeysRequest.create = function create(properties) {
                            return new ListHcxActivationKeysRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListHcxActivationKeysRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest} message ListHcxActivationKeysRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListHcxActivationKeysRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListHcxActivationKeysRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest} message ListHcxActivationKeysRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListHcxActivationKeysRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListHcxActivationKeysRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest} ListHcxActivationKeysRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListHcxActivationKeysRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListHcxActivationKeysRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest} ListHcxActivationKeysRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListHcxActivationKeysRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListHcxActivationKeysRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListHcxActivationKeysRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListHcxActivationKeysRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest} ListHcxActivationKeysRequest
                         */
                        ListHcxActivationKeysRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListHcxActivationKeysRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest} message ListHcxActivationKeysRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListHcxActivationKeysRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListHcxActivationKeysRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListHcxActivationKeysRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListHcxActivationKeysRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListHcxActivationKeysRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListHcxActivationKeysRequest";
                        };
    
                        return ListHcxActivationKeysRequest;
                    })();
    
                    v1.GetHcxActivationKeyRequest = (function() {
    
                        /**
                         * Properties of a GetHcxActivationKeyRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IGetHcxActivationKeyRequest
                         * @property {string|null} [name] GetHcxActivationKeyRequest name
                         */
    
                        /**
                         * Constructs a new GetHcxActivationKeyRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a GetHcxActivationKeyRequest.
                         * @implements IGetHcxActivationKeyRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest=} [properties] Properties to set
                         */
                        function GetHcxActivationKeyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetHcxActivationKeyRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest
                         * @instance
                         */
                        GetHcxActivationKeyRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetHcxActivationKeyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest} GetHcxActivationKeyRequest instance
                         */
                        GetHcxActivationKeyRequest.create = function create(properties) {
                            return new GetHcxActivationKeyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetHcxActivationKeyRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest} message GetHcxActivationKeyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetHcxActivationKeyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetHcxActivationKeyRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest} message GetHcxActivationKeyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetHcxActivationKeyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetHcxActivationKeyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest} GetHcxActivationKeyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetHcxActivationKeyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetHcxActivationKeyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest} GetHcxActivationKeyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetHcxActivationKeyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetHcxActivationKeyRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetHcxActivationKeyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetHcxActivationKeyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest} GetHcxActivationKeyRequest
                         */
                        GetHcxActivationKeyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetHcxActivationKeyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest} message GetHcxActivationKeyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetHcxActivationKeyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetHcxActivationKeyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetHcxActivationKeyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetHcxActivationKeyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetHcxActivationKeyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.GetHcxActivationKeyRequest";
                        };
    
                        return GetHcxActivationKeyRequest;
                    })();
    
                    v1.CreateHcxActivationKeyRequest = (function() {
    
                        /**
                         * Properties of a CreateHcxActivationKeyRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface ICreateHcxActivationKeyRequest
                         * @property {string|null} [parent] CreateHcxActivationKeyRequest parent
                         * @property {google.cloud.vmwareengine.v1.IHcxActivationKey|null} [hcxActivationKey] CreateHcxActivationKeyRequest hcxActivationKey
                         * @property {string|null} [hcxActivationKeyId] CreateHcxActivationKeyRequest hcxActivationKeyId
                         * @property {string|null} [requestId] CreateHcxActivationKeyRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateHcxActivationKeyRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a CreateHcxActivationKeyRequest.
                         * @implements ICreateHcxActivationKeyRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest=} [properties] Properties to set
                         */
                        function CreateHcxActivationKeyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateHcxActivationKeyRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @instance
                         */
                        CreateHcxActivationKeyRequest.prototype.parent = "";
    
                        /**
                         * CreateHcxActivationKeyRequest hcxActivationKey.
                         * @member {google.cloud.vmwareengine.v1.IHcxActivationKey|null|undefined} hcxActivationKey
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @instance
                         */
                        CreateHcxActivationKeyRequest.prototype.hcxActivationKey = null;
    
                        /**
                         * CreateHcxActivationKeyRequest hcxActivationKeyId.
                         * @member {string} hcxActivationKeyId
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @instance
                         */
                        CreateHcxActivationKeyRequest.prototype.hcxActivationKeyId = "";
    
                        /**
                         * CreateHcxActivationKeyRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @instance
                         */
                        CreateHcxActivationKeyRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateHcxActivationKeyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest} CreateHcxActivationKeyRequest instance
                         */
                        CreateHcxActivationKeyRequest.create = function create(properties) {
                            return new CreateHcxActivationKeyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateHcxActivationKeyRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest} message CreateHcxActivationKeyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateHcxActivationKeyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.hcxActivationKey != null && Object.hasOwnProperty.call(message, "hcxActivationKey"))
                                $root.google.cloud.vmwareengine.v1.HcxActivationKey.encode(message.hcxActivationKey, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.hcxActivationKeyId != null && Object.hasOwnProperty.call(message, "hcxActivationKeyId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.hcxActivationKeyId);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateHcxActivationKeyRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest} message CreateHcxActivationKeyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateHcxActivationKeyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateHcxActivationKeyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest} CreateHcxActivationKeyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateHcxActivationKeyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.hcxActivationKey = $root.google.cloud.vmwareengine.v1.HcxActivationKey.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.hcxActivationKeyId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateHcxActivationKeyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest} CreateHcxActivationKeyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateHcxActivationKeyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateHcxActivationKeyRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateHcxActivationKeyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.hcxActivationKey != null && message.hasOwnProperty("hcxActivationKey")) {
                                var error = $root.google.cloud.vmwareengine.v1.HcxActivationKey.verify(message.hcxActivationKey);
                                if (error)
                                    return "hcxActivationKey." + error;
                            }
                            if (message.hcxActivationKeyId != null && message.hasOwnProperty("hcxActivationKeyId"))
                                if (!$util.isString(message.hcxActivationKeyId))
                                    return "hcxActivationKeyId: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateHcxActivationKeyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest} CreateHcxActivationKeyRequest
                         */
                        CreateHcxActivationKeyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.hcxActivationKey != null) {
                                if (typeof object.hcxActivationKey !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest.hcxActivationKey: object expected");
                                message.hcxActivationKey = $root.google.cloud.vmwareengine.v1.HcxActivationKey.fromObject(object.hcxActivationKey);
                            }
                            if (object.hcxActivationKeyId != null)
                                message.hcxActivationKeyId = String(object.hcxActivationKeyId);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateHcxActivationKeyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest} message CreateHcxActivationKeyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateHcxActivationKeyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.hcxActivationKey = null;
                                object.hcxActivationKeyId = "";
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.hcxActivationKey != null && message.hasOwnProperty("hcxActivationKey"))
                                object.hcxActivationKey = $root.google.cloud.vmwareengine.v1.HcxActivationKey.toObject(message.hcxActivationKey, options);
                            if (message.hcxActivationKeyId != null && message.hasOwnProperty("hcxActivationKeyId"))
                                object.hcxActivationKeyId = message.hcxActivationKeyId;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateHcxActivationKeyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateHcxActivationKeyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateHcxActivationKeyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateHcxActivationKeyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.CreateHcxActivationKeyRequest";
                        };
    
                        return CreateHcxActivationKeyRequest;
                    })();
    
                    v1.ListNetworkPoliciesRequest = (function() {
    
                        /**
                         * Properties of a ListNetworkPoliciesRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListNetworkPoliciesRequest
                         * @property {string|null} [parent] ListNetworkPoliciesRequest parent
                         * @property {number|null} [pageSize] ListNetworkPoliciesRequest pageSize
                         * @property {string|null} [pageToken] ListNetworkPoliciesRequest pageToken
                         * @property {string|null} [filter] ListNetworkPoliciesRequest filter
                         * @property {string|null} [orderBy] ListNetworkPoliciesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListNetworkPoliciesRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListNetworkPoliciesRequest.
                         * @implements IListNetworkPoliciesRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest=} [properties] Properties to set
                         */
                        function ListNetworkPoliciesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListNetworkPoliciesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @instance
                         */
                        ListNetworkPoliciesRequest.prototype.parent = "";
    
                        /**
                         * ListNetworkPoliciesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @instance
                         */
                        ListNetworkPoliciesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListNetworkPoliciesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @instance
                         */
                        ListNetworkPoliciesRequest.prototype.pageToken = "";
    
                        /**
                         * ListNetworkPoliciesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @instance
                         */
                        ListNetworkPoliciesRequest.prototype.filter = "";
    
                        /**
                         * ListNetworkPoliciesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @instance
                         */
                        ListNetworkPoliciesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListNetworkPoliciesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest} ListNetworkPoliciesRequest instance
                         */
                        ListNetworkPoliciesRequest.create = function create(properties) {
                            return new ListNetworkPoliciesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListNetworkPoliciesRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest} message ListNetworkPoliciesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListNetworkPoliciesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListNetworkPoliciesRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest} message ListNetworkPoliciesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListNetworkPoliciesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListNetworkPoliciesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest} ListNetworkPoliciesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListNetworkPoliciesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListNetworkPoliciesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest} ListNetworkPoliciesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListNetworkPoliciesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListNetworkPoliciesRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListNetworkPoliciesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListNetworkPoliciesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest} ListNetworkPoliciesRequest
                         */
                        ListNetworkPoliciesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListNetworkPoliciesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest} message ListNetworkPoliciesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListNetworkPoliciesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListNetworkPoliciesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListNetworkPoliciesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListNetworkPoliciesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListNetworkPoliciesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListNetworkPoliciesRequest";
                        };
    
                        return ListNetworkPoliciesRequest;
                    })();
    
                    v1.ListNetworkPoliciesResponse = (function() {
    
                        /**
                         * Properties of a ListNetworkPoliciesResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListNetworkPoliciesResponse
                         * @property {Array.<google.cloud.vmwareengine.v1.INetworkPolicy>|null} [networkPolicies] ListNetworkPoliciesResponse networkPolicies
                         * @property {string|null} [nextPageToken] ListNetworkPoliciesResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListNetworkPoliciesResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListNetworkPoliciesResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListNetworkPoliciesResponse.
                         * @implements IListNetworkPoliciesResponse
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse=} [properties] Properties to set
                         */
                        function ListNetworkPoliciesResponse(properties) {
                            this.networkPolicies = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListNetworkPoliciesResponse networkPolicies.
                         * @member {Array.<google.cloud.vmwareengine.v1.INetworkPolicy>} networkPolicies
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @instance
                         */
                        ListNetworkPoliciesResponse.prototype.networkPolicies = $util.emptyArray;
    
                        /**
                         * ListNetworkPoliciesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @instance
                         */
                        ListNetworkPoliciesResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListNetworkPoliciesResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @instance
                         */
                        ListNetworkPoliciesResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListNetworkPoliciesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse} ListNetworkPoliciesResponse instance
                         */
                        ListNetworkPoliciesResponse.create = function create(properties) {
                            return new ListNetworkPoliciesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListNetworkPoliciesResponse message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse} message ListNetworkPoliciesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListNetworkPoliciesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.networkPolicies != null && message.networkPolicies.length)
                                for (var i = 0; i < message.networkPolicies.length; ++i)
                                    $root.google.cloud.vmwareengine.v1.NetworkPolicy.encode(message.networkPolicies[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListNetworkPoliciesResponse message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse} message ListNetworkPoliciesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListNetworkPoliciesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListNetworkPoliciesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse} ListNetworkPoliciesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListNetworkPoliciesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.networkPolicies && message.networkPolicies.length))
                                            message.networkPolicies = [];
                                        message.networkPolicies.push($root.google.cloud.vmwareengine.v1.NetworkPolicy.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListNetworkPoliciesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse} ListNetworkPoliciesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListNetworkPoliciesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListNetworkPoliciesResponse message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListNetworkPoliciesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.networkPolicies != null && message.hasOwnProperty("networkPolicies")) {
                                if (!Array.isArray(message.networkPolicies))
                                    return "networkPolicies: array expected";
                                for (var i = 0; i < message.networkPolicies.length; ++i) {
                                    var error = $root.google.cloud.vmwareengine.v1.NetworkPolicy.verify(message.networkPolicies[i]);
                                    if (error)
                                        return "networkPolicies." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListNetworkPoliciesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse} ListNetworkPoliciesResponse
                         */
                        ListNetworkPoliciesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse();
                            if (object.networkPolicies) {
                                if (!Array.isArray(object.networkPolicies))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse.networkPolicies: array expected");
                                message.networkPolicies = [];
                                for (var i = 0; i < object.networkPolicies.length; ++i) {
                                    if (typeof object.networkPolicies[i] !== "object")
                                        throw TypeError(".google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse.networkPolicies: object expected");
                                    message.networkPolicies[i] = $root.google.cloud.vmwareengine.v1.NetworkPolicy.fromObject(object.networkPolicies[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListNetworkPoliciesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse} message ListNetworkPoliciesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListNetworkPoliciesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.networkPolicies = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.networkPolicies && message.networkPolicies.length) {
                                object.networkPolicies = [];
                                for (var j = 0; j < message.networkPolicies.length; ++j)
                                    object.networkPolicies[j] = $root.google.cloud.vmwareengine.v1.NetworkPolicy.toObject(message.networkPolicies[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListNetworkPoliciesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListNetworkPoliciesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListNetworkPoliciesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListNetworkPoliciesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListNetworkPoliciesResponse";
                        };
    
                        return ListNetworkPoliciesResponse;
                    })();
    
                    v1.GetNetworkPolicyRequest = (function() {
    
                        /**
                         * Properties of a GetNetworkPolicyRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IGetNetworkPolicyRequest
                         * @property {string|null} [name] GetNetworkPolicyRequest name
                         */
    
                        /**
                         * Constructs a new GetNetworkPolicyRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a GetNetworkPolicyRequest.
                         * @implements IGetNetworkPolicyRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest=} [properties] Properties to set
                         */
                        function GetNetworkPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetNetworkPolicyRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.GetNetworkPolicyRequest
                         * @instance
                         */
                        GetNetworkPolicyRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetNetworkPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.GetNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.GetNetworkPolicyRequest} GetNetworkPolicyRequest instance
                         */
                        GetNetworkPolicyRequest.create = function create(properties) {
                            return new GetNetworkPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetNetworkPolicyRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.GetNetworkPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.GetNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest} message GetNetworkPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetNetworkPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetNetworkPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.GetNetworkPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest} message GetNetworkPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetNetworkPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetNetworkPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.GetNetworkPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.GetNetworkPolicyRequest} GetNetworkPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetNetworkPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.GetNetworkPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetNetworkPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetNetworkPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.GetNetworkPolicyRequest} GetNetworkPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetNetworkPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetNetworkPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.GetNetworkPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetNetworkPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetNetworkPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.GetNetworkPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.GetNetworkPolicyRequest} GetNetworkPolicyRequest
                         */
                        GetNetworkPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.GetNetworkPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.GetNetworkPolicyRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetNetworkPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.GetNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.GetNetworkPolicyRequest} message GetNetworkPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetNetworkPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetNetworkPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.GetNetworkPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetNetworkPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetNetworkPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.GetNetworkPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetNetworkPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.GetNetworkPolicyRequest";
                        };
    
                        return GetNetworkPolicyRequest;
                    })();
    
                    v1.UpdateNetworkPolicyRequest = (function() {
    
                        /**
                         * Properties of an UpdateNetworkPolicyRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IUpdateNetworkPolicyRequest
                         * @property {google.cloud.vmwareengine.v1.INetworkPolicy|null} [networkPolicy] UpdateNetworkPolicyRequest networkPolicy
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateNetworkPolicyRequest updateMask
                         * @property {string|null} [requestId] UpdateNetworkPolicyRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateNetworkPolicyRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents an UpdateNetworkPolicyRequest.
                         * @implements IUpdateNetworkPolicyRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest=} [properties] Properties to set
                         */
                        function UpdateNetworkPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateNetworkPolicyRequest networkPolicy.
                         * @member {google.cloud.vmwareengine.v1.INetworkPolicy|null|undefined} networkPolicy
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @instance
                         */
                        UpdateNetworkPolicyRequest.prototype.networkPolicy = null;
    
                        /**
                         * UpdateNetworkPolicyRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @instance
                         */
                        UpdateNetworkPolicyRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateNetworkPolicyRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @instance
                         */
                        UpdateNetworkPolicyRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateNetworkPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest} UpdateNetworkPolicyRequest instance
                         */
                        UpdateNetworkPolicyRequest.create = function create(properties) {
                            return new UpdateNetworkPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateNetworkPolicyRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest} message UpdateNetworkPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateNetworkPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.networkPolicy != null && Object.hasOwnProperty.call(message, "networkPolicy"))
                                $root.google.cloud.vmwareengine.v1.NetworkPolicy.encode(message.networkPolicy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateNetworkPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest} message UpdateNetworkPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateNetworkPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateNetworkPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest} UpdateNetworkPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateNetworkPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.networkPolicy = $root.google.cloud.vmwareengine.v1.NetworkPolicy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateNetworkPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest} UpdateNetworkPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateNetworkPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateNetworkPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateNetworkPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.networkPolicy != null && message.hasOwnProperty("networkPolicy")) {
                                var error = $root.google.cloud.vmwareengine.v1.NetworkPolicy.verify(message.networkPolicy);
                                if (error)
                                    return "networkPolicy." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateNetworkPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest} UpdateNetworkPolicyRequest
                         */
                        UpdateNetworkPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest();
                            if (object.networkPolicy != null) {
                                if (typeof object.networkPolicy !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest.networkPolicy: object expected");
                                message.networkPolicy = $root.google.cloud.vmwareengine.v1.NetworkPolicy.fromObject(object.networkPolicy);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateNetworkPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest} message UpdateNetworkPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateNetworkPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.networkPolicy = null;
                                object.updateMask = null;
                                object.requestId = "";
                            }
                            if (message.networkPolicy != null && message.hasOwnProperty("networkPolicy"))
                                object.networkPolicy = $root.google.cloud.vmwareengine.v1.NetworkPolicy.toObject(message.networkPolicy, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateNetworkPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateNetworkPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateNetworkPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateNetworkPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.UpdateNetworkPolicyRequest";
                        };
    
                        return UpdateNetworkPolicyRequest;
                    })();
    
                    v1.CreateNetworkPolicyRequest = (function() {
    
                        /**
                         * Properties of a CreateNetworkPolicyRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface ICreateNetworkPolicyRequest
                         * @property {string|null} [parent] CreateNetworkPolicyRequest parent
                         * @property {string|null} [networkPolicyId] CreateNetworkPolicyRequest networkPolicyId
                         * @property {google.cloud.vmwareengine.v1.INetworkPolicy|null} [networkPolicy] CreateNetworkPolicyRequest networkPolicy
                         * @property {string|null} [requestId] CreateNetworkPolicyRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateNetworkPolicyRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a CreateNetworkPolicyRequest.
                         * @implements ICreateNetworkPolicyRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest=} [properties] Properties to set
                         */
                        function CreateNetworkPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateNetworkPolicyRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @instance
                         */
                        CreateNetworkPolicyRequest.prototype.parent = "";
    
                        /**
                         * CreateNetworkPolicyRequest networkPolicyId.
                         * @member {string} networkPolicyId
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @instance
                         */
                        CreateNetworkPolicyRequest.prototype.networkPolicyId = "";
    
                        /**
                         * CreateNetworkPolicyRequest networkPolicy.
                         * @member {google.cloud.vmwareengine.v1.INetworkPolicy|null|undefined} networkPolicy
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @instance
                         */
                        CreateNetworkPolicyRequest.prototype.networkPolicy = null;
    
                        /**
                         * CreateNetworkPolicyRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @instance
                         */
                        CreateNetworkPolicyRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateNetworkPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest} CreateNetworkPolicyRequest instance
                         */
                        CreateNetworkPolicyRequest.create = function create(properties) {
                            return new CreateNetworkPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateNetworkPolicyRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest} message CreateNetworkPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateNetworkPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.networkPolicyId != null && Object.hasOwnProperty.call(message, "networkPolicyId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.networkPolicyId);
                            if (message.networkPolicy != null && Object.hasOwnProperty.call(message, "networkPolicy"))
                                $root.google.cloud.vmwareengine.v1.NetworkPolicy.encode(message.networkPolicy, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateNetworkPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest} message CreateNetworkPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateNetworkPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateNetworkPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest} CreateNetworkPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateNetworkPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.networkPolicyId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.networkPolicy = $root.google.cloud.vmwareengine.v1.NetworkPolicy.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateNetworkPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest} CreateNetworkPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateNetworkPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateNetworkPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateNetworkPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.networkPolicyId != null && message.hasOwnProperty("networkPolicyId"))
                                if (!$util.isString(message.networkPolicyId))
                                    return "networkPolicyId: string expected";
                            if (message.networkPolicy != null && message.hasOwnProperty("networkPolicy")) {
                                var error = $root.google.cloud.vmwareengine.v1.NetworkPolicy.verify(message.networkPolicy);
                                if (error)
                                    return "networkPolicy." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateNetworkPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest} CreateNetworkPolicyRequest
                         */
                        CreateNetworkPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.networkPolicyId != null)
                                message.networkPolicyId = String(object.networkPolicyId);
                            if (object.networkPolicy != null) {
                                if (typeof object.networkPolicy !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest.networkPolicy: object expected");
                                message.networkPolicy = $root.google.cloud.vmwareengine.v1.NetworkPolicy.fromObject(object.networkPolicy);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateNetworkPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest} message CreateNetworkPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateNetworkPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.networkPolicyId = "";
                                object.networkPolicy = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.networkPolicyId != null && message.hasOwnProperty("networkPolicyId"))
                                object.networkPolicyId = message.networkPolicyId;
                            if (message.networkPolicy != null && message.hasOwnProperty("networkPolicy"))
                                object.networkPolicy = $root.google.cloud.vmwareengine.v1.NetworkPolicy.toObject(message.networkPolicy, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateNetworkPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateNetworkPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateNetworkPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateNetworkPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.CreateNetworkPolicyRequest";
                        };
    
                        return CreateNetworkPolicyRequest;
                    })();
    
                    v1.DeleteNetworkPolicyRequest = (function() {
    
                        /**
                         * Properties of a DeleteNetworkPolicyRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IDeleteNetworkPolicyRequest
                         * @property {string|null} [name] DeleteNetworkPolicyRequest name
                         * @property {string|null} [requestId] DeleteNetworkPolicyRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteNetworkPolicyRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a DeleteNetworkPolicyRequest.
                         * @implements IDeleteNetworkPolicyRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest=} [properties] Properties to set
                         */
                        function DeleteNetworkPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteNetworkPolicyRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
                         * @instance
                         */
                        DeleteNetworkPolicyRequest.prototype.name = "";
    
                        /**
                         * DeleteNetworkPolicyRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
                         * @instance
                         */
                        DeleteNetworkPolicyRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteNetworkPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest} DeleteNetworkPolicyRequest instance
                         */
                        DeleteNetworkPolicyRequest.create = function create(properties) {
                            return new DeleteNetworkPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteNetworkPolicyRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest} message DeleteNetworkPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteNetworkPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteNetworkPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest} message DeleteNetworkPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteNetworkPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteNetworkPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest} DeleteNetworkPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteNetworkPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteNetworkPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest} DeleteNetworkPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteNetworkPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteNetworkPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteNetworkPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteNetworkPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest} DeleteNetworkPolicyRequest
                         */
                        DeleteNetworkPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteNetworkPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest} message DeleteNetworkPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteNetworkPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteNetworkPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteNetworkPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteNetworkPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteNetworkPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.DeleteNetworkPolicyRequest";
                        };
    
                        return DeleteNetworkPolicyRequest;
                    })();
    
                    v1.CreateVmwareEngineNetworkRequest = (function() {
    
                        /**
                         * Properties of a CreateVmwareEngineNetworkRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface ICreateVmwareEngineNetworkRequest
                         * @property {string|null} [parent] CreateVmwareEngineNetworkRequest parent
                         * @property {string|null} [vmwareEngineNetworkId] CreateVmwareEngineNetworkRequest vmwareEngineNetworkId
                         * @property {google.cloud.vmwareengine.v1.IVmwareEngineNetwork|null} [vmwareEngineNetwork] CreateVmwareEngineNetworkRequest vmwareEngineNetwork
                         * @property {string|null} [requestId] CreateVmwareEngineNetworkRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateVmwareEngineNetworkRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a CreateVmwareEngineNetworkRequest.
                         * @implements ICreateVmwareEngineNetworkRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest=} [properties] Properties to set
                         */
                        function CreateVmwareEngineNetworkRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateVmwareEngineNetworkRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @instance
                         */
                        CreateVmwareEngineNetworkRequest.prototype.parent = "";
    
                        /**
                         * CreateVmwareEngineNetworkRequest vmwareEngineNetworkId.
                         * @member {string} vmwareEngineNetworkId
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @instance
                         */
                        CreateVmwareEngineNetworkRequest.prototype.vmwareEngineNetworkId = "";
    
                        /**
                         * CreateVmwareEngineNetworkRequest vmwareEngineNetwork.
                         * @member {google.cloud.vmwareengine.v1.IVmwareEngineNetwork|null|undefined} vmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @instance
                         */
                        CreateVmwareEngineNetworkRequest.prototype.vmwareEngineNetwork = null;
    
                        /**
                         * CreateVmwareEngineNetworkRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @instance
                         */
                        CreateVmwareEngineNetworkRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateVmwareEngineNetworkRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest} CreateVmwareEngineNetworkRequest instance
                         */
                        CreateVmwareEngineNetworkRequest.create = function create(properties) {
                            return new CreateVmwareEngineNetworkRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateVmwareEngineNetworkRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest} message CreateVmwareEngineNetworkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateVmwareEngineNetworkRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.vmwareEngineNetworkId != null && Object.hasOwnProperty.call(message, "vmwareEngineNetworkId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.vmwareEngineNetworkId);
                            if (message.vmwareEngineNetwork != null && Object.hasOwnProperty.call(message, "vmwareEngineNetwork"))
                                $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.encode(message.vmwareEngineNetwork, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateVmwareEngineNetworkRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest} message CreateVmwareEngineNetworkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateVmwareEngineNetworkRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateVmwareEngineNetworkRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest} CreateVmwareEngineNetworkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateVmwareEngineNetworkRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.vmwareEngineNetworkId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.vmwareEngineNetwork = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateVmwareEngineNetworkRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest} CreateVmwareEngineNetworkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateVmwareEngineNetworkRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateVmwareEngineNetworkRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateVmwareEngineNetworkRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.vmwareEngineNetworkId != null && message.hasOwnProperty("vmwareEngineNetworkId"))
                                if (!$util.isString(message.vmwareEngineNetworkId))
                                    return "vmwareEngineNetworkId: string expected";
                            if (message.vmwareEngineNetwork != null && message.hasOwnProperty("vmwareEngineNetwork")) {
                                var error = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.verify(message.vmwareEngineNetwork);
                                if (error)
                                    return "vmwareEngineNetwork." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateVmwareEngineNetworkRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest} CreateVmwareEngineNetworkRequest
                         */
                        CreateVmwareEngineNetworkRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.vmwareEngineNetworkId != null)
                                message.vmwareEngineNetworkId = String(object.vmwareEngineNetworkId);
                            if (object.vmwareEngineNetwork != null) {
                                if (typeof object.vmwareEngineNetwork !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest.vmwareEngineNetwork: object expected");
                                message.vmwareEngineNetwork = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.fromObject(object.vmwareEngineNetwork);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateVmwareEngineNetworkRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest} message CreateVmwareEngineNetworkRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateVmwareEngineNetworkRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.vmwareEngineNetworkId = "";
                                object.vmwareEngineNetwork = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.vmwareEngineNetworkId != null && message.hasOwnProperty("vmwareEngineNetworkId"))
                                object.vmwareEngineNetworkId = message.vmwareEngineNetworkId;
                            if (message.vmwareEngineNetwork != null && message.hasOwnProperty("vmwareEngineNetwork"))
                                object.vmwareEngineNetwork = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.toObject(message.vmwareEngineNetwork, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateVmwareEngineNetworkRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateVmwareEngineNetworkRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateVmwareEngineNetworkRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateVmwareEngineNetworkRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.CreateVmwareEngineNetworkRequest";
                        };
    
                        return CreateVmwareEngineNetworkRequest;
                    })();
    
                    v1.UpdateVmwareEngineNetworkRequest = (function() {
    
                        /**
                         * Properties of an UpdateVmwareEngineNetworkRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IUpdateVmwareEngineNetworkRequest
                         * @property {google.cloud.vmwareengine.v1.IVmwareEngineNetwork|null} [vmwareEngineNetwork] UpdateVmwareEngineNetworkRequest vmwareEngineNetwork
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateVmwareEngineNetworkRequest updateMask
                         * @property {string|null} [requestId] UpdateVmwareEngineNetworkRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateVmwareEngineNetworkRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents an UpdateVmwareEngineNetworkRequest.
                         * @implements IUpdateVmwareEngineNetworkRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest=} [properties] Properties to set
                         */
                        function UpdateVmwareEngineNetworkRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateVmwareEngineNetworkRequest vmwareEngineNetwork.
                         * @member {google.cloud.vmwareengine.v1.IVmwareEngineNetwork|null|undefined} vmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @instance
                         */
                        UpdateVmwareEngineNetworkRequest.prototype.vmwareEngineNetwork = null;
    
                        /**
                         * UpdateVmwareEngineNetworkRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @instance
                         */
                        UpdateVmwareEngineNetworkRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateVmwareEngineNetworkRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @instance
                         */
                        UpdateVmwareEngineNetworkRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateVmwareEngineNetworkRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest} UpdateVmwareEngineNetworkRequest instance
                         */
                        UpdateVmwareEngineNetworkRequest.create = function create(properties) {
                            return new UpdateVmwareEngineNetworkRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateVmwareEngineNetworkRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest} message UpdateVmwareEngineNetworkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateVmwareEngineNetworkRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.vmwareEngineNetwork != null && Object.hasOwnProperty.call(message, "vmwareEngineNetwork"))
                                $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.encode(message.vmwareEngineNetwork, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateVmwareEngineNetworkRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest} message UpdateVmwareEngineNetworkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateVmwareEngineNetworkRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateVmwareEngineNetworkRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest} UpdateVmwareEngineNetworkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateVmwareEngineNetworkRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.vmwareEngineNetwork = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateVmwareEngineNetworkRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest} UpdateVmwareEngineNetworkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateVmwareEngineNetworkRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateVmwareEngineNetworkRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateVmwareEngineNetworkRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.vmwareEngineNetwork != null && message.hasOwnProperty("vmwareEngineNetwork")) {
                                var error = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.verify(message.vmwareEngineNetwork);
                                if (error)
                                    return "vmwareEngineNetwork." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateVmwareEngineNetworkRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest} UpdateVmwareEngineNetworkRequest
                         */
                        UpdateVmwareEngineNetworkRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest();
                            if (object.vmwareEngineNetwork != null) {
                                if (typeof object.vmwareEngineNetwork !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest.vmwareEngineNetwork: object expected");
                                message.vmwareEngineNetwork = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.fromObject(object.vmwareEngineNetwork);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateVmwareEngineNetworkRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest} message UpdateVmwareEngineNetworkRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateVmwareEngineNetworkRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.vmwareEngineNetwork = null;
                                object.updateMask = null;
                                object.requestId = "";
                            }
                            if (message.vmwareEngineNetwork != null && message.hasOwnProperty("vmwareEngineNetwork"))
                                object.vmwareEngineNetwork = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.toObject(message.vmwareEngineNetwork, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateVmwareEngineNetworkRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateVmwareEngineNetworkRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateVmwareEngineNetworkRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateVmwareEngineNetworkRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.UpdateVmwareEngineNetworkRequest";
                        };
    
                        return UpdateVmwareEngineNetworkRequest;
                    })();
    
                    v1.DeleteVmwareEngineNetworkRequest = (function() {
    
                        /**
                         * Properties of a DeleteVmwareEngineNetworkRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IDeleteVmwareEngineNetworkRequest
                         * @property {string|null} [name] DeleteVmwareEngineNetworkRequest name
                         * @property {string|null} [requestId] DeleteVmwareEngineNetworkRequest requestId
                         * @property {string|null} [etag] DeleteVmwareEngineNetworkRequest etag
                         */
    
                        /**
                         * Constructs a new DeleteVmwareEngineNetworkRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a DeleteVmwareEngineNetworkRequest.
                         * @implements IDeleteVmwareEngineNetworkRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest=} [properties] Properties to set
                         */
                        function DeleteVmwareEngineNetworkRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteVmwareEngineNetworkRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @instance
                         */
                        DeleteVmwareEngineNetworkRequest.prototype.name = "";
    
                        /**
                         * DeleteVmwareEngineNetworkRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @instance
                         */
                        DeleteVmwareEngineNetworkRequest.prototype.requestId = "";
    
                        /**
                         * DeleteVmwareEngineNetworkRequest etag.
                         * @member {string} etag
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @instance
                         */
                        DeleteVmwareEngineNetworkRequest.prototype.etag = "";
    
                        /**
                         * Creates a new DeleteVmwareEngineNetworkRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest} DeleteVmwareEngineNetworkRequest instance
                         */
                        DeleteVmwareEngineNetworkRequest.create = function create(properties) {
                            return new DeleteVmwareEngineNetworkRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteVmwareEngineNetworkRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest} message DeleteVmwareEngineNetworkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteVmwareEngineNetworkRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteVmwareEngineNetworkRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest} message DeleteVmwareEngineNetworkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteVmwareEngineNetworkRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteVmwareEngineNetworkRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest} DeleteVmwareEngineNetworkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteVmwareEngineNetworkRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteVmwareEngineNetworkRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest} DeleteVmwareEngineNetworkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteVmwareEngineNetworkRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteVmwareEngineNetworkRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteVmwareEngineNetworkRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteVmwareEngineNetworkRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest} DeleteVmwareEngineNetworkRequest
                         */
                        DeleteVmwareEngineNetworkRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteVmwareEngineNetworkRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest} message DeleteVmwareEngineNetworkRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteVmwareEngineNetworkRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteVmwareEngineNetworkRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteVmwareEngineNetworkRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteVmwareEngineNetworkRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteVmwareEngineNetworkRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.DeleteVmwareEngineNetworkRequest";
                        };
    
                        return DeleteVmwareEngineNetworkRequest;
                    })();
    
                    v1.GetVmwareEngineNetworkRequest = (function() {
    
                        /**
                         * Properties of a GetVmwareEngineNetworkRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IGetVmwareEngineNetworkRequest
                         * @property {string|null} [name] GetVmwareEngineNetworkRequest name
                         */
    
                        /**
                         * Constructs a new GetVmwareEngineNetworkRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a GetVmwareEngineNetworkRequest.
                         * @implements IGetVmwareEngineNetworkRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest=} [properties] Properties to set
                         */
                        function GetVmwareEngineNetworkRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetVmwareEngineNetworkRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest
                         * @instance
                         */
                        GetVmwareEngineNetworkRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetVmwareEngineNetworkRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest} GetVmwareEngineNetworkRequest instance
                         */
                        GetVmwareEngineNetworkRequest.create = function create(properties) {
                            return new GetVmwareEngineNetworkRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetVmwareEngineNetworkRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest} message GetVmwareEngineNetworkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetVmwareEngineNetworkRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetVmwareEngineNetworkRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest} message GetVmwareEngineNetworkRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetVmwareEngineNetworkRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetVmwareEngineNetworkRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest} GetVmwareEngineNetworkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetVmwareEngineNetworkRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetVmwareEngineNetworkRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest} GetVmwareEngineNetworkRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetVmwareEngineNetworkRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetVmwareEngineNetworkRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetVmwareEngineNetworkRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetVmwareEngineNetworkRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest} GetVmwareEngineNetworkRequest
                         */
                        GetVmwareEngineNetworkRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetVmwareEngineNetworkRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest} message GetVmwareEngineNetworkRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetVmwareEngineNetworkRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetVmwareEngineNetworkRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetVmwareEngineNetworkRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetVmwareEngineNetworkRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetVmwareEngineNetworkRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.GetVmwareEngineNetworkRequest";
                        };
    
                        return GetVmwareEngineNetworkRequest;
                    })();
    
                    v1.ListVmwareEngineNetworksRequest = (function() {
    
                        /**
                         * Properties of a ListVmwareEngineNetworksRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListVmwareEngineNetworksRequest
                         * @property {string|null} [parent] ListVmwareEngineNetworksRequest parent
                         * @property {number|null} [pageSize] ListVmwareEngineNetworksRequest pageSize
                         * @property {string|null} [pageToken] ListVmwareEngineNetworksRequest pageToken
                         * @property {string|null} [filter] ListVmwareEngineNetworksRequest filter
                         * @property {string|null} [orderBy] ListVmwareEngineNetworksRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListVmwareEngineNetworksRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListVmwareEngineNetworksRequest.
                         * @implements IListVmwareEngineNetworksRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest=} [properties] Properties to set
                         */
                        function ListVmwareEngineNetworksRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListVmwareEngineNetworksRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @instance
                         */
                        ListVmwareEngineNetworksRequest.prototype.parent = "";
    
                        /**
                         * ListVmwareEngineNetworksRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @instance
                         */
                        ListVmwareEngineNetworksRequest.prototype.pageSize = 0;
    
                        /**
                         * ListVmwareEngineNetworksRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @instance
                         */
                        ListVmwareEngineNetworksRequest.prototype.pageToken = "";
    
                        /**
                         * ListVmwareEngineNetworksRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @instance
                         */
                        ListVmwareEngineNetworksRequest.prototype.filter = "";
    
                        /**
                         * ListVmwareEngineNetworksRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @instance
                         */
                        ListVmwareEngineNetworksRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListVmwareEngineNetworksRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest} ListVmwareEngineNetworksRequest instance
                         */
                        ListVmwareEngineNetworksRequest.create = function create(properties) {
                            return new ListVmwareEngineNetworksRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListVmwareEngineNetworksRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest} message ListVmwareEngineNetworksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListVmwareEngineNetworksRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListVmwareEngineNetworksRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest} message ListVmwareEngineNetworksRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListVmwareEngineNetworksRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListVmwareEngineNetworksRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest} ListVmwareEngineNetworksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListVmwareEngineNetworksRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListVmwareEngineNetworksRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest} ListVmwareEngineNetworksRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListVmwareEngineNetworksRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListVmwareEngineNetworksRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListVmwareEngineNetworksRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListVmwareEngineNetworksRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest} ListVmwareEngineNetworksRequest
                         */
                        ListVmwareEngineNetworksRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListVmwareEngineNetworksRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest} message ListVmwareEngineNetworksRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListVmwareEngineNetworksRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListVmwareEngineNetworksRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListVmwareEngineNetworksRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListVmwareEngineNetworksRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListVmwareEngineNetworksRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListVmwareEngineNetworksRequest";
                        };
    
                        return ListVmwareEngineNetworksRequest;
                    })();
    
                    v1.ListVmwareEngineNetworksResponse = (function() {
    
                        /**
                         * Properties of a ListVmwareEngineNetworksResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListVmwareEngineNetworksResponse
                         * @property {Array.<google.cloud.vmwareengine.v1.IVmwareEngineNetwork>|null} [vmwareEngineNetworks] ListVmwareEngineNetworksResponse vmwareEngineNetworks
                         * @property {string|null} [nextPageToken] ListVmwareEngineNetworksResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListVmwareEngineNetworksResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListVmwareEngineNetworksResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListVmwareEngineNetworksResponse.
                         * @implements IListVmwareEngineNetworksResponse
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse=} [properties] Properties to set
                         */
                        function ListVmwareEngineNetworksResponse(properties) {
                            this.vmwareEngineNetworks = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListVmwareEngineNetworksResponse vmwareEngineNetworks.
                         * @member {Array.<google.cloud.vmwareengine.v1.IVmwareEngineNetwork>} vmwareEngineNetworks
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @instance
                         */
                        ListVmwareEngineNetworksResponse.prototype.vmwareEngineNetworks = $util.emptyArray;
    
                        /**
                         * ListVmwareEngineNetworksResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @instance
                         */
                        ListVmwareEngineNetworksResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListVmwareEngineNetworksResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @instance
                         */
                        ListVmwareEngineNetworksResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListVmwareEngineNetworksResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse} ListVmwareEngineNetworksResponse instance
                         */
                        ListVmwareEngineNetworksResponse.create = function create(properties) {
                            return new ListVmwareEngineNetworksResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListVmwareEngineNetworksResponse message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse} message ListVmwareEngineNetworksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListVmwareEngineNetworksResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.vmwareEngineNetworks != null && message.vmwareEngineNetworks.length)
                                for (var i = 0; i < message.vmwareEngineNetworks.length; ++i)
                                    $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.encode(message.vmwareEngineNetworks[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListVmwareEngineNetworksResponse message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse} message ListVmwareEngineNetworksResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListVmwareEngineNetworksResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListVmwareEngineNetworksResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse} ListVmwareEngineNetworksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListVmwareEngineNetworksResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.vmwareEngineNetworks && message.vmwareEngineNetworks.length))
                                            message.vmwareEngineNetworks = [];
                                        message.vmwareEngineNetworks.push($root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListVmwareEngineNetworksResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse} ListVmwareEngineNetworksResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListVmwareEngineNetworksResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListVmwareEngineNetworksResponse message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListVmwareEngineNetworksResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.vmwareEngineNetworks != null && message.hasOwnProperty("vmwareEngineNetworks")) {
                                if (!Array.isArray(message.vmwareEngineNetworks))
                                    return "vmwareEngineNetworks: array expected";
                                for (var i = 0; i < message.vmwareEngineNetworks.length; ++i) {
                                    var error = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.verify(message.vmwareEngineNetworks[i]);
                                    if (error)
                                        return "vmwareEngineNetworks." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListVmwareEngineNetworksResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse} ListVmwareEngineNetworksResponse
                         */
                        ListVmwareEngineNetworksResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse();
                            if (object.vmwareEngineNetworks) {
                                if (!Array.isArray(object.vmwareEngineNetworks))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse.vmwareEngineNetworks: array expected");
                                message.vmwareEngineNetworks = [];
                                for (var i = 0; i < object.vmwareEngineNetworks.length; ++i) {
                                    if (typeof object.vmwareEngineNetworks[i] !== "object")
                                        throw TypeError(".google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse.vmwareEngineNetworks: object expected");
                                    message.vmwareEngineNetworks[i] = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.fromObject(object.vmwareEngineNetworks[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListVmwareEngineNetworksResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse} message ListVmwareEngineNetworksResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListVmwareEngineNetworksResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.vmwareEngineNetworks = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.vmwareEngineNetworks && message.vmwareEngineNetworks.length) {
                                object.vmwareEngineNetworks = [];
                                for (var j = 0; j < message.vmwareEngineNetworks.length; ++j)
                                    object.vmwareEngineNetworks[j] = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.toObject(message.vmwareEngineNetworks[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListVmwareEngineNetworksResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListVmwareEngineNetworksResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListVmwareEngineNetworksResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListVmwareEngineNetworksResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListVmwareEngineNetworksResponse";
                        };
    
                        return ListVmwareEngineNetworksResponse;
                    })();
    
                    v1.CreatePrivateConnectionRequest = (function() {
    
                        /**
                         * Properties of a CreatePrivateConnectionRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface ICreatePrivateConnectionRequest
                         * @property {string|null} [parent] CreatePrivateConnectionRequest parent
                         * @property {string|null} [privateConnectionId] CreatePrivateConnectionRequest privateConnectionId
                         * @property {google.cloud.vmwareengine.v1.IPrivateConnection|null} [privateConnection] CreatePrivateConnectionRequest privateConnection
                         * @property {string|null} [requestId] CreatePrivateConnectionRequest requestId
                         */
    
                        /**
                         * Constructs a new CreatePrivateConnectionRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a CreatePrivateConnectionRequest.
                         * @implements ICreatePrivateConnectionRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest=} [properties] Properties to set
                         */
                        function CreatePrivateConnectionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreatePrivateConnectionRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @instance
                         */
                        CreatePrivateConnectionRequest.prototype.parent = "";
    
                        /**
                         * CreatePrivateConnectionRequest privateConnectionId.
                         * @member {string} privateConnectionId
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @instance
                         */
                        CreatePrivateConnectionRequest.prototype.privateConnectionId = "";
    
                        /**
                         * CreatePrivateConnectionRequest privateConnection.
                         * @member {google.cloud.vmwareengine.v1.IPrivateConnection|null|undefined} privateConnection
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @instance
                         */
                        CreatePrivateConnectionRequest.prototype.privateConnection = null;
    
                        /**
                         * CreatePrivateConnectionRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @instance
                         */
                        CreatePrivateConnectionRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreatePrivateConnectionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest} CreatePrivateConnectionRequest instance
                         */
                        CreatePrivateConnectionRequest.create = function create(properties) {
                            return new CreatePrivateConnectionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreatePrivateConnectionRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest} message CreatePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreatePrivateConnectionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.privateConnectionId != null && Object.hasOwnProperty.call(message, "privateConnectionId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.privateConnectionId);
                            if (message.privateConnection != null && Object.hasOwnProperty.call(message, "privateConnection"))
                                $root.google.cloud.vmwareengine.v1.PrivateConnection.encode(message.privateConnection, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreatePrivateConnectionRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest} message CreatePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreatePrivateConnectionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreatePrivateConnectionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest} CreatePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreatePrivateConnectionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.privateConnectionId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.privateConnection = $root.google.cloud.vmwareengine.v1.PrivateConnection.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreatePrivateConnectionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest} CreatePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreatePrivateConnectionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreatePrivateConnectionRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreatePrivateConnectionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.privateConnectionId != null && message.hasOwnProperty("privateConnectionId"))
                                if (!$util.isString(message.privateConnectionId))
                                    return "privateConnectionId: string expected";
                            if (message.privateConnection != null && message.hasOwnProperty("privateConnection")) {
                                var error = $root.google.cloud.vmwareengine.v1.PrivateConnection.verify(message.privateConnection);
                                if (error)
                                    return "privateConnection." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreatePrivateConnectionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest} CreatePrivateConnectionRequest
                         */
                        CreatePrivateConnectionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.privateConnectionId != null)
                                message.privateConnectionId = String(object.privateConnectionId);
                            if (object.privateConnection != null) {
                                if (typeof object.privateConnection !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest.privateConnection: object expected");
                                message.privateConnection = $root.google.cloud.vmwareengine.v1.PrivateConnection.fromObject(object.privateConnection);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreatePrivateConnectionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest} message CreatePrivateConnectionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreatePrivateConnectionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.privateConnectionId = "";
                                object.privateConnection = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.privateConnectionId != null && message.hasOwnProperty("privateConnectionId"))
                                object.privateConnectionId = message.privateConnectionId;
                            if (message.privateConnection != null && message.hasOwnProperty("privateConnection"))
                                object.privateConnection = $root.google.cloud.vmwareengine.v1.PrivateConnection.toObject(message.privateConnection, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreatePrivateConnectionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreatePrivateConnectionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreatePrivateConnectionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreatePrivateConnectionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.CreatePrivateConnectionRequest";
                        };
    
                        return CreatePrivateConnectionRequest;
                    })();
    
                    v1.GetPrivateConnectionRequest = (function() {
    
                        /**
                         * Properties of a GetPrivateConnectionRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IGetPrivateConnectionRequest
                         * @property {string|null} [name] GetPrivateConnectionRequest name
                         */
    
                        /**
                         * Constructs a new GetPrivateConnectionRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a GetPrivateConnectionRequest.
                         * @implements IGetPrivateConnectionRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest=} [properties] Properties to set
                         */
                        function GetPrivateConnectionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetPrivateConnectionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateConnectionRequest
                         * @instance
                         */
                        GetPrivateConnectionRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetPrivateConnectionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.GetPrivateConnectionRequest} GetPrivateConnectionRequest instance
                         */
                        GetPrivateConnectionRequest.create = function create(properties) {
                            return new GetPrivateConnectionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetPrivateConnectionRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.GetPrivateConnectionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest} message GetPrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPrivateConnectionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetPrivateConnectionRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.GetPrivateConnectionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest} message GetPrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetPrivateConnectionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetPrivateConnectionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.GetPrivateConnectionRequest} GetPrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPrivateConnectionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.GetPrivateConnectionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetPrivateConnectionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.GetPrivateConnectionRequest} GetPrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetPrivateConnectionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetPrivateConnectionRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetPrivateConnectionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetPrivateConnectionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.GetPrivateConnectionRequest} GetPrivateConnectionRequest
                         */
                        GetPrivateConnectionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.GetPrivateConnectionRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.GetPrivateConnectionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetPrivateConnectionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.GetPrivateConnectionRequest} message GetPrivateConnectionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetPrivateConnectionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetPrivateConnectionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateConnectionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetPrivateConnectionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetPrivateConnectionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.GetPrivateConnectionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetPrivateConnectionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.GetPrivateConnectionRequest";
                        };
    
                        return GetPrivateConnectionRequest;
                    })();
    
                    v1.ListPrivateConnectionsRequest = (function() {
    
                        /**
                         * Properties of a ListPrivateConnectionsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListPrivateConnectionsRequest
                         * @property {string|null} [parent] ListPrivateConnectionsRequest parent
                         * @property {number|null} [pageSize] ListPrivateConnectionsRequest pageSize
                         * @property {string|null} [pageToken] ListPrivateConnectionsRequest pageToken
                         * @property {string|null} [filter] ListPrivateConnectionsRequest filter
                         * @property {string|null} [orderBy] ListPrivateConnectionsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListPrivateConnectionsRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListPrivateConnectionsRequest.
                         * @implements IListPrivateConnectionsRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest=} [properties] Properties to set
                         */
                        function ListPrivateConnectionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPrivateConnectionsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.parent = "";
    
                        /**
                         * ListPrivateConnectionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListPrivateConnectionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.pageToken = "";
    
                        /**
                         * ListPrivateConnectionsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.filter = "";
    
                        /**
                         * ListPrivateConnectionsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @instance
                         */
                        ListPrivateConnectionsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListPrivateConnectionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest} ListPrivateConnectionsRequest instance
                         */
                        ListPrivateConnectionsRequest.create = function create(properties) {
                            return new ListPrivateConnectionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionsRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest} message ListPrivateConnectionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionsRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest} message ListPrivateConnectionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest} ListPrivateConnectionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest} ListPrivateConnectionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPrivateConnectionsRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPrivateConnectionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPrivateConnectionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest} ListPrivateConnectionsRequest
                         */
                        ListPrivateConnectionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPrivateConnectionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest} message ListPrivateConnectionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPrivateConnectionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListPrivateConnectionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPrivateConnectionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPrivateConnectionsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPrivateConnectionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListPrivateConnectionsRequest";
                        };
    
                        return ListPrivateConnectionsRequest;
                    })();
    
                    v1.ListPrivateConnectionsResponse = (function() {
    
                        /**
                         * Properties of a ListPrivateConnectionsResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListPrivateConnectionsResponse
                         * @property {Array.<google.cloud.vmwareengine.v1.IPrivateConnection>|null} [privateConnections] ListPrivateConnectionsResponse privateConnections
                         * @property {string|null} [nextPageToken] ListPrivateConnectionsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListPrivateConnectionsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListPrivateConnectionsResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListPrivateConnectionsResponse.
                         * @implements IListPrivateConnectionsResponse
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse=} [properties] Properties to set
                         */
                        function ListPrivateConnectionsResponse(properties) {
                            this.privateConnections = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPrivateConnectionsResponse privateConnections.
                         * @member {Array.<google.cloud.vmwareengine.v1.IPrivateConnection>} privateConnections
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @instance
                         */
                        ListPrivateConnectionsResponse.prototype.privateConnections = $util.emptyArray;
    
                        /**
                         * ListPrivateConnectionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @instance
                         */
                        ListPrivateConnectionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListPrivateConnectionsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @instance
                         */
                        ListPrivateConnectionsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListPrivateConnectionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse} ListPrivateConnectionsResponse instance
                         */
                        ListPrivateConnectionsResponse.create = function create(properties) {
                            return new ListPrivateConnectionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionsResponse message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse} message ListPrivateConnectionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateConnections != null && message.privateConnections.length)
                                for (var i = 0; i < message.privateConnections.length; ++i)
                                    $root.google.cloud.vmwareengine.v1.PrivateConnection.encode(message.privateConnections[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionsResponse message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse} message ListPrivateConnectionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse} ListPrivateConnectionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.privateConnections && message.privateConnections.length))
                                            message.privateConnections = [];
                                        message.privateConnections.push($root.google.cloud.vmwareengine.v1.PrivateConnection.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse} ListPrivateConnectionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPrivateConnectionsResponse message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPrivateConnectionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateConnections != null && message.hasOwnProperty("privateConnections")) {
                                if (!Array.isArray(message.privateConnections))
                                    return "privateConnections: array expected";
                                for (var i = 0; i < message.privateConnections.length; ++i) {
                                    var error = $root.google.cloud.vmwareengine.v1.PrivateConnection.verify(message.privateConnections[i]);
                                    if (error)
                                        return "privateConnections." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListPrivateConnectionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse} ListPrivateConnectionsResponse
                         */
                        ListPrivateConnectionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse();
                            if (object.privateConnections) {
                                if (!Array.isArray(object.privateConnections))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse.privateConnections: array expected");
                                message.privateConnections = [];
                                for (var i = 0; i < object.privateConnections.length; ++i) {
                                    if (typeof object.privateConnections[i] !== "object")
                                        throw TypeError(".google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse.privateConnections: object expected");
                                    message.privateConnections[i] = $root.google.cloud.vmwareengine.v1.PrivateConnection.fromObject(object.privateConnections[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPrivateConnectionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse} message ListPrivateConnectionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPrivateConnectionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.privateConnections = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.privateConnections && message.privateConnections.length) {
                                object.privateConnections = [];
                                for (var j = 0; j < message.privateConnections.length; ++j)
                                    object.privateConnections[j] = $root.google.cloud.vmwareengine.v1.PrivateConnection.toObject(message.privateConnections[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListPrivateConnectionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPrivateConnectionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPrivateConnectionsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPrivateConnectionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListPrivateConnectionsResponse";
                        };
    
                        return ListPrivateConnectionsResponse;
                    })();
    
                    v1.UpdatePrivateConnectionRequest = (function() {
    
                        /**
                         * Properties of an UpdatePrivateConnectionRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IUpdatePrivateConnectionRequest
                         * @property {google.cloud.vmwareengine.v1.IPrivateConnection|null} [privateConnection] UpdatePrivateConnectionRequest privateConnection
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdatePrivateConnectionRequest updateMask
                         * @property {string|null} [requestId] UpdatePrivateConnectionRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdatePrivateConnectionRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents an UpdatePrivateConnectionRequest.
                         * @implements IUpdatePrivateConnectionRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest=} [properties] Properties to set
                         */
                        function UpdatePrivateConnectionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdatePrivateConnectionRequest privateConnection.
                         * @member {google.cloud.vmwareengine.v1.IPrivateConnection|null|undefined} privateConnection
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @instance
                         */
                        UpdatePrivateConnectionRequest.prototype.privateConnection = null;
    
                        /**
                         * UpdatePrivateConnectionRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @instance
                         */
                        UpdatePrivateConnectionRequest.prototype.updateMask = null;
    
                        /**
                         * UpdatePrivateConnectionRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @instance
                         */
                        UpdatePrivateConnectionRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdatePrivateConnectionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest} UpdatePrivateConnectionRequest instance
                         */
                        UpdatePrivateConnectionRequest.create = function create(properties) {
                            return new UpdatePrivateConnectionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdatePrivateConnectionRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest} message UpdatePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdatePrivateConnectionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.privateConnection != null && Object.hasOwnProperty.call(message, "privateConnection"))
                                $root.google.cloud.vmwareengine.v1.PrivateConnection.encode(message.privateConnection, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdatePrivateConnectionRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest} message UpdatePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdatePrivateConnectionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdatePrivateConnectionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest} UpdatePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdatePrivateConnectionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.privateConnection = $root.google.cloud.vmwareengine.v1.PrivateConnection.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdatePrivateConnectionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest} UpdatePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdatePrivateConnectionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdatePrivateConnectionRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdatePrivateConnectionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.privateConnection != null && message.hasOwnProperty("privateConnection")) {
                                var error = $root.google.cloud.vmwareengine.v1.PrivateConnection.verify(message.privateConnection);
                                if (error)
                                    return "privateConnection." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdatePrivateConnectionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest} UpdatePrivateConnectionRequest
                         */
                        UpdatePrivateConnectionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest();
                            if (object.privateConnection != null) {
                                if (typeof object.privateConnection !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest.privateConnection: object expected");
                                message.privateConnection = $root.google.cloud.vmwareengine.v1.PrivateConnection.fromObject(object.privateConnection);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdatePrivateConnectionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest} message UpdatePrivateConnectionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdatePrivateConnectionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.privateConnection = null;
                                object.updateMask = null;
                                object.requestId = "";
                            }
                            if (message.privateConnection != null && message.hasOwnProperty("privateConnection"))
                                object.privateConnection = $root.google.cloud.vmwareengine.v1.PrivateConnection.toObject(message.privateConnection, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdatePrivateConnectionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdatePrivateConnectionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdatePrivateConnectionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdatePrivateConnectionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.UpdatePrivateConnectionRequest";
                        };
    
                        return UpdatePrivateConnectionRequest;
                    })();
    
                    v1.DeletePrivateConnectionRequest = (function() {
    
                        /**
                         * Properties of a DeletePrivateConnectionRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IDeletePrivateConnectionRequest
                         * @property {string|null} [name] DeletePrivateConnectionRequest name
                         * @property {string|null} [requestId] DeletePrivateConnectionRequest requestId
                         */
    
                        /**
                         * Constructs a new DeletePrivateConnectionRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a DeletePrivateConnectionRequest.
                         * @implements IDeletePrivateConnectionRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest=} [properties] Properties to set
                         */
                        function DeletePrivateConnectionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeletePrivateConnectionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
                         * @instance
                         */
                        DeletePrivateConnectionRequest.prototype.name = "";
    
                        /**
                         * DeletePrivateConnectionRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
                         * @instance
                         */
                        DeletePrivateConnectionRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeletePrivateConnectionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest} DeletePrivateConnectionRequest instance
                         */
                        DeletePrivateConnectionRequest.create = function create(properties) {
                            return new DeletePrivateConnectionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeletePrivateConnectionRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest} message DeletePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeletePrivateConnectionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeletePrivateConnectionRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest} message DeletePrivateConnectionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeletePrivateConnectionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeletePrivateConnectionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest} DeletePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeletePrivateConnectionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeletePrivateConnectionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest} DeletePrivateConnectionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeletePrivateConnectionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeletePrivateConnectionRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeletePrivateConnectionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeletePrivateConnectionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest} DeletePrivateConnectionRequest
                         */
                        DeletePrivateConnectionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeletePrivateConnectionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest} message DeletePrivateConnectionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeletePrivateConnectionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeletePrivateConnectionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeletePrivateConnectionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeletePrivateConnectionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeletePrivateConnectionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.DeletePrivateConnectionRequest";
                        };
    
                        return DeletePrivateConnectionRequest;
                    })();
    
                    v1.ListPrivateConnectionPeeringRoutesRequest = (function() {
    
                        /**
                         * Properties of a ListPrivateConnectionPeeringRoutesRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListPrivateConnectionPeeringRoutesRequest
                         * @property {string|null} [parent] ListPrivateConnectionPeeringRoutesRequest parent
                         * @property {number|null} [pageSize] ListPrivateConnectionPeeringRoutesRequest pageSize
                         * @property {string|null} [pageToken] ListPrivateConnectionPeeringRoutesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListPrivateConnectionPeeringRoutesRequest.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListPrivateConnectionPeeringRoutesRequest.
                         * @implements IListPrivateConnectionPeeringRoutesRequest
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest=} [properties] Properties to set
                         */
                        function ListPrivateConnectionPeeringRoutesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPrivateConnectionPeeringRoutesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @instance
                         */
                        ListPrivateConnectionPeeringRoutesRequest.prototype.parent = "";
    
                        /**
                         * ListPrivateConnectionPeeringRoutesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @instance
                         */
                        ListPrivateConnectionPeeringRoutesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListPrivateConnectionPeeringRoutesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @instance
                         */
                        ListPrivateConnectionPeeringRoutesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListPrivateConnectionPeeringRoutesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest} ListPrivateConnectionPeeringRoutesRequest instance
                         */
                        ListPrivateConnectionPeeringRoutesRequest.create = function create(properties) {
                            return new ListPrivateConnectionPeeringRoutesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionPeeringRoutesRequest message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest} message ListPrivateConnectionPeeringRoutesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionPeeringRoutesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionPeeringRoutesRequest message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest} message ListPrivateConnectionPeeringRoutesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionPeeringRoutesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionPeeringRoutesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest} ListPrivateConnectionPeeringRoutesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionPeeringRoutesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionPeeringRoutesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest} ListPrivateConnectionPeeringRoutesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionPeeringRoutesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPrivateConnectionPeeringRoutesRequest message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPrivateConnectionPeeringRoutesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPrivateConnectionPeeringRoutesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest} ListPrivateConnectionPeeringRoutesRequest
                         */
                        ListPrivateConnectionPeeringRoutesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPrivateConnectionPeeringRoutesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest} message ListPrivateConnectionPeeringRoutesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPrivateConnectionPeeringRoutesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListPrivateConnectionPeeringRoutesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPrivateConnectionPeeringRoutesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPrivateConnectionPeeringRoutesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPrivateConnectionPeeringRoutesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesRequest";
                        };
    
                        return ListPrivateConnectionPeeringRoutesRequest;
                    })();
    
                    v1.ListPrivateConnectionPeeringRoutesResponse = (function() {
    
                        /**
                         * Properties of a ListPrivateConnectionPeeringRoutesResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IListPrivateConnectionPeeringRoutesResponse
                         * @property {Array.<google.cloud.vmwareengine.v1.IPeeringRoute>|null} [peeringRoutes] ListPrivateConnectionPeeringRoutesResponse peeringRoutes
                         * @property {string|null} [nextPageToken] ListPrivateConnectionPeeringRoutesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListPrivateConnectionPeeringRoutesResponse.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a ListPrivateConnectionPeeringRoutesResponse.
                         * @implements IListPrivateConnectionPeeringRoutesResponse
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse=} [properties] Properties to set
                         */
                        function ListPrivateConnectionPeeringRoutesResponse(properties) {
                            this.peeringRoutes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListPrivateConnectionPeeringRoutesResponse peeringRoutes.
                         * @member {Array.<google.cloud.vmwareengine.v1.IPeeringRoute>} peeringRoutes
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
                         * @instance
                         */
                        ListPrivateConnectionPeeringRoutesResponse.prototype.peeringRoutes = $util.emptyArray;
    
                        /**
                         * ListPrivateConnectionPeeringRoutesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
                         * @instance
                         */
                        ListPrivateConnectionPeeringRoutesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListPrivateConnectionPeeringRoutesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse} ListPrivateConnectionPeeringRoutesResponse instance
                         */
                        ListPrivateConnectionPeeringRoutesResponse.create = function create(properties) {
                            return new ListPrivateConnectionPeeringRoutesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionPeeringRoutesResponse message. Does not implicitly {@link google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse} message ListPrivateConnectionPeeringRoutesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionPeeringRoutesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.peeringRoutes != null && message.peeringRoutes.length)
                                for (var i = 0; i < message.peeringRoutes.length; ++i)
                                    $root.google.cloud.vmwareengine.v1.PeeringRoute.encode(message.peeringRoutes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListPrivateConnectionPeeringRoutesResponse message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse} message ListPrivateConnectionPeeringRoutesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListPrivateConnectionPeeringRoutesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionPeeringRoutesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse} ListPrivateConnectionPeeringRoutesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionPeeringRoutesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.peeringRoutes && message.peeringRoutes.length))
                                            message.peeringRoutes = [];
                                        message.peeringRoutes.push($root.google.cloud.vmwareengine.v1.PeeringRoute.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListPrivateConnectionPeeringRoutesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse} ListPrivateConnectionPeeringRoutesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListPrivateConnectionPeeringRoutesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListPrivateConnectionPeeringRoutesResponse message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListPrivateConnectionPeeringRoutesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.peeringRoutes != null && message.hasOwnProperty("peeringRoutes")) {
                                if (!Array.isArray(message.peeringRoutes))
                                    return "peeringRoutes: array expected";
                                for (var i = 0; i < message.peeringRoutes.length; ++i) {
                                    var error = $root.google.cloud.vmwareengine.v1.PeeringRoute.verify(message.peeringRoutes[i]);
                                    if (error)
                                        return "peeringRoutes." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListPrivateConnectionPeeringRoutesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse} ListPrivateConnectionPeeringRoutesResponse
                         */
                        ListPrivateConnectionPeeringRoutesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse();
                            if (object.peeringRoutes) {
                                if (!Array.isArray(object.peeringRoutes))
                                    throw TypeError(".google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse.peeringRoutes: array expected");
                                message.peeringRoutes = [];
                                for (var i = 0; i < object.peeringRoutes.length; ++i) {
                                    if (typeof object.peeringRoutes[i] !== "object")
                                        throw TypeError(".google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse.peeringRoutes: object expected");
                                    message.peeringRoutes[i] = $root.google.cloud.vmwareengine.v1.PeeringRoute.fromObject(object.peeringRoutes[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListPrivateConnectionPeeringRoutesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse} message ListPrivateConnectionPeeringRoutesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListPrivateConnectionPeeringRoutesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.peeringRoutes = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.peeringRoutes && message.peeringRoutes.length) {
                                object.peeringRoutes = [];
                                for (var j = 0; j < message.peeringRoutes.length; ++j)
                                    object.peeringRoutes[j] = $root.google.cloud.vmwareengine.v1.PeeringRoute.toObject(message.peeringRoutes[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListPrivateConnectionPeeringRoutesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListPrivateConnectionPeeringRoutesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListPrivateConnectionPeeringRoutesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListPrivateConnectionPeeringRoutesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.ListPrivateConnectionPeeringRoutesResponse";
                        };
    
                        return ListPrivateConnectionPeeringRoutesResponse;
                    })();
    
                    v1.NetworkConfig = (function() {
    
                        /**
                         * Properties of a NetworkConfig.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface INetworkConfig
                         * @property {string|null} [managementCidr] NetworkConfig managementCidr
                         * @property {string|null} [vmwareEngineNetwork] NetworkConfig vmwareEngineNetwork
                         * @property {string|null} [vmwareEngineNetworkCanonical] NetworkConfig vmwareEngineNetworkCanonical
                         * @property {number|null} [managementIpAddressLayoutVersion] NetworkConfig managementIpAddressLayoutVersion
                         */
    
                        /**
                         * Constructs a new NetworkConfig.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a NetworkConfig.
                         * @implements INetworkConfig
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.INetworkConfig=} [properties] Properties to set
                         */
                        function NetworkConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NetworkConfig managementCidr.
                         * @member {string} managementCidr
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @instance
                         */
                        NetworkConfig.prototype.managementCidr = "";
    
                        /**
                         * NetworkConfig vmwareEngineNetwork.
                         * @member {string} vmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @instance
                         */
                        NetworkConfig.prototype.vmwareEngineNetwork = "";
    
                        /**
                         * NetworkConfig vmwareEngineNetworkCanonical.
                         * @member {string} vmwareEngineNetworkCanonical
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @instance
                         */
                        NetworkConfig.prototype.vmwareEngineNetworkCanonical = "";
    
                        /**
                         * NetworkConfig managementIpAddressLayoutVersion.
                         * @member {number} managementIpAddressLayoutVersion
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @instance
                         */
                        NetworkConfig.prototype.managementIpAddressLayoutVersion = 0;
    
                        /**
                         * Creates a new NetworkConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INetworkConfig=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.NetworkConfig} NetworkConfig instance
                         */
                        NetworkConfig.create = function create(properties) {
                            return new NetworkConfig(properties);
                        };
    
                        /**
                         * Encodes the specified NetworkConfig message. Does not implicitly {@link google.cloud.vmwareengine.v1.NetworkConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INetworkConfig} message NetworkConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.managementCidr != null && Object.hasOwnProperty.call(message, "managementCidr"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.managementCidr);
                            if (message.vmwareEngineNetwork != null && Object.hasOwnProperty.call(message, "vmwareEngineNetwork"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.vmwareEngineNetwork);
                            if (message.vmwareEngineNetworkCanonical != null && Object.hasOwnProperty.call(message, "vmwareEngineNetworkCanonical"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.vmwareEngineNetworkCanonical);
                            if (message.managementIpAddressLayoutVersion != null && Object.hasOwnProperty.call(message, "managementIpAddressLayoutVersion"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.managementIpAddressLayoutVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NetworkConfig message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.NetworkConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INetworkConfig} message NetworkConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NetworkConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.NetworkConfig} NetworkConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.NetworkConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4: {
                                        message.managementCidr = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.vmwareEngineNetwork = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.vmwareEngineNetworkCanonical = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.managementIpAddressLayoutVersion = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NetworkConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.NetworkConfig} NetworkConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NetworkConfig message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NetworkConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.managementCidr != null && message.hasOwnProperty("managementCidr"))
                                if (!$util.isString(message.managementCidr))
                                    return "managementCidr: string expected";
                            if (message.vmwareEngineNetwork != null && message.hasOwnProperty("vmwareEngineNetwork"))
                                if (!$util.isString(message.vmwareEngineNetwork))
                                    return "vmwareEngineNetwork: string expected";
                            if (message.vmwareEngineNetworkCanonical != null && message.hasOwnProperty("vmwareEngineNetworkCanonical"))
                                if (!$util.isString(message.vmwareEngineNetworkCanonical))
                                    return "vmwareEngineNetworkCanonical: string expected";
                            if (message.managementIpAddressLayoutVersion != null && message.hasOwnProperty("managementIpAddressLayoutVersion"))
                                if (!$util.isInteger(message.managementIpAddressLayoutVersion))
                                    return "managementIpAddressLayoutVersion: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a NetworkConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.NetworkConfig} NetworkConfig
                         */
                        NetworkConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.NetworkConfig)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.NetworkConfig();
                            if (object.managementCidr != null)
                                message.managementCidr = String(object.managementCidr);
                            if (object.vmwareEngineNetwork != null)
                                message.vmwareEngineNetwork = String(object.vmwareEngineNetwork);
                            if (object.vmwareEngineNetworkCanonical != null)
                                message.vmwareEngineNetworkCanonical = String(object.vmwareEngineNetworkCanonical);
                            if (object.managementIpAddressLayoutVersion != null)
                                message.managementIpAddressLayoutVersion = object.managementIpAddressLayoutVersion | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NetworkConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @static
                         * @param {google.cloud.vmwareengine.v1.NetworkConfig} message NetworkConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NetworkConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.managementCidr = "";
                                object.vmwareEngineNetwork = "";
                                object.vmwareEngineNetworkCanonical = "";
                                object.managementIpAddressLayoutVersion = 0;
                            }
                            if (message.managementCidr != null && message.hasOwnProperty("managementCidr"))
                                object.managementCidr = message.managementCidr;
                            if (message.vmwareEngineNetwork != null && message.hasOwnProperty("vmwareEngineNetwork"))
                                object.vmwareEngineNetwork = message.vmwareEngineNetwork;
                            if (message.vmwareEngineNetworkCanonical != null && message.hasOwnProperty("vmwareEngineNetworkCanonical"))
                                object.vmwareEngineNetworkCanonical = message.vmwareEngineNetworkCanonical;
                            if (message.managementIpAddressLayoutVersion != null && message.hasOwnProperty("managementIpAddressLayoutVersion"))
                                object.managementIpAddressLayoutVersion = message.managementIpAddressLayoutVersion;
                            return object;
                        };
    
                        /**
                         * Converts this NetworkConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NetworkConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NetworkConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.NetworkConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NetworkConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.NetworkConfig";
                        };
    
                        return NetworkConfig;
                    })();
    
                    v1.NodeTypeConfig = (function() {
    
                        /**
                         * Properties of a NodeTypeConfig.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface INodeTypeConfig
                         * @property {number|null} [nodeCount] NodeTypeConfig nodeCount
                         * @property {number|null} [customCoreCount] NodeTypeConfig customCoreCount
                         */
    
                        /**
                         * Constructs a new NodeTypeConfig.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a NodeTypeConfig.
                         * @implements INodeTypeConfig
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.INodeTypeConfig=} [properties] Properties to set
                         */
                        function NodeTypeConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NodeTypeConfig nodeCount.
                         * @member {number} nodeCount
                         * @memberof google.cloud.vmwareengine.v1.NodeTypeConfig
                         * @instance
                         */
                        NodeTypeConfig.prototype.nodeCount = 0;
    
                        /**
                         * NodeTypeConfig customCoreCount.
                         * @member {number} customCoreCount
                         * @memberof google.cloud.vmwareengine.v1.NodeTypeConfig
                         * @instance
                         */
                        NodeTypeConfig.prototype.customCoreCount = 0;
    
                        /**
                         * Creates a new NodeTypeConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.NodeTypeConfig
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INodeTypeConfig=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.NodeTypeConfig} NodeTypeConfig instance
                         */
                        NodeTypeConfig.create = function create(properties) {
                            return new NodeTypeConfig(properties);
                        };
    
                        /**
                         * Encodes the specified NodeTypeConfig message. Does not implicitly {@link google.cloud.vmwareengine.v1.NodeTypeConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.NodeTypeConfig
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INodeTypeConfig} message NodeTypeConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NodeTypeConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.nodeCount != null && Object.hasOwnProperty.call(message, "nodeCount"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.nodeCount);
                            if (message.customCoreCount != null && Object.hasOwnProperty.call(message, "customCoreCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.customCoreCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NodeTypeConfig message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.NodeTypeConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.NodeTypeConfig
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INodeTypeConfig} message NodeTypeConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NodeTypeConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NodeTypeConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.NodeTypeConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.NodeTypeConfig} NodeTypeConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NodeTypeConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.NodeTypeConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.nodeCount = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.customCoreCount = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NodeTypeConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.NodeTypeConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.NodeTypeConfig} NodeTypeConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NodeTypeConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NodeTypeConfig message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.NodeTypeConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NodeTypeConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.nodeCount != null && message.hasOwnProperty("nodeCount"))
                                if (!$util.isInteger(message.nodeCount))
                                    return "nodeCount: integer expected";
                            if (message.customCoreCount != null && message.hasOwnProperty("customCoreCount"))
                                if (!$util.isInteger(message.customCoreCount))
                                    return "customCoreCount: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a NodeTypeConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.NodeTypeConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.NodeTypeConfig} NodeTypeConfig
                         */
                        NodeTypeConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.NodeTypeConfig)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.NodeTypeConfig();
                            if (object.nodeCount != null)
                                message.nodeCount = object.nodeCount | 0;
                            if (object.customCoreCount != null)
                                message.customCoreCount = object.customCoreCount | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NodeTypeConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.NodeTypeConfig
                         * @static
                         * @param {google.cloud.vmwareengine.v1.NodeTypeConfig} message NodeTypeConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NodeTypeConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.nodeCount = 0;
                                object.customCoreCount = 0;
                            }
                            if (message.nodeCount != null && message.hasOwnProperty("nodeCount"))
                                object.nodeCount = message.nodeCount;
                            if (message.customCoreCount != null && message.hasOwnProperty("customCoreCount"))
                                object.customCoreCount = message.customCoreCount;
                            return object;
                        };
    
                        /**
                         * Converts this NodeTypeConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.NodeTypeConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NodeTypeConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NodeTypeConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.NodeTypeConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NodeTypeConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.NodeTypeConfig";
                        };
    
                        return NodeTypeConfig;
                    })();
    
                    v1.PrivateCloud = (function() {
    
                        /**
                         * Properties of a PrivateCloud.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IPrivateCloud
                         * @property {string|null} [name] PrivateCloud name
                         * @property {google.protobuf.ITimestamp|null} [createTime] PrivateCloud createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] PrivateCloud updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] PrivateCloud deleteTime
                         * @property {google.protobuf.ITimestamp|null} [expireTime] PrivateCloud expireTime
                         * @property {google.cloud.vmwareengine.v1.PrivateCloud.State|null} [state] PrivateCloud state
                         * @property {google.cloud.vmwareengine.v1.INetworkConfig|null} [networkConfig] PrivateCloud networkConfig
                         * @property {google.cloud.vmwareengine.v1.PrivateCloud.IManagementCluster|null} [managementCluster] PrivateCloud managementCluster
                         * @property {string|null} [description] PrivateCloud description
                         * @property {google.cloud.vmwareengine.v1.IHcx|null} [hcx] PrivateCloud hcx
                         * @property {google.cloud.vmwareengine.v1.INsx|null} [nsx] PrivateCloud nsx
                         * @property {google.cloud.vmwareengine.v1.IVcenter|null} [vcenter] PrivateCloud vcenter
                         * @property {string|null} [uid] PrivateCloud uid
                         * @property {google.cloud.vmwareengine.v1.PrivateCloud.Type|null} [type] PrivateCloud type
                         */
    
                        /**
                         * Constructs a new PrivateCloud.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a PrivateCloud.
                         * @implements IPrivateCloud
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IPrivateCloud=} [properties] Properties to set
                         */
                        function PrivateCloud(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PrivateCloud name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.name = "";
    
                        /**
                         * PrivateCloud createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.createTime = null;
    
                        /**
                         * PrivateCloud updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.updateTime = null;
    
                        /**
                         * PrivateCloud deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.deleteTime = null;
    
                        /**
                         * PrivateCloud expireTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.expireTime = null;
    
                        /**
                         * PrivateCloud state.
                         * @member {google.cloud.vmwareengine.v1.PrivateCloud.State} state
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.state = 0;
    
                        /**
                         * PrivateCloud networkConfig.
                         * @member {google.cloud.vmwareengine.v1.INetworkConfig|null|undefined} networkConfig
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.networkConfig = null;
    
                        /**
                         * PrivateCloud managementCluster.
                         * @member {google.cloud.vmwareengine.v1.PrivateCloud.IManagementCluster|null|undefined} managementCluster
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.managementCluster = null;
    
                        /**
                         * PrivateCloud description.
                         * @member {string} description
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.description = "";
    
                        /**
                         * PrivateCloud hcx.
                         * @member {google.cloud.vmwareengine.v1.IHcx|null|undefined} hcx
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.hcx = null;
    
                        /**
                         * PrivateCloud nsx.
                         * @member {google.cloud.vmwareengine.v1.INsx|null|undefined} nsx
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.nsx = null;
    
                        /**
                         * PrivateCloud vcenter.
                         * @member {google.cloud.vmwareengine.v1.IVcenter|null|undefined} vcenter
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.vcenter = null;
    
                        /**
                         * PrivateCloud uid.
                         * @member {string} uid
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.uid = "";
    
                        /**
                         * PrivateCloud type.
                         * @member {google.cloud.vmwareengine.v1.PrivateCloud.Type} type
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         */
                        PrivateCloud.prototype.type = 0;
    
                        /**
                         * Creates a new PrivateCloud instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IPrivateCloud=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.PrivateCloud} PrivateCloud instance
                         */
                        PrivateCloud.create = function create(properties) {
                            return new PrivateCloud(properties);
                        };
    
                        /**
                         * Encodes the specified PrivateCloud message. Does not implicitly {@link google.cloud.vmwareengine.v1.PrivateCloud.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IPrivateCloud} message PrivateCloud message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivateCloud.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.state);
                            if (message.networkConfig != null && Object.hasOwnProperty.call(message, "networkConfig"))
                                $root.google.cloud.vmwareengine.v1.NetworkConfig.encode(message.networkConfig, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.managementCluster != null && Object.hasOwnProperty.call(message, "managementCluster"))
                                $root.google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster.encode(message.managementCluster, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.description);
                            if (message.hcx != null && Object.hasOwnProperty.call(message, "hcx"))
                                $root.google.cloud.vmwareengine.v1.Hcx.encode(message.hcx, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.nsx != null && Object.hasOwnProperty.call(message, "nsx"))
                                $root.google.cloud.vmwareengine.v1.Nsx.encode(message.nsx, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            if (message.vcenter != null && Object.hasOwnProperty.call(message, "vcenter"))
                                $root.google.cloud.vmwareengine.v1.Vcenter.encode(message.vcenter, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 20, wireType 2 =*/162).string(message.uid);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 22, wireType 0 =*/176).int32(message.type);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PrivateCloud message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.PrivateCloud.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IPrivateCloud} message PrivateCloud message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivateCloud.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PrivateCloud message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.PrivateCloud} PrivateCloud
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivateCloud.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.PrivateCloud();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.networkConfig = $root.google.cloud.vmwareengine.v1.NetworkConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.managementCluster = $root.google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 17: {
                                        message.hcx = $root.google.cloud.vmwareengine.v1.Hcx.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 18: {
                                        message.nsx = $root.google.cloud.vmwareengine.v1.Nsx.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        message.vcenter = $root.google.cloud.vmwareengine.v1.Vcenter.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 20: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 22: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PrivateCloud message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.PrivateCloud} PrivateCloud
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivateCloud.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PrivateCloud message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PrivateCloud.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                if (error)
                                    return "expireTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig")) {
                                var error = $root.google.cloud.vmwareengine.v1.NetworkConfig.verify(message.networkConfig);
                                if (error)
                                    return "networkConfig." + error;
                            }
                            if (message.managementCluster != null && message.hasOwnProperty("managementCluster")) {
                                var error = $root.google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster.verify(message.managementCluster);
                                if (error)
                                    return "managementCluster." + error;
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.hcx != null && message.hasOwnProperty("hcx")) {
                                var error = $root.google.cloud.vmwareengine.v1.Hcx.verify(message.hcx);
                                if (error)
                                    return "hcx." + error;
                            }
                            if (message.nsx != null && message.hasOwnProperty("nsx")) {
                                var error = $root.google.cloud.vmwareengine.v1.Nsx.verify(message.nsx);
                                if (error)
                                    return "nsx." + error;
                            }
                            if (message.vcenter != null && message.hasOwnProperty("vcenter")) {
                                var error = $root.google.cloud.vmwareengine.v1.Vcenter.verify(message.vcenter);
                                if (error)
                                    return "vcenter." + error;
                            }
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a PrivateCloud message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.PrivateCloud} PrivateCloud
                         */
                        PrivateCloud.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.PrivateCloud)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.PrivateCloud();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.PrivateCloud.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.PrivateCloud.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.PrivateCloud.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            if (object.expireTime != null) {
                                if (typeof object.expireTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.PrivateCloud.expireTime: object expected");
                                message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.state = 1;
                                break;
                            case "CREATING":
                            case 2:
                                message.state = 2;
                                break;
                            case "UPDATING":
                            case 3:
                                message.state = 3;
                                break;
                            case "FAILED":
                            case 5:
                                message.state = 5;
                                break;
                            case "DELETED":
                            case 6:
                                message.state = 6;
                                break;
                            case "PURGING":
                            case 7:
                                message.state = 7;
                                break;
                            }
                            if (object.networkConfig != null) {
                                if (typeof object.networkConfig !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.PrivateCloud.networkConfig: object expected");
                                message.networkConfig = $root.google.cloud.vmwareengine.v1.NetworkConfig.fromObject(object.networkConfig);
                            }
                            if (object.managementCluster != null) {
                                if (typeof object.managementCluster !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.PrivateCloud.managementCluster: object expected");
                                message.managementCluster = $root.google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster.fromObject(object.managementCluster);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.hcx != null) {
                                if (typeof object.hcx !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.PrivateCloud.hcx: object expected");
                                message.hcx = $root.google.cloud.vmwareengine.v1.Hcx.fromObject(object.hcx);
                            }
                            if (object.nsx != null) {
                                if (typeof object.nsx !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.PrivateCloud.nsx: object expected");
                                message.nsx = $root.google.cloud.vmwareengine.v1.Nsx.fromObject(object.nsx);
                            }
                            if (object.vcenter != null) {
                                if (typeof object.vcenter !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.PrivateCloud.vcenter: object expected");
                                message.vcenter = $root.google.cloud.vmwareengine.v1.Vcenter.fromObject(object.vcenter);
                            }
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "STANDARD":
                            case 0:
                                message.type = 0;
                                break;
                            case "TIME_LIMITED":
                            case 1:
                                message.type = 1;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PrivateCloud message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @static
                         * @param {google.cloud.vmwareengine.v1.PrivateCloud} message PrivateCloud
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PrivateCloud.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.expireTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.networkConfig = null;
                                object.managementCluster = null;
                                object.description = "";
                                object.hcx = null;
                                object.nsx = null;
                                object.vcenter = null;
                                object.uid = "";
                                object.type = options.enums === String ? "STANDARD" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.vmwareengine.v1.PrivateCloud.State[message.state] === undefined ? message.state : $root.google.cloud.vmwareengine.v1.PrivateCloud.State[message.state] : message.state;
                            if (message.networkConfig != null && message.hasOwnProperty("networkConfig"))
                                object.networkConfig = $root.google.cloud.vmwareengine.v1.NetworkConfig.toObject(message.networkConfig, options);
                            if (message.managementCluster != null && message.hasOwnProperty("managementCluster"))
                                object.managementCluster = $root.google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster.toObject(message.managementCluster, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.hcx != null && message.hasOwnProperty("hcx"))
                                object.hcx = $root.google.cloud.vmwareengine.v1.Hcx.toObject(message.hcx, options);
                            if (message.nsx != null && message.hasOwnProperty("nsx"))
                                object.nsx = $root.google.cloud.vmwareengine.v1.Nsx.toObject(message.nsx, options);
                            if (message.vcenter != null && message.hasOwnProperty("vcenter"))
                                object.vcenter = $root.google.cloud.vmwareengine.v1.Vcenter.toObject(message.vcenter, options);
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.vmwareengine.v1.PrivateCloud.Type[message.type] === undefined ? message.type : $root.google.cloud.vmwareengine.v1.PrivateCloud.Type[message.type] : message.type;
                            return object;
                        };
    
                        /**
                         * Converts this PrivateCloud to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PrivateCloud.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PrivateCloud
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PrivateCloud.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.PrivateCloud";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.vmwareengine.v1.PrivateCloud.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=1 ACTIVE value
                         * @property {number} CREATING=2 CREATING value
                         * @property {number} UPDATING=3 UPDATING value
                         * @property {number} FAILED=5 FAILED value
                         * @property {number} DELETED=6 DELETED value
                         * @property {number} PURGING=7 PURGING value
                         */
                        PrivateCloud.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ACTIVE"] = 1;
                            values[valuesById[2] = "CREATING"] = 2;
                            values[valuesById[3] = "UPDATING"] = 3;
                            values[valuesById[5] = "FAILED"] = 5;
                            values[valuesById[6] = "DELETED"] = 6;
                            values[valuesById[7] = "PURGING"] = 7;
                            return values;
                        })();
    
                        PrivateCloud.ManagementCluster = (function() {
    
                            /**
                             * Properties of a ManagementCluster.
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                             * @interface IManagementCluster
                             * @property {string|null} [clusterId] ManagementCluster clusterId
                             * @property {Object.<string,google.cloud.vmwareengine.v1.INodeTypeConfig>|null} [nodeTypeConfigs] ManagementCluster nodeTypeConfigs
                             */
    
                            /**
                             * Constructs a new ManagementCluster.
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud
                             * @classdesc Represents a ManagementCluster.
                             * @implements IManagementCluster
                             * @constructor
                             * @param {google.cloud.vmwareengine.v1.PrivateCloud.IManagementCluster=} [properties] Properties to set
                             */
                            function ManagementCluster(properties) {
                                this.nodeTypeConfigs = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ManagementCluster clusterId.
                             * @member {string} clusterId
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster
                             * @instance
                             */
                            ManagementCluster.prototype.clusterId = "";
    
                            /**
                             * ManagementCluster nodeTypeConfigs.
                             * @member {Object.<string,google.cloud.vmwareengine.v1.INodeTypeConfig>} nodeTypeConfigs
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster
                             * @instance
                             */
                            ManagementCluster.prototype.nodeTypeConfigs = $util.emptyObject;
    
                            /**
                             * Creates a new ManagementCluster instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster
                             * @static
                             * @param {google.cloud.vmwareengine.v1.PrivateCloud.IManagementCluster=} [properties] Properties to set
                             * @returns {google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster} ManagementCluster instance
                             */
                            ManagementCluster.create = function create(properties) {
                                return new ManagementCluster(properties);
                            };
    
                            /**
                             * Encodes the specified ManagementCluster message. Does not implicitly {@link google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster
                             * @static
                             * @param {google.cloud.vmwareengine.v1.PrivateCloud.IManagementCluster} message ManagementCluster message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ManagementCluster.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.clusterId != null && Object.hasOwnProperty.call(message, "clusterId"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.clusterId);
                                if (message.nodeTypeConfigs != null && Object.hasOwnProperty.call(message, "nodeTypeConfigs"))
                                    for (var keys = Object.keys(message.nodeTypeConfigs), i = 0; i < keys.length; ++i) {
                                        writer.uint32(/* id 7, wireType 2 =*/58).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                        $root.google.cloud.vmwareengine.v1.NodeTypeConfig.encode(message.nodeTypeConfigs[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                    }
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ManagementCluster message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster
                             * @static
                             * @param {google.cloud.vmwareengine.v1.PrivateCloud.IManagementCluster} message ManagementCluster message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ManagementCluster.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ManagementCluster message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster} ManagementCluster
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ManagementCluster.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.clusterId = reader.string();
                                            break;
                                        }
                                    case 7: {
                                            if (message.nodeTypeConfigs === $util.emptyObject)
                                                message.nodeTypeConfigs = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = null;
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = $root.google.cloud.vmwareengine.v1.NodeTypeConfig.decode(reader, reader.uint32());
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.nodeTypeConfigs[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ManagementCluster message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster} ManagementCluster
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ManagementCluster.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ManagementCluster message.
                             * @function verify
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ManagementCluster.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                                    if (!$util.isString(message.clusterId))
                                        return "clusterId: string expected";
                                if (message.nodeTypeConfigs != null && message.hasOwnProperty("nodeTypeConfigs")) {
                                    if (!$util.isObject(message.nodeTypeConfigs))
                                        return "nodeTypeConfigs: object expected";
                                    var key = Object.keys(message.nodeTypeConfigs);
                                    for (var i = 0; i < key.length; ++i) {
                                        var error = $root.google.cloud.vmwareengine.v1.NodeTypeConfig.verify(message.nodeTypeConfigs[key[i]]);
                                        if (error)
                                            return "nodeTypeConfigs." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ManagementCluster message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster} ManagementCluster
                             */
                            ManagementCluster.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster)
                                    return object;
                                var message = new $root.google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster();
                                if (object.clusterId != null)
                                    message.clusterId = String(object.clusterId);
                                if (object.nodeTypeConfigs) {
                                    if (typeof object.nodeTypeConfigs !== "object")
                                        throw TypeError(".google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster.nodeTypeConfigs: object expected");
                                    message.nodeTypeConfigs = {};
                                    for (var keys = Object.keys(object.nodeTypeConfigs), i = 0; i < keys.length; ++i) {
                                        if (typeof object.nodeTypeConfigs[keys[i]] !== "object")
                                            throw TypeError(".google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster.nodeTypeConfigs: object expected");
                                        message.nodeTypeConfigs[keys[i]] = $root.google.cloud.vmwareengine.v1.NodeTypeConfig.fromObject(object.nodeTypeConfigs[keys[i]]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ManagementCluster message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster
                             * @static
                             * @param {google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster} message ManagementCluster
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ManagementCluster.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.objects || options.defaults)
                                    object.nodeTypeConfigs = {};
                                if (options.defaults)
                                    object.clusterId = "";
                                if (message.clusterId != null && message.hasOwnProperty("clusterId"))
                                    object.clusterId = message.clusterId;
                                var keys2;
                                if (message.nodeTypeConfigs && (keys2 = Object.keys(message.nodeTypeConfigs)).length) {
                                    object.nodeTypeConfigs = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.nodeTypeConfigs[keys2[j]] = $root.google.cloud.vmwareengine.v1.NodeTypeConfig.toObject(message.nodeTypeConfigs[keys2[j]], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ManagementCluster to JSON.
                             * @function toJSON
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ManagementCluster.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ManagementCluster
                             * @function getTypeUrl
                             * @memberof google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ManagementCluster.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.vmwareengine.v1.PrivateCloud.ManagementCluster";
                            };
    
                            return ManagementCluster;
                        })();
    
                        /**
                         * Type enum.
                         * @name google.cloud.vmwareengine.v1.PrivateCloud.Type
                         * @enum {number}
                         * @property {number} STANDARD=0 STANDARD value
                         * @property {number} TIME_LIMITED=1 TIME_LIMITED value
                         */
                        PrivateCloud.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STANDARD"] = 0;
                            values[valuesById[1] = "TIME_LIMITED"] = 1;
                            return values;
                        })();
    
                        return PrivateCloud;
                    })();
    
                    v1.Cluster = (function() {
    
                        /**
                         * Properties of a Cluster.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface ICluster
                         * @property {string|null} [name] Cluster name
                         * @property {google.protobuf.ITimestamp|null} [createTime] Cluster createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Cluster updateTime
                         * @property {google.cloud.vmwareengine.v1.Cluster.State|null} [state] Cluster state
                         * @property {boolean|null} [management] Cluster management
                         * @property {string|null} [uid] Cluster uid
                         * @property {Object.<string,google.cloud.vmwareengine.v1.INodeTypeConfig>|null} [nodeTypeConfigs] Cluster nodeTypeConfigs
                         */
    
                        /**
                         * Constructs a new Cluster.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a Cluster.
                         * @implements ICluster
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.ICluster=} [properties] Properties to set
                         */
                        function Cluster(properties) {
                            this.nodeTypeConfigs = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Cluster name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.name = "";
    
                        /**
                         * Cluster createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.createTime = null;
    
                        /**
                         * Cluster updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.updateTime = null;
    
                        /**
                         * Cluster state.
                         * @member {google.cloud.vmwareengine.v1.Cluster.State} state
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.state = 0;
    
                        /**
                         * Cluster management.
                         * @member {boolean} management
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.management = false;
    
                        /**
                         * Cluster uid.
                         * @member {string} uid
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.uid = "";
    
                        /**
                         * Cluster nodeTypeConfigs.
                         * @member {Object.<string,google.cloud.vmwareengine.v1.INodeTypeConfig>} nodeTypeConfigs
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.nodeTypeConfigs = $util.emptyObject;
    
                        /**
                         * Creates a new Cluster instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICluster=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.Cluster} Cluster instance
                         */
                        Cluster.create = function create(properties) {
                            return new Cluster(properties);
                        };
    
                        /**
                         * Encodes the specified Cluster message. Does not implicitly {@link google.cloud.vmwareengine.v1.Cluster.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICluster} message Cluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Cluster.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                            if (message.management != null && Object.hasOwnProperty.call(message, "management"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.management);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.uid);
                            if (message.nodeTypeConfigs != null && Object.hasOwnProperty.call(message, "nodeTypeConfigs"))
                                for (var keys = Object.keys(message.nodeTypeConfigs), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 16, wireType 2 =*/130).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.vmwareengine.v1.NodeTypeConfig.encode(message.nodeTypeConfigs[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Cluster message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.Cluster.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICluster} message Cluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Cluster.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Cluster message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.Cluster} Cluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Cluster.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.Cluster(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.management = reader.bool();
                                        break;
                                    }
                                case 14: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 16: {
                                        if (message.nodeTypeConfigs === $util.emptyObject)
                                            message.nodeTypeConfigs = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.google.cloud.vmwareengine.v1.NodeTypeConfig.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.nodeTypeConfigs[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Cluster message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.Cluster} Cluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Cluster.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Cluster message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Cluster.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.management != null && message.hasOwnProperty("management"))
                                if (typeof message.management !== "boolean")
                                    return "management: boolean expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.nodeTypeConfigs != null && message.hasOwnProperty("nodeTypeConfigs")) {
                                if (!$util.isObject(message.nodeTypeConfigs))
                                    return "nodeTypeConfigs: object expected";
                                var key = Object.keys(message.nodeTypeConfigs);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.vmwareengine.v1.NodeTypeConfig.verify(message.nodeTypeConfigs[key[i]]);
                                    if (error)
                                        return "nodeTypeConfigs." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Cluster message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.Cluster} Cluster
                         */
                        Cluster.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.Cluster)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.Cluster();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.Cluster.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.Cluster.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.state = 1;
                                break;
                            case "CREATING":
                            case 2:
                                message.state = 2;
                                break;
                            case "UPDATING":
                            case 3:
                                message.state = 3;
                                break;
                            case "DELETING":
                            case 4:
                                message.state = 4;
                                break;
                            case "REPAIRING":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.management != null)
                                message.management = Boolean(object.management);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.nodeTypeConfigs) {
                                if (typeof object.nodeTypeConfigs !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.Cluster.nodeTypeConfigs: object expected");
                                message.nodeTypeConfigs = {};
                                for (var keys = Object.keys(object.nodeTypeConfigs), i = 0; i < keys.length; ++i) {
                                    if (typeof object.nodeTypeConfigs[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.vmwareengine.v1.Cluster.nodeTypeConfigs: object expected");
                                    message.nodeTypeConfigs[keys[i]] = $root.google.cloud.vmwareengine.v1.NodeTypeConfig.fromObject(object.nodeTypeConfigs[keys[i]]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Cluster message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @static
                         * @param {google.cloud.vmwareengine.v1.Cluster} message Cluster
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Cluster.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.nodeTypeConfigs = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.management = false;
                                object.uid = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.vmwareengine.v1.Cluster.State[message.state] === undefined ? message.state : $root.google.cloud.vmwareengine.v1.Cluster.State[message.state] : message.state;
                            if (message.management != null && message.hasOwnProperty("management"))
                                object.management = message.management;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            var keys2;
                            if (message.nodeTypeConfigs && (keys2 = Object.keys(message.nodeTypeConfigs)).length) {
                                object.nodeTypeConfigs = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.nodeTypeConfigs[keys2[j]] = $root.google.cloud.vmwareengine.v1.NodeTypeConfig.toObject(message.nodeTypeConfigs[keys2[j]], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Cluster to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Cluster.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Cluster
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.Cluster
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Cluster.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.Cluster";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.vmwareengine.v1.Cluster.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=1 ACTIVE value
                         * @property {number} CREATING=2 CREATING value
                         * @property {number} UPDATING=3 UPDATING value
                         * @property {number} DELETING=4 DELETING value
                         * @property {number} REPAIRING=5 REPAIRING value
                         */
                        Cluster.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ACTIVE"] = 1;
                            values[valuesById[2] = "CREATING"] = 2;
                            values[valuesById[3] = "UPDATING"] = 3;
                            values[valuesById[4] = "DELETING"] = 4;
                            values[valuesById[5] = "REPAIRING"] = 5;
                            return values;
                        })();
    
                        return Cluster;
                    })();
    
                    v1.Subnet = (function() {
    
                        /**
                         * Properties of a Subnet.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface ISubnet
                         * @property {string|null} [name] Subnet name
                         * @property {string|null} [ipCidrRange] Subnet ipCidrRange
                         * @property {string|null} [gatewayIp] Subnet gatewayIp
                         * @property {string|null} [type] Subnet type
                         * @property {google.cloud.vmwareengine.v1.Subnet.State|null} [state] Subnet state
                         */
    
                        /**
                         * Constructs a new Subnet.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a Subnet.
                         * @implements ISubnet
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.ISubnet=} [properties] Properties to set
                         */
                        function Subnet(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Subnet name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @instance
                         */
                        Subnet.prototype.name = "";
    
                        /**
                         * Subnet ipCidrRange.
                         * @member {string} ipCidrRange
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @instance
                         */
                        Subnet.prototype.ipCidrRange = "";
    
                        /**
                         * Subnet gatewayIp.
                         * @member {string} gatewayIp
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @instance
                         */
                        Subnet.prototype.gatewayIp = "";
    
                        /**
                         * Subnet type.
                         * @member {string} type
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @instance
                         */
                        Subnet.prototype.type = "";
    
                        /**
                         * Subnet state.
                         * @member {google.cloud.vmwareengine.v1.Subnet.State} state
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @instance
                         */
                        Subnet.prototype.state = 0;
    
                        /**
                         * Creates a new Subnet instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ISubnet=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.Subnet} Subnet instance
                         */
                        Subnet.create = function create(properties) {
                            return new Subnet(properties);
                        };
    
                        /**
                         * Encodes the specified Subnet message. Does not implicitly {@link google.cloud.vmwareengine.v1.Subnet.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ISubnet} message Subnet message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Subnet.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.ipCidrRange != null && Object.hasOwnProperty.call(message, "ipCidrRange"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.ipCidrRange);
                            if (message.gatewayIp != null && Object.hasOwnProperty.call(message, "gatewayIp"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.gatewayIp);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.type);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.state);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Subnet message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.Subnet.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ISubnet} message Subnet message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Subnet.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Subnet message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.Subnet} Subnet
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Subnet.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.Subnet();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.ipCidrRange = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.gatewayIp = reader.string();
                                        break;
                                    }
                                case 11: {
                                        message.type = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Subnet message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.Subnet} Subnet
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Subnet.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Subnet message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Subnet.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.ipCidrRange != null && message.hasOwnProperty("ipCidrRange"))
                                if (!$util.isString(message.ipCidrRange))
                                    return "ipCidrRange: string expected";
                            if (message.gatewayIp != null && message.hasOwnProperty("gatewayIp"))
                                if (!$util.isString(message.gatewayIp))
                                    return "gatewayIp: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                if (!$util.isString(message.type))
                                    return "type: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a Subnet message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.Subnet} Subnet
                         */
                        Subnet.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.Subnet)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.Subnet();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.ipCidrRange != null)
                                message.ipCidrRange = String(object.ipCidrRange);
                            if (object.gatewayIp != null)
                                message.gatewayIp = String(object.gatewayIp);
                            if (object.type != null)
                                message.type = String(object.type);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.state = 1;
                                break;
                            case "CREATING":
                            case 2:
                                message.state = 2;
                                break;
                            case "UPDATING":
                            case 3:
                                message.state = 3;
                                break;
                            case "DELETING":
                            case 4:
                                message.state = 4;
                                break;
                            case "RECONCILING":
                            case 5:
                                message.state = 5;
                                break;
                            case "FAILED":
                            case 6:
                                message.state = 6;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Subnet message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @static
                         * @param {google.cloud.vmwareengine.v1.Subnet} message Subnet
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Subnet.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.ipCidrRange = "";
                                object.gatewayIp = "";
                                object.type = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.ipCidrRange != null && message.hasOwnProperty("ipCidrRange"))
                                object.ipCidrRange = message.ipCidrRange;
                            if (message.gatewayIp != null && message.hasOwnProperty("gatewayIp"))
                                object.gatewayIp = message.gatewayIp;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = message.type;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.vmwareengine.v1.Subnet.State[message.state] === undefined ? message.state : $root.google.cloud.vmwareengine.v1.Subnet.State[message.state] : message.state;
                            return object;
                        };
    
                        /**
                         * Converts this Subnet to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Subnet.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Subnet
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.Subnet
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Subnet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.Subnet";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.vmwareengine.v1.Subnet.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=1 ACTIVE value
                         * @property {number} CREATING=2 CREATING value
                         * @property {number} UPDATING=3 UPDATING value
                         * @property {number} DELETING=4 DELETING value
                         * @property {number} RECONCILING=5 RECONCILING value
                         * @property {number} FAILED=6 FAILED value
                         */
                        Subnet.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ACTIVE"] = 1;
                            values[valuesById[2] = "CREATING"] = 2;
                            values[valuesById[3] = "UPDATING"] = 3;
                            values[valuesById[4] = "DELETING"] = 4;
                            values[valuesById[5] = "RECONCILING"] = 5;
                            values[valuesById[6] = "FAILED"] = 6;
                            return values;
                        })();
    
                        return Subnet;
                    })();
    
                    v1.NodeType = (function() {
    
                        /**
                         * Properties of a NodeType.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface INodeType
                         * @property {string|null} [name] NodeType name
                         * @property {string|null} [nodeTypeId] NodeType nodeTypeId
                         * @property {string|null} [displayName] NodeType displayName
                         * @property {number|null} [virtualCpuCount] NodeType virtualCpuCount
                         * @property {number|null} [totalCoreCount] NodeType totalCoreCount
                         * @property {number|null} [memoryGb] NodeType memoryGb
                         * @property {number|null} [diskSizeGb] NodeType diskSizeGb
                         * @property {Array.<number>|null} [availableCustomCoreCounts] NodeType availableCustomCoreCounts
                         */
    
                        /**
                         * Constructs a new NodeType.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a NodeType.
                         * @implements INodeType
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.INodeType=} [properties] Properties to set
                         */
                        function NodeType(properties) {
                            this.availableCustomCoreCounts = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NodeType name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @instance
                         */
                        NodeType.prototype.name = "";
    
                        /**
                         * NodeType nodeTypeId.
                         * @member {string} nodeTypeId
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @instance
                         */
                        NodeType.prototype.nodeTypeId = "";
    
                        /**
                         * NodeType displayName.
                         * @member {string} displayName
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @instance
                         */
                        NodeType.prototype.displayName = "";
    
                        /**
                         * NodeType virtualCpuCount.
                         * @member {number} virtualCpuCount
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @instance
                         */
                        NodeType.prototype.virtualCpuCount = 0;
    
                        /**
                         * NodeType totalCoreCount.
                         * @member {number} totalCoreCount
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @instance
                         */
                        NodeType.prototype.totalCoreCount = 0;
    
                        /**
                         * NodeType memoryGb.
                         * @member {number} memoryGb
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @instance
                         */
                        NodeType.prototype.memoryGb = 0;
    
                        /**
                         * NodeType diskSizeGb.
                         * @member {number} diskSizeGb
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @instance
                         */
                        NodeType.prototype.diskSizeGb = 0;
    
                        /**
                         * NodeType availableCustomCoreCounts.
                         * @member {Array.<number>} availableCustomCoreCounts
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @instance
                         */
                        NodeType.prototype.availableCustomCoreCounts = $util.emptyArray;
    
                        /**
                         * Creates a new NodeType instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INodeType=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.NodeType} NodeType instance
                         */
                        NodeType.create = function create(properties) {
                            return new NodeType(properties);
                        };
    
                        /**
                         * Encodes the specified NodeType message. Does not implicitly {@link google.cloud.vmwareengine.v1.NodeType.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INodeType} message NodeType message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NodeType.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.nodeTypeId != null && Object.hasOwnProperty.call(message, "nodeTypeId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nodeTypeId);
                            if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.displayName);
                            if (message.virtualCpuCount != null && Object.hasOwnProperty.call(message, "virtualCpuCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.virtualCpuCount);
                            if (message.totalCoreCount != null && Object.hasOwnProperty.call(message, "totalCoreCount"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.totalCoreCount);
                            if (message.memoryGb != null && Object.hasOwnProperty.call(message, "memoryGb"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.memoryGb);
                            if (message.diskSizeGb != null && Object.hasOwnProperty.call(message, "diskSizeGb"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.diskSizeGb);
                            if (message.availableCustomCoreCounts != null && message.availableCustomCoreCounts.length) {
                                writer.uint32(/* id 11, wireType 2 =*/90).fork();
                                for (var i = 0; i < message.availableCustomCoreCounts.length; ++i)
                                    writer.int32(message.availableCustomCoreCounts[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NodeType message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.NodeType.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INodeType} message NodeType message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NodeType.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NodeType message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.NodeType} NodeType
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NodeType.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.NodeType();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.nodeTypeId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.displayName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.virtualCpuCount = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.totalCoreCount = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.memoryGb = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.diskSizeGb = reader.int32();
                                        break;
                                    }
                                case 11: {
                                        if (!(message.availableCustomCoreCounts && message.availableCustomCoreCounts.length))
                                            message.availableCustomCoreCounts = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.availableCustomCoreCounts.push(reader.int32());
                                        } else
                                            message.availableCustomCoreCounts.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NodeType message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.NodeType} NodeType
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NodeType.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NodeType message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NodeType.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.nodeTypeId != null && message.hasOwnProperty("nodeTypeId"))
                                if (!$util.isString(message.nodeTypeId))
                                    return "nodeTypeId: string expected";
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                if (!$util.isString(message.displayName))
                                    return "displayName: string expected";
                            if (message.virtualCpuCount != null && message.hasOwnProperty("virtualCpuCount"))
                                if (!$util.isInteger(message.virtualCpuCount))
                                    return "virtualCpuCount: integer expected";
                            if (message.totalCoreCount != null && message.hasOwnProperty("totalCoreCount"))
                                if (!$util.isInteger(message.totalCoreCount))
                                    return "totalCoreCount: integer expected";
                            if (message.memoryGb != null && message.hasOwnProperty("memoryGb"))
                                if (!$util.isInteger(message.memoryGb))
                                    return "memoryGb: integer expected";
                            if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                if (!$util.isInteger(message.diskSizeGb))
                                    return "diskSizeGb: integer expected";
                            if (message.availableCustomCoreCounts != null && message.hasOwnProperty("availableCustomCoreCounts")) {
                                if (!Array.isArray(message.availableCustomCoreCounts))
                                    return "availableCustomCoreCounts: array expected";
                                for (var i = 0; i < message.availableCustomCoreCounts.length; ++i)
                                    if (!$util.isInteger(message.availableCustomCoreCounts[i]))
                                        return "availableCustomCoreCounts: integer[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a NodeType message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.NodeType} NodeType
                         */
                        NodeType.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.NodeType)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.NodeType();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.nodeTypeId != null)
                                message.nodeTypeId = String(object.nodeTypeId);
                            if (object.displayName != null)
                                message.displayName = String(object.displayName);
                            if (object.virtualCpuCount != null)
                                message.virtualCpuCount = object.virtualCpuCount | 0;
                            if (object.totalCoreCount != null)
                                message.totalCoreCount = object.totalCoreCount | 0;
                            if (object.memoryGb != null)
                                message.memoryGb = object.memoryGb | 0;
                            if (object.diskSizeGb != null)
                                message.diskSizeGb = object.diskSizeGb | 0;
                            if (object.availableCustomCoreCounts) {
                                if (!Array.isArray(object.availableCustomCoreCounts))
                                    throw TypeError(".google.cloud.vmwareengine.v1.NodeType.availableCustomCoreCounts: array expected");
                                message.availableCustomCoreCounts = [];
                                for (var i = 0; i < object.availableCustomCoreCounts.length; ++i)
                                    message.availableCustomCoreCounts[i] = object.availableCustomCoreCounts[i] | 0;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NodeType message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @static
                         * @param {google.cloud.vmwareengine.v1.NodeType} message NodeType
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NodeType.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.availableCustomCoreCounts = [];
                            if (options.defaults) {
                                object.name = "";
                                object.nodeTypeId = "";
                                object.displayName = "";
                                object.virtualCpuCount = 0;
                                object.totalCoreCount = 0;
                                object.memoryGb = 0;
                                object.diskSizeGb = 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.nodeTypeId != null && message.hasOwnProperty("nodeTypeId"))
                                object.nodeTypeId = message.nodeTypeId;
                            if (message.displayName != null && message.hasOwnProperty("displayName"))
                                object.displayName = message.displayName;
                            if (message.virtualCpuCount != null && message.hasOwnProperty("virtualCpuCount"))
                                object.virtualCpuCount = message.virtualCpuCount;
                            if (message.totalCoreCount != null && message.hasOwnProperty("totalCoreCount"))
                                object.totalCoreCount = message.totalCoreCount;
                            if (message.memoryGb != null && message.hasOwnProperty("memoryGb"))
                                object.memoryGb = message.memoryGb;
                            if (message.diskSizeGb != null && message.hasOwnProperty("diskSizeGb"))
                                object.diskSizeGb = message.diskSizeGb;
                            if (message.availableCustomCoreCounts && message.availableCustomCoreCounts.length) {
                                object.availableCustomCoreCounts = [];
                                for (var j = 0; j < message.availableCustomCoreCounts.length; ++j)
                                    object.availableCustomCoreCounts[j] = message.availableCustomCoreCounts[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this NodeType to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NodeType.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NodeType
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.NodeType
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NodeType.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.NodeType";
                        };
    
                        return NodeType;
                    })();
    
                    v1.Credentials = (function() {
    
                        /**
                         * Properties of a Credentials.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface ICredentials
                         * @property {string|null} [username] Credentials username
                         * @property {string|null} [password] Credentials password
                         */
    
                        /**
                         * Constructs a new Credentials.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a Credentials.
                         * @implements ICredentials
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.ICredentials=} [properties] Properties to set
                         */
                        function Credentials(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Credentials username.
                         * @member {string} username
                         * @memberof google.cloud.vmwareengine.v1.Credentials
                         * @instance
                         */
                        Credentials.prototype.username = "";
    
                        /**
                         * Credentials password.
                         * @member {string} password
                         * @memberof google.cloud.vmwareengine.v1.Credentials
                         * @instance
                         */
                        Credentials.prototype.password = "";
    
                        /**
                         * Creates a new Credentials instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.Credentials
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICredentials=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.Credentials} Credentials instance
                         */
                        Credentials.create = function create(properties) {
                            return new Credentials(properties);
                        };
    
                        /**
                         * Encodes the specified Credentials message. Does not implicitly {@link google.cloud.vmwareengine.v1.Credentials.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.Credentials
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICredentials} message Credentials message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Credentials.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.username);
                            if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.password);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Credentials message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.Credentials.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.Credentials
                         * @static
                         * @param {google.cloud.vmwareengine.v1.ICredentials} message Credentials message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Credentials.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Credentials message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.Credentials
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.Credentials} Credentials
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Credentials.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.Credentials();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.username = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.password = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Credentials message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.Credentials
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.Credentials} Credentials
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Credentials.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Credentials message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.Credentials
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Credentials.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.username != null && message.hasOwnProperty("username"))
                                if (!$util.isString(message.username))
                                    return "username: string expected";
                            if (message.password != null && message.hasOwnProperty("password"))
                                if (!$util.isString(message.password))
                                    return "password: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Credentials message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.Credentials
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.Credentials} Credentials
                         */
                        Credentials.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.Credentials)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.Credentials();
                            if (object.username != null)
                                message.username = String(object.username);
                            if (object.password != null)
                                message.password = String(object.password);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Credentials message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.Credentials
                         * @static
                         * @param {google.cloud.vmwareengine.v1.Credentials} message Credentials
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Credentials.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.username = "";
                                object.password = "";
                            }
                            if (message.username != null && message.hasOwnProperty("username"))
                                object.username = message.username;
                            if (message.password != null && message.hasOwnProperty("password"))
                                object.password = message.password;
                            return object;
                        };
    
                        /**
                         * Converts this Credentials to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.Credentials
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Credentials.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Credentials
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.Credentials
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Credentials.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.Credentials";
                        };
    
                        return Credentials;
                    })();
    
                    v1.HcxActivationKey = (function() {
    
                        /**
                         * Properties of a HcxActivationKey.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IHcxActivationKey
                         * @property {string|null} [name] HcxActivationKey name
                         * @property {google.protobuf.ITimestamp|null} [createTime] HcxActivationKey createTime
                         * @property {google.cloud.vmwareengine.v1.HcxActivationKey.State|null} [state] HcxActivationKey state
                         * @property {string|null} [activationKey] HcxActivationKey activationKey
                         * @property {string|null} [uid] HcxActivationKey uid
                         */
    
                        /**
                         * Constructs a new HcxActivationKey.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a HcxActivationKey.
                         * @implements IHcxActivationKey
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IHcxActivationKey=} [properties] Properties to set
                         */
                        function HcxActivationKey(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HcxActivationKey name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @instance
                         */
                        HcxActivationKey.prototype.name = "";
    
                        /**
                         * HcxActivationKey createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @instance
                         */
                        HcxActivationKey.prototype.createTime = null;
    
                        /**
                         * HcxActivationKey state.
                         * @member {google.cloud.vmwareengine.v1.HcxActivationKey.State} state
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @instance
                         */
                        HcxActivationKey.prototype.state = 0;
    
                        /**
                         * HcxActivationKey activationKey.
                         * @member {string} activationKey
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @instance
                         */
                        HcxActivationKey.prototype.activationKey = "";
    
                        /**
                         * HcxActivationKey uid.
                         * @member {string} uid
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @instance
                         */
                        HcxActivationKey.prototype.uid = "";
    
                        /**
                         * Creates a new HcxActivationKey instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IHcxActivationKey=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.HcxActivationKey} HcxActivationKey instance
                         */
                        HcxActivationKey.create = function create(properties) {
                            return new HcxActivationKey(properties);
                        };
    
                        /**
                         * Encodes the specified HcxActivationKey message. Does not implicitly {@link google.cloud.vmwareengine.v1.HcxActivationKey.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IHcxActivationKey} message HcxActivationKey message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HcxActivationKey.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
                            if (message.activationKey != null && Object.hasOwnProperty.call(message, "activationKey"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.activationKey);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.uid);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HcxActivationKey message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.HcxActivationKey.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IHcxActivationKey} message HcxActivationKey message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HcxActivationKey.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HcxActivationKey message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.HcxActivationKey} HcxActivationKey
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HcxActivationKey.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.HcxActivationKey();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.activationKey = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HcxActivationKey message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.HcxActivationKey} HcxActivationKey
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HcxActivationKey.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HcxActivationKey message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HcxActivationKey.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.activationKey != null && message.hasOwnProperty("activationKey"))
                                if (!$util.isString(message.activationKey))
                                    return "activationKey: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a HcxActivationKey message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.HcxActivationKey} HcxActivationKey
                         */
                        HcxActivationKey.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.HcxActivationKey)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.HcxActivationKey();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.HcxActivationKey.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "AVAILABLE":
                            case 1:
                                message.state = 1;
                                break;
                            case "CONSUMED":
                            case 2:
                                message.state = 2;
                                break;
                            case "CREATING":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.activationKey != null)
                                message.activationKey = String(object.activationKey);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HcxActivationKey message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @static
                         * @param {google.cloud.vmwareengine.v1.HcxActivationKey} message HcxActivationKey
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HcxActivationKey.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.activationKey = "";
                                object.uid = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.vmwareengine.v1.HcxActivationKey.State[message.state] === undefined ? message.state : $root.google.cloud.vmwareengine.v1.HcxActivationKey.State[message.state] : message.state;
                            if (message.activationKey != null && message.hasOwnProperty("activationKey"))
                                object.activationKey = message.activationKey;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            return object;
                        };
    
                        /**
                         * Converts this HcxActivationKey to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HcxActivationKey.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HcxActivationKey
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.HcxActivationKey
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HcxActivationKey.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.HcxActivationKey";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.vmwareengine.v1.HcxActivationKey.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} AVAILABLE=1 AVAILABLE value
                         * @property {number} CONSUMED=2 CONSUMED value
                         * @property {number} CREATING=3 CREATING value
                         */
                        HcxActivationKey.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "AVAILABLE"] = 1;
                            values[valuesById[2] = "CONSUMED"] = 2;
                            values[valuesById[3] = "CREATING"] = 3;
                            return values;
                        })();
    
                        return HcxActivationKey;
                    })();
    
                    v1.Hcx = (function() {
    
                        /**
                         * Properties of a Hcx.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IHcx
                         * @property {string|null} [internalIp] Hcx internalIp
                         * @property {string|null} [version] Hcx version
                         * @property {google.cloud.vmwareengine.v1.Hcx.State|null} [state] Hcx state
                         * @property {string|null} [fqdn] Hcx fqdn
                         */
    
                        /**
                         * Constructs a new Hcx.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a Hcx.
                         * @implements IHcx
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IHcx=} [properties] Properties to set
                         */
                        function Hcx(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Hcx internalIp.
                         * @member {string} internalIp
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @instance
                         */
                        Hcx.prototype.internalIp = "";
    
                        /**
                         * Hcx version.
                         * @member {string} version
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @instance
                         */
                        Hcx.prototype.version = "";
    
                        /**
                         * Hcx state.
                         * @member {google.cloud.vmwareengine.v1.Hcx.State} state
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @instance
                         */
                        Hcx.prototype.state = 0;
    
                        /**
                         * Hcx fqdn.
                         * @member {string} fqdn
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @instance
                         */
                        Hcx.prototype.fqdn = "";
    
                        /**
                         * Creates a new Hcx instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IHcx=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.Hcx} Hcx instance
                         */
                        Hcx.create = function create(properties) {
                            return new Hcx(properties);
                        };
    
                        /**
                         * Encodes the specified Hcx message. Does not implicitly {@link google.cloud.vmwareengine.v1.Hcx.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IHcx} message Hcx message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Hcx.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.internalIp != null && Object.hasOwnProperty.call(message, "internalIp"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.internalIp);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.version);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.state);
                            if (message.fqdn != null && Object.hasOwnProperty.call(message, "fqdn"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.fqdn);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Hcx message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.Hcx.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IHcx} message Hcx message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Hcx.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Hcx message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.Hcx} Hcx
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Hcx.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.Hcx();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.internalIp = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.fqdn = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Hcx message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.Hcx} Hcx
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Hcx.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Hcx message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Hcx.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.internalIp != null && message.hasOwnProperty("internalIp"))
                                if (!$util.isString(message.internalIp))
                                    return "internalIp: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.fqdn != null && message.hasOwnProperty("fqdn"))
                                if (!$util.isString(message.fqdn))
                                    return "fqdn: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Hcx message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.Hcx} Hcx
                         */
                        Hcx.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.Hcx)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.Hcx();
                            if (object.internalIp != null)
                                message.internalIp = String(object.internalIp);
                            if (object.version != null)
                                message.version = String(object.version);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.state = 1;
                                break;
                            case "CREATING":
                            case 2:
                                message.state = 2;
                                break;
                            }
                            if (object.fqdn != null)
                                message.fqdn = String(object.fqdn);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Hcx message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @static
                         * @param {google.cloud.vmwareengine.v1.Hcx} message Hcx
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Hcx.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.internalIp = "";
                                object.version = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.fqdn = "";
                            }
                            if (message.internalIp != null && message.hasOwnProperty("internalIp"))
                                object.internalIp = message.internalIp;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.vmwareengine.v1.Hcx.State[message.state] === undefined ? message.state : $root.google.cloud.vmwareengine.v1.Hcx.State[message.state] : message.state;
                            if (message.fqdn != null && message.hasOwnProperty("fqdn"))
                                object.fqdn = message.fqdn;
                            return object;
                        };
    
                        /**
                         * Converts this Hcx to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Hcx.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Hcx
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.Hcx
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Hcx.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.Hcx";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.vmwareengine.v1.Hcx.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=1 ACTIVE value
                         * @property {number} CREATING=2 CREATING value
                         */
                        Hcx.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ACTIVE"] = 1;
                            values[valuesById[2] = "CREATING"] = 2;
                            return values;
                        })();
    
                        return Hcx;
                    })();
    
                    v1.Nsx = (function() {
    
                        /**
                         * Properties of a Nsx.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface INsx
                         * @property {string|null} [internalIp] Nsx internalIp
                         * @property {string|null} [version] Nsx version
                         * @property {google.cloud.vmwareengine.v1.Nsx.State|null} [state] Nsx state
                         * @property {string|null} [fqdn] Nsx fqdn
                         */
    
                        /**
                         * Constructs a new Nsx.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a Nsx.
                         * @implements INsx
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.INsx=} [properties] Properties to set
                         */
                        function Nsx(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Nsx internalIp.
                         * @member {string} internalIp
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @instance
                         */
                        Nsx.prototype.internalIp = "";
    
                        /**
                         * Nsx version.
                         * @member {string} version
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @instance
                         */
                        Nsx.prototype.version = "";
    
                        /**
                         * Nsx state.
                         * @member {google.cloud.vmwareengine.v1.Nsx.State} state
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @instance
                         */
                        Nsx.prototype.state = 0;
    
                        /**
                         * Nsx fqdn.
                         * @member {string} fqdn
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @instance
                         */
                        Nsx.prototype.fqdn = "";
    
                        /**
                         * Creates a new Nsx instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INsx=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.Nsx} Nsx instance
                         */
                        Nsx.create = function create(properties) {
                            return new Nsx(properties);
                        };
    
                        /**
                         * Encodes the specified Nsx message. Does not implicitly {@link google.cloud.vmwareengine.v1.Nsx.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INsx} message Nsx message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Nsx.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.internalIp != null && Object.hasOwnProperty.call(message, "internalIp"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.internalIp);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.version);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.state);
                            if (message.fqdn != null && Object.hasOwnProperty.call(message, "fqdn"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.fqdn);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Nsx message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.Nsx.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INsx} message Nsx message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Nsx.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Nsx message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.Nsx} Nsx
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Nsx.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.Nsx();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.internalIp = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.fqdn = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Nsx message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.Nsx} Nsx
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Nsx.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Nsx message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Nsx.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.internalIp != null && message.hasOwnProperty("internalIp"))
                                if (!$util.isString(message.internalIp))
                                    return "internalIp: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.fqdn != null && message.hasOwnProperty("fqdn"))
                                if (!$util.isString(message.fqdn))
                                    return "fqdn: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Nsx message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.Nsx} Nsx
                         */
                        Nsx.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.Nsx)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.Nsx();
                            if (object.internalIp != null)
                                message.internalIp = String(object.internalIp);
                            if (object.version != null)
                                message.version = String(object.version);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.state = 1;
                                break;
                            case "CREATING":
                            case 2:
                                message.state = 2;
                                break;
                            }
                            if (object.fqdn != null)
                                message.fqdn = String(object.fqdn);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Nsx message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @static
                         * @param {google.cloud.vmwareengine.v1.Nsx} message Nsx
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Nsx.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.internalIp = "";
                                object.version = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.fqdn = "";
                            }
                            if (message.internalIp != null && message.hasOwnProperty("internalIp"))
                                object.internalIp = message.internalIp;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.vmwareengine.v1.Nsx.State[message.state] === undefined ? message.state : $root.google.cloud.vmwareengine.v1.Nsx.State[message.state] : message.state;
                            if (message.fqdn != null && message.hasOwnProperty("fqdn"))
                                object.fqdn = message.fqdn;
                            return object;
                        };
    
                        /**
                         * Converts this Nsx to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Nsx.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Nsx
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.Nsx
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Nsx.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.Nsx";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.vmwareengine.v1.Nsx.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=1 ACTIVE value
                         * @property {number} CREATING=2 CREATING value
                         */
                        Nsx.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ACTIVE"] = 1;
                            values[valuesById[2] = "CREATING"] = 2;
                            return values;
                        })();
    
                        return Nsx;
                    })();
    
                    v1.Vcenter = (function() {
    
                        /**
                         * Properties of a Vcenter.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IVcenter
                         * @property {string|null} [internalIp] Vcenter internalIp
                         * @property {string|null} [version] Vcenter version
                         * @property {google.cloud.vmwareengine.v1.Vcenter.State|null} [state] Vcenter state
                         * @property {string|null} [fqdn] Vcenter fqdn
                         */
    
                        /**
                         * Constructs a new Vcenter.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a Vcenter.
                         * @implements IVcenter
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IVcenter=} [properties] Properties to set
                         */
                        function Vcenter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Vcenter internalIp.
                         * @member {string} internalIp
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @instance
                         */
                        Vcenter.prototype.internalIp = "";
    
                        /**
                         * Vcenter version.
                         * @member {string} version
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @instance
                         */
                        Vcenter.prototype.version = "";
    
                        /**
                         * Vcenter state.
                         * @member {google.cloud.vmwareengine.v1.Vcenter.State} state
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @instance
                         */
                        Vcenter.prototype.state = 0;
    
                        /**
                         * Vcenter fqdn.
                         * @member {string} fqdn
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @instance
                         */
                        Vcenter.prototype.fqdn = "";
    
                        /**
                         * Creates a new Vcenter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IVcenter=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.Vcenter} Vcenter instance
                         */
                        Vcenter.create = function create(properties) {
                            return new Vcenter(properties);
                        };
    
                        /**
                         * Encodes the specified Vcenter message. Does not implicitly {@link google.cloud.vmwareengine.v1.Vcenter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IVcenter} message Vcenter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Vcenter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.internalIp != null && Object.hasOwnProperty.call(message, "internalIp"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.internalIp);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.version);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.state);
                            if (message.fqdn != null && Object.hasOwnProperty.call(message, "fqdn"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.fqdn);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Vcenter message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.Vcenter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IVcenter} message Vcenter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Vcenter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Vcenter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.Vcenter} Vcenter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Vcenter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.Vcenter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.internalIp = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.fqdn = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Vcenter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.Vcenter} Vcenter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Vcenter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Vcenter message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Vcenter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.internalIp != null && message.hasOwnProperty("internalIp"))
                                if (!$util.isString(message.internalIp))
                                    return "internalIp: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.fqdn != null && message.hasOwnProperty("fqdn"))
                                if (!$util.isString(message.fqdn))
                                    return "fqdn: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Vcenter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.Vcenter} Vcenter
                         */
                        Vcenter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.Vcenter)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.Vcenter();
                            if (object.internalIp != null)
                                message.internalIp = String(object.internalIp);
                            if (object.version != null)
                                message.version = String(object.version);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.state = 1;
                                break;
                            case "CREATING":
                            case 2:
                                message.state = 2;
                                break;
                            }
                            if (object.fqdn != null)
                                message.fqdn = String(object.fqdn);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Vcenter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @static
                         * @param {google.cloud.vmwareengine.v1.Vcenter} message Vcenter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Vcenter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.internalIp = "";
                                object.version = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.fqdn = "";
                            }
                            if (message.internalIp != null && message.hasOwnProperty("internalIp"))
                                object.internalIp = message.internalIp;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.vmwareengine.v1.Vcenter.State[message.state] === undefined ? message.state : $root.google.cloud.vmwareengine.v1.Vcenter.State[message.state] : message.state;
                            if (message.fqdn != null && message.hasOwnProperty("fqdn"))
                                object.fqdn = message.fqdn;
                            return object;
                        };
    
                        /**
                         * Converts this Vcenter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Vcenter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Vcenter
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.Vcenter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Vcenter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.Vcenter";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.vmwareengine.v1.Vcenter.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=1 ACTIVE value
                         * @property {number} CREATING=2 CREATING value
                         */
                        Vcenter.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ACTIVE"] = 1;
                            values[valuesById[2] = "CREATING"] = 2;
                            return values;
                        })();
    
                        return Vcenter;
                    })();
    
                    v1.PeeringRoute = (function() {
    
                        /**
                         * Properties of a PeeringRoute.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IPeeringRoute
                         * @property {string|null} [destRange] PeeringRoute destRange
                         * @property {google.cloud.vmwareengine.v1.PeeringRoute.Type|null} [type] PeeringRoute type
                         * @property {string|null} [nextHopRegion] PeeringRoute nextHopRegion
                         * @property {number|Long|null} [priority] PeeringRoute priority
                         * @property {boolean|null} [imported] PeeringRoute imported
                         * @property {google.cloud.vmwareengine.v1.PeeringRoute.Direction|null} [direction] PeeringRoute direction
                         */
    
                        /**
                         * Constructs a new PeeringRoute.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a PeeringRoute.
                         * @implements IPeeringRoute
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IPeeringRoute=} [properties] Properties to set
                         */
                        function PeeringRoute(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PeeringRoute destRange.
                         * @member {string} destRange
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @instance
                         */
                        PeeringRoute.prototype.destRange = "";
    
                        /**
                         * PeeringRoute type.
                         * @member {google.cloud.vmwareengine.v1.PeeringRoute.Type} type
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @instance
                         */
                        PeeringRoute.prototype.type = 0;
    
                        /**
                         * PeeringRoute nextHopRegion.
                         * @member {string} nextHopRegion
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @instance
                         */
                        PeeringRoute.prototype.nextHopRegion = "";
    
                        /**
                         * PeeringRoute priority.
                         * @member {number|Long} priority
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @instance
                         */
                        PeeringRoute.prototype.priority = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * PeeringRoute imported.
                         * @member {boolean} imported
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @instance
                         */
                        PeeringRoute.prototype.imported = false;
    
                        /**
                         * PeeringRoute direction.
                         * @member {google.cloud.vmwareengine.v1.PeeringRoute.Direction} direction
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @instance
                         */
                        PeeringRoute.prototype.direction = 0;
    
                        /**
                         * Creates a new PeeringRoute instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IPeeringRoute=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.PeeringRoute} PeeringRoute instance
                         */
                        PeeringRoute.create = function create(properties) {
                            return new PeeringRoute(properties);
                        };
    
                        /**
                         * Encodes the specified PeeringRoute message. Does not implicitly {@link google.cloud.vmwareengine.v1.PeeringRoute.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IPeeringRoute} message PeeringRoute message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PeeringRoute.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.destRange != null && Object.hasOwnProperty.call(message, "destRange"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.destRange);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            if (message.nextHopRegion != null && Object.hasOwnProperty.call(message, "nextHopRegion"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.nextHopRegion);
                            if (message.priority != null && Object.hasOwnProperty.call(message, "priority"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.priority);
                            if (message.imported != null && Object.hasOwnProperty.call(message, "imported"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.imported);
                            if (message.direction != null && Object.hasOwnProperty.call(message, "direction"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.direction);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PeeringRoute message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.PeeringRoute.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IPeeringRoute} message PeeringRoute message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PeeringRoute.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PeeringRoute message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.PeeringRoute} PeeringRoute
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PeeringRoute.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.PeeringRoute();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.destRange = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.nextHopRegion = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.priority = reader.int64();
                                        break;
                                    }
                                case 5: {
                                        message.imported = reader.bool();
                                        break;
                                    }
                                case 6: {
                                        message.direction = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PeeringRoute message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.PeeringRoute} PeeringRoute
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PeeringRoute.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PeeringRoute message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PeeringRoute.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.destRange != null && message.hasOwnProperty("destRange"))
                                if (!$util.isString(message.destRange))
                                    return "destRange: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.nextHopRegion != null && message.hasOwnProperty("nextHopRegion"))
                                if (!$util.isString(message.nextHopRegion))
                                    return "nextHopRegion: string expected";
                            if (message.priority != null && message.hasOwnProperty("priority"))
                                if (!$util.isInteger(message.priority) && !(message.priority && $util.isInteger(message.priority.low) && $util.isInteger(message.priority.high)))
                                    return "priority: integer|Long expected";
                            if (message.imported != null && message.hasOwnProperty("imported"))
                                if (typeof message.imported !== "boolean")
                                    return "imported: boolean expected";
                            if (message.direction != null && message.hasOwnProperty("direction"))
                                switch (message.direction) {
                                default:
                                    return "direction: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a PeeringRoute message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.PeeringRoute} PeeringRoute
                         */
                        PeeringRoute.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.PeeringRoute)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.PeeringRoute();
                            if (object.destRange != null)
                                message.destRange = String(object.destRange);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "DYNAMIC_PEERING_ROUTE":
                            case 1:
                                message.type = 1;
                                break;
                            case "STATIC_PEERING_ROUTE":
                            case 2:
                                message.type = 2;
                                break;
                            case "SUBNET_PEERING_ROUTE":
                            case 3:
                                message.type = 3;
                                break;
                            }
                            if (object.nextHopRegion != null)
                                message.nextHopRegion = String(object.nextHopRegion);
                            if (object.priority != null)
                                if ($util.Long)
                                    (message.priority = $util.Long.fromValue(object.priority)).unsigned = false;
                                else if (typeof object.priority === "string")
                                    message.priority = parseInt(object.priority, 10);
                                else if (typeof object.priority === "number")
                                    message.priority = object.priority;
                                else if (typeof object.priority === "object")
                                    message.priority = new $util.LongBits(object.priority.low >>> 0, object.priority.high >>> 0).toNumber();
                            if (object.imported != null)
                                message.imported = Boolean(object.imported);
                            switch (object.direction) {
                            default:
                                if (typeof object.direction === "number") {
                                    message.direction = object.direction;
                                    break;
                                }
                                break;
                            case "DIRECTION_UNSPECIFIED":
                            case 0:
                                message.direction = 0;
                                break;
                            case "INCOMING":
                            case 1:
                                message.direction = 1;
                                break;
                            case "OUTGOING":
                            case 2:
                                message.direction = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PeeringRoute message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @static
                         * @param {google.cloud.vmwareengine.v1.PeeringRoute} message PeeringRoute
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PeeringRoute.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.destRange = "";
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                object.nextHopRegion = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.priority = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.priority = options.longs === String ? "0" : 0;
                                object.imported = false;
                                object.direction = options.enums === String ? "DIRECTION_UNSPECIFIED" : 0;
                            }
                            if (message.destRange != null && message.hasOwnProperty("destRange"))
                                object.destRange = message.destRange;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.vmwareengine.v1.PeeringRoute.Type[message.type] === undefined ? message.type : $root.google.cloud.vmwareengine.v1.PeeringRoute.Type[message.type] : message.type;
                            if (message.nextHopRegion != null && message.hasOwnProperty("nextHopRegion"))
                                object.nextHopRegion = message.nextHopRegion;
                            if (message.priority != null && message.hasOwnProperty("priority"))
                                if (typeof message.priority === "number")
                                    object.priority = options.longs === String ? String(message.priority) : message.priority;
                                else
                                    object.priority = options.longs === String ? $util.Long.prototype.toString.call(message.priority) : options.longs === Number ? new $util.LongBits(message.priority.low >>> 0, message.priority.high >>> 0).toNumber() : message.priority;
                            if (message.imported != null && message.hasOwnProperty("imported"))
                                object.imported = message.imported;
                            if (message.direction != null && message.hasOwnProperty("direction"))
                                object.direction = options.enums === String ? $root.google.cloud.vmwareengine.v1.PeeringRoute.Direction[message.direction] === undefined ? message.direction : $root.google.cloud.vmwareengine.v1.PeeringRoute.Direction[message.direction] : message.direction;
                            return object;
                        };
    
                        /**
                         * Converts this PeeringRoute to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PeeringRoute.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PeeringRoute
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.PeeringRoute
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PeeringRoute.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.PeeringRoute";
                        };
    
                        /**
                         * Type enum.
                         * @name google.cloud.vmwareengine.v1.PeeringRoute.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} DYNAMIC_PEERING_ROUTE=1 DYNAMIC_PEERING_ROUTE value
                         * @property {number} STATIC_PEERING_ROUTE=2 STATIC_PEERING_ROUTE value
                         * @property {number} SUBNET_PEERING_ROUTE=3 SUBNET_PEERING_ROUTE value
                         */
                        PeeringRoute.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DYNAMIC_PEERING_ROUTE"] = 1;
                            values[valuesById[2] = "STATIC_PEERING_ROUTE"] = 2;
                            values[valuesById[3] = "SUBNET_PEERING_ROUTE"] = 3;
                            return values;
                        })();
    
                        /**
                         * Direction enum.
                         * @name google.cloud.vmwareengine.v1.PeeringRoute.Direction
                         * @enum {number}
                         * @property {number} DIRECTION_UNSPECIFIED=0 DIRECTION_UNSPECIFIED value
                         * @property {number} INCOMING=1 INCOMING value
                         * @property {number} OUTGOING=2 OUTGOING value
                         */
                        PeeringRoute.Direction = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DIRECTION_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "INCOMING"] = 1;
                            values[valuesById[2] = "OUTGOING"] = 2;
                            return values;
                        })();
    
                        return PeeringRoute;
                    })();
    
                    v1.NetworkPolicy = (function() {
    
                        /**
                         * Properties of a NetworkPolicy.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface INetworkPolicy
                         * @property {string|null} [name] NetworkPolicy name
                         * @property {google.protobuf.ITimestamp|null} [createTime] NetworkPolicy createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] NetworkPolicy updateTime
                         * @property {google.cloud.vmwareengine.v1.NetworkPolicy.INetworkService|null} [internetAccess] NetworkPolicy internetAccess
                         * @property {google.cloud.vmwareengine.v1.NetworkPolicy.INetworkService|null} [externalIp] NetworkPolicy externalIp
                         * @property {string|null} [edgeServicesCidr] NetworkPolicy edgeServicesCidr
                         * @property {string|null} [uid] NetworkPolicy uid
                         * @property {string|null} [vmwareEngineNetwork] NetworkPolicy vmwareEngineNetwork
                         * @property {string|null} [description] NetworkPolicy description
                         * @property {string|null} [vmwareEngineNetworkCanonical] NetworkPolicy vmwareEngineNetworkCanonical
                         */
    
                        /**
                         * Constructs a new NetworkPolicy.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a NetworkPolicy.
                         * @implements INetworkPolicy
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.INetworkPolicy=} [properties] Properties to set
                         */
                        function NetworkPolicy(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NetworkPolicy name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @instance
                         */
                        NetworkPolicy.prototype.name = "";
    
                        /**
                         * NetworkPolicy createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @instance
                         */
                        NetworkPolicy.prototype.createTime = null;
    
                        /**
                         * NetworkPolicy updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @instance
                         */
                        NetworkPolicy.prototype.updateTime = null;
    
                        /**
                         * NetworkPolicy internetAccess.
                         * @member {google.cloud.vmwareengine.v1.NetworkPolicy.INetworkService|null|undefined} internetAccess
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @instance
                         */
                        NetworkPolicy.prototype.internetAccess = null;
    
                        /**
                         * NetworkPolicy externalIp.
                         * @member {google.cloud.vmwareengine.v1.NetworkPolicy.INetworkService|null|undefined} externalIp
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @instance
                         */
                        NetworkPolicy.prototype.externalIp = null;
    
                        /**
                         * NetworkPolicy edgeServicesCidr.
                         * @member {string} edgeServicesCidr
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @instance
                         */
                        NetworkPolicy.prototype.edgeServicesCidr = "";
    
                        /**
                         * NetworkPolicy uid.
                         * @member {string} uid
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @instance
                         */
                        NetworkPolicy.prototype.uid = "";
    
                        /**
                         * NetworkPolicy vmwareEngineNetwork.
                         * @member {string} vmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @instance
                         */
                        NetworkPolicy.prototype.vmwareEngineNetwork = "";
    
                        /**
                         * NetworkPolicy description.
                         * @member {string} description
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @instance
                         */
                        NetworkPolicy.prototype.description = "";
    
                        /**
                         * NetworkPolicy vmwareEngineNetworkCanonical.
                         * @member {string} vmwareEngineNetworkCanonical
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @instance
                         */
                        NetworkPolicy.prototype.vmwareEngineNetworkCanonical = "";
    
                        /**
                         * Creates a new NetworkPolicy instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INetworkPolicy=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.NetworkPolicy} NetworkPolicy instance
                         */
                        NetworkPolicy.create = function create(properties) {
                            return new NetworkPolicy(properties);
                        };
    
                        /**
                         * Encodes the specified NetworkPolicy message. Does not implicitly {@link google.cloud.vmwareengine.v1.NetworkPolicy.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INetworkPolicy} message NetworkPolicy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkPolicy.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.internetAccess != null && Object.hasOwnProperty.call(message, "internetAccess"))
                                $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.encode(message.internetAccess, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.externalIp != null && Object.hasOwnProperty.call(message, "externalIp"))
                                $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.encode(message.externalIp, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.edgeServicesCidr != null && Object.hasOwnProperty.call(message, "edgeServicesCidr"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.edgeServicesCidr);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.uid);
                            if (message.vmwareEngineNetwork != null && Object.hasOwnProperty.call(message, "vmwareEngineNetwork"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.vmwareEngineNetwork);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.description);
                            if (message.vmwareEngineNetworkCanonical != null && Object.hasOwnProperty.call(message, "vmwareEngineNetworkCanonical"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.vmwareEngineNetworkCanonical);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NetworkPolicy message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.NetworkPolicy.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @static
                         * @param {google.cloud.vmwareengine.v1.INetworkPolicy} message NetworkPolicy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NetworkPolicy.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NetworkPolicy message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.NetworkPolicy} NetworkPolicy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkPolicy.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.NetworkPolicy();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.internetAccess = $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.externalIp = $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.edgeServicesCidr = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.vmwareEngineNetwork = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 14: {
                                        message.vmwareEngineNetworkCanonical = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NetworkPolicy message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.NetworkPolicy} NetworkPolicy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NetworkPolicy.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NetworkPolicy message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NetworkPolicy.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.internetAccess != null && message.hasOwnProperty("internetAccess")) {
                                var error = $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.verify(message.internetAccess);
                                if (error)
                                    return "internetAccess." + error;
                            }
                            if (message.externalIp != null && message.hasOwnProperty("externalIp")) {
                                var error = $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.verify(message.externalIp);
                                if (error)
                                    return "externalIp." + error;
                            }
                            if (message.edgeServicesCidr != null && message.hasOwnProperty("edgeServicesCidr"))
                                if (!$util.isString(message.edgeServicesCidr))
                                    return "edgeServicesCidr: string expected";
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.vmwareEngineNetwork != null && message.hasOwnProperty("vmwareEngineNetwork"))
                                if (!$util.isString(message.vmwareEngineNetwork))
                                    return "vmwareEngineNetwork: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.vmwareEngineNetworkCanonical != null && message.hasOwnProperty("vmwareEngineNetworkCanonical"))
                                if (!$util.isString(message.vmwareEngineNetworkCanonical))
                                    return "vmwareEngineNetworkCanonical: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a NetworkPolicy message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.NetworkPolicy} NetworkPolicy
                         */
                        NetworkPolicy.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.NetworkPolicy)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.NetworkPolicy();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.NetworkPolicy.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.NetworkPolicy.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.internetAccess != null) {
                                if (typeof object.internetAccess !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.NetworkPolicy.internetAccess: object expected");
                                message.internetAccess = $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.fromObject(object.internetAccess);
                            }
                            if (object.externalIp != null) {
                                if (typeof object.externalIp !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.NetworkPolicy.externalIp: object expected");
                                message.externalIp = $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.fromObject(object.externalIp);
                            }
                            if (object.edgeServicesCidr != null)
                                message.edgeServicesCidr = String(object.edgeServicesCidr);
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.vmwareEngineNetwork != null)
                                message.vmwareEngineNetwork = String(object.vmwareEngineNetwork);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.vmwareEngineNetworkCanonical != null)
                                message.vmwareEngineNetworkCanonical = String(object.vmwareEngineNetworkCanonical);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NetworkPolicy message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @static
                         * @param {google.cloud.vmwareengine.v1.NetworkPolicy} message NetworkPolicy
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NetworkPolicy.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.internetAccess = null;
                                object.externalIp = null;
                                object.edgeServicesCidr = "";
                                object.uid = "";
                                object.vmwareEngineNetwork = "";
                                object.description = "";
                                object.vmwareEngineNetworkCanonical = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.internetAccess != null && message.hasOwnProperty("internetAccess"))
                                object.internetAccess = $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.toObject(message.internetAccess, options);
                            if (message.externalIp != null && message.hasOwnProperty("externalIp"))
                                object.externalIp = $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.toObject(message.externalIp, options);
                            if (message.edgeServicesCidr != null && message.hasOwnProperty("edgeServicesCidr"))
                                object.edgeServicesCidr = message.edgeServicesCidr;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.vmwareEngineNetwork != null && message.hasOwnProperty("vmwareEngineNetwork"))
                                object.vmwareEngineNetwork = message.vmwareEngineNetwork;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.vmwareEngineNetworkCanonical != null && message.hasOwnProperty("vmwareEngineNetworkCanonical"))
                                object.vmwareEngineNetworkCanonical = message.vmwareEngineNetworkCanonical;
                            return object;
                        };
    
                        /**
                         * Converts this NetworkPolicy to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NetworkPolicy.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NetworkPolicy
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NetworkPolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.NetworkPolicy";
                        };
    
                        NetworkPolicy.NetworkService = (function() {
    
                            /**
                             * Properties of a NetworkService.
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                             * @interface INetworkService
                             * @property {boolean|null} [enabled] NetworkService enabled
                             * @property {google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.State|null} [state] NetworkService state
                             */
    
                            /**
                             * Constructs a new NetworkService.
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy
                             * @classdesc Represents a NetworkService.
                             * @implements INetworkService
                             * @constructor
                             * @param {google.cloud.vmwareengine.v1.NetworkPolicy.INetworkService=} [properties] Properties to set
                             */
                            function NetworkService(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * NetworkService enabled.
                             * @member {boolean} enabled
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService
                             * @instance
                             */
                            NetworkService.prototype.enabled = false;
    
                            /**
                             * NetworkService state.
                             * @member {google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.State} state
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService
                             * @instance
                             */
                            NetworkService.prototype.state = 0;
    
                            /**
                             * Creates a new NetworkService instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService
                             * @static
                             * @param {google.cloud.vmwareengine.v1.NetworkPolicy.INetworkService=} [properties] Properties to set
                             * @returns {google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService} NetworkService instance
                             */
                            NetworkService.create = function create(properties) {
                                return new NetworkService(properties);
                            };
    
                            /**
                             * Encodes the specified NetworkService message. Does not implicitly {@link google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService
                             * @static
                             * @param {google.cloud.vmwareengine.v1.NetworkPolicy.INetworkService} message NetworkService message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            NetworkService.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                                if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.state);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified NetworkService message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService
                             * @static
                             * @param {google.cloud.vmwareengine.v1.NetworkPolicy.INetworkService} message NetworkService message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            NetworkService.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a NetworkService message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService} NetworkService
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            NetworkService.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.enabled = reader.bool();
                                            break;
                                        }
                                    case 2: {
                                            message.state = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a NetworkService message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService} NetworkService
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            NetworkService.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a NetworkService message.
                             * @function verify
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            NetworkService.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    if (typeof message.enabled !== "boolean")
                                        return "enabled: boolean expected";
                                if (message.state != null && message.hasOwnProperty("state"))
                                    switch (message.state) {
                                    default:
                                        return "state: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a NetworkService message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService} NetworkService
                             */
                            NetworkService.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService)
                                    return object;
                                var message = new $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService();
                                if (object.enabled != null)
                                    message.enabled = Boolean(object.enabled);
                                switch (object.state) {
                                default:
                                    if (typeof object.state === "number") {
                                        message.state = object.state;
                                        break;
                                    }
                                    break;
                                case "STATE_UNSPECIFIED":
                                case 0:
                                    message.state = 0;
                                    break;
                                case "UNPROVISIONED":
                                case 1:
                                    message.state = 1;
                                    break;
                                case "RECONCILING":
                                case 2:
                                    message.state = 2;
                                    break;
                                case "ACTIVE":
                                case 3:
                                    message.state = 3;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a NetworkService message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService
                             * @static
                             * @param {google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService} message NetworkService
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            NetworkService.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.enabled = false;
                                    object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                }
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    object.enabled = message.enabled;
                                if (message.state != null && message.hasOwnProperty("state"))
                                    object.state = options.enums === String ? $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.State[message.state] === undefined ? message.state : $root.google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.State[message.state] : message.state;
                                return object;
                            };
    
                            /**
                             * Converts this NetworkService to JSON.
                             * @function toJSON
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            NetworkService.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for NetworkService
                             * @function getTypeUrl
                             * @memberof google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            NetworkService.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService";
                            };
    
                            /**
                             * State enum.
                             * @name google.cloud.vmwareengine.v1.NetworkPolicy.NetworkService.State
                             * @enum {number}
                             * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                             * @property {number} UNPROVISIONED=1 UNPROVISIONED value
                             * @property {number} RECONCILING=2 RECONCILING value
                             * @property {number} ACTIVE=3 ACTIVE value
                             */
                            NetworkService.State = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "UNPROVISIONED"] = 1;
                                values[valuesById[2] = "RECONCILING"] = 2;
                                values[valuesById[3] = "ACTIVE"] = 3;
                                return values;
                            })();
    
                            return NetworkService;
                        })();
    
                        return NetworkPolicy;
                    })();
    
                    v1.VmwareEngineNetwork = (function() {
    
                        /**
                         * Properties of a VmwareEngineNetwork.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IVmwareEngineNetwork
                         * @property {string|null} [name] VmwareEngineNetwork name
                         * @property {google.protobuf.ITimestamp|null} [createTime] VmwareEngineNetwork createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] VmwareEngineNetwork updateTime
                         * @property {string|null} [description] VmwareEngineNetwork description
                         * @property {Array.<google.cloud.vmwareengine.v1.VmwareEngineNetwork.IVpcNetwork>|null} [vpcNetworks] VmwareEngineNetwork vpcNetworks
                         * @property {google.cloud.vmwareengine.v1.VmwareEngineNetwork.State|null} [state] VmwareEngineNetwork state
                         * @property {google.cloud.vmwareengine.v1.VmwareEngineNetwork.Type|null} [type] VmwareEngineNetwork type
                         * @property {string|null} [uid] VmwareEngineNetwork uid
                         * @property {string|null} [etag] VmwareEngineNetwork etag
                         */
    
                        /**
                         * Constructs a new VmwareEngineNetwork.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a VmwareEngineNetwork.
                         * @implements IVmwareEngineNetwork
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IVmwareEngineNetwork=} [properties] Properties to set
                         */
                        function VmwareEngineNetwork(properties) {
                            this.vpcNetworks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VmwareEngineNetwork name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @instance
                         */
                        VmwareEngineNetwork.prototype.name = "";
    
                        /**
                         * VmwareEngineNetwork createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @instance
                         */
                        VmwareEngineNetwork.prototype.createTime = null;
    
                        /**
                         * VmwareEngineNetwork updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @instance
                         */
                        VmwareEngineNetwork.prototype.updateTime = null;
    
                        /**
                         * VmwareEngineNetwork description.
                         * @member {string} description
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @instance
                         */
                        VmwareEngineNetwork.prototype.description = "";
    
                        /**
                         * VmwareEngineNetwork vpcNetworks.
                         * @member {Array.<google.cloud.vmwareengine.v1.VmwareEngineNetwork.IVpcNetwork>} vpcNetworks
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @instance
                         */
                        VmwareEngineNetwork.prototype.vpcNetworks = $util.emptyArray;
    
                        /**
                         * VmwareEngineNetwork state.
                         * @member {google.cloud.vmwareengine.v1.VmwareEngineNetwork.State} state
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @instance
                         */
                        VmwareEngineNetwork.prototype.state = 0;
    
                        /**
                         * VmwareEngineNetwork type.
                         * @member {google.cloud.vmwareengine.v1.VmwareEngineNetwork.Type} type
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @instance
                         */
                        VmwareEngineNetwork.prototype.type = 0;
    
                        /**
                         * VmwareEngineNetwork uid.
                         * @member {string} uid
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @instance
                         */
                        VmwareEngineNetwork.prototype.uid = "";
    
                        /**
                         * VmwareEngineNetwork etag.
                         * @member {string} etag
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @instance
                         */
                        VmwareEngineNetwork.prototype.etag = "";
    
                        /**
                         * Creates a new VmwareEngineNetwork instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IVmwareEngineNetwork=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.VmwareEngineNetwork} VmwareEngineNetwork instance
                         */
                        VmwareEngineNetwork.create = function create(properties) {
                            return new VmwareEngineNetwork(properties);
                        };
    
                        /**
                         * Encodes the specified VmwareEngineNetwork message. Does not implicitly {@link google.cloud.vmwareengine.v1.VmwareEngineNetwork.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IVmwareEngineNetwork} message VmwareEngineNetwork message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VmwareEngineNetwork.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.description);
                            if (message.vpcNetworks != null && message.vpcNetworks.length)
                                for (var i = 0; i < message.vpcNetworks.length; ++i)
                                    $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork.encode(message.vpcNetworks[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.state);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.type);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.uid);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.etag);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VmwareEngineNetwork message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.VmwareEngineNetwork.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IVmwareEngineNetwork} message VmwareEngineNetwork message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VmwareEngineNetwork.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VmwareEngineNetwork message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.VmwareEngineNetwork} VmwareEngineNetwork
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VmwareEngineNetwork.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (!(message.vpcNetworks && message.vpcNetworks.length))
                                            message.vpcNetworks = [];
                                        message.vpcNetworks.push($root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 7: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.etag = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VmwareEngineNetwork message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.VmwareEngineNetwork} VmwareEngineNetwork
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VmwareEngineNetwork.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VmwareEngineNetwork message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VmwareEngineNetwork.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.vpcNetworks != null && message.hasOwnProperty("vpcNetworks")) {
                                if (!Array.isArray(message.vpcNetworks))
                                    return "vpcNetworks: array expected";
                                for (var i = 0; i < message.vpcNetworks.length; ++i) {
                                    var error = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork.verify(message.vpcNetworks[i]);
                                    if (error)
                                        return "vpcNetworks." + error;
                                }
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a VmwareEngineNetwork message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.VmwareEngineNetwork} VmwareEngineNetwork
                         */
                        VmwareEngineNetwork.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.VmwareEngineNetwork.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.VmwareEngineNetwork.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.vpcNetworks) {
                                if (!Array.isArray(object.vpcNetworks))
                                    throw TypeError(".google.cloud.vmwareengine.v1.VmwareEngineNetwork.vpcNetworks: array expected");
                                message.vpcNetworks = [];
                                for (var i = 0; i < object.vpcNetworks.length; ++i) {
                                    if (typeof object.vpcNetworks[i] !== "object")
                                        throw TypeError(".google.cloud.vmwareengine.v1.VmwareEngineNetwork.vpcNetworks: object expected");
                                    message.vpcNetworks[i] = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork.fromObject(object.vpcNetworks[i]);
                                }
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "UPDATING":
                            case 3:
                                message.state = 3;
                                break;
                            case "DELETING":
                            case 4:
                                message.state = 4;
                                break;
                            }
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "LEGACY":
                            case 1:
                                message.type = 1;
                                break;
                            }
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VmwareEngineNetwork message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @static
                         * @param {google.cloud.vmwareengine.v1.VmwareEngineNetwork} message VmwareEngineNetwork
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VmwareEngineNetwork.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.vpcNetworks = [];
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.description = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                object.uid = "";
                                object.etag = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.vpcNetworks && message.vpcNetworks.length) {
                                object.vpcNetworks = [];
                                for (var j = 0; j < message.vpcNetworks.length; ++j)
                                    object.vpcNetworks[j] = $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork.toObject(message.vpcNetworks[j], options);
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.State[message.state] === undefined ? message.state : $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.State[message.state] : message.state;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.Type[message.type] === undefined ? message.type : $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.Type[message.type] : message.type;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            return object;
                        };
    
                        /**
                         * Converts this VmwareEngineNetwork to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VmwareEngineNetwork.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VmwareEngineNetwork
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VmwareEngineNetwork.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.VmwareEngineNetwork";
                        };
    
                        VmwareEngineNetwork.VpcNetwork = (function() {
    
                            /**
                             * Properties of a VpcNetwork.
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                             * @interface IVpcNetwork
                             * @property {google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork.Type|null} [type] VpcNetwork type
                             * @property {string|null} [network] VpcNetwork network
                             */
    
                            /**
                             * Constructs a new VpcNetwork.
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork
                             * @classdesc Represents a VpcNetwork.
                             * @implements IVpcNetwork
                             * @constructor
                             * @param {google.cloud.vmwareengine.v1.VmwareEngineNetwork.IVpcNetwork=} [properties] Properties to set
                             */
                            function VpcNetwork(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * VpcNetwork type.
                             * @member {google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork.Type} type
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork
                             * @instance
                             */
                            VpcNetwork.prototype.type = 0;
    
                            /**
                             * VpcNetwork network.
                             * @member {string} network
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork
                             * @instance
                             */
                            VpcNetwork.prototype.network = "";
    
                            /**
                             * Creates a new VpcNetwork instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork
                             * @static
                             * @param {google.cloud.vmwareengine.v1.VmwareEngineNetwork.IVpcNetwork=} [properties] Properties to set
                             * @returns {google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork} VpcNetwork instance
                             */
                            VpcNetwork.create = function create(properties) {
                                return new VpcNetwork(properties);
                            };
    
                            /**
                             * Encodes the specified VpcNetwork message. Does not implicitly {@link google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork
                             * @static
                             * @param {google.cloud.vmwareengine.v1.VmwareEngineNetwork.IVpcNetwork} message VpcNetwork message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            VpcNetwork.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                                if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.network);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified VpcNetwork message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork
                             * @static
                             * @param {google.cloud.vmwareengine.v1.VmwareEngineNetwork.IVpcNetwork} message VpcNetwork message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            VpcNetwork.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a VpcNetwork message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork} VpcNetwork
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            VpcNetwork.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.network = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a VpcNetwork message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork} VpcNetwork
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            VpcNetwork.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a VpcNetwork message.
                             * @function verify
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            VpcNetwork.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.network != null && message.hasOwnProperty("network"))
                                    if (!$util.isString(message.network))
                                        return "network: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a VpcNetwork message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork} VpcNetwork
                             */
                            VpcNetwork.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork)
                                    return object;
                                var message = new $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork();
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "INTRANET":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "INTERNET":
                                case 2:
                                    message.type = 2;
                                    break;
                                case "GOOGLE_CLOUD":
                                case 3:
                                    message.type = 3;
                                    break;
                                }
                                if (object.network != null)
                                    message.network = String(object.network);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a VpcNetwork message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork
                             * @static
                             * @param {google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork} message VpcNetwork
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            VpcNetwork.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                    object.network = "";
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork.Type[message.type] === undefined ? message.type : $root.google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork.Type[message.type] : message.type;
                                if (message.network != null && message.hasOwnProperty("network"))
                                    object.network = message.network;
                                return object;
                            };
    
                            /**
                             * Converts this VpcNetwork to JSON.
                             * @function toJSON
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            VpcNetwork.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for VpcNetwork
                             * @function getTypeUrl
                             * @memberof google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            VpcNetwork.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork";
                            };
    
                            /**
                             * Type enum.
                             * @name google.cloud.vmwareengine.v1.VmwareEngineNetwork.VpcNetwork.Type
                             * @enum {number}
                             * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                             * @property {number} INTRANET=1 INTRANET value
                             * @property {number} INTERNET=2 INTERNET value
                             * @property {number} GOOGLE_CLOUD=3 GOOGLE_CLOUD value
                             */
                            VpcNetwork.Type = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "INTRANET"] = 1;
                                values[valuesById[2] = "INTERNET"] = 2;
                                values[valuesById[3] = "GOOGLE_CLOUD"] = 3;
                                return values;
                            })();
    
                            return VpcNetwork;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.vmwareengine.v1.VmwareEngineNetwork.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} UPDATING=3 UPDATING value
                         * @property {number} DELETING=4 DELETING value
                         */
                        VmwareEngineNetwork.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[3] = "UPDATING"] = 3;
                            values[valuesById[4] = "DELETING"] = 4;
                            return values;
                        })();
    
                        /**
                         * Type enum.
                         * @name google.cloud.vmwareengine.v1.VmwareEngineNetwork.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} LEGACY=1 LEGACY value
                         */
                        VmwareEngineNetwork.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "LEGACY"] = 1;
                            return values;
                        })();
    
                        return VmwareEngineNetwork;
                    })();
    
                    v1.PrivateConnection = (function() {
    
                        /**
                         * Properties of a PrivateConnection.
                         * @memberof google.cloud.vmwareengine.v1
                         * @interface IPrivateConnection
                         * @property {string|null} [name] PrivateConnection name
                         * @property {google.protobuf.ITimestamp|null} [createTime] PrivateConnection createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] PrivateConnection updateTime
                         * @property {string|null} [description] PrivateConnection description
                         * @property {google.cloud.vmwareengine.v1.PrivateConnection.State|null} [state] PrivateConnection state
                         * @property {string|null} [vmwareEngineNetwork] PrivateConnection vmwareEngineNetwork
                         * @property {string|null} [vmwareEngineNetworkCanonical] PrivateConnection vmwareEngineNetworkCanonical
                         * @property {google.cloud.vmwareengine.v1.PrivateConnection.Type|null} [type] PrivateConnection type
                         * @property {string|null} [peeringId] PrivateConnection peeringId
                         * @property {google.cloud.vmwareengine.v1.PrivateConnection.RoutingMode|null} [routingMode] PrivateConnection routingMode
                         * @property {string|null} [uid] PrivateConnection uid
                         * @property {string|null} [serviceNetwork] PrivateConnection serviceNetwork
                         * @property {google.cloud.vmwareengine.v1.PrivateConnection.PeeringState|null} [peeringState] PrivateConnection peeringState
                         */
    
                        /**
                         * Constructs a new PrivateConnection.
                         * @memberof google.cloud.vmwareengine.v1
                         * @classdesc Represents a PrivateConnection.
                         * @implements IPrivateConnection
                         * @constructor
                         * @param {google.cloud.vmwareengine.v1.IPrivateConnection=} [properties] Properties to set
                         */
                        function PrivateConnection(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PrivateConnection name.
                         * @member {string} name
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.name = "";
    
                        /**
                         * PrivateConnection createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.createTime = null;
    
                        /**
                         * PrivateConnection updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.updateTime = null;
    
                        /**
                         * PrivateConnection description.
                         * @member {string} description
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.description = "";
    
                        /**
                         * PrivateConnection state.
                         * @member {google.cloud.vmwareengine.v1.PrivateConnection.State} state
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.state = 0;
    
                        /**
                         * PrivateConnection vmwareEngineNetwork.
                         * @member {string} vmwareEngineNetwork
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.vmwareEngineNetwork = "";
    
                        /**
                         * PrivateConnection vmwareEngineNetworkCanonical.
                         * @member {string} vmwareEngineNetworkCanonical
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.vmwareEngineNetworkCanonical = "";
    
                        /**
                         * PrivateConnection type.
                         * @member {google.cloud.vmwareengine.v1.PrivateConnection.Type} type
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.type = 0;
    
                        /**
                         * PrivateConnection peeringId.
                         * @member {string} peeringId
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.peeringId = "";
    
                        /**
                         * PrivateConnection routingMode.
                         * @member {google.cloud.vmwareengine.v1.PrivateConnection.RoutingMode} routingMode
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.routingMode = 0;
    
                        /**
                         * PrivateConnection uid.
                         * @member {string} uid
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.uid = "";
    
                        /**
                         * PrivateConnection serviceNetwork.
                         * @member {string} serviceNetwork
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.serviceNetwork = "";
    
                        /**
                         * PrivateConnection peeringState.
                         * @member {google.cloud.vmwareengine.v1.PrivateConnection.PeeringState} peeringState
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         */
                        PrivateConnection.prototype.peeringState = 0;
    
                        /**
                         * Creates a new PrivateConnection instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IPrivateConnection=} [properties] Properties to set
                         * @returns {google.cloud.vmwareengine.v1.PrivateConnection} PrivateConnection instance
                         */
                        PrivateConnection.create = function create(properties) {
                            return new PrivateConnection(properties);
                        };
    
                        /**
                         * Encodes the specified PrivateConnection message. Does not implicitly {@link google.cloud.vmwareengine.v1.PrivateConnection.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IPrivateConnection} message PrivateConnection message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivateConnection.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.description);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.state);
                            if (message.vmwareEngineNetwork != null && Object.hasOwnProperty.call(message, "vmwareEngineNetwork"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.vmwareEngineNetwork);
                            if (message.vmwareEngineNetworkCanonical != null && Object.hasOwnProperty.call(message, "vmwareEngineNetworkCanonical"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.vmwareEngineNetworkCanonical);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.type);
                            if (message.peeringId != null && Object.hasOwnProperty.call(message, "peeringId"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.peeringId);
                            if (message.routingMode != null && Object.hasOwnProperty.call(message, "routingMode"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.routingMode);
                            if (message.uid != null && Object.hasOwnProperty.call(message, "uid"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.uid);
                            if (message.serviceNetwork != null && Object.hasOwnProperty.call(message, "serviceNetwork"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.serviceNetwork);
                            if (message.peeringState != null && Object.hasOwnProperty.call(message, "peeringState"))
                                writer.uint32(/* id 17, wireType 0 =*/136).int32(message.peeringState);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PrivateConnection message, length delimited. Does not implicitly {@link google.cloud.vmwareengine.v1.PrivateConnection.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @static
                         * @param {google.cloud.vmwareengine.v1.IPrivateConnection} message PrivateConnection message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivateConnection.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PrivateConnection message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.vmwareengine.v1.PrivateConnection} PrivateConnection
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivateConnection.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.vmwareengine.v1.PrivateConnection();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.vmwareEngineNetwork = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.vmwareEngineNetworkCanonical = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        message.peeringId = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.routingMode = reader.int32();
                                        break;
                                    }
                                case 14: {
                                        message.uid = reader.string();
                                        break;
                                    }
                                case 16: {
                                        message.serviceNetwork = reader.string();
                                        break;
                                    }
                                case 17: {
                                        message.peeringState = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PrivateConnection message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.vmwareengine.v1.PrivateConnection} PrivateConnection
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivateConnection.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PrivateConnection message.
                         * @function verify
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PrivateConnection.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.vmwareEngineNetwork != null && message.hasOwnProperty("vmwareEngineNetwork"))
                                if (!$util.isString(message.vmwareEngineNetwork))
                                    return "vmwareEngineNetwork: string expected";
                            if (message.vmwareEngineNetworkCanonical != null && message.hasOwnProperty("vmwareEngineNetworkCanonical"))
                                if (!$util.isString(message.vmwareEngineNetworkCanonical))
                                    return "vmwareEngineNetworkCanonical: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.peeringId != null && message.hasOwnProperty("peeringId"))
                                if (!$util.isString(message.peeringId))
                                    return "peeringId: string expected";
                            if (message.routingMode != null && message.hasOwnProperty("routingMode"))
                                switch (message.routingMode) {
                                default:
                                    return "routingMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                if (!$util.isString(message.uid))
                                    return "uid: string expected";
                            if (message.serviceNetwork != null && message.hasOwnProperty("serviceNetwork"))
                                if (!$util.isString(message.serviceNetwork))
                                    return "serviceNetwork: string expected";
                            if (message.peeringState != null && message.hasOwnProperty("peeringState"))
                                switch (message.peeringState) {
                                default:
                                    return "peeringState: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a PrivateConnection message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.vmwareengine.v1.PrivateConnection} PrivateConnection
                         */
                        PrivateConnection.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.vmwareengine.v1.PrivateConnection)
                                return object;
                            var message = new $root.google.cloud.vmwareengine.v1.PrivateConnection();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.PrivateConnection.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.vmwareengine.v1.PrivateConnection.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "UPDATING":
                            case 3:
                                message.state = 3;
                                break;
                            case "DELETING":
                            case 4:
                                message.state = 4;
                                break;
                            case "UNPROVISIONED":
                            case 5:
                                message.state = 5;
                                break;
                            case "FAILED":
                            case 6:
                                message.state = 6;
                                break;
                            }
                            if (object.vmwareEngineNetwork != null)
                                message.vmwareEngineNetwork = String(object.vmwareEngineNetwork);
                            if (object.vmwareEngineNetworkCanonical != null)
                                message.vmwareEngineNetworkCanonical = String(object.vmwareEngineNetworkCanonical);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "PRIVATE_SERVICE_ACCESS":
                            case 1:
                                message.type = 1;
                                break;
                            case "NETAPP_CLOUD_VOLUMES":
                            case 2:
                                message.type = 2;
                                break;
                            case "DELL_POWERSCALE":
                            case 3:
                                message.type = 3;
                                break;
                            case "THIRD_PARTY_SERVICE":
                            case 4:
                                message.type = 4;
                                break;
                            }
                            if (object.peeringId != null)
                                message.peeringId = String(object.peeringId);
                            switch (object.routingMode) {
                            default:
                                if (typeof object.routingMode === "number") {
                                    message.routingMode = object.routingMode;
                                    break;
                                }
                                break;
                            case "ROUTING_MODE_UNSPECIFIED":
                            case 0:
                                message.routingMode = 0;
                                break;
                            case "GLOBAL":
                            case 1:
                                message.routingMode = 1;
                                break;
                            case "REGIONAL":
                            case 2:
                                message.routingMode = 2;
                                break;
                            }
                            if (object.uid != null)
                                message.uid = String(object.uid);
                            if (object.serviceNetwork != null)
                                message.serviceNetwork = String(object.serviceNetwork);
                            switch (object.peeringState) {
                            default:
                                if (typeof object.peeringState === "number") {
                                    message.peeringState = object.peeringState;
                                    break;
                                }
                                break;
                            case "PEERING_STATE_UNSPECIFIED":
                            case 0:
                                message.peeringState = 0;
                                break;
                            case "PEERING_ACTIVE":
                            case 1:
                                message.peeringState = 1;
                                break;
                            case "PEERING_INACTIVE":
                            case 2:
                                message.peeringState = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PrivateConnection message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @static
                         * @param {google.cloud.vmwareengine.v1.PrivateConnection} message PrivateConnection
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PrivateConnection.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.createTime = null;
                                object.updateTime = null;
                                object.description = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.vmwareEngineNetwork = "";
                                object.vmwareEngineNetworkCanonical = "";
                                object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                object.peeringId = "";
                                object.routingMode = options.enums === String ? "ROUTING_MODE_UNSPECIFIED" : 0;
                                object.uid = "";
                                object.serviceNetwork = "";
                                object.peeringState = options.enums === String ? "PEERING_STATE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.vmwareengine.v1.PrivateConnection.State[message.state] === undefined ? message.state : $root.google.cloud.vmwareengine.v1.PrivateConnection.State[message.state] : message.state;
                            if (message.vmwareEngineNetwork != null && message.hasOwnProperty("vmwareEngineNetwork"))
                                object.vmwareEngineNetwork = message.vmwareEngineNetwork;
                            if (message.vmwareEngineNetworkCanonical != null && message.hasOwnProperty("vmwareEngineNetworkCanonical"))
                                object.vmwareEngineNetworkCanonical = message.vmwareEngineNetworkCanonical;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.vmwareengine.v1.PrivateConnection.Type[message.type] === undefined ? message.type : $root.google.cloud.vmwareengine.v1.PrivateConnection.Type[message.type] : message.type;
                            if (message.peeringId != null && message.hasOwnProperty("peeringId"))
                                object.peeringId = message.peeringId;
                            if (message.routingMode != null && message.hasOwnProperty("routingMode"))
                                object.routingMode = options.enums === String ? $root.google.cloud.vmwareengine.v1.PrivateConnection.RoutingMode[message.routingMode] === undefined ? message.routingMode : $root.google.cloud.vmwareengine.v1.PrivateConnection.RoutingMode[message.routingMode] : message.routingMode;
                            if (message.uid != null && message.hasOwnProperty("uid"))
                                object.uid = message.uid;
                            if (message.serviceNetwork != null && message.hasOwnProperty("serviceNetwork"))
                                object.serviceNetwork = message.serviceNetwork;
                            if (message.peeringState != null && message.hasOwnProperty("peeringState"))
                                object.peeringState = options.enums === String ? $root.google.cloud.vmwareengine.v1.PrivateConnection.PeeringState[message.peeringState] === undefined ? message.peeringState : $root.google.cloud.vmwareengine.v1.PrivateConnection.PeeringState[message.peeringState] : message.peeringState;
                            return object;
                        };
    
                        /**
                         * Converts this PrivateConnection to JSON.
                         * @function toJSON
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PrivateConnection.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PrivateConnection
                         * @function getTypeUrl
                         * @memberof google.cloud.vmwareengine.v1.PrivateConnection
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PrivateConnection.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.vmwareengine.v1.PrivateConnection";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.vmwareengine.v1.PrivateConnection.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} UPDATING=3 UPDATING value
                         * @property {number} DELETING=4 DELETING value
                         * @property {number} UNPROVISIONED=5 UNPROVISIONED value
                         * @property {number} FAILED=6 FAILED value
                         */
                        PrivateConnection.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[3] = "UPDATING"] = 3;
                            values[valuesById[4] = "DELETING"] = 4;
                            values[valuesById[5] = "UNPROVISIONED"] = 5;
                            values[valuesById[6] = "FAILED"] = 6;
                            return values;
                        })();
    
                        /**
                         * Type enum.
                         * @name google.cloud.vmwareengine.v1.PrivateConnection.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} PRIVATE_SERVICE_ACCESS=1 PRIVATE_SERVICE_ACCESS value
                         * @property {number} NETAPP_CLOUD_VOLUMES=2 NETAPP_CLOUD_VOLUMES value
                         * @property {number} DELL_POWERSCALE=3 DELL_POWERSCALE value
                         * @property {number} THIRD_PARTY_SERVICE=4 THIRD_PARTY_SERVICE value
                         */
                        PrivateConnection.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PRIVATE_SERVICE_ACCESS"] = 1;
                            values[valuesById[2] = "NETAPP_CLOUD_VOLUMES"] = 2;
                            values[valuesById[3] = "DELL_POWERSCALE"] = 3;
                            values[valuesById[4] = "THIRD_PARTY_SERVICE"] = 4;
                            return values;
                        })();
    
                        /**
                         * RoutingMode enum.
                         * @name google.cloud.vmwareengine.v1.PrivateConnection.RoutingMode
                         * @enum {number}
                         * @property {number} ROUTING_MODE_UNSPECIFIED=0 ROUTING_MODE_UNSPECIFIED value
                         * @property {number} GLOBAL=1 GLOBAL value
                         * @property {number} REGIONAL=2 REGIONAL value
                         */
                        PrivateConnection.RoutingMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ROUTING_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "GLOBAL"] = 1;
                            values[valuesById[2] = "REGIONAL"] = 2;
                            return values;
                        })();
    
                        /**
                         * PeeringState enum.
                         * @name google.cloud.vmwareengine.v1.PrivateConnection.PeeringState
                         * @enum {number}
                         * @property {number} PEERING_STATE_UNSPECIFIED=0 PEERING_STATE_UNSPECIFIED value
                         * @property {number} PEERING_ACTIVE=1 PEERING_ACTIVE value
                         * @property {number} PEERING_INACTIVE=2 PEERING_INACTIVE value
                         */
                        PrivateConnection.PeeringState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "PEERING_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PEERING_ACTIVE"] = 1;
                            values[valuesById[2] = "PEERING_INACTIVE"] = 2;
                            return values;
                        })();
    
                        return PrivateConnection;
                    })();
    
                    return v1;
                })();
    
                return vmwareengine;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            api.CommonLanguageSettings = (function() {
    
                /**
                 * Properties of a CommonLanguageSettings.
                 * @memberof google.api
                 * @interface ICommonLanguageSettings
                 * @property {string|null} [referenceDocsUri] CommonLanguageSettings referenceDocsUri
                 * @property {Array.<google.api.ClientLibraryDestination>|null} [destinations] CommonLanguageSettings destinations
                 */
    
                /**
                 * Constructs a new CommonLanguageSettings.
                 * @memberof google.api
                 * @classdesc Represents a CommonLanguageSettings.
                 * @implements ICommonLanguageSettings
                 * @constructor
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 */
                function CommonLanguageSettings(properties) {
                    this.destinations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CommonLanguageSettings referenceDocsUri.
                 * @member {string} referenceDocsUri
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.referenceDocsUri = "";
    
                /**
                 * CommonLanguageSettings destinations.
                 * @member {Array.<google.api.ClientLibraryDestination>} destinations
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.destinations = $util.emptyArray;
    
                /**
                 * Creates a new CommonLanguageSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings instance
                 */
                CommonLanguageSettings.create = function create(properties) {
                    return new CommonLanguageSettings(properties);
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.referenceDocsUri != null && Object.hasOwnProperty.call(message, "referenceDocsUri"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.referenceDocsUri);
                    if (message.destinations != null && message.destinations.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (var i = 0; i < message.destinations.length; ++i)
                            writer.int32(message.destinations[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message, length delimited. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CommonLanguageSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.referenceDocsUri = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.destinations && message.destinations.length))
                                    message.destinations = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.destinations.push(reader.int32());
                                } else
                                    message.destinations.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CommonLanguageSettings message.
                 * @function verify
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CommonLanguageSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        if (!$util.isString(message.referenceDocsUri))
                            return "referenceDocsUri: string expected";
                    if (message.destinations != null && message.hasOwnProperty("destinations")) {
                        if (!Array.isArray(message.destinations))
                            return "destinations: array expected";
                        for (var i = 0; i < message.destinations.length; ++i)
                            switch (message.destinations[i]) {
                            default:
                                return "destinations: enum value[] expected";
                            case 0:
                            case 10:
                            case 20:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a CommonLanguageSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 */
                CommonLanguageSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CommonLanguageSettings)
                        return object;
                    var message = new $root.google.api.CommonLanguageSettings();
                    if (object.referenceDocsUri != null)
                        message.referenceDocsUri = String(object.referenceDocsUri);
                    if (object.destinations) {
                        if (!Array.isArray(object.destinations))
                            throw TypeError(".google.api.CommonLanguageSettings.destinations: array expected");
                        message.destinations = [];
                        for (var i = 0; i < object.destinations.length; ++i)
                            switch (object.destinations[i]) {
                            default:
                                if (typeof object.destinations[i] === "number") {
                                    message.destinations[i] = object.destinations[i];
                                    break;
                                }
                            case "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED":
                            case 0:
                                message.destinations[i] = 0;
                                break;
                            case "GITHUB":
                            case 10:
                                message.destinations[i] = 10;
                                break;
                            case "PACKAGE_MANAGER":
                            case 20:
                                message.destinations[i] = 20;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CommonLanguageSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.CommonLanguageSettings} message CommonLanguageSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CommonLanguageSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.destinations = [];
                    if (options.defaults)
                        object.referenceDocsUri = "";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        object.referenceDocsUri = message.referenceDocsUri;
                    if (message.destinations && message.destinations.length) {
                        object.destinations = [];
                        for (var j = 0; j < message.destinations.length; ++j)
                            object.destinations[j] = options.enums === String ? $root.google.api.ClientLibraryDestination[message.destinations[j]] === undefined ? message.destinations[j] : $root.google.api.ClientLibraryDestination[message.destinations[j]] : message.destinations[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this CommonLanguageSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CommonLanguageSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CommonLanguageSettings
                 * @function getTypeUrl
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CommonLanguageSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CommonLanguageSettings";
                };
    
                return CommonLanguageSettings;
            })();
    
            api.ClientLibrarySettings = (function() {
    
                /**
                 * Properties of a ClientLibrarySettings.
                 * @memberof google.api
                 * @interface IClientLibrarySettings
                 * @property {string|null} [version] ClientLibrarySettings version
                 * @property {google.api.LaunchStage|null} [launchStage] ClientLibrarySettings launchStage
                 * @property {boolean|null} [restNumericEnums] ClientLibrarySettings restNumericEnums
                 * @property {google.api.IJavaSettings|null} [javaSettings] ClientLibrarySettings javaSettings
                 * @property {google.api.ICppSettings|null} [cppSettings] ClientLibrarySettings cppSettings
                 * @property {google.api.IPhpSettings|null} [phpSettings] ClientLibrarySettings phpSettings
                 * @property {google.api.IPythonSettings|null} [pythonSettings] ClientLibrarySettings pythonSettings
                 * @property {google.api.INodeSettings|null} [nodeSettings] ClientLibrarySettings nodeSettings
                 * @property {google.api.IDotnetSettings|null} [dotnetSettings] ClientLibrarySettings dotnetSettings
                 * @property {google.api.IRubySettings|null} [rubySettings] ClientLibrarySettings rubySettings
                 * @property {google.api.IGoSettings|null} [goSettings] ClientLibrarySettings goSettings
                 */
    
                /**
                 * Constructs a new ClientLibrarySettings.
                 * @memberof google.api
                 * @classdesc Represents a ClientLibrarySettings.
                 * @implements IClientLibrarySettings
                 * @constructor
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 */
                function ClientLibrarySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ClientLibrarySettings version.
                 * @member {string} version
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.version = "";
    
                /**
                 * ClientLibrarySettings launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.launchStage = 0;
    
                /**
                 * ClientLibrarySettings restNumericEnums.
                 * @member {boolean} restNumericEnums
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.restNumericEnums = false;
    
                /**
                 * ClientLibrarySettings javaSettings.
                 * @member {google.api.IJavaSettings|null|undefined} javaSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.javaSettings = null;
    
                /**
                 * ClientLibrarySettings cppSettings.
                 * @member {google.api.ICppSettings|null|undefined} cppSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.cppSettings = null;
    
                /**
                 * ClientLibrarySettings phpSettings.
                 * @member {google.api.IPhpSettings|null|undefined} phpSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.phpSettings = null;
    
                /**
                 * ClientLibrarySettings pythonSettings.
                 * @member {google.api.IPythonSettings|null|undefined} pythonSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.pythonSettings = null;
    
                /**
                 * ClientLibrarySettings nodeSettings.
                 * @member {google.api.INodeSettings|null|undefined} nodeSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.nodeSettings = null;
    
                /**
                 * ClientLibrarySettings dotnetSettings.
                 * @member {google.api.IDotnetSettings|null|undefined} dotnetSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.dotnetSettings = null;
    
                /**
                 * ClientLibrarySettings rubySettings.
                 * @member {google.api.IRubySettings|null|undefined} rubySettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.rubySettings = null;
    
                /**
                 * ClientLibrarySettings goSettings.
                 * @member {google.api.IGoSettings|null|undefined} goSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.goSettings = null;
    
                /**
                 * Creates a new ClientLibrarySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings instance
                 */
                ClientLibrarySettings.create = function create(properties) {
                    return new ClientLibrarySettings(properties);
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.launchStage);
                    if (message.restNumericEnums != null && Object.hasOwnProperty.call(message, "restNumericEnums"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.restNumericEnums);
                    if (message.javaSettings != null && Object.hasOwnProperty.call(message, "javaSettings"))
                        $root.google.api.JavaSettings.encode(message.javaSettings, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.cppSettings != null && Object.hasOwnProperty.call(message, "cppSettings"))
                        $root.google.api.CppSettings.encode(message.cppSettings, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                    if (message.phpSettings != null && Object.hasOwnProperty.call(message, "phpSettings"))
                        $root.google.api.PhpSettings.encode(message.phpSettings, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                    if (message.pythonSettings != null && Object.hasOwnProperty.call(message, "pythonSettings"))
                        $root.google.api.PythonSettings.encode(message.pythonSettings, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                    if (message.nodeSettings != null && Object.hasOwnProperty.call(message, "nodeSettings"))
                        $root.google.api.NodeSettings.encode(message.nodeSettings, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                    if (message.dotnetSettings != null && Object.hasOwnProperty.call(message, "dotnetSettings"))
                        $root.google.api.DotnetSettings.encode(message.dotnetSettings, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                    if (message.rubySettings != null && Object.hasOwnProperty.call(message, "rubySettings"))
                        $root.google.api.RubySettings.encode(message.rubySettings, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                    if (message.goSettings != null && Object.hasOwnProperty.call(message, "goSettings"))
                        $root.google.api.GoSettings.encode(message.goSettings, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message, length delimited. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ClientLibrarySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.version = reader.string();
                                break;
                            }
                        case 2: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        case 3: {
                                message.restNumericEnums = reader.bool();
                                break;
                            }
                        case 21: {
                                message.javaSettings = $root.google.api.JavaSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 22: {
                                message.cppSettings = $root.google.api.CppSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 23: {
                                message.phpSettings = $root.google.api.PhpSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 24: {
                                message.pythonSettings = $root.google.api.PythonSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 25: {
                                message.nodeSettings = $root.google.api.NodeSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 26: {
                                message.dotnetSettings = $root.google.api.DotnetSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 27: {
                                message.rubySettings = $root.google.api.RubySettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 28: {
                                message.goSettings = $root.google.api.GoSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ClientLibrarySettings message.
                 * @function verify
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ClientLibrarySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        if (typeof message.restNumericEnums !== "boolean")
                            return "restNumericEnums: boolean expected";
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings")) {
                        var error = $root.google.api.JavaSettings.verify(message.javaSettings);
                        if (error)
                            return "javaSettings." + error;
                    }
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings")) {
                        var error = $root.google.api.CppSettings.verify(message.cppSettings);
                        if (error)
                            return "cppSettings." + error;
                    }
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings")) {
                        var error = $root.google.api.PhpSettings.verify(message.phpSettings);
                        if (error)
                            return "phpSettings." + error;
                    }
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings")) {
                        var error = $root.google.api.PythonSettings.verify(message.pythonSettings);
                        if (error)
                            return "pythonSettings." + error;
                    }
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings")) {
                        var error = $root.google.api.NodeSettings.verify(message.nodeSettings);
                        if (error)
                            return "nodeSettings." + error;
                    }
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings")) {
                        var error = $root.google.api.DotnetSettings.verify(message.dotnetSettings);
                        if (error)
                            return "dotnetSettings." + error;
                    }
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings")) {
                        var error = $root.google.api.RubySettings.verify(message.rubySettings);
                        if (error)
                            return "rubySettings." + error;
                    }
                    if (message.goSettings != null && message.hasOwnProperty("goSettings")) {
                        var error = $root.google.api.GoSettings.verify(message.goSettings);
                        if (error)
                            return "goSettings." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ClientLibrarySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 */
                ClientLibrarySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ClientLibrarySettings)
                        return object;
                    var message = new $root.google.api.ClientLibrarySettings();
                    if (object.version != null)
                        message.version = String(object.version);
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    if (object.restNumericEnums != null)
                        message.restNumericEnums = Boolean(object.restNumericEnums);
                    if (object.javaSettings != null) {
                        if (typeof object.javaSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.javaSettings: object expected");
                        message.javaSettings = $root.google.api.JavaSettings.fromObject(object.javaSettings);
                    }
                    if (object.cppSettings != null) {
                        if (typeof object.cppSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.cppSettings: object expected");
                        message.cppSettings = $root.google.api.CppSettings.fromObject(object.cppSettings);
                    }
                    if (object.phpSettings != null) {
                        if (typeof object.phpSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.phpSettings: object expected");
                        message.phpSettings = $root.google.api.PhpSettings.fromObject(object.phpSettings);
                    }
                    if (object.pythonSettings != null) {
                        if (typeof object.pythonSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.pythonSettings: object expected");
                        message.pythonSettings = $root.google.api.PythonSettings.fromObject(object.pythonSettings);
                    }
                    if (object.nodeSettings != null) {
                        if (typeof object.nodeSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.nodeSettings: object expected");
                        message.nodeSettings = $root.google.api.NodeSettings.fromObject(object.nodeSettings);
                    }
                    if (object.dotnetSettings != null) {
                        if (typeof object.dotnetSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.dotnetSettings: object expected");
                        message.dotnetSettings = $root.google.api.DotnetSettings.fromObject(object.dotnetSettings);
                    }
                    if (object.rubySettings != null) {
                        if (typeof object.rubySettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.rubySettings: object expected");
                        message.rubySettings = $root.google.api.RubySettings.fromObject(object.rubySettings);
                    }
                    if (object.goSettings != null) {
                        if (typeof object.goSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.goSettings: object expected");
                        message.goSettings = $root.google.api.GoSettings.fromObject(object.goSettings);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ClientLibrarySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.ClientLibrarySettings} message ClientLibrarySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ClientLibrarySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.version = "";
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                        object.restNumericEnums = false;
                        object.javaSettings = null;
                        object.cppSettings = null;
                        object.phpSettings = null;
                        object.pythonSettings = null;
                        object.nodeSettings = null;
                        object.dotnetSettings = null;
                        object.rubySettings = null;
                        object.goSettings = null;
                    }
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        object.restNumericEnums = message.restNumericEnums;
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings"))
                        object.javaSettings = $root.google.api.JavaSettings.toObject(message.javaSettings, options);
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings"))
                        object.cppSettings = $root.google.api.CppSettings.toObject(message.cppSettings, options);
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings"))
                        object.phpSettings = $root.google.api.PhpSettings.toObject(message.phpSettings, options);
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings"))
                        object.pythonSettings = $root.google.api.PythonSettings.toObject(message.pythonSettings, options);
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings"))
                        object.nodeSettings = $root.google.api.NodeSettings.toObject(message.nodeSettings, options);
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings"))
                        object.dotnetSettings = $root.google.api.DotnetSettings.toObject(message.dotnetSettings, options);
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings"))
                        object.rubySettings = $root.google.api.RubySettings.toObject(message.rubySettings, options);
                    if (message.goSettings != null && message.hasOwnProperty("goSettings"))
                        object.goSettings = $root.google.api.GoSettings.toObject(message.goSettings, options);
                    return object;
                };
    
                /**
                 * Converts this ClientLibrarySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ClientLibrarySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ClientLibrarySettings
                 * @function getTypeUrl
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ClientLibrarySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ClientLibrarySettings";
                };
    
                return ClientLibrarySettings;
            })();
    
            api.Publishing = (function() {
    
                /**
                 * Properties of a Publishing.
                 * @memberof google.api
                 * @interface IPublishing
                 * @property {Array.<google.api.IMethodSettings>|null} [methodSettings] Publishing methodSettings
                 * @property {string|null} [newIssueUri] Publishing newIssueUri
                 * @property {string|null} [documentationUri] Publishing documentationUri
                 * @property {string|null} [apiShortName] Publishing apiShortName
                 * @property {string|null} [githubLabel] Publishing githubLabel
                 * @property {Array.<string>|null} [codeownerGithubTeams] Publishing codeownerGithubTeams
                 * @property {string|null} [docTagPrefix] Publishing docTagPrefix
                 * @property {google.api.ClientLibraryOrganization|null} [organization] Publishing organization
                 * @property {Array.<google.api.IClientLibrarySettings>|null} [librarySettings] Publishing librarySettings
                 */
    
                /**
                 * Constructs a new Publishing.
                 * @memberof google.api
                 * @classdesc Represents a Publishing.
                 * @implements IPublishing
                 * @constructor
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 */
                function Publishing(properties) {
                    this.methodSettings = [];
                    this.codeownerGithubTeams = [];
                    this.librarySettings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Publishing methodSettings.
                 * @member {Array.<google.api.IMethodSettings>} methodSettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.methodSettings = $util.emptyArray;
    
                /**
                 * Publishing newIssueUri.
                 * @member {string} newIssueUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.newIssueUri = "";
    
                /**
                 * Publishing documentationUri.
                 * @member {string} documentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.documentationUri = "";
    
                /**
                 * Publishing apiShortName.
                 * @member {string} apiShortName
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.apiShortName = "";
    
                /**
                 * Publishing githubLabel.
                 * @member {string} githubLabel
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.githubLabel = "";
    
                /**
                 * Publishing codeownerGithubTeams.
                 * @member {Array.<string>} codeownerGithubTeams
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.codeownerGithubTeams = $util.emptyArray;
    
                /**
                 * Publishing docTagPrefix.
                 * @member {string} docTagPrefix
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.docTagPrefix = "";
    
                /**
                 * Publishing organization.
                 * @member {google.api.ClientLibraryOrganization} organization
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.organization = 0;
    
                /**
                 * Publishing librarySettings.
                 * @member {Array.<google.api.IClientLibrarySettings>} librarySettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.librarySettings = $util.emptyArray;
    
                /**
                 * Creates a new Publishing instance using the specified properties.
                 * @function create
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 * @returns {google.api.Publishing} Publishing instance
                 */
                Publishing.create = function create(properties) {
                    return new Publishing(properties);
                };
    
                /**
                 * Encodes the specified Publishing message. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.methodSettings != null && message.methodSettings.length)
                        for (var i = 0; i < message.methodSettings.length; ++i)
                            $root.google.api.MethodSettings.encode(message.methodSettings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.newIssueUri != null && Object.hasOwnProperty.call(message, "newIssueUri"))
                        writer.uint32(/* id 101, wireType 2 =*/810).string(message.newIssueUri);
                    if (message.documentationUri != null && Object.hasOwnProperty.call(message, "documentationUri"))
                        writer.uint32(/* id 102, wireType 2 =*/818).string(message.documentationUri);
                    if (message.apiShortName != null && Object.hasOwnProperty.call(message, "apiShortName"))
                        writer.uint32(/* id 103, wireType 2 =*/826).string(message.apiShortName);
                    if (message.githubLabel != null && Object.hasOwnProperty.call(message, "githubLabel"))
                        writer.uint32(/* id 104, wireType 2 =*/834).string(message.githubLabel);
                    if (message.codeownerGithubTeams != null && message.codeownerGithubTeams.length)
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            writer.uint32(/* id 105, wireType 2 =*/842).string(message.codeownerGithubTeams[i]);
                    if (message.docTagPrefix != null && Object.hasOwnProperty.call(message, "docTagPrefix"))
                        writer.uint32(/* id 106, wireType 2 =*/850).string(message.docTagPrefix);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 107, wireType 0 =*/856).int32(message.organization);
                    if (message.librarySettings != null && message.librarySettings.length)
                        for (var i = 0; i < message.librarySettings.length; ++i)
                            $root.google.api.ClientLibrarySettings.encode(message.librarySettings[i], writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Publishing message, length delimited. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Publishing();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.methodSettings && message.methodSettings.length))
                                    message.methodSettings = [];
                                message.methodSettings.push($root.google.api.MethodSettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 101: {
                                message.newIssueUri = reader.string();
                                break;
                            }
                        case 102: {
                                message.documentationUri = reader.string();
                                break;
                            }
                        case 103: {
                                message.apiShortName = reader.string();
                                break;
                            }
                        case 104: {
                                message.githubLabel = reader.string();
                                break;
                            }
                        case 105: {
                                if (!(message.codeownerGithubTeams && message.codeownerGithubTeams.length))
                                    message.codeownerGithubTeams = [];
                                message.codeownerGithubTeams.push(reader.string());
                                break;
                            }
                        case 106: {
                                message.docTagPrefix = reader.string();
                                break;
                            }
                        case 107: {
                                message.organization = reader.int32();
                                break;
                            }
                        case 109: {
                                if (!(message.librarySettings && message.librarySettings.length))
                                    message.librarySettings = [];
                                message.librarySettings.push($root.google.api.ClientLibrarySettings.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Publishing message.
                 * @function verify
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Publishing.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.methodSettings != null && message.hasOwnProperty("methodSettings")) {
                        if (!Array.isArray(message.methodSettings))
                            return "methodSettings: array expected";
                        for (var i = 0; i < message.methodSettings.length; ++i) {
                            var error = $root.google.api.MethodSettings.verify(message.methodSettings[i]);
                            if (error)
                                return "methodSettings." + error;
                        }
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        if (!$util.isString(message.newIssueUri))
                            return "newIssueUri: string expected";
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        if (!$util.isString(message.documentationUri))
                            return "documentationUri: string expected";
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        if (!$util.isString(message.apiShortName))
                            return "apiShortName: string expected";
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        if (!$util.isString(message.githubLabel))
                            return "githubLabel: string expected";
                    if (message.codeownerGithubTeams != null && message.hasOwnProperty("codeownerGithubTeams")) {
                        if (!Array.isArray(message.codeownerGithubTeams))
                            return "codeownerGithubTeams: array expected";
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            if (!$util.isString(message.codeownerGithubTeams[i]))
                                return "codeownerGithubTeams: string[] expected";
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        if (!$util.isString(message.docTagPrefix))
                            return "docTagPrefix: string expected";
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        switch (message.organization) {
                        default:
                            return "organization: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        }
                    if (message.librarySettings != null && message.hasOwnProperty("librarySettings")) {
                        if (!Array.isArray(message.librarySettings))
                            return "librarySettings: array expected";
                        for (var i = 0; i < message.librarySettings.length; ++i) {
                            var error = $root.google.api.ClientLibrarySettings.verify(message.librarySettings[i]);
                            if (error)
                                return "librarySettings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Publishing message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Publishing} Publishing
                 */
                Publishing.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Publishing)
                        return object;
                    var message = new $root.google.api.Publishing();
                    if (object.methodSettings) {
                        if (!Array.isArray(object.methodSettings))
                            throw TypeError(".google.api.Publishing.methodSettings: array expected");
                        message.methodSettings = [];
                        for (var i = 0; i < object.methodSettings.length; ++i) {
                            if (typeof object.methodSettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.methodSettings: object expected");
                            message.methodSettings[i] = $root.google.api.MethodSettings.fromObject(object.methodSettings[i]);
                        }
                    }
                    if (object.newIssueUri != null)
                        message.newIssueUri = String(object.newIssueUri);
                    if (object.documentationUri != null)
                        message.documentationUri = String(object.documentationUri);
                    if (object.apiShortName != null)
                        message.apiShortName = String(object.apiShortName);
                    if (object.githubLabel != null)
                        message.githubLabel = String(object.githubLabel);
                    if (object.codeownerGithubTeams) {
                        if (!Array.isArray(object.codeownerGithubTeams))
                            throw TypeError(".google.api.Publishing.codeownerGithubTeams: array expected");
                        message.codeownerGithubTeams = [];
                        for (var i = 0; i < object.codeownerGithubTeams.length; ++i)
                            message.codeownerGithubTeams[i] = String(object.codeownerGithubTeams[i]);
                    }
                    if (object.docTagPrefix != null)
                        message.docTagPrefix = String(object.docTagPrefix);
                    switch (object.organization) {
                    default:
                        if (typeof object.organization === "number") {
                            message.organization = object.organization;
                            break;
                        }
                        break;
                    case "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED":
                    case 0:
                        message.organization = 0;
                        break;
                    case "CLOUD":
                    case 1:
                        message.organization = 1;
                        break;
                    case "ADS":
                    case 2:
                        message.organization = 2;
                        break;
                    case "PHOTOS":
                    case 3:
                        message.organization = 3;
                        break;
                    case "STREET_VIEW":
                    case 4:
                        message.organization = 4;
                        break;
                    }
                    if (object.librarySettings) {
                        if (!Array.isArray(object.librarySettings))
                            throw TypeError(".google.api.Publishing.librarySettings: array expected");
                        message.librarySettings = [];
                        for (var i = 0; i < object.librarySettings.length; ++i) {
                            if (typeof object.librarySettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.librarySettings: object expected");
                            message.librarySettings[i] = $root.google.api.ClientLibrarySettings.fromObject(object.librarySettings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Publishing message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.Publishing} message Publishing
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Publishing.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.methodSettings = [];
                        object.codeownerGithubTeams = [];
                        object.librarySettings = [];
                    }
                    if (options.defaults) {
                        object.newIssueUri = "";
                        object.documentationUri = "";
                        object.apiShortName = "";
                        object.githubLabel = "";
                        object.docTagPrefix = "";
                        object.organization = options.enums === String ? "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED" : 0;
                    }
                    if (message.methodSettings && message.methodSettings.length) {
                        object.methodSettings = [];
                        for (var j = 0; j < message.methodSettings.length; ++j)
                            object.methodSettings[j] = $root.google.api.MethodSettings.toObject(message.methodSettings[j], options);
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        object.newIssueUri = message.newIssueUri;
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        object.documentationUri = message.documentationUri;
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        object.apiShortName = message.apiShortName;
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        object.githubLabel = message.githubLabel;
                    if (message.codeownerGithubTeams && message.codeownerGithubTeams.length) {
                        object.codeownerGithubTeams = [];
                        for (var j = 0; j < message.codeownerGithubTeams.length; ++j)
                            object.codeownerGithubTeams[j] = message.codeownerGithubTeams[j];
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        object.docTagPrefix = message.docTagPrefix;
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = options.enums === String ? $root.google.api.ClientLibraryOrganization[message.organization] === undefined ? message.organization : $root.google.api.ClientLibraryOrganization[message.organization] : message.organization;
                    if (message.librarySettings && message.librarySettings.length) {
                        object.librarySettings = [];
                        for (var j = 0; j < message.librarySettings.length; ++j)
                            object.librarySettings[j] = $root.google.api.ClientLibrarySettings.toObject(message.librarySettings[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Publishing to JSON.
                 * @function toJSON
                 * @memberof google.api.Publishing
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Publishing.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Publishing
                 * @function getTypeUrl
                 * @memberof google.api.Publishing
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Publishing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Publishing";
                };
    
                return Publishing;
            })();
    
            api.JavaSettings = (function() {
    
                /**
                 * Properties of a JavaSettings.
                 * @memberof google.api
                 * @interface IJavaSettings
                 * @property {string|null} [libraryPackage] JavaSettings libraryPackage
                 * @property {Object.<string,string>|null} [serviceClassNames] JavaSettings serviceClassNames
                 * @property {google.api.ICommonLanguageSettings|null} [common] JavaSettings common
                 */
    
                /**
                 * Constructs a new JavaSettings.
                 * @memberof google.api
                 * @classdesc Represents a JavaSettings.
                 * @implements IJavaSettings
                 * @constructor
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 */
                function JavaSettings(properties) {
                    this.serviceClassNames = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * JavaSettings libraryPackage.
                 * @member {string} libraryPackage
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.libraryPackage = "";
    
                /**
                 * JavaSettings serviceClassNames.
                 * @member {Object.<string,string>} serviceClassNames
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.serviceClassNames = $util.emptyObject;
    
                /**
                 * JavaSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.common = null;
    
                /**
                 * Creates a new JavaSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 * @returns {google.api.JavaSettings} JavaSettings instance
                 */
                JavaSettings.create = function create(properties) {
                    return new JavaSettings(properties);
                };
    
                /**
                 * Encodes the specified JavaSettings message. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.libraryPackage != null && Object.hasOwnProperty.call(message, "libraryPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.libraryPackage);
                    if (message.serviceClassNames != null && Object.hasOwnProperty.call(message, "serviceClassNames"))
                        for (var keys = Object.keys(message.serviceClassNames), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.serviceClassNames[keys[i]]).ldelim();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified JavaSettings message, length delimited. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.JavaSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.libraryPackage = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.serviceClassNames === $util.emptyObject)
                                    message.serviceClassNames = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.serviceClassNames[key] = value;
                                break;
                            }
                        case 3: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a JavaSettings message.
                 * @function verify
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                JavaSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        if (!$util.isString(message.libraryPackage))
                            return "libraryPackage: string expected";
                    if (message.serviceClassNames != null && message.hasOwnProperty("serviceClassNames")) {
                        if (!$util.isObject(message.serviceClassNames))
                            return "serviceClassNames: object expected";
                        var key = Object.keys(message.serviceClassNames);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.serviceClassNames[key[i]]))
                                return "serviceClassNames: string{k:string} expected";
                    }
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a JavaSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.JavaSettings} JavaSettings
                 */
                JavaSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.JavaSettings)
                        return object;
                    var message = new $root.google.api.JavaSettings();
                    if (object.libraryPackage != null)
                        message.libraryPackage = String(object.libraryPackage);
                    if (object.serviceClassNames) {
                        if (typeof object.serviceClassNames !== "object")
                            throw TypeError(".google.api.JavaSettings.serviceClassNames: object expected");
                        message.serviceClassNames = {};
                        for (var keys = Object.keys(object.serviceClassNames), i = 0; i < keys.length; ++i)
                            message.serviceClassNames[keys[i]] = String(object.serviceClassNames[keys[i]]);
                    }
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.JavaSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a JavaSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.JavaSettings} message JavaSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                JavaSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.serviceClassNames = {};
                    if (options.defaults) {
                        object.libraryPackage = "";
                        object.common = null;
                    }
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        object.libraryPackage = message.libraryPackage;
                    var keys2;
                    if (message.serviceClassNames && (keys2 = Object.keys(message.serviceClassNames)).length) {
                        object.serviceClassNames = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.serviceClassNames[keys2[j]] = message.serviceClassNames[keys2[j]];
                    }
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this JavaSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.JavaSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                JavaSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for JavaSettings
                 * @function getTypeUrl
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                JavaSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.JavaSettings";
                };
    
                return JavaSettings;
            })();
    
            api.CppSettings = (function() {
    
                /**
                 * Properties of a CppSettings.
                 * @memberof google.api
                 * @interface ICppSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] CppSettings common
                 */
    
                /**
                 * Constructs a new CppSettings.
                 * @memberof google.api
                 * @classdesc Represents a CppSettings.
                 * @implements ICppSettings
                 * @constructor
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 */
                function CppSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CppSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.CppSettings
                 * @instance
                 */
                CppSettings.prototype.common = null;
    
                /**
                 * Creates a new CppSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 * @returns {google.api.CppSettings} CppSettings instance
                 */
                CppSettings.create = function create(properties) {
                    return new CppSettings(properties);
                };
    
                /**
                 * Encodes the specified CppSettings message. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified CppSettings message, length delimited. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CppSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CppSettings message.
                 * @function verify
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CppSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a CppSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CppSettings} CppSettings
                 */
                CppSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CppSettings)
                        return object;
                    var message = new $root.google.api.CppSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.CppSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CppSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.CppSettings} message CppSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CppSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this CppSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CppSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CppSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CppSettings
                 * @function getTypeUrl
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CppSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CppSettings";
                };
    
                return CppSettings;
            })();
    
            api.PhpSettings = (function() {
    
                /**
                 * Properties of a PhpSettings.
                 * @memberof google.api
                 * @interface IPhpSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PhpSettings common
                 */
    
                /**
                 * Constructs a new PhpSettings.
                 * @memberof google.api
                 * @classdesc Represents a PhpSettings.
                 * @implements IPhpSettings
                 * @constructor
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 */
                function PhpSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PhpSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PhpSettings
                 * @instance
                 */
                PhpSettings.prototype.common = null;
    
                /**
                 * Creates a new PhpSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 * @returns {google.api.PhpSettings} PhpSettings instance
                 */
                PhpSettings.create = function create(properties) {
                    return new PhpSettings(properties);
                };
    
                /**
                 * Encodes the specified PhpSettings message. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PhpSettings message, length delimited. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PhpSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PhpSettings message.
                 * @function verify
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PhpSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PhpSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PhpSettings} PhpSettings
                 */
                PhpSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PhpSettings)
                        return object;
                    var message = new $root.google.api.PhpSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PhpSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PhpSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.PhpSettings} message PhpSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PhpSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PhpSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PhpSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PhpSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PhpSettings
                 * @function getTypeUrl
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PhpSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PhpSettings";
                };
    
                return PhpSettings;
            })();
    
            api.PythonSettings = (function() {
    
                /**
                 * Properties of a PythonSettings.
                 * @memberof google.api
                 * @interface IPythonSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PythonSettings common
                 */
    
                /**
                 * Constructs a new PythonSettings.
                 * @memberof google.api
                 * @classdesc Represents a PythonSettings.
                 * @implements IPythonSettings
                 * @constructor
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 */
                function PythonSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PythonSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PythonSettings
                 * @instance
                 */
                PythonSettings.prototype.common = null;
    
                /**
                 * Creates a new PythonSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 * @returns {google.api.PythonSettings} PythonSettings instance
                 */
                PythonSettings.create = function create(properties) {
                    return new PythonSettings(properties);
                };
    
                /**
                 * Encodes the specified PythonSettings message. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PythonSettings message, length delimited. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PythonSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PythonSettings message.
                 * @function verify
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PythonSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PythonSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PythonSettings} PythonSettings
                 */
                PythonSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PythonSettings)
                        return object;
                    var message = new $root.google.api.PythonSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PythonSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PythonSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.PythonSettings} message PythonSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PythonSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PythonSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PythonSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PythonSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PythonSettings
                 * @function getTypeUrl
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PythonSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PythonSettings";
                };
    
                return PythonSettings;
            })();
    
            api.NodeSettings = (function() {
    
                /**
                 * Properties of a NodeSettings.
                 * @memberof google.api
                 * @interface INodeSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] NodeSettings common
                 */
    
                /**
                 * Constructs a new NodeSettings.
                 * @memberof google.api
                 * @classdesc Represents a NodeSettings.
                 * @implements INodeSettings
                 * @constructor
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 */
                function NodeSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * NodeSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.NodeSettings
                 * @instance
                 */
                NodeSettings.prototype.common = null;
    
                /**
                 * Creates a new NodeSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 * @returns {google.api.NodeSettings} NodeSettings instance
                 */
                NodeSettings.create = function create(properties) {
                    return new NodeSettings(properties);
                };
    
                /**
                 * Encodes the specified NodeSettings message. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified NodeSettings message, length delimited. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.NodeSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a NodeSettings message.
                 * @function verify
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NodeSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a NodeSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.NodeSettings} NodeSettings
                 */
                NodeSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.NodeSettings)
                        return object;
                    var message = new $root.google.api.NodeSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.NodeSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a NodeSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.NodeSettings} message NodeSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NodeSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this NodeSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.NodeSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NodeSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for NodeSettings
                 * @function getTypeUrl
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                NodeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.NodeSettings";
                };
    
                return NodeSettings;
            })();
    
            api.DotnetSettings = (function() {
    
                /**
                 * Properties of a DotnetSettings.
                 * @memberof google.api
                 * @interface IDotnetSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] DotnetSettings common
                 */
    
                /**
                 * Constructs a new DotnetSettings.
                 * @memberof google.api
                 * @classdesc Represents a DotnetSettings.
                 * @implements IDotnetSettings
                 * @constructor
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 */
                function DotnetSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DotnetSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.common = null;
    
                /**
                 * Creates a new DotnetSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 * @returns {google.api.DotnetSettings} DotnetSettings instance
                 */
                DotnetSettings.create = function create(properties) {
                    return new DotnetSettings(properties);
                };
    
                /**
                 * Encodes the specified DotnetSettings message. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DotnetSettings message, length delimited. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.DotnetSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DotnetSettings message.
                 * @function verify
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DotnetSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a DotnetSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 */
                DotnetSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.DotnetSettings)
                        return object;
                    var message = new $root.google.api.DotnetSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.DotnetSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DotnetSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.DotnetSettings} message DotnetSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DotnetSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this DotnetSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.DotnetSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DotnetSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DotnetSettings
                 * @function getTypeUrl
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DotnetSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.DotnetSettings";
                };
    
                return DotnetSettings;
            })();
    
            api.RubySettings = (function() {
    
                /**
                 * Properties of a RubySettings.
                 * @memberof google.api
                 * @interface IRubySettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] RubySettings common
                 */
    
                /**
                 * Constructs a new RubySettings.
                 * @memberof google.api
                 * @classdesc Represents a RubySettings.
                 * @implements IRubySettings
                 * @constructor
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 */
                function RubySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RubySettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.RubySettings
                 * @instance
                 */
                RubySettings.prototype.common = null;
    
                /**
                 * Creates a new RubySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 * @returns {google.api.RubySettings} RubySettings instance
                 */
                RubySettings.create = function create(properties) {
                    return new RubySettings(properties);
                };
    
                /**
                 * Encodes the specified RubySettings message. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RubySettings message, length delimited. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RubySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RubySettings message.
                 * @function verify
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RubySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a RubySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RubySettings} RubySettings
                 */
                RubySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RubySettings)
                        return object;
                    var message = new $root.google.api.RubySettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.RubySettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RubySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.RubySettings} message RubySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RubySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this RubySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.RubySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RubySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RubySettings
                 * @function getTypeUrl
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RubySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RubySettings";
                };
    
                return RubySettings;
            })();
    
            api.GoSettings = (function() {
    
                /**
                 * Properties of a GoSettings.
                 * @memberof google.api
                 * @interface IGoSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] GoSettings common
                 */
    
                /**
                 * Constructs a new GoSettings.
                 * @memberof google.api
                 * @classdesc Represents a GoSettings.
                 * @implements IGoSettings
                 * @constructor
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 */
                function GoSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GoSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.GoSettings
                 * @instance
                 */
                GoSettings.prototype.common = null;
    
                /**
                 * Creates a new GoSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 * @returns {google.api.GoSettings} GoSettings instance
                 */
                GoSettings.create = function create(properties) {
                    return new GoSettings(properties);
                };
    
                /**
                 * Encodes the specified GoSettings message. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GoSettings message, length delimited. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.GoSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GoSettings message.
                 * @function verify
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GoSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a GoSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.GoSettings} GoSettings
                 */
                GoSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.GoSettings)
                        return object;
                    var message = new $root.google.api.GoSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.GoSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GoSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.GoSettings} message GoSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GoSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this GoSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.GoSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GoSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GoSettings
                 * @function getTypeUrl
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GoSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.GoSettings";
                };
    
                return GoSettings;
            })();
    
            api.MethodSettings = (function() {
    
                /**
                 * Properties of a MethodSettings.
                 * @memberof google.api
                 * @interface IMethodSettings
                 * @property {string|null} [selector] MethodSettings selector
                 * @property {google.api.MethodSettings.ILongRunning|null} [longRunning] MethodSettings longRunning
                 */
    
                /**
                 * Constructs a new MethodSettings.
                 * @memberof google.api
                 * @classdesc Represents a MethodSettings.
                 * @implements IMethodSettings
                 * @constructor
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 */
                function MethodSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodSettings selector.
                 * @member {string} selector
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.selector = "";
    
                /**
                 * MethodSettings longRunning.
                 * @member {google.api.MethodSettings.ILongRunning|null|undefined} longRunning
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.longRunning = null;
    
                /**
                 * Creates a new MethodSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 * @returns {google.api.MethodSettings} MethodSettings instance
                 */
                MethodSettings.create = function create(properties) {
                    return new MethodSettings(properties);
                };
    
                /**
                 * Encodes the specified MethodSettings message. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.longRunning != null && Object.hasOwnProperty.call(message, "longRunning"))
                        $root.google.api.MethodSettings.LongRunning.encode(message.longRunning, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodSettings message, length delimited. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.longRunning = $root.google.api.MethodSettings.LongRunning.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodSettings message.
                 * @function verify
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.longRunning != null && message.hasOwnProperty("longRunning")) {
                        var error = $root.google.api.MethodSettings.LongRunning.verify(message.longRunning);
                        if (error)
                            return "longRunning." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MethodSettings} MethodSettings
                 */
                MethodSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MethodSettings)
                        return object;
                    var message = new $root.google.api.MethodSettings();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.longRunning != null) {
                        if (typeof object.longRunning !== "object")
                            throw TypeError(".google.api.MethodSettings.longRunning: object expected");
                        message.longRunning = $root.google.api.MethodSettings.LongRunning.fromObject(object.longRunning);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.MethodSettings} message MethodSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.selector = "";
                        object.longRunning = null;
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.longRunning != null && message.hasOwnProperty("longRunning"))
                        object.longRunning = $root.google.api.MethodSettings.LongRunning.toObject(message.longRunning, options);
                    return object;
                };
    
                /**
                 * Converts this MethodSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.MethodSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodSettings
                 * @function getTypeUrl
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MethodSettings";
                };
    
                MethodSettings.LongRunning = (function() {
    
                    /**
                     * Properties of a LongRunning.
                     * @memberof google.api.MethodSettings
                     * @interface ILongRunning
                     * @property {google.protobuf.IDuration|null} [initialPollDelay] LongRunning initialPollDelay
                     * @property {number|null} [pollDelayMultiplier] LongRunning pollDelayMultiplier
                     * @property {google.protobuf.IDuration|null} [maxPollDelay] LongRunning maxPollDelay
                     * @property {google.protobuf.IDuration|null} [totalPollTimeout] LongRunning totalPollTimeout
                     */
    
                    /**
                     * Constructs a new LongRunning.
                     * @memberof google.api.MethodSettings
                     * @classdesc Represents a LongRunning.
                     * @implements ILongRunning
                     * @constructor
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     */
                    function LongRunning(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LongRunning initialPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} initialPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.initialPollDelay = null;
    
                    /**
                     * LongRunning pollDelayMultiplier.
                     * @member {number} pollDelayMultiplier
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.pollDelayMultiplier = 0;
    
                    /**
                     * LongRunning maxPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} maxPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.maxPollDelay = null;
    
                    /**
                     * LongRunning totalPollTimeout.
                     * @member {google.protobuf.IDuration|null|undefined} totalPollTimeout
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.totalPollTimeout = null;
    
                    /**
                     * Creates a new LongRunning instance using the specified properties.
                     * @function create
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning instance
                     */
                    LongRunning.create = function create(properties) {
                        return new LongRunning(properties);
                    };
    
                    /**
                     * Encodes the specified LongRunning message. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.initialPollDelay != null && Object.hasOwnProperty.call(message, "initialPollDelay"))
                            $root.google.protobuf.Duration.encode(message.initialPollDelay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pollDelayMultiplier != null && Object.hasOwnProperty.call(message, "pollDelayMultiplier"))
                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.pollDelayMultiplier);
                        if (message.maxPollDelay != null && Object.hasOwnProperty.call(message, "maxPollDelay"))
                            $root.google.protobuf.Duration.encode(message.maxPollDelay, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalPollTimeout != null && Object.hasOwnProperty.call(message, "totalPollTimeout"))
                            $root.google.protobuf.Duration.encode(message.totalPollTimeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LongRunning message, length delimited. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings.LongRunning();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.initialPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.pollDelayMultiplier = reader.float();
                                    break;
                                }
                            case 3: {
                                    message.maxPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.totalPollTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LongRunning message.
                     * @function verify
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LongRunning.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.initialPollDelay);
                            if (error)
                                return "initialPollDelay." + error;
                        }
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            if (typeof message.pollDelayMultiplier !== "number")
                                return "pollDelayMultiplier: number expected";
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.maxPollDelay);
                            if (error)
                                return "maxPollDelay." + error;
                        }
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout")) {
                            var error = $root.google.protobuf.Duration.verify(message.totalPollTimeout);
                            if (error)
                                return "totalPollTimeout." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LongRunning message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     */
                    LongRunning.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.MethodSettings.LongRunning)
                            return object;
                        var message = new $root.google.api.MethodSettings.LongRunning();
                        if (object.initialPollDelay != null) {
                            if (typeof object.initialPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.initialPollDelay: object expected");
                            message.initialPollDelay = $root.google.protobuf.Duration.fromObject(object.initialPollDelay);
                        }
                        if (object.pollDelayMultiplier != null)
                            message.pollDelayMultiplier = Number(object.pollDelayMultiplier);
                        if (object.maxPollDelay != null) {
                            if (typeof object.maxPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.maxPollDelay: object expected");
                            message.maxPollDelay = $root.google.protobuf.Duration.fromObject(object.maxPollDelay);
                        }
                        if (object.totalPollTimeout != null) {
                            if (typeof object.totalPollTimeout !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.totalPollTimeout: object expected");
                            message.totalPollTimeout = $root.google.protobuf.Duration.fromObject(object.totalPollTimeout);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LongRunning message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.LongRunning} message LongRunning
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LongRunning.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.initialPollDelay = null;
                            object.pollDelayMultiplier = 0;
                            object.maxPollDelay = null;
                            object.totalPollTimeout = null;
                        }
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay"))
                            object.initialPollDelay = $root.google.protobuf.Duration.toObject(message.initialPollDelay, options);
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            object.pollDelayMultiplier = options.json && !isFinite(message.pollDelayMultiplier) ? String(message.pollDelayMultiplier) : message.pollDelayMultiplier;
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay"))
                            object.maxPollDelay = $root.google.protobuf.Duration.toObject(message.maxPollDelay, options);
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout"))
                            object.totalPollTimeout = $root.google.protobuf.Duration.toObject(message.totalPollTimeout, options);
                        return object;
                    };
    
                    /**
                     * Converts this LongRunning to JSON.
                     * @function toJSON
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LongRunning.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LongRunning
                     * @function getTypeUrl
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LongRunning.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.MethodSettings.LongRunning";
                    };
    
                    return LongRunning;
                })();
    
                return MethodSettings;
            })();
    
            /**
             * ClientLibraryOrganization enum.
             * @name google.api.ClientLibraryOrganization
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED=0 CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED value
             * @property {number} CLOUD=1 CLOUD value
             * @property {number} ADS=2 ADS value
             * @property {number} PHOTOS=3 PHOTOS value
             * @property {number} STREET_VIEW=4 STREET_VIEW value
             */
            api.ClientLibraryOrganization = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"] = 0;
                values[valuesById[1] = "CLOUD"] = 1;
                values[valuesById[2] = "ADS"] = 2;
                values[valuesById[3] = "PHOTOS"] = 3;
                values[valuesById[4] = "STREET_VIEW"] = 4;
                return values;
            })();
    
            /**
             * ClientLibraryDestination enum.
             * @name google.api.ClientLibraryDestination
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_DESTINATION_UNSPECIFIED=0 CLIENT_LIBRARY_DESTINATION_UNSPECIFIED value
             * @property {number} GITHUB=10 GITHUB value
             * @property {number} PACKAGE_MANAGER=20 PACKAGE_MANAGER value
             */
            api.ClientLibraryDestination = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"] = 0;
                values[valuesById[10] = "GITHUB"] = 10;
                values[valuesById[20] = "PACKAGE_MANAGER"] = 20;
                return values;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] MessageOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 11, wireType 0 =*/88).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 11: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {boolean|null} [debugRedact] FieldOptions debugRedact
                 * @property {google.protobuf.FieldOptions.OptionRetention|null} [retention] FieldOptions retention
                 * @property {google.protobuf.FieldOptions.OptionTargetType|null} [target] FieldOptions target
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.debugRedact = false;
    
                /**
                 * FieldOptions retention.
                 * @member {google.protobuf.FieldOptions.OptionRetention} retention
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.retention = 0;
    
                /**
                 * FieldOptions target.
                 * @member {google.protobuf.FieldOptions.OptionTargetType} target
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.target = 0;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.debugRedact);
                    if (message.retention != null && Object.hasOwnProperty.call(message, "retention"))
                        writer.uint32(/* id 17, wireType 0 =*/136).int32(message.retention);
                    if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                        writer.uint32(/* id 18, wireType 0 =*/144).int32(message.target);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 16: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 17: {
                                message.retention = reader.int32();
                                break;
                            }
                        case 18: {
                                message.target = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        switch (message.retention) {
                        default:
                            return "retention: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.target != null && message.hasOwnProperty("target"))
                        switch (message.target) {
                        default:
                            return "target: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    switch (object.retention) {
                    default:
                        if (typeof object.retention === "number") {
                            message.retention = object.retention;
                            break;
                        }
                        break;
                    case "RETENTION_UNKNOWN":
                    case 0:
                        message.retention = 0;
                        break;
                    case "RETENTION_RUNTIME":
                    case 1:
                        message.retention = 1;
                        break;
                    case "RETENTION_SOURCE":
                    case 2:
                        message.retention = 2;
                        break;
                    }
                    switch (object.target) {
                    default:
                        if (typeof object.target === "number") {
                            message.target = object.target;
                            break;
                        }
                        break;
                    case "TARGET_TYPE_UNKNOWN":
                    case 0:
                        message.target = 0;
                        break;
                    case "TARGET_TYPE_FILE":
                    case 1:
                        message.target = 1;
                        break;
                    case "TARGET_TYPE_EXTENSION_RANGE":
                    case 2:
                        message.target = 2;
                        break;
                    case "TARGET_TYPE_MESSAGE":
                    case 3:
                        message.target = 3;
                        break;
                    case "TARGET_TYPE_FIELD":
                    case 4:
                        message.target = 4;
                        break;
                    case "TARGET_TYPE_ONEOF":
                    case 5:
                        message.target = 5;
                        break;
                    case "TARGET_TYPE_ENUM":
                    case 6:
                        message.target = 6;
                        break;
                    case "TARGET_TYPE_ENUM_ENTRY":
                    case 7:
                        message.target = 7;
                        break;
                    case "TARGET_TYPE_SERVICE":
                    case 8:
                        message.target = 8;
                        break;
                    case "TARGET_TYPE_METHOD":
                    case 9:
                        message.target = 9;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object.debugRedact = false;
                        object.retention = options.enums === String ? "RETENTION_UNKNOWN" : 0;
                        object.target = options.enums === String ? "TARGET_TYPE_UNKNOWN" : 0;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        object.retention = options.enums === String ? $root.google.protobuf.FieldOptions.OptionRetention[message.retention] === undefined ? message.retention : $root.google.protobuf.FieldOptions.OptionRetention[message.retention] : message.retention;
                    if (message.target != null && message.hasOwnProperty("target"))
                        object.target = options.enums === String ? $root.google.protobuf.FieldOptions.OptionTargetType[message.target] === undefined ? message.target : $root.google.protobuf.FieldOptions.OptionTargetType[message.target] : message.target;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                /**
                 * OptionRetention enum.
                 * @name google.protobuf.FieldOptions.OptionRetention
                 * @enum {number}
                 * @property {number} RETENTION_UNKNOWN=0 RETENTION_UNKNOWN value
                 * @property {number} RETENTION_RUNTIME=1 RETENTION_RUNTIME value
                 * @property {number} RETENTION_SOURCE=2 RETENTION_SOURCE value
                 */
                FieldOptions.OptionRetention = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "RETENTION_UNKNOWN"] = 0;
                    values[valuesById[1] = "RETENTION_RUNTIME"] = 1;
                    values[valuesById[2] = "RETENTION_SOURCE"] = 2;
                    return values;
                })();
    
                /**
                 * OptionTargetType enum.
                 * @name google.protobuf.FieldOptions.OptionTargetType
                 * @enum {number}
                 * @property {number} TARGET_TYPE_UNKNOWN=0 TARGET_TYPE_UNKNOWN value
                 * @property {number} TARGET_TYPE_FILE=1 TARGET_TYPE_FILE value
                 * @property {number} TARGET_TYPE_EXTENSION_RANGE=2 TARGET_TYPE_EXTENSION_RANGE value
                 * @property {number} TARGET_TYPE_MESSAGE=3 TARGET_TYPE_MESSAGE value
                 * @property {number} TARGET_TYPE_FIELD=4 TARGET_TYPE_FIELD value
                 * @property {number} TARGET_TYPE_ONEOF=5 TARGET_TYPE_ONEOF value
                 * @property {number} TARGET_TYPE_ENUM=6 TARGET_TYPE_ENUM value
                 * @property {number} TARGET_TYPE_ENUM_ENTRY=7 TARGET_TYPE_ENUM_ENTRY value
                 * @property {number} TARGET_TYPE_SERVICE=8 TARGET_TYPE_SERVICE value
                 * @property {number} TARGET_TYPE_METHOD=9 TARGET_TYPE_METHOD value
                 */
                FieldOptions.OptionTargetType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "TARGET_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "TARGET_TYPE_FILE"] = 1;
                    values[valuesById[2] = "TARGET_TYPE_EXTENSION_RANGE"] = 2;
                    values[valuesById[3] = "TARGET_TYPE_MESSAGE"] = 3;
                    values[valuesById[4] = "TARGET_TYPE_FIELD"] = 4;
                    values[valuesById[5] = "TARGET_TYPE_ONEOF"] = 5;
                    values[valuesById[6] = "TARGET_TYPE_ENUM"] = 6;
                    values[valuesById[7] = "TARGET_TYPE_ENUM_ENTRY"] = 7;
                    values[valuesById[8] = "TARGET_TYPE_SERVICE"] = 8;
                    values[valuesById[9] = "TARGET_TYPE_METHOD"] = 9;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] EnumOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 6: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            return protobuf;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        return google;
    })();

    return $root;
});
