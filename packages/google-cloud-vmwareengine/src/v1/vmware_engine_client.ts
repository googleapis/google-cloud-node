// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  GrpcClientOptions,
  LROperation,
  PaginationCallback,
  GaxCall,
  IamClient,
  IamProtos,
  LocationsClient,
  LocationProtos,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1/vmware_engine_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './vmware_engine_client_config.json';
const version = require('../../../package.json').version;

/**
 *  VMwareEngine manages VMware's private clusters in the Cloud.
 * @class
 * @memberof v1
 */
export class VmwareEngineClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  iamClient: IamClient;
  locationsClient: LocationsClient;
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  vmwareEngineStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of VmwareEngineClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new VmwareEngineClient({fallback: true}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof VmwareEngineClient;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }
    this.iamClient = new this._gaxModule.IamClient(this._gaxGrpc, opts);

    this.locationsClient = new this._gaxModule.LocationsClient(
      this._gaxGrpc,
      opts
    );

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      clusterPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/privateClouds/{private_cloud}/clusters/{cluster}'
      ),
      dnsBindPermissionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/dnsBindPermission'
      ),
      dnsForwardingPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/privateClouds/{private_cloud}/dnsForwarding'
      ),
      externalAccessRulePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/networkPolicies/{network_policy}/externalAccessRules/{external_access_rule}'
      ),
      externalAddressPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/privateClouds/{private_cloud}/externalAddresses/{external_address}'
      ),
      hcxActivationKeyPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/privateClouds/{private_cloud}/hcxActivationKeys/{hcx_activation_key}'
      ),
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
      loggingServerPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/privateClouds/{private_cloud}/loggingServers/{logging_server}'
      ),
      managementDnsZoneBindingPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/privateClouds/{private_cloud}/managementDnsZoneBindings/{management_dns_zone_binding}'
      ),
      networkPeeringPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/networkPeerings/{network_peering}'
      ),
      networkPolicyPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/networkPolicies/{network_policy}'
      ),
      nodePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/privateClouds/{private_cloud}/clusters/{cluster}/nodes/{node}'
      ),
      nodeTypePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/nodeTypes/{node_type}'
      ),
      privateCloudPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/privateClouds/{private_cloud}'
      ),
      privateConnectionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/privateConnections/{private_connection}'
      ),
      projectPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}'
      ),
      subnetPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/privateClouds/{private_cloud}/subnets/{subnet}'
      ),
      vmwareEngineNetworkPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listPrivateClouds: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'privateClouds'
      ),
      listClusters: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'clusters'
      ),
      listNodes: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'nodes'
      ),
      listExternalAddresses: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'externalAddresses'
      ),
      fetchNetworkPolicyExternalAddresses: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'externalAddresses'
      ),
      listSubnets: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'subnets'
      ),
      listExternalAccessRules: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'externalAccessRules'
      ),
      listLoggingServers: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'loggingServers'
      ),
      listNodeTypes: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'nodeTypes'
      ),
      listNetworkPeerings: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'networkPeerings'
      ),
      listPeeringRoutes: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'peeringRoutes'
      ),
      listHcxActivationKeys: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'hcxActivationKeys'
      ),
      listNetworkPolicies: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'networkPolicies'
      ),
      listManagementDnsZoneBindings: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'managementDnsZoneBindings'
      ),
      listVmwareEngineNetworks: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'vmwareEngineNetworks'
      ),
      listPrivateConnections: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'privateConnections'
      ),
      listPrivateConnectionPeeringRoutes: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'peeringRoutes'
      ),
    };

    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);
    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const lroOptions: GrpcClientOptions = {
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,
    };
    if (opts.fallback) {
      lroOptions.protoJson = protoFilesRoot;
      lroOptions.httpRules = [
        {
          selector: 'google.cloud.location.Locations.GetLocation',
          get: '/v1/{name=projects/*/locations/*}',
        },
        {
          selector: 'google.cloud.location.Locations.ListLocations',
          get: '/v1/{name=projects/*}/locations',
        },
        {
          selector: 'google.iam.v1.IAMPolicy.GetIamPolicy',
          get: '/v1/{resource=projects/*/locations/*/privateClouds/*}:getIamPolicy',
          additional_bindings: [
            {
              get: '/v1/{resource=projects/*/locations/*/privateClouds/*/clusters/*}:getIamPolicy',
            },
            {
              get: '/v1/{resource=projects/*/locations/*/privateClouds/*/hcxActivationKeys/*}:getIamPolicy',
            },
          ],
        },
        {
          selector: 'google.iam.v1.IAMPolicy.SetIamPolicy',
          post: '/v1/{resource=projects/*/locations/*/privateClouds/*}:setIamPolicy',
          body: '*',
          additional_bindings: [
            {
              post: '/v1/{resource=projects/*/locations/*/privateClouds/*/clusters/*}:setIamPolicy',
              body: '*',
            },
            {
              post: '/v1/{resource=projects/*/locations/*/privateClouds/*/hcxActivationKeys/*}:setIamPolicy',
              body: '*',
            },
          ],
        },
        {
          selector: 'google.iam.v1.IAMPolicy.TestIamPermissions',
          post: '/v1/{resource=projects/*/locations/*/privateClouds/*}:testIamPermissions',
          body: '*',
          additional_bindings: [
            {
              post: '/v1/{resource=projects/*/locations/*/privateClouds/*/clusters/*}:testIamPermissions',
              body: '*',
            },
            {
              post: '/v1/{resource=projects/*/locations/*/privateClouds/*/hcxActivationKeys/*}:testIamPermissions',
              body: '*',
            },
          ],
        },
        {
          selector: 'google.longrunning.Operations.DeleteOperation',
          delete: '/v1/{name=projects/*/locations/*/operations/*}',
        },
        {
          selector: 'google.longrunning.Operations.GetOperation',
          get: '/v1/{name=projects/*/locations/*/operations/*}',
        },
        {
          selector: 'google.longrunning.Operations.ListOperations',
          get: '/v1/{name=projects/*/locations/*}/operations',
        },
      ];
    }
    this.operationsClient = this._gaxModule
      .lro(lroOptions)
      .operationsClient(opts);
    const createPrivateCloudResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.PrivateCloud'
    ) as gax.protobuf.Type;
    const createPrivateCloudMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updatePrivateCloudResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.PrivateCloud'
    ) as gax.protobuf.Type;
    const updatePrivateCloudMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deletePrivateCloudResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.PrivateCloud'
    ) as gax.protobuf.Type;
    const deletePrivateCloudMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const undeletePrivateCloudResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.PrivateCloud'
    ) as gax.protobuf.Type;
    const undeletePrivateCloudMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createClusterResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.Cluster'
    ) as gax.protobuf.Type;
    const createClusterMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateClusterResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.Cluster'
    ) as gax.protobuf.Type;
    const updateClusterMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deleteClusterResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteClusterMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createExternalAddressResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.ExternalAddress'
    ) as gax.protobuf.Type;
    const createExternalAddressMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateExternalAddressResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.ExternalAddress'
    ) as gax.protobuf.Type;
    const updateExternalAddressMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deleteExternalAddressResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteExternalAddressMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateSubnetResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.Subnet'
    ) as gax.protobuf.Type;
    const updateSubnetMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createExternalAccessRuleResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.ExternalAccessRule'
    ) as gax.protobuf.Type;
    const createExternalAccessRuleMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateExternalAccessRuleResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.ExternalAccessRule'
    ) as gax.protobuf.Type;
    const updateExternalAccessRuleMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deleteExternalAccessRuleResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteExternalAccessRuleMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createLoggingServerResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.LoggingServer'
    ) as gax.protobuf.Type;
    const createLoggingServerMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateLoggingServerResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.LoggingServer'
    ) as gax.protobuf.Type;
    const updateLoggingServerMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deleteLoggingServerResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteLoggingServerMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const resetNsxCredentialsResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.PrivateCloud'
    ) as gax.protobuf.Type;
    const resetNsxCredentialsMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const resetVcenterCredentialsResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.PrivateCloud'
    ) as gax.protobuf.Type;
    const resetVcenterCredentialsMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateDnsForwardingResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.DnsForwarding'
    ) as gax.protobuf.Type;
    const updateDnsForwardingMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createNetworkPeeringResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.NetworkPeering'
    ) as gax.protobuf.Type;
    const createNetworkPeeringMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deleteNetworkPeeringResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteNetworkPeeringMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateNetworkPeeringResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.NetworkPeering'
    ) as gax.protobuf.Type;
    const updateNetworkPeeringMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createHcxActivationKeyResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.HcxActivationKey'
    ) as gax.protobuf.Type;
    const createHcxActivationKeyMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createNetworkPolicyResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.NetworkPolicy'
    ) as gax.protobuf.Type;
    const createNetworkPolicyMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateNetworkPolicyResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.NetworkPolicy'
    ) as gax.protobuf.Type;
    const updateNetworkPolicyMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deleteNetworkPolicyResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteNetworkPolicyMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createManagementDnsZoneBindingResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding'
    ) as gax.protobuf.Type;
    const createManagementDnsZoneBindingMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateManagementDnsZoneBindingResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding'
    ) as gax.protobuf.Type;
    const updateManagementDnsZoneBindingMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deleteManagementDnsZoneBindingResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteManagementDnsZoneBindingMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const repairManagementDnsZoneBindingResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding'
    ) as gax.protobuf.Type;
    const repairManagementDnsZoneBindingMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createVmwareEngineNetworkResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.VmwareEngineNetwork'
    ) as gax.protobuf.Type;
    const createVmwareEngineNetworkMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updateVmwareEngineNetworkResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.VmwareEngineNetwork'
    ) as gax.protobuf.Type;
    const updateVmwareEngineNetworkMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deleteVmwareEngineNetworkResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deleteVmwareEngineNetworkMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const createPrivateConnectionResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.PrivateConnection'
    ) as gax.protobuf.Type;
    const createPrivateConnectionMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const updatePrivateConnectionResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.PrivateConnection'
    ) as gax.protobuf.Type;
    const updatePrivateConnectionMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const deletePrivateConnectionResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const deletePrivateConnectionMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const grantDnsBindPermissionResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.DnsBindPermission'
    ) as gax.protobuf.Type;
    const grantDnsBindPermissionMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;
    const revokeDnsBindPermissionResponse = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.DnsBindPermission'
    ) as gax.protobuf.Type;
    const revokeDnsBindPermissionMetadata = protoFilesRoot.lookup(
      '.google.cloud.vmwareengine.v1.OperationMetadata'
    ) as gax.protobuf.Type;

    this.descriptors.longrunning = {
      createPrivateCloud: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createPrivateCloudResponse.decode.bind(createPrivateCloudResponse),
        createPrivateCloudMetadata.decode.bind(createPrivateCloudMetadata)
      ),
      updatePrivateCloud: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updatePrivateCloudResponse.decode.bind(updatePrivateCloudResponse),
        updatePrivateCloudMetadata.decode.bind(updatePrivateCloudMetadata)
      ),
      deletePrivateCloud: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deletePrivateCloudResponse.decode.bind(deletePrivateCloudResponse),
        deletePrivateCloudMetadata.decode.bind(deletePrivateCloudMetadata)
      ),
      undeletePrivateCloud: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        undeletePrivateCloudResponse.decode.bind(undeletePrivateCloudResponse),
        undeletePrivateCloudMetadata.decode.bind(undeletePrivateCloudMetadata)
      ),
      createCluster: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createClusterResponse.decode.bind(createClusterResponse),
        createClusterMetadata.decode.bind(createClusterMetadata)
      ),
      updateCluster: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateClusterResponse.decode.bind(updateClusterResponse),
        updateClusterMetadata.decode.bind(updateClusterMetadata)
      ),
      deleteCluster: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteClusterResponse.decode.bind(deleteClusterResponse),
        deleteClusterMetadata.decode.bind(deleteClusterMetadata)
      ),
      createExternalAddress: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createExternalAddressResponse.decode.bind(
          createExternalAddressResponse
        ),
        createExternalAddressMetadata.decode.bind(createExternalAddressMetadata)
      ),
      updateExternalAddress: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateExternalAddressResponse.decode.bind(
          updateExternalAddressResponse
        ),
        updateExternalAddressMetadata.decode.bind(updateExternalAddressMetadata)
      ),
      deleteExternalAddress: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteExternalAddressResponse.decode.bind(
          deleteExternalAddressResponse
        ),
        deleteExternalAddressMetadata.decode.bind(deleteExternalAddressMetadata)
      ),
      updateSubnet: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateSubnetResponse.decode.bind(updateSubnetResponse),
        updateSubnetMetadata.decode.bind(updateSubnetMetadata)
      ),
      createExternalAccessRule: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createExternalAccessRuleResponse.decode.bind(
          createExternalAccessRuleResponse
        ),
        createExternalAccessRuleMetadata.decode.bind(
          createExternalAccessRuleMetadata
        )
      ),
      updateExternalAccessRule: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateExternalAccessRuleResponse.decode.bind(
          updateExternalAccessRuleResponse
        ),
        updateExternalAccessRuleMetadata.decode.bind(
          updateExternalAccessRuleMetadata
        )
      ),
      deleteExternalAccessRule: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteExternalAccessRuleResponse.decode.bind(
          deleteExternalAccessRuleResponse
        ),
        deleteExternalAccessRuleMetadata.decode.bind(
          deleteExternalAccessRuleMetadata
        )
      ),
      createLoggingServer: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createLoggingServerResponse.decode.bind(createLoggingServerResponse),
        createLoggingServerMetadata.decode.bind(createLoggingServerMetadata)
      ),
      updateLoggingServer: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateLoggingServerResponse.decode.bind(updateLoggingServerResponse),
        updateLoggingServerMetadata.decode.bind(updateLoggingServerMetadata)
      ),
      deleteLoggingServer: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteLoggingServerResponse.decode.bind(deleteLoggingServerResponse),
        deleteLoggingServerMetadata.decode.bind(deleteLoggingServerMetadata)
      ),
      resetNsxCredentials: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        resetNsxCredentialsResponse.decode.bind(resetNsxCredentialsResponse),
        resetNsxCredentialsMetadata.decode.bind(resetNsxCredentialsMetadata)
      ),
      resetVcenterCredentials: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        resetVcenterCredentialsResponse.decode.bind(
          resetVcenterCredentialsResponse
        ),
        resetVcenterCredentialsMetadata.decode.bind(
          resetVcenterCredentialsMetadata
        )
      ),
      updateDnsForwarding: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateDnsForwardingResponse.decode.bind(updateDnsForwardingResponse),
        updateDnsForwardingMetadata.decode.bind(updateDnsForwardingMetadata)
      ),
      createNetworkPeering: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createNetworkPeeringResponse.decode.bind(createNetworkPeeringResponse),
        createNetworkPeeringMetadata.decode.bind(createNetworkPeeringMetadata)
      ),
      deleteNetworkPeering: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteNetworkPeeringResponse.decode.bind(deleteNetworkPeeringResponse),
        deleteNetworkPeeringMetadata.decode.bind(deleteNetworkPeeringMetadata)
      ),
      updateNetworkPeering: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateNetworkPeeringResponse.decode.bind(updateNetworkPeeringResponse),
        updateNetworkPeeringMetadata.decode.bind(updateNetworkPeeringMetadata)
      ),
      createHcxActivationKey: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createHcxActivationKeyResponse.decode.bind(
          createHcxActivationKeyResponse
        ),
        createHcxActivationKeyMetadata.decode.bind(
          createHcxActivationKeyMetadata
        )
      ),
      createNetworkPolicy: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createNetworkPolicyResponse.decode.bind(createNetworkPolicyResponse),
        createNetworkPolicyMetadata.decode.bind(createNetworkPolicyMetadata)
      ),
      updateNetworkPolicy: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateNetworkPolicyResponse.decode.bind(updateNetworkPolicyResponse),
        updateNetworkPolicyMetadata.decode.bind(updateNetworkPolicyMetadata)
      ),
      deleteNetworkPolicy: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteNetworkPolicyResponse.decode.bind(deleteNetworkPolicyResponse),
        deleteNetworkPolicyMetadata.decode.bind(deleteNetworkPolicyMetadata)
      ),
      createManagementDnsZoneBinding: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createManagementDnsZoneBindingResponse.decode.bind(
          createManagementDnsZoneBindingResponse
        ),
        createManagementDnsZoneBindingMetadata.decode.bind(
          createManagementDnsZoneBindingMetadata
        )
      ),
      updateManagementDnsZoneBinding: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateManagementDnsZoneBindingResponse.decode.bind(
          updateManagementDnsZoneBindingResponse
        ),
        updateManagementDnsZoneBindingMetadata.decode.bind(
          updateManagementDnsZoneBindingMetadata
        )
      ),
      deleteManagementDnsZoneBinding: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteManagementDnsZoneBindingResponse.decode.bind(
          deleteManagementDnsZoneBindingResponse
        ),
        deleteManagementDnsZoneBindingMetadata.decode.bind(
          deleteManagementDnsZoneBindingMetadata
        )
      ),
      repairManagementDnsZoneBinding: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        repairManagementDnsZoneBindingResponse.decode.bind(
          repairManagementDnsZoneBindingResponse
        ),
        repairManagementDnsZoneBindingMetadata.decode.bind(
          repairManagementDnsZoneBindingMetadata
        )
      ),
      createVmwareEngineNetwork: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createVmwareEngineNetworkResponse.decode.bind(
          createVmwareEngineNetworkResponse
        ),
        createVmwareEngineNetworkMetadata.decode.bind(
          createVmwareEngineNetworkMetadata
        )
      ),
      updateVmwareEngineNetwork: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updateVmwareEngineNetworkResponse.decode.bind(
          updateVmwareEngineNetworkResponse
        ),
        updateVmwareEngineNetworkMetadata.decode.bind(
          updateVmwareEngineNetworkMetadata
        )
      ),
      deleteVmwareEngineNetwork: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deleteVmwareEngineNetworkResponse.decode.bind(
          deleteVmwareEngineNetworkResponse
        ),
        deleteVmwareEngineNetworkMetadata.decode.bind(
          deleteVmwareEngineNetworkMetadata
        )
      ),
      createPrivateConnection: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        createPrivateConnectionResponse.decode.bind(
          createPrivateConnectionResponse
        ),
        createPrivateConnectionMetadata.decode.bind(
          createPrivateConnectionMetadata
        )
      ),
      updatePrivateConnection: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        updatePrivateConnectionResponse.decode.bind(
          updatePrivateConnectionResponse
        ),
        updatePrivateConnectionMetadata.decode.bind(
          updatePrivateConnectionMetadata
        )
      ),
      deletePrivateConnection: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        deletePrivateConnectionResponse.decode.bind(
          deletePrivateConnectionResponse
        ),
        deletePrivateConnectionMetadata.decode.bind(
          deletePrivateConnectionMetadata
        )
      ),
      grantDnsBindPermission: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        grantDnsBindPermissionResponse.decode.bind(
          grantDnsBindPermissionResponse
        ),
        grantDnsBindPermissionMetadata.decode.bind(
          grantDnsBindPermissionMetadata
        )
      ),
      revokeDnsBindPermission: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        revokeDnsBindPermissionResponse.decode.bind(
          revokeDnsBindPermissionResponse
        ),
        revokeDnsBindPermissionMetadata.decode.bind(
          revokeDnsBindPermissionMetadata
        )
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.vmwareengine.v1.VmwareEngine',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.vmwareEngineStub) {
      return this.vmwareEngineStub;
    }

    // Put together the "service stub" for
    // google.cloud.vmwareengine.v1.VmwareEngine.
    this.vmwareEngineStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.vmwareengine.v1.VmwareEngine'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.vmwareengine.v1.VmwareEngine,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const vmwareEngineStubMethods = [
      'listPrivateClouds',
      'getPrivateCloud',
      'createPrivateCloud',
      'updatePrivateCloud',
      'deletePrivateCloud',
      'undeletePrivateCloud',
      'listClusters',
      'getCluster',
      'createCluster',
      'updateCluster',
      'deleteCluster',
      'listNodes',
      'getNode',
      'listExternalAddresses',
      'fetchNetworkPolicyExternalAddresses',
      'getExternalAddress',
      'createExternalAddress',
      'updateExternalAddress',
      'deleteExternalAddress',
      'listSubnets',
      'getSubnet',
      'updateSubnet',
      'listExternalAccessRules',
      'getExternalAccessRule',
      'createExternalAccessRule',
      'updateExternalAccessRule',
      'deleteExternalAccessRule',
      'listLoggingServers',
      'getLoggingServer',
      'createLoggingServer',
      'updateLoggingServer',
      'deleteLoggingServer',
      'listNodeTypes',
      'getNodeType',
      'showNsxCredentials',
      'showVcenterCredentials',
      'resetNsxCredentials',
      'resetVcenterCredentials',
      'getDnsForwarding',
      'updateDnsForwarding',
      'getNetworkPeering',
      'listNetworkPeerings',
      'createNetworkPeering',
      'deleteNetworkPeering',
      'updateNetworkPeering',
      'listPeeringRoutes',
      'createHcxActivationKey',
      'listHcxActivationKeys',
      'getHcxActivationKey',
      'getNetworkPolicy',
      'listNetworkPolicies',
      'createNetworkPolicy',
      'updateNetworkPolicy',
      'deleteNetworkPolicy',
      'listManagementDnsZoneBindings',
      'getManagementDnsZoneBinding',
      'createManagementDnsZoneBinding',
      'updateManagementDnsZoneBinding',
      'deleteManagementDnsZoneBinding',
      'repairManagementDnsZoneBinding',
      'createVmwareEngineNetwork',
      'updateVmwareEngineNetwork',
      'deleteVmwareEngineNetwork',
      'getVmwareEngineNetwork',
      'listVmwareEngineNetworks',
      'createPrivateConnection',
      'getPrivateConnection',
      'listPrivateConnections',
      'updatePrivateConnection',
      'deletePrivateConnection',
      'listPrivateConnectionPeeringRoutes',
      'grantDnsBindPermission',
      'getDnsBindPermission',
      'revokeDnsBindPermission',
    ];
    for (const methodName of vmwareEngineStubMethods) {
      const callPromise = this.vmwareEngineStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor =
        this.descriptors.page[methodName] ||
        this.descriptors.longrunning[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.vmwareEngineStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'vmwareengine.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'vmwareengine.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Retrieves a `PrivateCloud` resource by its resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the private cloud to retrieve.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.PrivateCloud|PrivateCloud}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_private_cloud.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetPrivateCloud_async
   */
  getPrivateCloud(
    request?: protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IPrivateCloud,
      protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest | undefined,
      {} | undefined,
    ]
  >;
  getPrivateCloud(
    request: protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IPrivateCloud,
      | protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getPrivateCloud(
    request: protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IPrivateCloud,
      | protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getPrivateCloud(
    request?: protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.IPrivateCloud,
          | protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.IPrivateCloud,
      | protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IPrivateCloud,
      protos.google.cloud.vmwareengine.v1.IGetPrivateCloudRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getPrivateCloud(request, options, callback);
  }
  /**
   * Retrieves a `Cluster` resource by its resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The cluster resource name to retrieve.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.Cluster|Cluster}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_cluster.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetCluster_async
   */
  getCluster(
    request?: protos.google.cloud.vmwareengine.v1.IGetClusterRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ICluster,
      protos.google.cloud.vmwareengine.v1.IGetClusterRequest | undefined,
      {} | undefined,
    ]
  >;
  getCluster(
    request: protos.google.cloud.vmwareengine.v1.IGetClusterRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.ICluster,
      protos.google.cloud.vmwareengine.v1.IGetClusterRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getCluster(
    request: protos.google.cloud.vmwareengine.v1.IGetClusterRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.ICluster,
      protos.google.cloud.vmwareengine.v1.IGetClusterRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getCluster(
    request?: protos.google.cloud.vmwareengine.v1.IGetClusterRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.ICluster,
          | protos.google.cloud.vmwareengine.v1.IGetClusterRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.ICluster,
      protos.google.cloud.vmwareengine.v1.IGetClusterRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ICluster,
      protos.google.cloud.vmwareengine.v1.IGetClusterRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getCluster(request, options, callback);
  }
  /**
   * Gets details of a single node.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the node to retrieve.
   *   For example:
   *   `projects/{project}/locations/{location}/privateClouds/{private_cloud}/clusters/{cluster}/nodes/{node}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.Node|Node}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_node.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetNode_async
   */
  getNode(
    request?: protos.google.cloud.vmwareengine.v1.IGetNodeRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INode,
      protos.google.cloud.vmwareengine.v1.IGetNodeRequest | undefined,
      {} | undefined,
    ]
  >;
  getNode(
    request: protos.google.cloud.vmwareengine.v1.IGetNodeRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.INode,
      protos.google.cloud.vmwareengine.v1.IGetNodeRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getNode(
    request: protos.google.cloud.vmwareengine.v1.IGetNodeRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.INode,
      protos.google.cloud.vmwareengine.v1.IGetNodeRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getNode(
    request?: protos.google.cloud.vmwareengine.v1.IGetNodeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.INode,
          | protos.google.cloud.vmwareengine.v1.IGetNodeRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.INode,
      protos.google.cloud.vmwareengine.v1.IGetNodeRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INode,
      protos.google.cloud.vmwareengine.v1.IGetNodeRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getNode(request, options, callback);
  }
  /**
   * Gets details of a single external IP address.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the external IP address to retrieve.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/externalAddresses/my-ip`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.ExternalAddress|ExternalAddress}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_external_address.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetExternalAddress_async
   */
  getExternalAddress(
    request?: protos.google.cloud.vmwareengine.v1.IGetExternalAddressRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IExternalAddress,
      (
        | protos.google.cloud.vmwareengine.v1.IGetExternalAddressRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  getExternalAddress(
    request: protos.google.cloud.vmwareengine.v1.IGetExternalAddressRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IExternalAddress,
      | protos.google.cloud.vmwareengine.v1.IGetExternalAddressRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getExternalAddress(
    request: protos.google.cloud.vmwareengine.v1.IGetExternalAddressRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IExternalAddress,
      | protos.google.cloud.vmwareengine.v1.IGetExternalAddressRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getExternalAddress(
    request?: protos.google.cloud.vmwareengine.v1.IGetExternalAddressRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.IExternalAddress,
          | protos.google.cloud.vmwareengine.v1.IGetExternalAddressRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.IExternalAddress,
      | protos.google.cloud.vmwareengine.v1.IGetExternalAddressRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IExternalAddress,
      (
        | protos.google.cloud.vmwareengine.v1.IGetExternalAddressRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getExternalAddress(request, options, callback);
  }
  /**
   * Gets details of a single subnet.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the subnet to retrieve.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/subnets/my-subnet`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.Subnet|Subnet}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_subnet.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetSubnet_async
   */
  getSubnet(
    request?: protos.google.cloud.vmwareengine.v1.IGetSubnetRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ISubnet,
      protos.google.cloud.vmwareengine.v1.IGetSubnetRequest | undefined,
      {} | undefined,
    ]
  >;
  getSubnet(
    request: protos.google.cloud.vmwareengine.v1.IGetSubnetRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.ISubnet,
      protos.google.cloud.vmwareengine.v1.IGetSubnetRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getSubnet(
    request: protos.google.cloud.vmwareengine.v1.IGetSubnetRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.ISubnet,
      protos.google.cloud.vmwareengine.v1.IGetSubnetRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getSubnet(
    request?: protos.google.cloud.vmwareengine.v1.IGetSubnetRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.ISubnet,
          | protos.google.cloud.vmwareengine.v1.IGetSubnetRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.ISubnet,
      protos.google.cloud.vmwareengine.v1.IGetSubnetRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ISubnet,
      protos.google.cloud.vmwareengine.v1.IGetSubnetRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getSubnet(request, options, callback);
  }
  /**
   * Gets details of a single external access rule.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the external access firewall rule to
   *   retrieve. Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1/networkPolicies/my-policy/externalAccessRules/my-rule`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.ExternalAccessRule|ExternalAccessRule}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_external_access_rule.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetExternalAccessRule_async
   */
  getExternalAccessRule(
    request?: protos.google.cloud.vmwareengine.v1.IGetExternalAccessRuleRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
      (
        | protos.google.cloud.vmwareengine.v1.IGetExternalAccessRuleRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  getExternalAccessRule(
    request: protos.google.cloud.vmwareengine.v1.IGetExternalAccessRuleRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
      | protos.google.cloud.vmwareengine.v1.IGetExternalAccessRuleRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getExternalAccessRule(
    request: protos.google.cloud.vmwareengine.v1.IGetExternalAccessRuleRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
      | protos.google.cloud.vmwareengine.v1.IGetExternalAccessRuleRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getExternalAccessRule(
    request?: protos.google.cloud.vmwareengine.v1.IGetExternalAccessRuleRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
          | protos.google.cloud.vmwareengine.v1.IGetExternalAccessRuleRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
      | protos.google.cloud.vmwareengine.v1.IGetExternalAccessRuleRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
      (
        | protos.google.cloud.vmwareengine.v1.IGetExternalAccessRuleRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getExternalAccessRule(request, options, callback);
  }
  /**
   * Gets details of a logging server.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the Logging Server to retrieve.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/loggingServers/my-logging-server`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.LoggingServer|LoggingServer}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_logging_server.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetLoggingServer_async
   */
  getLoggingServer(
    request?: protos.google.cloud.vmwareengine.v1.IGetLoggingServerRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ILoggingServer,
      protos.google.cloud.vmwareengine.v1.IGetLoggingServerRequest | undefined,
      {} | undefined,
    ]
  >;
  getLoggingServer(
    request: protos.google.cloud.vmwareengine.v1.IGetLoggingServerRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.ILoggingServer,
      | protos.google.cloud.vmwareengine.v1.IGetLoggingServerRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getLoggingServer(
    request: protos.google.cloud.vmwareengine.v1.IGetLoggingServerRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.ILoggingServer,
      | protos.google.cloud.vmwareengine.v1.IGetLoggingServerRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getLoggingServer(
    request?: protos.google.cloud.vmwareengine.v1.IGetLoggingServerRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.ILoggingServer,
          | protos.google.cloud.vmwareengine.v1.IGetLoggingServerRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.ILoggingServer,
      | protos.google.cloud.vmwareengine.v1.IGetLoggingServerRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ILoggingServer,
      protos.google.cloud.vmwareengine.v1.IGetLoggingServerRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getLoggingServer(request, options, callback);
  }
  /**
   * Gets details of a single `NodeType`.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the node type to retrieve.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-proj/locations/us-central1-a/nodeTypes/standard-72`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.NodeType|NodeType}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_node_type.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetNodeType_async
   */
  getNodeType(
    request?: protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INodeType,
      protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest | undefined,
      {} | undefined,
    ]
  >;
  getNodeType(
    request: protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.INodeType,
      | protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getNodeType(
    request: protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.INodeType,
      | protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getNodeType(
    request?: protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.INodeType,
          | protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.INodeType,
      | protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INodeType,
      protos.google.cloud.vmwareengine.v1.IGetNodeTypeRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getNodeType(request, options, callback);
  }
  /**
   * Gets details of credentials for NSX appliance.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.privateCloud
   *   Required. The resource name of the private cloud
   *   to be queried for credentials.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.Credentials|Credentials}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.show_nsx_credentials.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ShowNsxCredentials_async
   */
  showNsxCredentials(
    request?: protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ICredentials,
      (
        | protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  showNsxCredentials(
    request: protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.ICredentials,
      | protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  showNsxCredentials(
    request: protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.ICredentials,
      | protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  showNsxCredentials(
    request?: protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.ICredentials,
          | protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.ICredentials,
      | protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ICredentials,
      (
        | protos.google.cloud.vmwareengine.v1.IShowNsxCredentialsRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        private_cloud: request.privateCloud ?? '',
      });
    this.initialize();
    return this.innerApiCalls.showNsxCredentials(request, options, callback);
  }
  /**
   * Gets details of credentials for Vcenter appliance.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.privateCloud
   *   Required. The resource name of the private cloud
   *   to be queried for credentials.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {string} [request.username]
   *   Optional. The username of the user to be queried for credentials.
   *   The default value of this field is CloudOwner@gve.local.
   *   The provided value must be one of the following:
   *   CloudOwner@gve.local,
   *   solution-user-01@gve.local,
   *   solution-user-02@gve.local,
   *   solution-user-03@gve.local,
   *   solution-user-04@gve.local,
   *   solution-user-05@gve.local,
   *   zertoadmin@gve.local.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.Credentials|Credentials}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.show_vcenter_credentials.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ShowVcenterCredentials_async
   */
  showVcenterCredentials(
    request?: protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ICredentials,
      (
        | protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  showVcenterCredentials(
    request: protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.ICredentials,
      | protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  showVcenterCredentials(
    request: protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.ICredentials,
      | protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  showVcenterCredentials(
    request?: protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.ICredentials,
          | protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.ICredentials,
      | protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ICredentials,
      (
        | protos.google.cloud.vmwareengine.v1.IShowVcenterCredentialsRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        private_cloud: request.privateCloud ?? '',
      });
    this.initialize();
    return this.innerApiCalls.showVcenterCredentials(
      request,
      options,
      callback
    );
  }
  /**
   * Gets details of the `DnsForwarding` config.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of a `DnsForwarding` to retrieve.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/dnsForwarding`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.DnsForwarding|DnsForwarding}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_dns_forwarding.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetDnsForwarding_async
   */
  getDnsForwarding(
    request?: protos.google.cloud.vmwareengine.v1.IGetDnsForwardingRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IDnsForwarding,
      protos.google.cloud.vmwareengine.v1.IGetDnsForwardingRequest | undefined,
      {} | undefined,
    ]
  >;
  getDnsForwarding(
    request: protos.google.cloud.vmwareengine.v1.IGetDnsForwardingRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IDnsForwarding,
      | protos.google.cloud.vmwareengine.v1.IGetDnsForwardingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDnsForwarding(
    request: protos.google.cloud.vmwareengine.v1.IGetDnsForwardingRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IDnsForwarding,
      | protos.google.cloud.vmwareengine.v1.IGetDnsForwardingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDnsForwarding(
    request?: protos.google.cloud.vmwareengine.v1.IGetDnsForwardingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.IDnsForwarding,
          | protos.google.cloud.vmwareengine.v1.IGetDnsForwardingRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.IDnsForwarding,
      | protos.google.cloud.vmwareengine.v1.IGetDnsForwardingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IDnsForwarding,
      protos.google.cloud.vmwareengine.v1.IGetDnsForwardingRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getDnsForwarding(request, options, callback);
  }
  /**
   * Retrieves a `NetworkPeering` resource by its resource name. The resource
   * contains details of the network peering, such as peered
   * networks, import and export custom route configurations, and peering state.
   * NetworkPeering is a global resource and location can only be global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the network peering to retrieve.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/global/networkPeerings/my-peering`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.NetworkPeering|NetworkPeering}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_network_peering.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetNetworkPeering_async
   */
  getNetworkPeering(
    request?: protos.google.cloud.vmwareengine.v1.IGetNetworkPeeringRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INetworkPeering,
      protos.google.cloud.vmwareengine.v1.IGetNetworkPeeringRequest | undefined,
      {} | undefined,
    ]
  >;
  getNetworkPeering(
    request: protos.google.cloud.vmwareengine.v1.IGetNetworkPeeringRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.INetworkPeering,
      | protos.google.cloud.vmwareengine.v1.IGetNetworkPeeringRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getNetworkPeering(
    request: protos.google.cloud.vmwareengine.v1.IGetNetworkPeeringRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.INetworkPeering,
      | protos.google.cloud.vmwareengine.v1.IGetNetworkPeeringRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getNetworkPeering(
    request?: protos.google.cloud.vmwareengine.v1.IGetNetworkPeeringRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.INetworkPeering,
          | protos.google.cloud.vmwareengine.v1.IGetNetworkPeeringRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.INetworkPeering,
      | protos.google.cloud.vmwareengine.v1.IGetNetworkPeeringRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INetworkPeering,
      protos.google.cloud.vmwareengine.v1.IGetNetworkPeeringRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getNetworkPeering(request, options, callback);
  }
  /**
   * Retrieves a `HcxActivationKey` resource by its resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the HCX activation key to retrieve.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1/privateClouds/my-cloud/hcxActivationKeys/my-key`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.HcxActivationKey|HcxActivationKey}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_hcx_activation_key.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetHcxActivationKey_async
   */
  getHcxActivationKey(
    request?: protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
      (
        | protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  getHcxActivationKey(
    request: protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
      | protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getHcxActivationKey(
    request: protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
      | protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getHcxActivationKey(
    request?: protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
          | protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
      | protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
      (
        | protos.google.cloud.vmwareengine.v1.IGetHcxActivationKeyRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getHcxActivationKey(request, options, callback);
  }
  /**
   * Retrieves a `NetworkPolicy` resource by its resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the network policy to retrieve.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.NetworkPolicy|NetworkPolicy}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_network_policy.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetNetworkPolicy_async
   */
  getNetworkPolicy(
    request?: protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INetworkPolicy,
      protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest | undefined,
      {} | undefined,
    ]
  >;
  getNetworkPolicy(
    request: protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.INetworkPolicy,
      | protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getNetworkPolicy(
    request: protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.INetworkPolicy,
      | protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getNetworkPolicy(
    request?: protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.INetworkPolicy,
          | protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.INetworkPolicy,
      | protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INetworkPolicy,
      protos.google.cloud.vmwareengine.v1.IGetNetworkPolicyRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getNetworkPolicy(request, options, callback);
  }
  /**
   * Retrieves a 'ManagementDnsZoneBinding' resource by its resource name.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the management DNS zone binding to
   *   retrieve. Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/managementDnsZoneBindings/my-management-dns-zone-binding`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding|ManagementDnsZoneBinding}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_management_dns_zone_binding.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetManagementDnsZoneBinding_async
   */
  getManagementDnsZoneBinding(
    request?: protos.google.cloud.vmwareengine.v1.IGetManagementDnsZoneBindingRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
      (
        | protos.google.cloud.vmwareengine.v1.IGetManagementDnsZoneBindingRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  getManagementDnsZoneBinding(
    request: protos.google.cloud.vmwareengine.v1.IGetManagementDnsZoneBindingRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
      | protos.google.cloud.vmwareengine.v1.IGetManagementDnsZoneBindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getManagementDnsZoneBinding(
    request: protos.google.cloud.vmwareengine.v1.IGetManagementDnsZoneBindingRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
      | protos.google.cloud.vmwareengine.v1.IGetManagementDnsZoneBindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getManagementDnsZoneBinding(
    request?: protos.google.cloud.vmwareengine.v1.IGetManagementDnsZoneBindingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
          | protos.google.cloud.vmwareengine.v1.IGetManagementDnsZoneBindingRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
      | protos.google.cloud.vmwareengine.v1.IGetManagementDnsZoneBindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
      (
        | protos.google.cloud.vmwareengine.v1.IGetManagementDnsZoneBindingRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getManagementDnsZoneBinding(
      request,
      options,
      callback
    );
  }
  /**
   * Retrieves a `VmwareEngineNetwork` resource by its resource name. The
   * resource contains details of the VMware Engine network, such as its VMware
   * Engine network type, peered networks in a service project, and state
   * (for example, `CREATING`, `ACTIVE`, `DELETING`).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the VMware Engine network to retrieve.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork|VmwareEngineNetwork}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_vmware_engine_network.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetVmwareEngineNetwork_async
   */
  getVmwareEngineNetwork(
    request?: protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
      (
        | protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  getVmwareEngineNetwork(
    request: protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
      | protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getVmwareEngineNetwork(
    request: protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
      | protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getVmwareEngineNetwork(
    request?: protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
          | protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
      | protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
      (
        | protos.google.cloud.vmwareengine.v1.IGetVmwareEngineNetworkRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getVmwareEngineNetwork(
      request,
      options,
      callback
    );
  }
  /**
   * Retrieves a `PrivateConnection` resource by its resource name. The resource
   * contains details of the private connection, such as connected
   * network, routing mode and state.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the private connection to retrieve.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1/privateConnections/my-connection`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.PrivateConnection|PrivateConnection}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_private_connection.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetPrivateConnection_async
   */
  getPrivateConnection(
    request?: protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IPrivateConnection,
      (
        | protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  getPrivateConnection(
    request: protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IPrivateConnection,
      | protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getPrivateConnection(
    request: protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IPrivateConnection,
      | protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getPrivateConnection(
    request?: protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.IPrivateConnection,
          | protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.IPrivateConnection,
      | protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IPrivateConnection,
      (
        | protos.google.cloud.vmwareengine.v1.IGetPrivateConnectionRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getPrivateConnection(request, options, callback);
  }
  /**
   * Gets all the principals having bind permission on the intranet VPC
   * associated with the consumer project granted by the Grant API.
   * DnsBindPermission is a global resource and location can only be global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the resource which stores the users/service accounts
   *   having the permission to bind to the corresponding intranet VPC of the
   *   consumer project. DnsBindPermission is a global resource. Resource names
   *   are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names. For example:
   *   `projects/my-project/locations/global/dnsBindPermission`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.vmwareengine.v1.DnsBindPermission|DnsBindPermission}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.get_dns_bind_permission.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GetDnsBindPermission_async
   */
  getDnsBindPermission(
    request?: protos.google.cloud.vmwareengine.v1.IGetDnsBindPermissionRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
      (
        | protos.google.cloud.vmwareengine.v1.IGetDnsBindPermissionRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  getDnsBindPermission(
    request: protos.google.cloud.vmwareengine.v1.IGetDnsBindPermissionRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
      | protos.google.cloud.vmwareengine.v1.IGetDnsBindPermissionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDnsBindPermission(
    request: protos.google.cloud.vmwareengine.v1.IGetDnsBindPermissionRequest,
    callback: Callback<
      protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
      | protos.google.cloud.vmwareengine.v1.IGetDnsBindPermissionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getDnsBindPermission(
    request?: protos.google.cloud.vmwareengine.v1.IGetDnsBindPermissionRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
          | protos.google.cloud.vmwareengine.v1.IGetDnsBindPermissionRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
      | protos.google.cloud.vmwareengine.v1.IGetDnsBindPermissionRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
      (
        | protos.google.cloud.vmwareengine.v1.IGetDnsBindPermissionRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getDnsBindPermission(request, options, callback);
  }

  /**
   * Creates a new `PrivateCloud` resource in a given project and location.
   * Private clouds of type `STANDARD` and
   * `TIME_LIMITED` are zonal resources, `STRETCHED` private clouds are
   * regional.
   * Creating a private cloud also creates a [management
   * cluster](https://cloud.google.com/vmware-engine/docs/concepts-vmware-components)
   * for that private cloud.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to create the new
   *   private cloud in. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a`
   * @param {string} request.privateCloudId
   *   Required. The user-provided identifier of the private cloud to be created.
   *   This identifier must be unique among each `PrivateCloud` within the parent
   *   and becomes the final token in the name URI.
   *   The identifier must meet the following requirements:
   *
   *   * Only contains 1-63 alphanumeric characters and hyphens
   *   * Begins with an alphabetical character
   *   * Ends with a non-hyphen character
   *   * Not formatted as a UUID
   *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   *   (section 3.5)
   * @param {google.cloud.vmwareengine.v1.PrivateCloud} request.privateCloud
   *   Required. The initial description of the new private cloud.
   * @param {string} [request.requestId]
   *   Optional. The request ID must be a valid UUID with the exception that zero
   *   UUID is not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.validateOnly]
   *   Optional. True if you want the request to be validated and not executed;
   *   false otherwise.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_private_cloud.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreatePrivateCloud_async
   */
  createPrivateCloud(
    request?: protos.google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createPrivateCloud(
    request: protos.google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createPrivateCloud(
    request: protos.google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createPrivateCloud(
    request?: protos.google.cloud.vmwareengine.v1.ICreatePrivateCloudRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IPrivateCloud,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createPrivateCloud(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `createPrivateCloud()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_private_cloud.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreatePrivateCloud_async
   */
  async checkCreatePrivateCloudProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateCloud,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createPrivateCloud,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateCloud,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Modifies a `PrivateCloud` resource. Only the following fields can be
   * updated: `description`.
   * Only fields specified in `updateMask` are applied.
   *
   * During operation processing, the resource is temporarily in the `ACTIVE`
   * state before the operation fully completes. For that period of time, you
   * can't update the resource. Use the operation status to determine when the
   * processing fully completes.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.vmwareengine.v1.PrivateCloud} request.privateCloud
   *   Required. Private cloud description.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `PrivateCloud` resource by the update. The fields specified in `updateMask`
   *   are relative to the resource, not the full request. A field will be
   *   overwritten if it is in the mask. If the user does not provide a mask then
   *   all fields will be overwritten.
   * @param {string} [request.requestId]
   *   Optional. The request ID must be a valid UUID with the exception that zero
   *   UUID is not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_private_cloud.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdatePrivateCloud_async
   */
  updatePrivateCloud(
    request?: protos.google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updatePrivateCloud(
    request: protos.google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updatePrivateCloud(
    request: protos.google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updatePrivateCloud(
    request?: protos.google.cloud.vmwareengine.v1.IUpdatePrivateCloudRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IPrivateCloud,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'private_cloud.name': request.privateCloud!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updatePrivateCloud(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `updatePrivateCloud()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_private_cloud.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdatePrivateCloud_async
   */
  async checkUpdatePrivateCloudProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateCloud,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updatePrivateCloud,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateCloud,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Schedules a `PrivateCloud` resource for deletion.
   *
   * A `PrivateCloud` resource scheduled for deletion has `PrivateCloud.state`
   * set to `DELETED` and `expireTime` set to the time when deletion is final
   * and can no longer be reversed. The delete operation is marked as done
   * as soon as the `PrivateCloud` is successfully scheduled for deletion
   * (this also applies when `delayHours` is set to zero), and the operation is
   * not kept in pending state until `PrivateCloud` is purged.
   * `PrivateCloud` can be restored using `UndeletePrivateCloud` method before
   * the `expireTime` elapses. When `expireTime` is reached, deletion is final
   * and all private cloud resources are irreversibly removed and billing stops.
   * During the final removal process, `PrivateCloud.state` is set to `PURGING`.
   * `PrivateCloud` can be polled using standard `GET` method for the whole
   * period of deletion and purging. It will not be returned only
   * when it is completely purged.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the private cloud to delete.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {string} [request.requestId]
   *   Optional. The request ID must be a valid UUID with the exception that zero
   *   UUID is not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.force]
   *   Optional. If set to true, cascade delete is enabled and all children of
   *   this private cloud resource are also deleted. When this flag is set to
   *   false, the private cloud will not be deleted if there are any children
   *   other than the management cluster. The management cluster is always
   *   deleted.
   * @param {number} [request.delayHours]
   *   Optional. Time delay of the deletion specified in hours. The default value
   *   is `3`. Specifying a non-zero value for this field changes the value of
   *   `PrivateCloud.state` to `DELETED` and sets `expire_time` to the planned
   *   deletion time. Deletion can be cancelled before `expire_time` elapses using
   *   {@link protos.google.cloud.vmwareengine.v1.VmwareEngine.UndeletePrivateCloud|VmwareEngine.UndeletePrivateCloud}.
   *   Specifying a value of `0` for this field instead begins the deletion
   *   process and ceases billing immediately. During the final deletion process,
   *   the value of `PrivateCloud.state` becomes `PURGING`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_private_cloud.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeletePrivateCloud_async
   */
  deletePrivateCloud(
    request?: protos.google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deletePrivateCloud(
    request: protos.google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deletePrivateCloud(
    request: protos.google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deletePrivateCloud(
    request?: protos.google.cloud.vmwareengine.v1.IDeletePrivateCloudRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IPrivateCloud,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deletePrivateCloud(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `deletePrivateCloud()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_private_cloud.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeletePrivateCloud_async
   */
  async checkDeletePrivateCloudProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateCloud,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deletePrivateCloud,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateCloud,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Restores a private cloud that was previously scheduled for deletion by
   * `DeletePrivateCloud`. A `PrivateCloud` resource scheduled for deletion has
   * `PrivateCloud.state` set to `DELETED` and `PrivateCloud.expireTime` set to
   * the time when deletion can no longer be reversed.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the private cloud scheduled for deletion.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {string} [request.requestId]
   *   Optional. The request ID must be a valid UUID with the exception that zero
   *   UUID is not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.undelete_private_cloud.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UndeletePrivateCloud_async
   */
  undeletePrivateCloud(
    request?: protos.google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  undeletePrivateCloud(
    request: protos.google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  undeletePrivateCloud(
    request: protos.google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  undeletePrivateCloud(
    request?: protos.google.cloud.vmwareengine.v1.IUndeletePrivateCloudRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IPrivateCloud,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.undeletePrivateCloud(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `undeletePrivateCloud()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.undelete_private_cloud.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UndeletePrivateCloud_async
   */
  async checkUndeletePrivateCloudProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateCloud,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.undeletePrivateCloud,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateCloud,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new cluster in a given private cloud.
   * Creating a new cluster provides additional nodes for
   * use in the parent private cloud and requires sufficient [node
   * quota](https://cloud.google.com/vmware-engine/quotas).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to create a new cluster
   *   in. Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {string} request.clusterId
   *   Required. The user-provided identifier of the new `Cluster`.
   *   This identifier must be unique among clusters within the parent and becomes
   *   the final token in the name URI.
   *   The identifier must meet the following requirements:
   *
   *   * Only contains 1-63 alphanumeric characters and hyphens
   *   * Begins with an alphabetical character
   *   * Ends with a non-hyphen character
   *   * Not formatted as a UUID
   *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   *   (section 3.5)
   * @param {google.cloud.vmwareengine.v1.Cluster} request.cluster
   *   Required. The initial description of the new cluster.
   * @param {string} [request.requestId]
   *   Optional. The request ID must be a valid UUID with the exception that zero
   *   UUID is not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.validateOnly]
   *   Optional. True if you want the request to be validated and not executed;
   *   false otherwise.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_cluster.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateCluster_async
   */
  createCluster(
    request?: protos.google.cloud.vmwareengine.v1.ICreateClusterRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.ICluster,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createCluster(
    request: protos.google.cloud.vmwareengine.v1.ICreateClusterRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ICluster,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createCluster(
    request: protos.google.cloud.vmwareengine.v1.ICreateClusterRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ICluster,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createCluster(
    request?: protos.google.cloud.vmwareengine.v1.ICreateClusterRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.ICluster,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ICluster,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.ICluster,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createCluster(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `createCluster()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_cluster.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateCluster_async
   */
  async checkCreateClusterProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.Cluster,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createCluster,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.Cluster,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Modifies a `Cluster` resource. Only fields specified in `updateMask` are
   * applied.
   *
   * During operation processing, the resource is temporarily in the `ACTIVE`
   * state before the operation fully completes. For that period of time, you
   * can't update the resource. Use the operation status to determine when the
   * processing fully completes.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `Cluster` resource by the update. The fields specified in the `updateMask`
   *   are relative to the resource, not the full request. A field will be
   *   overwritten if it is in the mask. If the user does not provide a mask then
   *   all fields will be overwritten.
   * @param {google.cloud.vmwareengine.v1.Cluster} request.cluster
   *   Required. The description of the cluster.
   * @param {string} [request.requestId]
   *   Optional. The request ID must be a valid UUID with the exception that
   *   zero UUID is not supported (00000000-0000-0000-0000-000000000000).
   * @param {boolean} [request.validateOnly]
   *   Optional. True if you want the request to be validated and not executed;
   *   false otherwise.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_cluster.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateCluster_async
   */
  updateCluster(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateClusterRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.ICluster,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateCluster(
    request: protos.google.cloud.vmwareengine.v1.IUpdateClusterRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ICluster,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateCluster(
    request: protos.google.cloud.vmwareengine.v1.IUpdateClusterRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ICluster,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateCluster(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateClusterRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.ICluster,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ICluster,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.ICluster,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'cluster.name': request.cluster!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateCluster(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `updateCluster()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_cluster.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateCluster_async
   */
  async checkUpdateClusterProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.Cluster,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateCluster,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.Cluster,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a `Cluster` resource. To avoid unintended data loss, migrate or
   * gracefully shut down any workloads running on the cluster before deletion.
   * You cannot delete the management cluster of a private cloud using this
   * method.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the cluster to delete.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
   * @param {string} [request.requestId]
   *   Optional. The request ID must be a valid UUID with the exception that zero
   *   UUID is not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_cluster.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteCluster_async
   */
  deleteCluster(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteClusterRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteCluster(
    request: protos.google.cloud.vmwareengine.v1.IDeleteClusterRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteCluster(
    request: protos.google.cloud.vmwareengine.v1.IDeleteClusterRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteCluster(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteClusterRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteCluster(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `deleteCluster()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_cluster.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteCluster_async
   */
  async checkDeleteClusterProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteCluster,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new `ExternalAddress` resource in a given private cloud. The
   * network policy that corresponds to the private cloud must have the external
   * IP address network service enabled (`NetworkPolicy.external_ip`).
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud
   *   to create a new external IP address in.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {google.cloud.vmwareengine.v1.ExternalAddress} request.externalAddress
   *   Required. The initial description of a new external IP address.
   * @param {string} request.externalAddressId
   *   Required. The user-provided identifier of the `ExternalAddress` to be
   *   created. This identifier must be unique among `ExternalAddress` resources
   *   within the parent and becomes the final token in the name URI. The
   *   identifier must meet the following requirements:
   *
   *   * Only contains 1-63 alphanumeric characters and hyphens
   *   * Begins with an alphabetical character
   *   * Ends with a non-hyphen character
   *   * Not formatted as a UUID
   *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   *   (section 3.5)
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if the original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_external_address.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateExternalAddress_async
   */
  createExternalAddress(
    request?: protos.google.cloud.vmwareengine.v1.ICreateExternalAddressRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAddress,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createExternalAddress(
    request: protos.google.cloud.vmwareengine.v1.ICreateExternalAddressRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAddress,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createExternalAddress(
    request: protos.google.cloud.vmwareengine.v1.ICreateExternalAddressRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAddress,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createExternalAddress(
    request?: protos.google.cloud.vmwareengine.v1.ICreateExternalAddressRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IExternalAddress,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAddress,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAddress,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createExternalAddress(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `createExternalAddress()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_external_address.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateExternalAddress_async
   */
  async checkCreateExternalAddressProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.ExternalAddress,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createExternalAddress,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.ExternalAddress,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Updates the parameters of a single external IP address.
   * Only fields specified in `update_mask` are applied.
   *
   * During operation processing, the resource is temporarily in the `ACTIVE`
   * state before the operation fully completes. For that period of time, you
   * can't update the resource. Use the operation status to determine when the
   * processing fully completes.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `ExternalAddress` resource by the update.
   *   The fields specified in the `update_mask` are relative to the resource, not
   *   the full request. A field will be overwritten if it is in the mask. If the
   *   user does not provide a mask then all fields will be overwritten.
   * @param {google.cloud.vmwareengine.v1.ExternalAddress} request.externalAddress
   *   Required. External IP address description.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if the original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_external_address.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateExternalAddress_async
   */
  updateExternalAddress(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateExternalAddressRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAddress,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateExternalAddress(
    request: protos.google.cloud.vmwareengine.v1.IUpdateExternalAddressRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAddress,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateExternalAddress(
    request: protos.google.cloud.vmwareengine.v1.IUpdateExternalAddressRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAddress,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateExternalAddress(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateExternalAddressRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IExternalAddress,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAddress,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAddress,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'external_address.name': request.externalAddress!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateExternalAddress(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `updateExternalAddress()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_external_address.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateExternalAddress_async
   */
  async checkUpdateExternalAddressProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.ExternalAddress,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateExternalAddress,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.ExternalAddress,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a single external IP address. When you delete an external IP
   * address, connectivity between the external IP address and the corresponding
   * internal IP address is lost.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the external IP address to delete.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/externalAddresses/my-ip`
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if the original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_external_address.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteExternalAddress_async
   */
  deleteExternalAddress(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteExternalAddressRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteExternalAddress(
    request: protos.google.cloud.vmwareengine.v1.IDeleteExternalAddressRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteExternalAddress(
    request: protos.google.cloud.vmwareengine.v1.IDeleteExternalAddressRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteExternalAddress(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteExternalAddressRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteExternalAddress(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `deleteExternalAddress()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_external_address.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteExternalAddress_async
   */
  async checkDeleteExternalAddressProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteExternalAddress,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Updates the parameters of a single subnet. Only fields specified in
   * `update_mask` are applied.
   *
   * *Note*: This API is synchronous and always returns a successful
   * `google.longrunning.Operation` (LRO). The returned LRO will only have
   * `done` and `response` fields.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `Subnet` resource by the update.
   *   The fields specified in the `update_mask` are relative to the resource, not
   *   the full request. A field will be overwritten if it is in the mask. If the
   *   user does not provide a mask then all fields will be overwritten.
   * @param {google.cloud.vmwareengine.v1.Subnet} request.subnet
   *   Required. Subnet description.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_subnet.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateSubnet_async
   */
  updateSubnet(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateSubnetRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.ISubnet,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateSubnet(
    request: protos.google.cloud.vmwareengine.v1.IUpdateSubnetRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ISubnet,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateSubnet(
    request: protos.google.cloud.vmwareengine.v1.IUpdateSubnetRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ISubnet,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateSubnet(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateSubnetRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.ISubnet,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ISubnet,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.ISubnet,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'subnet.name': request.subnet!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateSubnet(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `updateSubnet()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_subnet.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateSubnet_async
   */
  async checkUpdateSubnetProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.Subnet,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateSubnet,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.Subnet,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new external access rule in a given network policy.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the network policy
   *   to create a new external access firewall rule in.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1/networkPolicies/my-policy`
   * @param {google.cloud.vmwareengine.v1.ExternalAccessRule} request.externalAccessRule
   *   Required. The initial description of a new external access rule.
   * @param {string} request.externalAccessRuleId
   *   Required. The user-provided identifier of the `ExternalAccessRule` to be
   *   created. This identifier must be unique among `ExternalAccessRule`
   *   resources within the parent and becomes the final token in the name URI.
   *   The identifier must meet the following requirements:
   *
   *   * Only contains 1-63 alphanumeric characters and hyphens
   *   * Begins with an alphabetical character
   *   * Ends with a non-hyphen character
   *   * Not formatted as a UUID
   *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   *   (section 3.5)
   * @param {string} request.requestId
   *   A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if the original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_external_access_rule.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateExternalAccessRule_async
   */
  createExternalAccessRule(
    request?: protos.google.cloud.vmwareengine.v1.ICreateExternalAccessRuleRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createExternalAccessRule(
    request: protos.google.cloud.vmwareengine.v1.ICreateExternalAccessRuleRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createExternalAccessRule(
    request: protos.google.cloud.vmwareengine.v1.ICreateExternalAccessRuleRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createExternalAccessRule(
    request?: protos.google.cloud.vmwareengine.v1.ICreateExternalAccessRuleRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createExternalAccessRule(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `createExternalAccessRule()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_external_access_rule.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateExternalAccessRule_async
   */
  async checkCreateExternalAccessRuleProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.ExternalAccessRule,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createExternalAccessRule,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.ExternalAccessRule,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Updates the parameters of a single external access rule.
   * Only fields specified in `update_mask` are applied.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `ExternalAccessRule` resource by the update.
   *   The fields specified in the `update_mask` are relative to the resource, not
   *   the full request. A field will be overwritten if it is in the mask. If the
   *   user does not provide a mask then all fields will be overwritten.
   * @param {google.cloud.vmwareengine.v1.ExternalAccessRule} request.externalAccessRule
   *   Required. Description of the external access rule.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if the original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_external_access_rule.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateExternalAccessRule_async
   */
  updateExternalAccessRule(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateExternalAccessRuleRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateExternalAccessRule(
    request: protos.google.cloud.vmwareengine.v1.IUpdateExternalAccessRuleRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateExternalAccessRule(
    request: protos.google.cloud.vmwareengine.v1.IUpdateExternalAccessRuleRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateExternalAccessRule(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateExternalAccessRuleRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IExternalAccessRule,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'external_access_rule.name': request.externalAccessRule!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateExternalAccessRule(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `updateExternalAccessRule()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_external_access_rule.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateExternalAccessRule_async
   */
  async checkUpdateExternalAccessRuleProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.ExternalAccessRule,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateExternalAccessRule,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.ExternalAccessRule,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a single external access rule.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the external access firewall rule to delete.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1/networkPolicies/my-policy/externalAccessRules/my-rule`
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if the original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_external_access_rule.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteExternalAccessRule_async
   */
  deleteExternalAccessRule(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteExternalAccessRuleRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteExternalAccessRule(
    request: protos.google.cloud.vmwareengine.v1.IDeleteExternalAccessRuleRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteExternalAccessRule(
    request: protos.google.cloud.vmwareengine.v1.IDeleteExternalAccessRuleRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteExternalAccessRule(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteExternalAccessRuleRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteExternalAccessRule(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `deleteExternalAccessRule()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_external_access_rule.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteExternalAccessRule_async
   */
  async checkDeleteExternalAccessRuleProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteExternalAccessRule,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Create a new logging server for a given private cloud.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud
   *   to create a new Logging Server in.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {google.cloud.vmwareengine.v1.LoggingServer} request.loggingServer
   *   Required. The initial description of a new logging server.
   * @param {string} request.loggingServerId
   *   Required. The user-provided identifier of the `LoggingServer` to be
   *   created. This identifier must be unique among `LoggingServer` resources
   *   within the parent and becomes the final token in the name URI.
   *   The identifier must meet the following requirements:
   *
   *   * Only contains 1-63 alphanumeric characters and hyphens
   *   * Begins with an alphabetical character
   *   * Ends with a non-hyphen character
   *   * Not formatted as a UUID
   *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   *   (section 3.5)
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_logging_server.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateLoggingServer_async
   */
  createLoggingServer(
    request?: protos.google.cloud.vmwareengine.v1.ICreateLoggingServerRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.ILoggingServer,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createLoggingServer(
    request: protos.google.cloud.vmwareengine.v1.ICreateLoggingServerRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ILoggingServer,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createLoggingServer(
    request: protos.google.cloud.vmwareengine.v1.ICreateLoggingServerRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ILoggingServer,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createLoggingServer(
    request?: protos.google.cloud.vmwareengine.v1.ICreateLoggingServerRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.ILoggingServer,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ILoggingServer,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.ILoggingServer,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createLoggingServer(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `createLoggingServer()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_logging_server.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateLoggingServer_async
   */
  async checkCreateLoggingServerProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.LoggingServer,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createLoggingServer,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.LoggingServer,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Updates the parameters of a single logging server.
   * Only fields specified in `update_mask` are applied.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `LoggingServer` resource by the update.
   *   The fields specified in the `update_mask` are relative to the resource, not
   *   the full request. A field will be overwritten if it is in the mask. If the
   *   user does not provide a mask then all fields will be overwritten.
   * @param {google.cloud.vmwareengine.v1.LoggingServer} request.loggingServer
   *   Required. Logging server description.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_logging_server.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateLoggingServer_async
   */
  updateLoggingServer(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateLoggingServerRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.ILoggingServer,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateLoggingServer(
    request: protos.google.cloud.vmwareengine.v1.IUpdateLoggingServerRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ILoggingServer,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateLoggingServer(
    request: protos.google.cloud.vmwareengine.v1.IUpdateLoggingServerRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ILoggingServer,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateLoggingServer(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateLoggingServerRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.ILoggingServer,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.ILoggingServer,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.ILoggingServer,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'logging_server.name': request.loggingServer!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateLoggingServer(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `updateLoggingServer()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_logging_server.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateLoggingServer_async
   */
  async checkUpdateLoggingServerProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.LoggingServer,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateLoggingServer,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.LoggingServer,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a single logging server.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the logging server to delete.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/loggingServers/my-logging-server`
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_logging_server.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteLoggingServer_async
   */
  deleteLoggingServer(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteLoggingServerRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteLoggingServer(
    request: protos.google.cloud.vmwareengine.v1.IDeleteLoggingServerRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteLoggingServer(
    request: protos.google.cloud.vmwareengine.v1.IDeleteLoggingServerRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteLoggingServer(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteLoggingServerRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteLoggingServer(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `deleteLoggingServer()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_logging_server.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteLoggingServer_async
   */
  async checkDeleteLoggingServerProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteLoggingServer,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Resets credentials of the NSX appliance.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.privateCloud
   *   Required. The resource name of the private cloud
   *   to reset credentials for.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.reset_nsx_credentials.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ResetNsxCredentials_async
   */
  resetNsxCredentials(
    request?: protos.google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  resetNsxCredentials(
    request: protos.google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  resetNsxCredentials(
    request: protos.google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  resetNsxCredentials(
    request?: protos.google.cloud.vmwareengine.v1.IResetNsxCredentialsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IPrivateCloud,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        private_cloud: request.privateCloud ?? '',
      });
    this.initialize();
    return this.innerApiCalls.resetNsxCredentials(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `resetNsxCredentials()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.reset_nsx_credentials.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ResetNsxCredentials_async
   */
  async checkResetNsxCredentialsProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateCloud,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.resetNsxCredentials,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateCloud,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Resets credentials of the Vcenter appliance.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.privateCloud
   *   Required. The resource name of the private cloud
   *   to reset credentials for.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {string} [request.username]
   *   Optional. The username of the user to be to reset the credentials.
   *   The default value of this field is CloudOwner@gve.local.
   *   The provided value should be one of the following:
   *   solution-user-01@gve.local,
   *   solution-user-02@gve.local,
   *   solution-user-03@gve.local,
   *   solution-user-04@gve.local,
   *   solution-user-05@gve.local,
   *   zertoadmin@gve.local.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.reset_vcenter_credentials.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ResetVcenterCredentials_async
   */
  resetVcenterCredentials(
    request?: protos.google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  resetVcenterCredentials(
    request: protos.google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  resetVcenterCredentials(
    request: protos.google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  resetVcenterCredentials(
    request?: protos.google.cloud.vmwareengine.v1.IResetVcenterCredentialsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IPrivateCloud,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateCloud,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        private_cloud: request.privateCloud ?? '',
      });
    this.initialize();
    return this.innerApiCalls.resetVcenterCredentials(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `resetVcenterCredentials()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.reset_vcenter_credentials.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ResetVcenterCredentials_async
   */
  async checkResetVcenterCredentialsProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateCloud,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.resetVcenterCredentials,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateCloud,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Updates the parameters of the `DnsForwarding` config, like associated
   * domains. Only fields specified in `update_mask` are applied.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.vmwareengine.v1.DnsForwarding} request.dnsForwarding
   *   Required. DnsForwarding config details.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `DnsForwarding` resource by the update.
   *   The fields specified in the `update_mask` are relative to the resource, not
   *   the full request. A field will be overwritten if it is in the mask. If the
   *   user does not provide a mask then all fields will be overwritten.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_dns_forwarding.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateDnsForwarding_async
   */
  updateDnsForwarding(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateDnsForwardingRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsForwarding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateDnsForwarding(
    request: protos.google.cloud.vmwareengine.v1.IUpdateDnsForwardingRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsForwarding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateDnsForwarding(
    request: protos.google.cloud.vmwareengine.v1.IUpdateDnsForwardingRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsForwarding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateDnsForwarding(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateDnsForwardingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IDnsForwarding,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsForwarding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsForwarding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'dns_forwarding.name': request.dnsForwarding!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateDnsForwarding(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `updateDnsForwarding()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_dns_forwarding.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateDnsForwarding_async
   */
  async checkUpdateDnsForwardingProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.DnsForwarding,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateDnsForwarding,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.DnsForwarding,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new network peering between the peer network and VMware Engine
   * network provided in a `NetworkPeering` resource. NetworkPeering is a
   * global resource and location can only be global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to create the new network
   *   peering in. This value is always `global`, because `NetworkPeering` is a
   *   global resource. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/global`
   * @param {string} request.networkPeeringId
   *   Required. The user-provided identifier of the new `NetworkPeering`.
   *   This identifier must be unique among `NetworkPeering` resources within the
   *   parent and becomes the final token in the name URI.
   *   The identifier must meet the following requirements:
   *
   *   * Only contains 1-63 alphanumeric characters and hyphens
   *   * Begins with an alphabetical character
   *   * Ends with a non-hyphen character
   *   * Not formatted as a UUID
   *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   *   (section 3.5)
   * @param {google.cloud.vmwareengine.v1.NetworkPeering} request.networkPeering
   *   Required. The initial description of the new network peering.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_network_peering.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateNetworkPeering_async
   */
  createNetworkPeering(
    request?: protos.google.cloud.vmwareengine.v1.ICreateNetworkPeeringRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPeering,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createNetworkPeering(
    request: protos.google.cloud.vmwareengine.v1.ICreateNetworkPeeringRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPeering,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createNetworkPeering(
    request: protos.google.cloud.vmwareengine.v1.ICreateNetworkPeeringRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPeering,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createNetworkPeering(
    request?: protos.google.cloud.vmwareengine.v1.ICreateNetworkPeeringRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.INetworkPeering,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPeering,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPeering,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createNetworkPeering(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `createNetworkPeering()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_network_peering.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateNetworkPeering_async
   */
  async checkCreateNetworkPeeringProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.NetworkPeering,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createNetworkPeering,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.NetworkPeering,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a `NetworkPeering` resource. When a network peering is deleted for
   * a VMware Engine network, the peer network becomes inaccessible to that
   * VMware Engine network. NetworkPeering is a global resource and location can
   * only be global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the network peering to be deleted.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/global/networkPeerings/my-peering`
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_network_peering.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteNetworkPeering_async
   */
  deleteNetworkPeering(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteNetworkPeeringRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteNetworkPeering(
    request: protos.google.cloud.vmwareengine.v1.IDeleteNetworkPeeringRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteNetworkPeering(
    request: protos.google.cloud.vmwareengine.v1.IDeleteNetworkPeeringRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteNetworkPeering(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteNetworkPeeringRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteNetworkPeering(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `deleteNetworkPeering()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_network_peering.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteNetworkPeering_async
   */
  async checkDeleteNetworkPeeringProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteNetworkPeering,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Modifies a `NetworkPeering` resource. Only the `description` field can be
   * updated. Only fields specified in `updateMask` are applied. NetworkPeering
   * is a global resource and location can only be global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.vmwareengine.v1.NetworkPeering} request.networkPeering
   *   Required. Network peering description.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `NetworkPeering` resource by the update.
   *   The fields specified in the `update_mask` are relative to the resource, not
   *   the full request. A field will be overwritten if it is in the mask. If the
   *   user does not provide a mask then all fields will be overwritten.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_network_peering.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateNetworkPeering_async
   */
  updateNetworkPeering(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateNetworkPeeringRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPeering,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateNetworkPeering(
    request: protos.google.cloud.vmwareengine.v1.IUpdateNetworkPeeringRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPeering,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateNetworkPeering(
    request: protos.google.cloud.vmwareengine.v1.IUpdateNetworkPeeringRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPeering,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateNetworkPeering(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateNetworkPeeringRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.INetworkPeering,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPeering,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPeering,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'network_peering.name': request.networkPeering!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateNetworkPeering(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `updateNetworkPeering()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_network_peering.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateNetworkPeering_async
   */
  async checkUpdateNetworkPeeringProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.NetworkPeering,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateNetworkPeering,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.NetworkPeering,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new HCX activation key in a given private cloud.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to create the key for.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1/privateClouds/my-cloud`
   * @param {google.cloud.vmwareengine.v1.HcxActivationKey} request.hcxActivationKey
   *   Required. The initial description of a new HCX activation key. When
   *   creating a new key, this field must be an empty object.
   * @param {string} request.hcxActivationKeyId
   *   Required. The user-provided identifier of the `HcxActivationKey` to be
   *   created. This identifier must be unique among `HcxActivationKey` resources
   *   within the parent and becomes the final token in the name URI.
   *   The identifier must meet the following requirements:
   *
   *   * Only contains 1-63 alphanumeric characters and hyphens
   *   * Begins with an alphabetical character
   *   * Ends with a non-hyphen character
   *   * Not formatted as a UUID
   *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   *   (section 3.5)
   * @param {string} request.requestId
   *   A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_hcx_activation_key.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateHcxActivationKey_async
   */
  createHcxActivationKey(
    request?: protos.google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createHcxActivationKey(
    request: protos.google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createHcxActivationKey(
    request: protos.google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createHcxActivationKey(
    request?: protos.google.cloud.vmwareengine.v1.ICreateHcxActivationKeyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IHcxActivationKey,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createHcxActivationKey(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `createHcxActivationKey()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_hcx_activation_key.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateHcxActivationKey_async
   */
  async checkCreateHcxActivationKeyProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.HcxActivationKey,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createHcxActivationKey,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.HcxActivationKey,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new network policy in a given VMware Engine network of a
   * project and location (region). A new network policy cannot be created if
   * another network policy already exists in the same scope.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location (region)
   *   to create the new network policy in.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *    `projects/my-project/locations/us-central1`
   * @param {string} request.networkPolicyId
   *   Required. The user-provided identifier of the network policy to be created.
   *   This identifier must be unique within parent
   *   `projects/{my-project}/locations/{us-central1}/networkPolicies` and becomes
   *   the final token in the name URI.
   *   The identifier must meet the following requirements:
   *
   *   * Only contains 1-63 alphanumeric characters and hyphens
   *   * Begins with an alphabetical character
   *   * Ends with a non-hyphen character
   *   * Not formatted as a UUID
   *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   *   (section 3.5)
   * @param {google.cloud.vmwareengine.v1.NetworkPolicy} request.networkPolicy
   *   Required. The network policy configuration to use in the request.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_network_policy.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateNetworkPolicy_async
   */
  createNetworkPolicy(
    request?: protos.google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPolicy,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createNetworkPolicy(
    request: protos.google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPolicy,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createNetworkPolicy(
    request: protos.google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPolicy,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createNetworkPolicy(
    request?: protos.google.cloud.vmwareengine.v1.ICreateNetworkPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.INetworkPolicy,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPolicy,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPolicy,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createNetworkPolicy(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `createNetworkPolicy()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_network_policy.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateNetworkPolicy_async
   */
  async checkCreateNetworkPolicyProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.NetworkPolicy,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createNetworkPolicy,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.NetworkPolicy,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Modifies a `NetworkPolicy` resource. Only the following fields can be
   * updated: `internet_access`, `external_ip`, `edge_services_cidr`.
   * Only fields specified in `updateMask` are applied. When updating a network
   * policy, the external IP network service can only be disabled if there are
   * no external IP addresses present in the scope of the policy. Also, a
   * `NetworkService` cannot be updated when `NetworkService.state` is set
   * to `RECONCILING`.
   *
   * During operation processing, the resource is temporarily in the `ACTIVE`
   * state before the operation fully completes. For that period of time, you
   * can't update the resource. Use the operation status to determine when the
   * processing fully completes.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.vmwareengine.v1.NetworkPolicy} request.networkPolicy
   *   Required. Network policy description.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `NetworkPolicy` resource by the update.
   *   The fields specified in the `update_mask` are relative to the resource, not
   *   the full request. A field will be overwritten if it is in the mask. If the
   *   user does not provide a mask then all fields will be overwritten.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_network_policy.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateNetworkPolicy_async
   */
  updateNetworkPolicy(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPolicy,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateNetworkPolicy(
    request: protos.google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPolicy,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateNetworkPolicy(
    request: protos.google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPolicy,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateNetworkPolicy(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateNetworkPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.INetworkPolicy,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPolicy,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.INetworkPolicy,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'network_policy.name': request.networkPolicy!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateNetworkPolicy(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `updateNetworkPolicy()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_network_policy.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateNetworkPolicy_async
   */
  async checkUpdateNetworkPolicyProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.NetworkPolicy,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateNetworkPolicy,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.NetworkPolicy,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a `NetworkPolicy` resource. A network policy cannot be deleted
   * when `NetworkService.state` is set to `RECONCILING` for either its external
   * IP or internet access service.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the network policy to delete.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_network_policy.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteNetworkPolicy_async
   */
  deleteNetworkPolicy(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteNetworkPolicy(
    request: protos.google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteNetworkPolicy(
    request: protos.google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteNetworkPolicy(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteNetworkPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteNetworkPolicy(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `deleteNetworkPolicy()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_network_policy.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteNetworkPolicy_async
   */
  async checkDeleteNetworkPolicyProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteNetworkPolicy,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new `ManagementDnsZoneBinding` resource in a private cloud.
   * This RPC creates the DNS binding and the resource that represents the
   * DNS binding of the consumer VPC network to the management DNS zone. A
   * management DNS zone is the Cloud DNS cross-project binding zone that
   * VMware Engine creates for each private cloud. It contains FQDNs and
   * corresponding IP addresses for the private cloud's ESXi hosts and
   * management VM appliances like vCenter and NSX Manager.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud
   *   to create a new management DNS zone binding for.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {google.cloud.vmwareengine.v1.ManagementDnsZoneBinding} request.managementDnsZoneBinding
   *   Required. The initial values for a new management DNS zone binding.
   * @param {string} request.managementDnsZoneBindingId
   *   Required. The user-provided identifier of the `ManagementDnsZoneBinding`
   *   resource to be created. This identifier must be unique among
   *   `ManagementDnsZoneBinding` resources within the parent and becomes the
   *   final token in the name URI. The identifier must meet the following
   *   requirements:
   *
   *   * Only contains 1-63 alphanumeric characters and hyphens
   *   * Begins with an alphabetical character
   *   * Ends with a non-hyphen character
   *   * Not formatted as a UUID
   *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   *   (section 3.5)
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if the original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_management_dns_zone_binding.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateManagementDnsZoneBinding_async
   */
  createManagementDnsZoneBinding(
    request?: protos.google.cloud.vmwareengine.v1.ICreateManagementDnsZoneBindingRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createManagementDnsZoneBinding(
    request: protos.google.cloud.vmwareengine.v1.ICreateManagementDnsZoneBindingRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createManagementDnsZoneBinding(
    request: protos.google.cloud.vmwareengine.v1.ICreateManagementDnsZoneBindingRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createManagementDnsZoneBinding(
    request?: protos.google.cloud.vmwareengine.v1.ICreateManagementDnsZoneBindingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createManagementDnsZoneBinding(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `createManagementDnsZoneBinding()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_management_dns_zone_binding.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateManagementDnsZoneBinding_async
   */
  async checkCreateManagementDnsZoneBindingProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createManagementDnsZoneBinding,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Updates a `ManagementDnsZoneBinding` resource.
   * Only fields specified in `update_mask` are applied.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `ManagementDnsZoneBinding` resource by the update.
   *   The fields specified in the `update_mask` are relative to the resource, not
   *   the full request. A field will be overwritten if it is in the mask. If the
   *   user does not provide a mask then all fields will be overwritten.
   * @param {google.cloud.vmwareengine.v1.ManagementDnsZoneBinding} request.managementDnsZoneBinding
   *   Required. New values to update the management DNS zone binding with.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if the original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_management_dns_zone_binding.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateManagementDnsZoneBinding_async
   */
  updateManagementDnsZoneBinding(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateManagementDnsZoneBindingRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateManagementDnsZoneBinding(
    request: protos.google.cloud.vmwareengine.v1.IUpdateManagementDnsZoneBindingRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateManagementDnsZoneBinding(
    request: protos.google.cloud.vmwareengine.v1.IUpdateManagementDnsZoneBindingRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateManagementDnsZoneBinding(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateManagementDnsZoneBindingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'management_dns_zone_binding.name':
          request.managementDnsZoneBinding!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateManagementDnsZoneBinding(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `updateManagementDnsZoneBinding()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_management_dns_zone_binding.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateManagementDnsZoneBinding_async
   */
  async checkUpdateManagementDnsZoneBindingProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateManagementDnsZoneBinding,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a `ManagementDnsZoneBinding` resource. When a management DNS zone
   * binding is deleted, the corresponding consumer VPC network is no longer
   * bound to the management DNS zone.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the management DNS zone binding to delete.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/managementDnsZoneBindings/my-management-dns-zone-binding`
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if the original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_management_dns_zone_binding.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteManagementDnsZoneBinding_async
   */
  deleteManagementDnsZoneBinding(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteManagementDnsZoneBindingRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteManagementDnsZoneBinding(
    request: protos.google.cloud.vmwareengine.v1.IDeleteManagementDnsZoneBindingRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteManagementDnsZoneBinding(
    request: protos.google.cloud.vmwareengine.v1.IDeleteManagementDnsZoneBindingRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteManagementDnsZoneBinding(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteManagementDnsZoneBindingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteManagementDnsZoneBinding(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `deleteManagementDnsZoneBinding()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_management_dns_zone_binding.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteManagementDnsZoneBinding_async
   */
  async checkDeleteManagementDnsZoneBindingProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteManagementDnsZoneBinding,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Retries to create a `ManagementDnsZoneBinding` resource that is
   * in failed state.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the management DNS zone binding to repair.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/managementDnsZoneBindings/my-management-dns-zone-binding`
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request ID,
   *   the server can check if the original operation with the same request ID was
   *   received, and if so, will ignore the second request. This prevents clients
   *   from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.repair_management_dns_zone_binding.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_RepairManagementDnsZoneBinding_async
   */
  repairManagementDnsZoneBinding(
    request?: protos.google.cloud.vmwareengine.v1.IRepairManagementDnsZoneBindingRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  repairManagementDnsZoneBinding(
    request: protos.google.cloud.vmwareengine.v1.IRepairManagementDnsZoneBindingRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  repairManagementDnsZoneBinding(
    request: protos.google.cloud.vmwareengine.v1.IRepairManagementDnsZoneBindingRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  repairManagementDnsZoneBinding(
    request?: protos.google.cloud.vmwareengine.v1.IRepairManagementDnsZoneBindingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.repairManagementDnsZoneBinding(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `repairManagementDnsZoneBinding()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.repair_management_dns_zone_binding.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_RepairManagementDnsZoneBinding_async
   */
  async checkRepairManagementDnsZoneBindingProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.repairManagementDnsZoneBinding,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new VMware Engine network that can be used by a private cloud.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to create the new VMware Engine
   *   network in. A VMware Engine network of type
   *   `LEGACY` is a regional resource, and a VMware
   *   Engine network of type `STANDARD` is a global resource.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names. For example:
   *   `projects/my-project/locations/global`
   * @param {string} request.vmwareEngineNetworkId
   *   Required. The user-provided identifier of the new VMware Engine network.
   *   This identifier must be unique among VMware Engine network resources
   *   within the parent and becomes the final token in the name URI. The
   *   identifier must meet the following requirements:
   *
   *   * For networks of type LEGACY, adheres to the format:
   *   `{region-id}-default`. Replace `{region-id}` with the region where you want
   *   to create the VMware Engine network. For example, "us-central1-default".
   *   * Only contains 1-63 alphanumeric characters and hyphens
   *   * Begins with an alphabetical character
   *   * Ends with a non-hyphen character
   *   * Not formatted as a UUID
   *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   *   (section 3.5)
   * @param {google.cloud.vmwareengine.v1.VmwareEngineNetwork} request.vmwareEngineNetwork
   *   Required. The initial description of the new VMware Engine network.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_vmware_engine_network.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateVmwareEngineNetwork_async
   */
  createVmwareEngineNetwork(
    request?: protos.google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createVmwareEngineNetwork(
    request: protos.google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createVmwareEngineNetwork(
    request: protos.google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createVmwareEngineNetwork(
    request?: protos.google.cloud.vmwareengine.v1.ICreateVmwareEngineNetworkRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createVmwareEngineNetwork(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `createVmwareEngineNetwork()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_vmware_engine_network.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreateVmwareEngineNetwork_async
   */
  async checkCreateVmwareEngineNetworkProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createVmwareEngineNetwork,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Modifies a VMware Engine network resource. Only the following fields can be
   * updated: `description`. Only fields specified in `updateMask` are
   * applied.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.vmwareengine.v1.VmwareEngineNetwork} request.vmwareEngineNetwork
   *   Required. VMware Engine network description.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   VMware Engine network resource by the update.
   *   The fields specified in the `update_mask` are relative to the resource, not
   *   the full request. A field will be overwritten if it is in the mask. If the
   *   user does not provide a mask then all fields will be overwritten. Only the
   *   following fields can be updated: `description`.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_vmware_engine_network.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateVmwareEngineNetwork_async
   */
  updateVmwareEngineNetwork(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updateVmwareEngineNetwork(
    request: protos.google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateVmwareEngineNetwork(
    request: protos.google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updateVmwareEngineNetwork(
    request?: protos.google.cloud.vmwareengine.v1.IUpdateVmwareEngineNetworkRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'vmware_engine_network.name': request.vmwareEngineNetwork!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateVmwareEngineNetwork(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `updateVmwareEngineNetwork()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_vmware_engine_network.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdateVmwareEngineNetwork_async
   */
  async checkUpdateVmwareEngineNetworkProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updateVmwareEngineNetwork,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a `VmwareEngineNetwork` resource. You can only delete a VMware
   * Engine network after all resources that refer to it are deleted. For
   * example, a private cloud, a network peering, and a network policy can all
   * refer to the same VMware Engine network.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the VMware Engine network to be deleted.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/global/vmwareEngineNetworks/my-network`
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {string} [request.etag]
   *   Optional. Checksum used to ensure that the user-provided value is up to
   *   date before the server processes the request. The server compares provided
   *   checksum with the current checksum of the resource. If the user-provided
   *   value is out of date, this request returns an `ABORTED` error.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_vmware_engine_network.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteVmwareEngineNetwork_async
   */
  deleteVmwareEngineNetwork(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deleteVmwareEngineNetwork(
    request: protos.google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteVmwareEngineNetwork(
    request: protos.google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deleteVmwareEngineNetwork(
    request?: protos.google.cloud.vmwareengine.v1.IDeleteVmwareEngineNetworkRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteVmwareEngineNetwork(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `deleteVmwareEngineNetwork()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_vmware_engine_network.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeleteVmwareEngineNetwork_async
   */
  async checkDeleteVmwareEngineNetworkProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deleteVmwareEngineNetwork,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Creates a new private connection that can be used for accessing private
   * Clouds.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to create the new private
   *   connection in. Private connection is a regional resource.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names. For example:
   *   `projects/my-project/locations/us-central1`
   * @param {string} request.privateConnectionId
   *   Required. The user-provided identifier of the new private connection.
   *   This identifier must be unique among private connection resources
   *   within the parent and becomes the final token in the name URI. The
   *   identifier must meet the following requirements:
   *
   *   * Only contains 1-63 alphanumeric characters and hyphens
   *   * Begins with an alphabetical character
   *   * Ends with a non-hyphen character
   *   * Not formatted as a UUID
   *   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
   *   (section 3.5)
   * @param {google.cloud.vmwareengine.v1.PrivateConnection} request.privateConnection
   *   Required. The initial description of the new private connection.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_private_connection.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreatePrivateConnection_async
   */
  createPrivateConnection(
    request?: protos.google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateConnection,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  createPrivateConnection(
    request: protos.google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateConnection,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createPrivateConnection(
    request: protos.google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateConnection,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  createPrivateConnection(
    request?: protos.google.cloud.vmwareengine.v1.ICreatePrivateConnectionRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IPrivateConnection,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateConnection,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateConnection,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createPrivateConnection(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `createPrivateConnection()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.create_private_connection.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_CreatePrivateConnection_async
   */
  async checkCreatePrivateConnectionProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateConnection,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.createPrivateConnection,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateConnection,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Modifies a `PrivateConnection` resource. Only `description` and
   * `routing_mode` fields can be updated. Only fields specified in `updateMask`
   * are applied.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.vmwareengine.v1.PrivateConnection} request.privateConnection
   *   Required. Private connection description.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   Required. Field mask is used to specify the fields to be overwritten in the
   *   `PrivateConnection` resource by the update.
   *   The fields specified in the `update_mask` are relative to the resource, not
   *   the full request. A field will be overwritten if it is in the mask. If the
   *   user does not provide a mask then all fields will be overwritten.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_private_connection.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdatePrivateConnection_async
   */
  updatePrivateConnection(
    request?: protos.google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateConnection,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  updatePrivateConnection(
    request: protos.google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateConnection,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updatePrivateConnection(
    request: protos.google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateConnection,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  updatePrivateConnection(
    request?: protos.google.cloud.vmwareengine.v1.IUpdatePrivateConnectionRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IPrivateConnection,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateConnection,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IPrivateConnection,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'private_connection.name': request.privateConnection!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updatePrivateConnection(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `updatePrivateConnection()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.update_private_connection.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_UpdatePrivateConnection_async
   */
  async checkUpdatePrivateConnectionProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateConnection,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.updatePrivateConnection,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.PrivateConnection,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Deletes a `PrivateConnection` resource. When a private connection is
   * deleted for a VMware Engine network, the connected network becomes
   * inaccessible to that VMware Engine network.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The resource name of the private connection to be deleted.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1/privateConnections/my-connection`
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_private_connection.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeletePrivateConnection_async
   */
  deletePrivateConnection(
    request?: protos.google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  deletePrivateConnection(
    request: protos.google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deletePrivateConnection(
    request: protos.google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest,
    callback: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  deletePrivateConnection(
    request?: protos.google.cloud.vmwareengine.v1.IDeletePrivateConnectionRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.protobuf.IEmpty,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deletePrivateConnection(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `deletePrivateConnection()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.delete_private_connection.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_DeletePrivateConnection_async
   */
  async checkDeletePrivateConnectionProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.deletePrivateConnection,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Grants the bind permission to the customer provided principal(user /
   * service account) to bind their DNS zone with the intranet VPC associated
   * with the project. DnsBindPermission is a global resource and location can
   * only be global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the resource which stores the users/service accounts
   *   having the permission to bind to the corresponding intranet VPC of the
   *   consumer project. DnsBindPermission is a global resource. Resource names
   *   are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names. For example:
   *   `projects/my-project/locations/global/dnsBindPermission`
   * @param {google.cloud.vmwareengine.v1.Principal} request.principal
   *   Required. The consumer provided user/service account which needs to be
   *   granted permission to bind with the intranet VPC corresponding to the
   *   consumer project.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.grant_dns_bind_permission.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GrantDnsBindPermission_async
   */
  grantDnsBindPermission(
    request?: protos.google.cloud.vmwareengine.v1.IGrantDnsBindPermissionRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  grantDnsBindPermission(
    request: protos.google.cloud.vmwareengine.v1.IGrantDnsBindPermissionRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  grantDnsBindPermission(
    request: protos.google.cloud.vmwareengine.v1.IGrantDnsBindPermissionRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  grantDnsBindPermission(
    request?: protos.google.cloud.vmwareengine.v1.IGrantDnsBindPermissionRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.grantDnsBindPermission(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `grantDnsBindPermission()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.grant_dns_bind_permission.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_GrantDnsBindPermission_async
   */
  async checkGrantDnsBindPermissionProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.DnsBindPermission,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.grantDnsBindPermission,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.DnsBindPermission,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Revokes the bind permission from the customer provided principal(user /
   * service account) on the intranet VPC associated with the consumer project.
   * DnsBindPermission is a global resource and location can only be global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the resource which stores the users/service accounts
   *   having the permission to bind to the corresponding intranet VPC of the
   *   consumer project. DnsBindPermission is a global resource. Resource names
   *   are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names. For example:
   *   `projects/my-project/locations/global/dnsBindPermission`
   * @param {google.cloud.vmwareengine.v1.Principal} request.principal
   *   Required. The consumer provided user/service account which needs to be
   *   granted permission to bind with the intranet VPC corresponding to the
   *   consumer project.
   * @param {string} [request.requestId]
   *   Optional. A request ID to identify requests. Specify a unique request ID
   *   so that if you must retry your request, the server will know to ignore
   *   the request if it has already been completed. The server guarantees that a
   *   request doesn't result in creation of duplicate commitments for at least 60
   *   minutes.
   *
   *   For example, consider a situation where you make an initial request and the
   *   request times out. If you make the request again with the same request
   *   ID, the server can check if original operation with the same request ID
   *   was received, and if so, will ignore the second request. This prevents
   *   clients from accidentally creating duplicate commitments.
   *
   *   The request ID must be a valid UUID with the exception that zero UUID is
   *   not supported (00000000-0000-0000-0000-000000000000).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.revoke_dns_bind_permission.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_RevokeDnsBindPermission_async
   */
  revokeDnsBindPermission(
    request?: protos.google.cloud.vmwareengine.v1.IRevokeDnsBindPermissionRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  revokeDnsBindPermission(
    request: protos.google.cloud.vmwareengine.v1.IRevokeDnsBindPermissionRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  revokeDnsBindPermission(
    request: protos.google.cloud.vmwareengine.v1.IRevokeDnsBindPermissionRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  revokeDnsBindPermission(
    request?: protos.google.cloud.vmwareengine.v1.IRevokeDnsBindPermissionRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
            protos.google.cloud.vmwareengine.v1.IOperationMetadata
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.vmwareengine.v1.IDnsBindPermission,
        protos.google.cloud.vmwareengine.v1.IOperationMetadata
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.revokeDnsBindPermission(
      request,
      options,
      callback
    );
  }
  /**
   * Check the status of the long running operation returned by `revokeDnsBindPermission()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.revoke_dns_bind_permission.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_RevokeDnsBindPermission_async
   */
  async checkRevokeDnsBindPermissionProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.vmwareengine.v1.DnsBindPermission,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.revokeDnsBindPermission,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.vmwareengine.v1.DnsBindPermission,
      protos.google.cloud.vmwareengine.v1.OperationMetadata
    >;
  }
  /**
   * Lists `PrivateCloud` resources in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   clusters. Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a`
   * @param {number} request.pageSize
   *   The maximum number of private clouds to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListPrivateClouds` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListPrivateClouds` must
   *   match the call that provided the page token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison operator, and the
   *   value that you want to use for filtering. The value must be a string, a
   *   number, or a boolean. The comparison operator must be `=`, `!=`, `>`, or
   *   `<`.
   *
   *   For example, if you are filtering a list of private clouds, you can exclude
   *   the ones named `example-pc` by specifying `name != "example-pc"`.
   *
   *   You can also filter nested fields. For example, you could specify
   *   `networkConfig.managementCidr = "192.168.0.0/24"` to include private clouds
   *   only if they have a matching address in their network configuration.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-pc")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you can
   *   include `AND` and `OR` expressions explicitly. For example:
   *   ```
   *   (name = "private-cloud-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "private-cloud-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results are
   *   ordered by `name` in ascending order. You can also sort results in
   *   descending order based on the `name` value using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.PrivateCloud|PrivateCloud}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listPrivateCloudsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listPrivateClouds(
    request?: protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IPrivateCloud[],
      protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest | null,
      protos.google.cloud.vmwareengine.v1.IListPrivateCloudsResponse,
    ]
  >;
  listPrivateClouds(
    request: protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest,
      | protos.google.cloud.vmwareengine.v1.IListPrivateCloudsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IPrivateCloud
    >
  ): void;
  listPrivateClouds(
    request: protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest,
      | protos.google.cloud.vmwareengine.v1.IListPrivateCloudsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IPrivateCloud
    >
  ): void;
  listPrivateClouds(
    request?: protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest,
          | protos.google.cloud.vmwareengine.v1.IListPrivateCloudsResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.IPrivateCloud
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest,
      | protos.google.cloud.vmwareengine.v1.IListPrivateCloudsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IPrivateCloud
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IPrivateCloud[],
      protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest | null,
      protos.google.cloud.vmwareengine.v1.IListPrivateCloudsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listPrivateClouds(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   clusters. Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a`
   * @param {number} request.pageSize
   *   The maximum number of private clouds to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListPrivateClouds` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListPrivateClouds` must
   *   match the call that provided the page token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison operator, and the
   *   value that you want to use for filtering. The value must be a string, a
   *   number, or a boolean. The comparison operator must be `=`, `!=`, `>`, or
   *   `<`.
   *
   *   For example, if you are filtering a list of private clouds, you can exclude
   *   the ones named `example-pc` by specifying `name != "example-pc"`.
   *
   *   You can also filter nested fields. For example, you could specify
   *   `networkConfig.managementCidr = "192.168.0.0/24"` to include private clouds
   *   only if they have a matching address in their network configuration.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-pc")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you can
   *   include `AND` and `OR` expressions explicitly. For example:
   *   ```
   *   (name = "private-cloud-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "private-cloud-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results are
   *   ordered by `name` in ascending order. You can also sort results in
   *   descending order based on the `name` value using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.PrivateCloud|PrivateCloud} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listPrivateCloudsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listPrivateCloudsStream(
    request?: protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listPrivateClouds'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listPrivateClouds.createStream(
      this.innerApiCalls.listPrivateClouds as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listPrivateClouds`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   clusters. Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a`
   * @param {number} request.pageSize
   *   The maximum number of private clouds to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListPrivateClouds` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListPrivateClouds` must
   *   match the call that provided the page token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison operator, and the
   *   value that you want to use for filtering. The value must be a string, a
   *   number, or a boolean. The comparison operator must be `=`, `!=`, `>`, or
   *   `<`.
   *
   *   For example, if you are filtering a list of private clouds, you can exclude
   *   the ones named `example-pc` by specifying `name != "example-pc"`.
   *
   *   You can also filter nested fields. For example, you could specify
   *   `networkConfig.managementCidr = "192.168.0.0/24"` to include private clouds
   *   only if they have a matching address in their network configuration.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-pc")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you can
   *   include `AND` and `OR` expressions explicitly. For example:
   *   ```
   *   (name = "private-cloud-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "private-cloud-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results are
   *   ordered by `name` in ascending order. You can also sort results in
   *   descending order based on the `name` value using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.PrivateCloud|PrivateCloud}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_private_clouds.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListPrivateClouds_async
   */
  listPrivateCloudsAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListPrivateCloudsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.IPrivateCloud> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listPrivateClouds'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listPrivateClouds.asyncIterate(
      this.innerApiCalls['listPrivateClouds'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.IPrivateCloud>;
  }
  /**
   * Lists `Cluster` resources in a given private cloud.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to query for clusters.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of clusters to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListClusters` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListClusters`
   *   must match the call that provided the page token.
   * @param {string} request.filter
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-cluster")
   *   (nodeCount = "3")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you can
   *   include `AND` and `OR` expressions explicitly. For example:
   *   ```
   *   (name = "example-cluster-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-cluster-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results are
   *   ordered by `name` in ascending order. You can also sort results in
   *   descending order based on the `name` value using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.Cluster|Cluster}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listClustersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listClusters(
    request?: protos.google.cloud.vmwareengine.v1.IListClustersRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ICluster[],
      protos.google.cloud.vmwareengine.v1.IListClustersRequest | null,
      protos.google.cloud.vmwareengine.v1.IListClustersResponse,
    ]
  >;
  listClusters(
    request: protos.google.cloud.vmwareengine.v1.IListClustersRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListClustersRequest,
      | protos.google.cloud.vmwareengine.v1.IListClustersResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.ICluster
    >
  ): void;
  listClusters(
    request: protos.google.cloud.vmwareengine.v1.IListClustersRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListClustersRequest,
      | protos.google.cloud.vmwareengine.v1.IListClustersResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.ICluster
    >
  ): void;
  listClusters(
    request?: protos.google.cloud.vmwareengine.v1.IListClustersRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListClustersRequest,
          | protos.google.cloud.vmwareengine.v1.IListClustersResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.ICluster
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListClustersRequest,
      | protos.google.cloud.vmwareengine.v1.IListClustersResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.ICluster
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ICluster[],
      protos.google.cloud.vmwareengine.v1.IListClustersRequest | null,
      protos.google.cloud.vmwareengine.v1.IListClustersResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listClusters(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to query for clusters.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of clusters to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListClusters` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListClusters`
   *   must match the call that provided the page token.
   * @param {string} request.filter
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-cluster")
   *   (nodeCount = "3")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you can
   *   include `AND` and `OR` expressions explicitly. For example:
   *   ```
   *   (name = "example-cluster-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-cluster-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results are
   *   ordered by `name` in ascending order. You can also sort results in
   *   descending order based on the `name` value using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.Cluster|Cluster} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listClustersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listClustersStream(
    request?: protos.google.cloud.vmwareengine.v1.IListClustersRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listClusters'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listClusters.createStream(
      this.innerApiCalls.listClusters as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listClusters`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to query for clusters.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of clusters to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListClusters` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListClusters`
   *   must match the call that provided the page token.
   * @param {string} request.filter
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-cluster")
   *   (nodeCount = "3")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you can
   *   include `AND` and `OR` expressions explicitly. For example:
   *   ```
   *   (name = "example-cluster-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-cluster-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results are
   *   ordered by `name` in ascending order. You can also sort results in
   *   descending order based on the `name` value using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.Cluster|Cluster}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_clusters.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListClusters_async
   */
  listClustersAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListClustersRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.ICluster> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listClusters'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listClusters.asyncIterate(
      this.innerApiCalls['listClusters'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.ICluster>;
  }
  /**
   * Lists nodes in a given cluster.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the cluster to be queried for nodes.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
   * @param {number} request.pageSize
   *   The maximum number of nodes to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListNodes` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListNodes` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.Node|Node}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listNodesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listNodes(
    request?: protos.google.cloud.vmwareengine.v1.IListNodesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INode[],
      protos.google.cloud.vmwareengine.v1.IListNodesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListNodesResponse,
    ]
  >;
  listNodes(
    request: protos.google.cloud.vmwareengine.v1.IListNodesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListNodesRequest,
      protos.google.cloud.vmwareengine.v1.IListNodesResponse | null | undefined,
      protos.google.cloud.vmwareengine.v1.INode
    >
  ): void;
  listNodes(
    request: protos.google.cloud.vmwareengine.v1.IListNodesRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListNodesRequest,
      protos.google.cloud.vmwareengine.v1.IListNodesResponse | null | undefined,
      protos.google.cloud.vmwareengine.v1.INode
    >
  ): void;
  listNodes(
    request?: protos.google.cloud.vmwareengine.v1.IListNodesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListNodesRequest,
          | protos.google.cloud.vmwareengine.v1.IListNodesResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.INode
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListNodesRequest,
      protos.google.cloud.vmwareengine.v1.IListNodesResponse | null | undefined,
      protos.google.cloud.vmwareengine.v1.INode
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INode[],
      protos.google.cloud.vmwareengine.v1.IListNodesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListNodesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listNodes(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the cluster to be queried for nodes.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
   * @param {number} request.pageSize
   *   The maximum number of nodes to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListNodes` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListNodes` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.Node|Node} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listNodesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listNodesStream(
    request?: protos.google.cloud.vmwareengine.v1.IListNodesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listNodes'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listNodes.createStream(
      this.innerApiCalls.listNodes as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listNodes`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the cluster to be queried for nodes.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/clusters/my-cluster`
   * @param {number} request.pageSize
   *   The maximum number of nodes to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListNodes` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListNodes` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.Node|Node}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_nodes.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListNodes_async
   */
  listNodesAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListNodesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.INode> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listNodes'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listNodes.asyncIterate(
      this.innerApiCalls['listNodes'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.INode>;
  }
  /**
   * Lists external IP addresses assigned to VMware workload VMs in a given
   * private cloud.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   external IP addresses.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of external IP addresses to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListExternalAddresses` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListExternalAddresses` must match the call that provided the page token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of IP addresses, you can
   *   exclude the ones named `example-ip` by specifying
   *   `name != "example-ip"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-ip")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-ip-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-ip-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.ExternalAddress|ExternalAddress}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listExternalAddressesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listExternalAddresses(
    request?: protos.google.cloud.vmwareengine.v1.IListExternalAddressesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IExternalAddress[],
      protos.google.cloud.vmwareengine.v1.IListExternalAddressesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListExternalAddressesResponse,
    ]
  >;
  listExternalAddresses(
    request: protos.google.cloud.vmwareengine.v1.IListExternalAddressesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListExternalAddressesRequest,
      | protos.google.cloud.vmwareengine.v1.IListExternalAddressesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IExternalAddress
    >
  ): void;
  listExternalAddresses(
    request: protos.google.cloud.vmwareengine.v1.IListExternalAddressesRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListExternalAddressesRequest,
      | protos.google.cloud.vmwareengine.v1.IListExternalAddressesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IExternalAddress
    >
  ): void;
  listExternalAddresses(
    request?: protos.google.cloud.vmwareengine.v1.IListExternalAddressesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListExternalAddressesRequest,
          | protos.google.cloud.vmwareengine.v1.IListExternalAddressesResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.IExternalAddress
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListExternalAddressesRequest,
      | protos.google.cloud.vmwareengine.v1.IListExternalAddressesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IExternalAddress
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IExternalAddress[],
      protos.google.cloud.vmwareengine.v1.IListExternalAddressesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListExternalAddressesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listExternalAddresses(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   external IP addresses.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of external IP addresses to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListExternalAddresses` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListExternalAddresses` must match the call that provided the page token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of IP addresses, you can
   *   exclude the ones named `example-ip` by specifying
   *   `name != "example-ip"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-ip")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-ip-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-ip-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.ExternalAddress|ExternalAddress} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listExternalAddressesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listExternalAddressesStream(
    request?: protos.google.cloud.vmwareengine.v1.IListExternalAddressesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listExternalAddresses'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listExternalAddresses.createStream(
      this.innerApiCalls.listExternalAddresses as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listExternalAddresses`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   external IP addresses.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of external IP addresses to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListExternalAddresses` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListExternalAddresses` must match the call that provided the page token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of IP addresses, you can
   *   exclude the ones named `example-ip` by specifying
   *   `name != "example-ip"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-ip")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-ip-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-ip-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.ExternalAddress|ExternalAddress}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_external_addresses.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListExternalAddresses_async
   */
  listExternalAddressesAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListExternalAddressesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.IExternalAddress> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listExternalAddresses'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listExternalAddresses.asyncIterate(
      this.innerApiCalls['listExternalAddresses'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.IExternalAddress>;
  }
  /**
   * Lists external IP addresses assigned to VMware workload VMs within the
   * scope of the given network policy.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.networkPolicy
   *   Required. The resource name of the network policy to query for assigned
   *   external IP addresses. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example:
   *   `projects/my-project/locations/us-central1/networkPolicies/my-policy`
   * @param {number} request.pageSize
   *   The maximum number of external IP addresses to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous
   *   `FetchNetworkPolicyExternalAddresses` call. Provide this to retrieve the
   *   subsequent page.
   *
   *   When paginating, all parameters provided to
   *   `FetchNetworkPolicyExternalAddresses`, except for `page_size` and
   *   `page_token`, must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.ExternalAddress|ExternalAddress}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `fetchNetworkPolicyExternalAddressesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  fetchNetworkPolicyExternalAddresses(
    request?: protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IExternalAddress[],
      protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesRequest | null,
      protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesResponse,
    ]
  >;
  fetchNetworkPolicyExternalAddresses(
    request: protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesRequest,
      | protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IExternalAddress
    >
  ): void;
  fetchNetworkPolicyExternalAddresses(
    request: protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesRequest,
      | protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IExternalAddress
    >
  ): void;
  fetchNetworkPolicyExternalAddresses(
    request?: protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesRequest,
          | protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.IExternalAddress
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesRequest,
      | protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IExternalAddress
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IExternalAddress[],
      protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesRequest | null,
      protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        network_policy: request.networkPolicy ?? '',
      });
    this.initialize();
    return this.innerApiCalls.fetchNetworkPolicyExternalAddresses(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.networkPolicy
   *   Required. The resource name of the network policy to query for assigned
   *   external IP addresses. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example:
   *   `projects/my-project/locations/us-central1/networkPolicies/my-policy`
   * @param {number} request.pageSize
   *   The maximum number of external IP addresses to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous
   *   `FetchNetworkPolicyExternalAddresses` call. Provide this to retrieve the
   *   subsequent page.
   *
   *   When paginating, all parameters provided to
   *   `FetchNetworkPolicyExternalAddresses`, except for `page_size` and
   *   `page_token`, must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.ExternalAddress|ExternalAddress} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `fetchNetworkPolicyExternalAddressesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  fetchNetworkPolicyExternalAddressesStream(
    request?: protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        network_policy: request.networkPolicy ?? '',
      });
    const defaultCallSettings =
      this._defaults['fetchNetworkPolicyExternalAddresses'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.fetchNetworkPolicyExternalAddresses.createStream(
      this.innerApiCalls.fetchNetworkPolicyExternalAddresses as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `fetchNetworkPolicyExternalAddresses`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.networkPolicy
   *   Required. The resource name of the network policy to query for assigned
   *   external IP addresses. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example:
   *   `projects/my-project/locations/us-central1/networkPolicies/my-policy`
   * @param {number} request.pageSize
   *   The maximum number of external IP addresses to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous
   *   `FetchNetworkPolicyExternalAddresses` call. Provide this to retrieve the
   *   subsequent page.
   *
   *   When paginating, all parameters provided to
   *   `FetchNetworkPolicyExternalAddresses`, except for `page_size` and
   *   `page_token`, must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.ExternalAddress|ExternalAddress}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.fetch_network_policy_external_addresses.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_FetchNetworkPolicyExternalAddresses_async
   */
  fetchNetworkPolicyExternalAddressesAsync(
    request?: protos.google.cloud.vmwareengine.v1.IFetchNetworkPolicyExternalAddressesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.IExternalAddress> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        network_policy: request.networkPolicy ?? '',
      });
    const defaultCallSettings =
      this._defaults['fetchNetworkPolicyExternalAddresses'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.fetchNetworkPolicyExternalAddresses.asyncIterate(
      this.innerApiCalls['fetchNetworkPolicyExternalAddresses'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.IExternalAddress>;
  }
  /**
   * Lists subnets in a given private cloud.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   subnets.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of subnets to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListSubnetsRequest` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListSubnetsRequest` must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.Subnet|Subnet}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listSubnetsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listSubnets(
    request?: protos.google.cloud.vmwareengine.v1.IListSubnetsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ISubnet[],
      protos.google.cloud.vmwareengine.v1.IListSubnetsRequest | null,
      protos.google.cloud.vmwareengine.v1.IListSubnetsResponse,
    ]
  >;
  listSubnets(
    request: protos.google.cloud.vmwareengine.v1.IListSubnetsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListSubnetsRequest,
      | protos.google.cloud.vmwareengine.v1.IListSubnetsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.ISubnet
    >
  ): void;
  listSubnets(
    request: protos.google.cloud.vmwareengine.v1.IListSubnetsRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListSubnetsRequest,
      | protos.google.cloud.vmwareengine.v1.IListSubnetsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.ISubnet
    >
  ): void;
  listSubnets(
    request?: protos.google.cloud.vmwareengine.v1.IListSubnetsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListSubnetsRequest,
          | protos.google.cloud.vmwareengine.v1.IListSubnetsResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.ISubnet
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListSubnetsRequest,
      | protos.google.cloud.vmwareengine.v1.IListSubnetsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.ISubnet
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ISubnet[],
      protos.google.cloud.vmwareengine.v1.IListSubnetsRequest | null,
      protos.google.cloud.vmwareengine.v1.IListSubnetsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listSubnets(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   subnets.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of subnets to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListSubnetsRequest` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListSubnetsRequest` must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.Subnet|Subnet} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listSubnetsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listSubnetsStream(
    request?: protos.google.cloud.vmwareengine.v1.IListSubnetsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listSubnets'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listSubnets.createStream(
      this.innerApiCalls.listSubnets as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listSubnets`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   subnets.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of subnets to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListSubnetsRequest` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListSubnetsRequest` must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.Subnet|Subnet}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_subnets.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListSubnets_async
   */
  listSubnetsAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListSubnetsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.ISubnet> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listSubnets'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listSubnets.asyncIterate(
      this.innerApiCalls['listSubnets'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.ISubnet>;
  }
  /**
   * Lists `ExternalAccessRule` resources in the specified network policy.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the network policy to query for external
   *   access firewall rules. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example:
   *   `projects/my-project/locations/us-central1/networkPolicies/my-policy`
   * @param {number} request.pageSize
   *   The maximum number of external access rules to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListExternalAccessRulesRequest`
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListExternalAccessRulesRequest` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of external access rules, you can
   *   exclude the ones named `example-rule` by specifying
   *   `name != "example-rule"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-rule")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-rule-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-rule-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.ExternalAccessRule|ExternalAccessRule}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listExternalAccessRulesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listExternalAccessRules(
    request?: protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IExternalAccessRule[],
      protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesResponse,
    ]
  >;
  listExternalAccessRules(
    request: protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesRequest,
      | protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IExternalAccessRule
    >
  ): void;
  listExternalAccessRules(
    request: protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesRequest,
      | protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IExternalAccessRule
    >
  ): void;
  listExternalAccessRules(
    request?: protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesRequest,
          | protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.IExternalAccessRule
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesRequest,
      | protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IExternalAccessRule
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IExternalAccessRule[],
      protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listExternalAccessRules(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the network policy to query for external
   *   access firewall rules. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example:
   *   `projects/my-project/locations/us-central1/networkPolicies/my-policy`
   * @param {number} request.pageSize
   *   The maximum number of external access rules to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListExternalAccessRulesRequest`
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListExternalAccessRulesRequest` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of external access rules, you can
   *   exclude the ones named `example-rule` by specifying
   *   `name != "example-rule"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-rule")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-rule-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-rule-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.ExternalAccessRule|ExternalAccessRule} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listExternalAccessRulesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listExternalAccessRulesStream(
    request?: protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listExternalAccessRules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listExternalAccessRules.createStream(
      this.innerApiCalls.listExternalAccessRules as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listExternalAccessRules`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the network policy to query for external
   *   access firewall rules. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example:
   *   `projects/my-project/locations/us-central1/networkPolicies/my-policy`
   * @param {number} request.pageSize
   *   The maximum number of external access rules to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListExternalAccessRulesRequest`
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListExternalAccessRulesRequest` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of external access rules, you can
   *   exclude the ones named `example-rule` by specifying
   *   `name != "example-rule"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-rule")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-rule-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-rule-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.ExternalAccessRule|ExternalAccessRule}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_external_access_rules.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListExternalAccessRules_async
   */
  listExternalAccessRulesAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListExternalAccessRulesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.IExternalAccessRule> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listExternalAccessRules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listExternalAccessRules.asyncIterate(
      this.innerApiCalls['listExternalAccessRules'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.IExternalAccessRule>;
  }
  /**
   * Lists logging servers configured for a given private
   * cloud.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   logging servers.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of logging servers to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListLoggingServersRequest` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListLoggingServersRequest` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of logging servers, you can
   *   exclude the ones named `example-server` by specifying
   *   `name != "example-server"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-server")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-server-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-server-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.LoggingServer|LoggingServer}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listLoggingServersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listLoggingServers(
    request?: protos.google.cloud.vmwareengine.v1.IListLoggingServersRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ILoggingServer[],
      protos.google.cloud.vmwareengine.v1.IListLoggingServersRequest | null,
      protos.google.cloud.vmwareengine.v1.IListLoggingServersResponse,
    ]
  >;
  listLoggingServers(
    request: protos.google.cloud.vmwareengine.v1.IListLoggingServersRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListLoggingServersRequest,
      | protos.google.cloud.vmwareengine.v1.IListLoggingServersResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.ILoggingServer
    >
  ): void;
  listLoggingServers(
    request: protos.google.cloud.vmwareengine.v1.IListLoggingServersRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListLoggingServersRequest,
      | protos.google.cloud.vmwareengine.v1.IListLoggingServersResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.ILoggingServer
    >
  ): void;
  listLoggingServers(
    request?: protos.google.cloud.vmwareengine.v1.IListLoggingServersRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListLoggingServersRequest,
          | protos.google.cloud.vmwareengine.v1.IListLoggingServersResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.ILoggingServer
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListLoggingServersRequest,
      | protos.google.cloud.vmwareengine.v1.IListLoggingServersResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.ILoggingServer
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.ILoggingServer[],
      protos.google.cloud.vmwareengine.v1.IListLoggingServersRequest | null,
      protos.google.cloud.vmwareengine.v1.IListLoggingServersResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listLoggingServers(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   logging servers.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of logging servers to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListLoggingServersRequest` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListLoggingServersRequest` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of logging servers, you can
   *   exclude the ones named `example-server` by specifying
   *   `name != "example-server"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-server")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-server-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-server-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.LoggingServer|LoggingServer} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listLoggingServersAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listLoggingServersStream(
    request?: protos.google.cloud.vmwareengine.v1.IListLoggingServersRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listLoggingServers'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listLoggingServers.createStream(
      this.innerApiCalls.listLoggingServers as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listLoggingServers`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   logging servers.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of logging servers to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListLoggingServersRequest` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListLoggingServersRequest` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of logging servers, you can
   *   exclude the ones named `example-server` by specifying
   *   `name != "example-server"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-server")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-server-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-server-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.LoggingServer|LoggingServer}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_logging_servers.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListLoggingServers_async
   */
  listLoggingServersAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListLoggingServersRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.ILoggingServer> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listLoggingServers'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listLoggingServers.asyncIterate(
      this.innerApiCalls['listLoggingServers'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.ILoggingServer>;
  }
  /**
   * Lists node types
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to be queried for node types.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a`
   * @param {number} request.pageSize
   *   The maximum number of node types to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListNodeTypes` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListNodeTypes` must match the call that provided the page token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of node types, you can
   *   exclude the ones named `standard-72` by specifying
   *   `name != "standard-72"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "standard-72")
   *   (virtual_cpu_count > 2)
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "standard-96") AND
   *   (virtual_cpu_count > 2) OR
   *   (name = "standard-72")
   *   ```
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.NodeType|NodeType}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listNodeTypesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listNodeTypes(
    request?: protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INodeType[],
      protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListNodeTypesResponse,
    ]
  >;
  listNodeTypes(
    request: protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest,
      | protos.google.cloud.vmwareengine.v1.IListNodeTypesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.INodeType
    >
  ): void;
  listNodeTypes(
    request: protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest,
      | protos.google.cloud.vmwareengine.v1.IListNodeTypesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.INodeType
    >
  ): void;
  listNodeTypes(
    request?: protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest,
          | protos.google.cloud.vmwareengine.v1.IListNodeTypesResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.INodeType
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest,
      | protos.google.cloud.vmwareengine.v1.IListNodeTypesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.INodeType
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INodeType[],
      protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListNodeTypesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listNodeTypes(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to be queried for node types.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a`
   * @param {number} request.pageSize
   *   The maximum number of node types to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListNodeTypes` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListNodeTypes` must match the call that provided the page token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of node types, you can
   *   exclude the ones named `standard-72` by specifying
   *   `name != "standard-72"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "standard-72")
   *   (virtual_cpu_count > 2)
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "standard-96") AND
   *   (virtual_cpu_count > 2) OR
   *   (name = "standard-72")
   *   ```
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.NodeType|NodeType} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listNodeTypesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listNodeTypesStream(
    request?: protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listNodeTypes'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listNodeTypes.createStream(
      this.innerApiCalls.listNodeTypes as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listNodeTypes`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to be queried for node types.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a`
   * @param {number} request.pageSize
   *   The maximum number of node types to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListNodeTypes` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListNodeTypes` must match the call that provided the page token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of node types, you can
   *   exclude the ones named `standard-72` by specifying
   *   `name != "standard-72"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "standard-72")
   *   (virtual_cpu_count > 2)
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "standard-96") AND
   *   (virtual_cpu_count > 2) OR
   *   (name = "standard-72")
   *   ```
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.NodeType|NodeType}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_node_types.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListNodeTypes_async
   */
  listNodeTypesAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListNodeTypesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.INodeType> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listNodeTypes'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listNodeTypes.asyncIterate(
      this.innerApiCalls['listNodeTypes'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.INodeType>;
  }
  /**
   * Lists `NetworkPeering` resources in a given project. NetworkPeering is a
   * global resource and location can only be global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location (global) to query for
   *   network peerings. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/global`
   * @param {number} request.pageSize
   *   The maximum number of network peerings to return in one page.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListNetworkPeerings` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListNetworkPeerings` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of network peerings, you can
   *   exclude the ones named `example-peering` by specifying
   *   `name != "example-peering"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-peering")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-peering-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-peering-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.NetworkPeering|NetworkPeering}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listNetworkPeeringsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listNetworkPeerings(
    request?: protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INetworkPeering[],
      protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsRequest | null,
      protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsResponse,
    ]
  >;
  listNetworkPeerings(
    request: protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsRequest,
      | protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.INetworkPeering
    >
  ): void;
  listNetworkPeerings(
    request: protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsRequest,
      | protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.INetworkPeering
    >
  ): void;
  listNetworkPeerings(
    request?: protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsRequest,
          | protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.INetworkPeering
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsRequest,
      | protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.INetworkPeering
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INetworkPeering[],
      protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsRequest | null,
      protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listNetworkPeerings(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location (global) to query for
   *   network peerings. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/global`
   * @param {number} request.pageSize
   *   The maximum number of network peerings to return in one page.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListNetworkPeerings` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListNetworkPeerings` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of network peerings, you can
   *   exclude the ones named `example-peering` by specifying
   *   `name != "example-peering"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-peering")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-peering-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-peering-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.NetworkPeering|NetworkPeering} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listNetworkPeeringsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listNetworkPeeringsStream(
    request?: protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listNetworkPeerings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listNetworkPeerings.createStream(
      this.innerApiCalls.listNetworkPeerings as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listNetworkPeerings`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location (global) to query for
   *   network peerings. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/global`
   * @param {number} request.pageSize
   *   The maximum number of network peerings to return in one page.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListNetworkPeerings` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListNetworkPeerings` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of network peerings, you can
   *   exclude the ones named `example-peering` by specifying
   *   `name != "example-peering"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-peering")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-peering-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-peering-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.NetworkPeering|NetworkPeering}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_network_peerings.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListNetworkPeerings_async
   */
  listNetworkPeeringsAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListNetworkPeeringsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.INetworkPeering> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listNetworkPeerings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listNetworkPeerings.asyncIterate(
      this.innerApiCalls['listNetworkPeerings'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.INetworkPeering>;
  }
  /**
   * Lists the network peering routes exchanged over a peering connection.
   * NetworkPeering is a global resource and location can only be global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the network peering to retrieve peering
   *   routes from. Resource names are schemeless URIs that follow the conventions
   *   in https://cloud.google.com/apis/design/resource_names. For example:
   *   `projects/my-project/locations/global/networkPeerings/my-peering`
   * @param {number} request.pageSize
   *   The maximum number of peering routes to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListPeeringRoutes` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListPeeringRoutes` must
   *   match the call that provided the page token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   Currently, only filtering on the `direction` field is supported. To return
   *   routes imported from the peer network, provide "direction=INCOMING". To
   *   return routes exported from the VMware Engine network, provide
   *   "direction=OUTGOING". Other filter expressions return an error.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.PeeringRoute|PeeringRoute}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listPeeringRoutesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listPeeringRoutes(
    request?: protos.google.cloud.vmwareengine.v1.IListPeeringRoutesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IPeeringRoute[],
      protos.google.cloud.vmwareengine.v1.IListPeeringRoutesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListPeeringRoutesResponse,
    ]
  >;
  listPeeringRoutes(
    request: protos.google.cloud.vmwareengine.v1.IListPeeringRoutesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListPeeringRoutesRequest,
      | protos.google.cloud.vmwareengine.v1.IListPeeringRoutesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IPeeringRoute
    >
  ): void;
  listPeeringRoutes(
    request: protos.google.cloud.vmwareengine.v1.IListPeeringRoutesRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListPeeringRoutesRequest,
      | protos.google.cloud.vmwareengine.v1.IListPeeringRoutesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IPeeringRoute
    >
  ): void;
  listPeeringRoutes(
    request?: protos.google.cloud.vmwareengine.v1.IListPeeringRoutesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListPeeringRoutesRequest,
          | protos.google.cloud.vmwareengine.v1.IListPeeringRoutesResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.IPeeringRoute
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListPeeringRoutesRequest,
      | protos.google.cloud.vmwareengine.v1.IListPeeringRoutesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IPeeringRoute
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IPeeringRoute[],
      protos.google.cloud.vmwareengine.v1.IListPeeringRoutesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListPeeringRoutesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listPeeringRoutes(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the network peering to retrieve peering
   *   routes from. Resource names are schemeless URIs that follow the conventions
   *   in https://cloud.google.com/apis/design/resource_names. For example:
   *   `projects/my-project/locations/global/networkPeerings/my-peering`
   * @param {number} request.pageSize
   *   The maximum number of peering routes to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListPeeringRoutes` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListPeeringRoutes` must
   *   match the call that provided the page token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   Currently, only filtering on the `direction` field is supported. To return
   *   routes imported from the peer network, provide "direction=INCOMING". To
   *   return routes exported from the VMware Engine network, provide
   *   "direction=OUTGOING". Other filter expressions return an error.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.PeeringRoute|PeeringRoute} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listPeeringRoutesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listPeeringRoutesStream(
    request?: protos.google.cloud.vmwareengine.v1.IListPeeringRoutesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listPeeringRoutes'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listPeeringRoutes.createStream(
      this.innerApiCalls.listPeeringRoutes as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listPeeringRoutes`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the network peering to retrieve peering
   *   routes from. Resource names are schemeless URIs that follow the conventions
   *   in https://cloud.google.com/apis/design/resource_names. For example:
   *   `projects/my-project/locations/global/networkPeerings/my-peering`
   * @param {number} request.pageSize
   *   The maximum number of peering routes to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListPeeringRoutes` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListPeeringRoutes` must
   *   match the call that provided the page token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   Currently, only filtering on the `direction` field is supported. To return
   *   routes imported from the peer network, provide "direction=INCOMING". To
   *   return routes exported from the VMware Engine network, provide
   *   "direction=OUTGOING". Other filter expressions return an error.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.PeeringRoute|PeeringRoute}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_peering_routes.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListPeeringRoutes_async
   */
  listPeeringRoutesAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListPeeringRoutesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.IPeeringRoute> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listPeeringRoutes'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listPeeringRoutes.asyncIterate(
      this.innerApiCalls['listPeeringRoutes'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.IPeeringRoute>;
  }
  /**
   * Lists `HcxActivationKey` resources in a given private cloud.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud
   *   to be queried for HCX activation keys.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of HCX activation keys to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListHcxActivationKeys` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListHcxActivationKeys` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.HcxActivationKey|HcxActivationKey}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listHcxActivationKeysAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listHcxActivationKeys(
    request?: protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IHcxActivationKey[],
      protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest | null,
      protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse,
    ]
  >;
  listHcxActivationKeys(
    request: protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest,
      | protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IHcxActivationKey
    >
  ): void;
  listHcxActivationKeys(
    request: protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest,
      | protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IHcxActivationKey
    >
  ): void;
  listHcxActivationKeys(
    request?: protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest,
          | protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.IHcxActivationKey
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest,
      | protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IHcxActivationKey
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IHcxActivationKey[],
      protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest | null,
      protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listHcxActivationKeys(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud
   *   to be queried for HCX activation keys.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of HCX activation keys to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListHcxActivationKeys` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListHcxActivationKeys` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.HcxActivationKey|HcxActivationKey} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listHcxActivationKeysAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listHcxActivationKeysStream(
    request?: protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listHcxActivationKeys'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listHcxActivationKeys.createStream(
      this.innerApiCalls.listHcxActivationKeys as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listHcxActivationKeys`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud
   *   to be queried for HCX activation keys.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of HCX activation keys to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListHcxActivationKeys` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListHcxActivationKeys` must match the call that provided the page
   *   token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.HcxActivationKey|HcxActivationKey}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_hcx_activation_keys.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListHcxActivationKeys_async
   */
  listHcxActivationKeysAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListHcxActivationKeysRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.IHcxActivationKey> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listHcxActivationKeys'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listHcxActivationKeys.asyncIterate(
      this.innerApiCalls['listHcxActivationKeys'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.IHcxActivationKey>;
  }
  /**
   * Lists `NetworkPolicy` resources in a specified project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location (region) to query for
   *   network policies. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/us-central1`
   * @param {number} request.pageSize
   *   The maximum number of network policies to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListNetworkPolicies` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListNetworkPolicies` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of network policies, you can
   *   exclude the ones named `example-policy` by specifying
   *   `name != "example-policy"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-policy")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-policy-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-policy-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.NetworkPolicy|NetworkPolicy}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listNetworkPoliciesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listNetworkPolicies(
    request?: protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INetworkPolicy[],
      protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse,
    ]
  >;
  listNetworkPolicies(
    request: protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest,
      | protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.INetworkPolicy
    >
  ): void;
  listNetworkPolicies(
    request: protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest,
      | protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.INetworkPolicy
    >
  ): void;
  listNetworkPolicies(
    request?: protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest,
          | protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.INetworkPolicy
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest,
      | protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.INetworkPolicy
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.INetworkPolicy[],
      protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listNetworkPolicies(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location (region) to query for
   *   network policies. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/us-central1`
   * @param {number} request.pageSize
   *   The maximum number of network policies to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListNetworkPolicies` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListNetworkPolicies` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of network policies, you can
   *   exclude the ones named `example-policy` by specifying
   *   `name != "example-policy"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-policy")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-policy-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-policy-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.NetworkPolicy|NetworkPolicy} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listNetworkPoliciesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listNetworkPoliciesStream(
    request?: protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listNetworkPolicies'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listNetworkPolicies.createStream(
      this.innerApiCalls.listNetworkPolicies as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listNetworkPolicies`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location (region) to query for
   *   network policies. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/us-central1`
   * @param {number} request.pageSize
   *   The maximum number of network policies to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListNetworkPolicies` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListNetworkPolicies` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of network policies, you can
   *   exclude the ones named `example-policy` by specifying
   *   `name != "example-policy"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-policy")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-policy-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-policy-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.NetworkPolicy|NetworkPolicy}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_network_policies.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListNetworkPolicies_async
   */
  listNetworkPoliciesAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListNetworkPoliciesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.INetworkPolicy> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listNetworkPolicies'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listNetworkPolicies.asyncIterate(
      this.innerApiCalls['listNetworkPolicies'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.INetworkPolicy>;
  }
  /**
   * Lists Consumer VPCs bound to Management DNS Zone of a given private cloud.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   management DNS zone bindings.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of management DNS zone bindings to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListManagementDnsZoneBindings`
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListManagementDnsZoneBindings` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of Management DNS Zone Bindings,
   *   you can exclude the ones named `example-management-dns-zone-binding` by
   *   specifying `name != "example-management-dns-zone-binding"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-management-dns-zone-binding")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-management-dns-zone-binding-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-management-dns-zone-binding-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding|ManagementDnsZoneBinding}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listManagementDnsZoneBindingsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listManagementDnsZoneBindings(
    request?: protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding[],
      protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsRequest | null,
      protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsResponse,
    ]
  >;
  listManagementDnsZoneBindings(
    request: protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsRequest,
      | protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding
    >
  ): void;
  listManagementDnsZoneBindings(
    request: protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsRequest,
      | protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding
    >
  ): void;
  listManagementDnsZoneBindings(
    request?: protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsRequest,
          | protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsRequest,
      | protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding[],
      protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsRequest | null,
      protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listManagementDnsZoneBindings(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   management DNS zone bindings.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of management DNS zone bindings to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListManagementDnsZoneBindings`
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListManagementDnsZoneBindings` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of Management DNS Zone Bindings,
   *   you can exclude the ones named `example-management-dns-zone-binding` by
   *   specifying `name != "example-management-dns-zone-binding"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-management-dns-zone-binding")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-management-dns-zone-binding-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-management-dns-zone-binding-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding|ManagementDnsZoneBinding} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listManagementDnsZoneBindingsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listManagementDnsZoneBindingsStream(
    request?: protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listManagementDnsZoneBindings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listManagementDnsZoneBindings.createStream(
      this.innerApiCalls.listManagementDnsZoneBindings as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listManagementDnsZoneBindings`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private cloud to be queried for
   *   management DNS zone bindings.
   *   Resource names are schemeless URIs that follow the conventions in
   *   https://cloud.google.com/apis/design/resource_names.
   *   For example:
   *   `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   * @param {number} request.pageSize
   *   The maximum number of management DNS zone bindings to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListManagementDnsZoneBindings`
   *   call. Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListManagementDnsZoneBindings` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of Management DNS Zone Bindings,
   *   you can exclude the ones named `example-management-dns-zone-binding` by
   *   specifying `name != "example-management-dns-zone-binding"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-management-dns-zone-binding")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-management-dns-zone-binding-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-management-dns-zone-binding-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.ManagementDnsZoneBinding|ManagementDnsZoneBinding}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_management_dns_zone_bindings.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListManagementDnsZoneBindings_async
   */
  listManagementDnsZoneBindingsAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListManagementDnsZoneBindingsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listManagementDnsZoneBindings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listManagementDnsZoneBindings.asyncIterate(
      this.innerApiCalls['listManagementDnsZoneBindings'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.IManagementDnsZoneBinding>;
  }
  /**
   * Lists `VmwareEngineNetwork` resources in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to query for
   *   VMware Engine networks. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/global`
   * @param {number} request.pageSize
   *   The maximum number of results to return in one page.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListVmwareEngineNetworks` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListVmwareEngineNetworks` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of network peerings, you can
   *   exclude the ones named `example-network` by specifying
   *   `name != "example-network"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-network")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-network-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-network-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork|VmwareEngineNetwork}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listVmwareEngineNetworksAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listVmwareEngineNetworks(
    request?: protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork[],
      protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest | null,
      protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse,
    ]
  >;
  listVmwareEngineNetworks(
    request: protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest,
      | protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork
    >
  ): void;
  listVmwareEngineNetworks(
    request: protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest,
      | protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork
    >
  ): void;
  listVmwareEngineNetworks(
    request?: protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest,
          | protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest,
      | protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork[],
      protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest | null,
      protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listVmwareEngineNetworks(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to query for
   *   VMware Engine networks. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/global`
   * @param {number} request.pageSize
   *   The maximum number of results to return in one page.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListVmwareEngineNetworks` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListVmwareEngineNetworks` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of network peerings, you can
   *   exclude the ones named `example-network` by specifying
   *   `name != "example-network"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-network")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-network-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-network-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork|VmwareEngineNetwork} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listVmwareEngineNetworksAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listVmwareEngineNetworksStream(
    request?: protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listVmwareEngineNetworks'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listVmwareEngineNetworks.createStream(
      this.innerApiCalls.listVmwareEngineNetworks as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listVmwareEngineNetworks`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to query for
   *   VMware Engine networks. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/global`
   * @param {number} request.pageSize
   *   The maximum number of results to return in one page.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListVmwareEngineNetworks` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListVmwareEngineNetworks` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of network peerings, you can
   *   exclude the ones named `example-network` by specifying
   *   `name != "example-network"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-network")
   *   (createTime > "2021-04-12T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-network-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-network-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.VmwareEngineNetwork|VmwareEngineNetwork}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_vmware_engine_networks.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListVmwareEngineNetworks_async
   */
  listVmwareEngineNetworksAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListVmwareEngineNetworksRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listVmwareEngineNetworks'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listVmwareEngineNetworks.asyncIterate(
      this.innerApiCalls['listVmwareEngineNetworks'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.IVmwareEngineNetwork>;
  }
  /**
   * Lists `PrivateConnection` resources in a given project and location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to query for
   *   private connections. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/us-central1`
   * @param {number} request.pageSize
   *   The maximum number of private connections to return in one page.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListPrivateConnections` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListPrivateConnections` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of private connections, you can
   *   exclude the ones named `example-connection` by specifying
   *   `name != "example-connection"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-connection")
   *   (createTime > "2022-09-22T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-connection-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-connection-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.PrivateConnection|PrivateConnection}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listPrivateConnectionsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listPrivateConnections(
    request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IPrivateConnection[],
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest | null,
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse,
    ]
  >;
  listPrivateConnections(
    request: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest,
      | protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IPrivateConnection
    >
  ): void;
  listPrivateConnections(
    request: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest,
      | protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IPrivateConnection
    >
  ): void;
  listPrivateConnections(
    request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest,
          | protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.IPrivateConnection
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest,
      | protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IPrivateConnection
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IPrivateConnection[],
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest | null,
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listPrivateConnections(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to query for
   *   private connections. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/us-central1`
   * @param {number} request.pageSize
   *   The maximum number of private connections to return in one page.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListPrivateConnections` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListPrivateConnections` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of private connections, you can
   *   exclude the ones named `example-connection` by specifying
   *   `name != "example-connection"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-connection")
   *   (createTime > "2022-09-22T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-connection-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-connection-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.PrivateConnection|PrivateConnection} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listPrivateConnectionsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listPrivateConnectionsStream(
    request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listPrivateConnections'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listPrivateConnections.createStream(
      this.innerApiCalls.listPrivateConnections as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listPrivateConnections`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the location to query for
   *   private connections. Resource names are schemeless URIs that follow the
   *   conventions in https://cloud.google.com/apis/design/resource_names. For
   *   example: `projects/my-project/locations/us-central1`
   * @param {number} request.pageSize
   *   The maximum number of private connections to return in one page.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListPrivateConnections` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListPrivateConnections` must match the call that provided the page
   *   token.
   * @param {string} request.filter
   *   A filter expression that matches resources returned in the response.
   *   The expression must specify the field name, a comparison
   *   operator, and the value that you want to use for filtering. The value
   *   must be a string, a number, or a boolean. The comparison operator
   *   must be `=`, `!=`, `>`, or `<`.
   *
   *   For example, if you are filtering a list of private connections, you can
   *   exclude the ones named `example-connection` by specifying
   *   `name != "example-connection"`.
   *
   *   To filter on multiple expressions, provide each separate expression within
   *   parentheses. For example:
   *   ```
   *   (name = "example-connection")
   *   (createTime > "2022-09-22T08:15:10.40Z")
   *   ```
   *
   *   By default, each expression is an `AND` expression. However, you
   *   can include `AND` and `OR` expressions explicitly.
   *   For example:
   *   ```
   *   (name = "example-connection-1") AND
   *   (createTime > "2021-04-12T08:15:10.40Z") OR
   *   (name = "example-connection-2")
   *   ```
   * @param {string} request.orderBy
   *   Sorts list results by a certain order. By default, returned results
   *   are ordered by `name` in ascending order.
   *   You can also sort results in descending order based on the `name` value
   *   using `orderBy="name desc"`.
   *   Currently, only ordering by `name` is supported.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.PrivateConnection|PrivateConnection}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_private_connections.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListPrivateConnections_async
   */
  listPrivateConnectionsAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.IPrivateConnection> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listPrivateConnections'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listPrivateConnections.asyncIterate(
      this.innerApiCalls['listPrivateConnections'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.IPrivateConnection>;
  }
  /**
   * Lists the private connection routes exchanged over a peering connection.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private connection to retrieve peering
   *   routes from. Resource names are schemeless URIs that follow the conventions
   *   in https://cloud.google.com/apis/design/resource_names. For example:
   *   `projects/my-project/locations/us-west1/privateConnections/my-connection`
   * @param {number} request.pageSize
   *   The maximum number of peering routes to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListPrivateConnectionPeeringRoutes`
   *   call. Provide this to retrieve the subsequent page. When paginating, all
   *   other parameters provided to `ListPrivateConnectionPeeringRoutes` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.vmwareengine.v1.PeeringRoute|PeeringRoute}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listPrivateConnectionPeeringRoutesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listPrivateConnectionPeeringRoutes(
    request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IPeeringRoute[],
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse,
    ]
  >;
  listPrivateConnectionPeeringRoutes(
    request: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest,
      | protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IPeeringRoute
    >
  ): void;
  listPrivateConnectionPeeringRoutes(
    request: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest,
    callback: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest,
      | protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IPeeringRoute
    >
  ): void;
  listPrivateConnectionPeeringRoutes(
    request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest,
          | protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse
          | null
          | undefined,
          protos.google.cloud.vmwareengine.v1.IPeeringRoute
        >,
    callback?: PaginationCallback<
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest,
      | protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse
      | null
      | undefined,
      protos.google.cloud.vmwareengine.v1.IPeeringRoute
    >
  ): Promise<
    [
      protos.google.cloud.vmwareengine.v1.IPeeringRoute[],
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest | null,
      protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listPrivateConnectionPeeringRoutes(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private connection to retrieve peering
   *   routes from. Resource names are schemeless URIs that follow the conventions
   *   in https://cloud.google.com/apis/design/resource_names. For example:
   *   `projects/my-project/locations/us-west1/privateConnections/my-connection`
   * @param {number} request.pageSize
   *   The maximum number of peering routes to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListPrivateConnectionPeeringRoutes`
   *   call. Provide this to retrieve the subsequent page. When paginating, all
   *   other parameters provided to `ListPrivateConnectionPeeringRoutes` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.vmwareengine.v1.PeeringRoute|PeeringRoute} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listPrivateConnectionPeeringRoutesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listPrivateConnectionPeeringRoutesStream(
    request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings =
      this._defaults['listPrivateConnectionPeeringRoutes'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listPrivateConnectionPeeringRoutes.createStream(
      this.innerApiCalls.listPrivateConnectionPeeringRoutes as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listPrivateConnectionPeeringRoutes`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The resource name of the private connection to retrieve peering
   *   routes from. Resource names are schemeless URIs that follow the conventions
   *   in https://cloud.google.com/apis/design/resource_names. For example:
   *   `projects/my-project/locations/us-west1/privateConnections/my-connection`
   * @param {number} request.pageSize
   *   The maximum number of peering routes to return in one page.
   *   The service may return fewer than this value.
   *   The maximum value is coerced to 1000.
   *   The default value of this field is 500.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListPrivateConnectionPeeringRoutes`
   *   call. Provide this to retrieve the subsequent page. When paginating, all
   *   other parameters provided to `ListPrivateConnectionPeeringRoutes` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.vmwareengine.v1.PeeringRoute|PeeringRoute}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1/vmware_engine.list_private_connection_peering_routes.js</caption>
   * region_tag:vmwareengine_v1_generated_VmwareEngine_ListPrivateConnectionPeeringRoutes_async
   */
  listPrivateConnectionPeeringRoutesAsync(
    request?: protos.google.cloud.vmwareengine.v1.IListPrivateConnectionPeeringRoutesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.vmwareengine.v1.IPeeringRoute> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings =
      this._defaults['listPrivateConnectionPeeringRoutes'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listPrivateConnectionPeeringRoutes.asyncIterate(
      this.innerApiCalls['listPrivateConnectionPeeringRoutes'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.vmwareengine.v1.IPeeringRoute>;
  }
  /**
   * Gets the access control policy for a resource. Returns an empty policy
   * if the resource exists and does not have a policy set.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {Object} [request.options]
   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
   *   `GetIamPolicy`. This field is only used by Cloud IAM.
   *
   *   This object should have the same structure as {@link google.iam.v1.GetPolicyOptions | GetPolicyOptions}.
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing {@link google.iam.v1.Policy | Policy}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.iam.v1.Policy | Policy}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  getIamPolicy(
    request: IamProtos.google.iam.v1.GetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<[IamProtos.google.iam.v1.Policy]> {
    return this.iamClient.getIamPolicy(request, options, callback);
  }

  /**
   * Returns permissions that a caller has on the specified resource. If the
   * resource does not exist, this will return an empty set of
   * permissions, not a NOT_FOUND error.
   *
   * Note: This operation is designed to be used for building
   * permission-aware UIs and command-line tools, not for authorization
   * checking. This operation may "fail open" without warning.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see {@link https://cloud.google.com/iam/docs/overview#permissions | IAM Overview }.
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   */
  setIamPolicy(
    request: IamProtos.google.iam.v1.SetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<[IamProtos.google.iam.v1.Policy]> {
    return this.iamClient.setIamPolicy(request, options, callback);
  }

  /**
   * Returns permissions that a caller has on the specified resource. If the
   * resource does not exist, this will return an empty set of
   * permissions, not a NOT_FOUND error.
   *
   * Note: This operation is designed to be used for building
   * permission-aware UIs and command-line tools, not for authorization
   * checking. This operation may "fail open" without warning.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see {@link https://cloud.google.com/iam/docs/overview#permissions | IAM Overview }.
   * @param {Object} [options]
   *   Optional parameters. You can override the default settings for this call, e.g, timeout,
   *   retries, paginations, etc. See {@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html | gax.CallOptions} for the details.
   * @param {function(?Error, ?Object)} [callback]
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.iam.v1.TestIamPermissionsResponse | TestIamPermissionsResponse}.
   *   The promise has a method named "cancel" which cancels the ongoing API call.
   *
   */
  testIamPermissions(
    request: IamProtos.google.iam.v1.TestIamPermissionsRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.TestIamPermissionsResponse,
          IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.TestIamPermissionsResponse,
      IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<[IamProtos.google.iam.v1.TestIamPermissionsResponse]> {
    return this.iamClient.testIamPermissions(request, options, callback);
  }

  /**
   * Gets information about a location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Resource name for the location.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example
   * ```
   * const [response] = await client.getLocation(request);
   * ```
   */
  getLocation(
    request: LocationProtos.google.cloud.location.IGetLocationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          LocationProtos.google.cloud.location.ILocation,
          | LocationProtos.google.cloud.location.IGetLocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LocationProtos.google.cloud.location.ILocation,
      | LocationProtos.google.cloud.location.IGetLocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.getLocation(request, options, callback);
  }

  /**
   * Lists information about the supported locations for this service. Returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   The resource that owns the locations collection, if applicable.
   * @param {string} request.filter
   *   The standard list filter.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example
   * ```
   * const iterable = client.listLocationsAsync(request);
   * for await (const response of iterable) {
   *   // process response
   * }
   * ```
   */
  listLocationsAsync(
    request: LocationProtos.google.cloud.location.IListLocationsRequest,
    options?: CallOptions
  ): AsyncIterable<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.listLocationsAsync(request, options);
  }

  /**
   * Gets the latest state of a long-running operation.  Clients can use this
   * method to poll the operation result at intervals as recommended by the API
   * service.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See {@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
   *   for the details.
   * @param {function(?Error, ?Object)=} callback
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing
   *   {@link google.longrunning.Operation | google.longrunning.Operation}.
   * @return {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   * {@link google.longrunning.Operation | google.longrunning.Operation}.
   * The promise has a method named "cancel" which cancels the ongoing API call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * const name = '';
   * const [response] = await client.getOperation({name});
   * // doThingsWith(response)
   * ```
   */
  getOperation(
    request: protos.google.longrunning.GetOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.longrunning.Operation,
          protos.google.longrunning.GetOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.longrunning.Operation,
      protos.google.longrunning.GetOperationRequest,
      {} | null | undefined
    >
  ): Promise<[protos.google.longrunning.Operation]> {
    return this.operationsClient.getOperation(request, options, callback);
  }
  /**
   * Lists operations that match the specified filter in the request. If the
   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
   *
   * For-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation collection.
   * @param {string} request.filter - The standard list filter.
   * @param {number=} request.pageSize -
   *   The maximum number of resources contained in the underlying API
   *   response. If page streaming is performed per-resource, this
   *   parameter does not affect the return value. If page streaming is
   *   performed per-page, this determines the maximum number of
   *   resources in a page.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See {@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
   *   details.
   * @returns {Object}
   *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * for await (const response of client.listOperationsAsync(request));
   * // doThingsWith(response)
   * ```
   */
  listOperationsAsync(
    request: protos.google.longrunning.ListOperationsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.longrunning.ListOperationsResponse> {
    return this.operationsClient.listOperationsAsync(request, options);
  }
  /**
   * Starts asynchronous cancellation on a long-running operation.  The server
   * makes a best effort to cancel the operation, but success is not
   * guaranteed.  If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
   * {@link Operations.GetOperation} or
   * other methods to check whether the cancellation succeeded or whether the
   * operation completed despite cancellation. On successful cancellation,
   * the operation is not deleted; instead, it becomes an operation with
   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
   * 1, corresponding to `Code.CANCELLED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be cancelled.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See {@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.cancelOperation({name: ''});
   * ```
   */
  cancelOperation(
    request: protos.google.longrunning.CancelOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.CancelOperationRequest,
          {} | undefined | null
        >,
    callback?: Callback<
      protos.google.longrunning.CancelOperationRequest,
      protos.google.protobuf.Empty,
      {} | undefined | null
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.cancelOperation(request, options, callback);
  }

  /**
   * Deletes a long-running operation. This method indicates that the client is
   * no longer interested in the operation result. It does not cancel the
   * operation. If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be deleted.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See {@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
   * for the details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.deleteOperation({name: ''});
   * ```
   */
  deleteOperation(
    request: protos.google.longrunning.DeleteOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.DeleteOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.Empty,
      protos.google.longrunning.DeleteOperationRequest,
      {} | null | undefined
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.deleteOperation(request, options, callback);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified cluster resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} private_cloud
   * @param {string} cluster
   * @returns {string} Resource name string.
   */
  clusterPath(
    project: string,
    location: string,
    privateCloud: string,
    cluster: string
  ) {
    return this.pathTemplates.clusterPathTemplate.render({
      project: project,
      location: location,
      private_cloud: privateCloud,
      cluster: cluster,
    });
  }

  /**
   * Parse the project from Cluster resource.
   *
   * @param {string} clusterName
   *   A fully-qualified path representing Cluster resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromClusterName(clusterName: string) {
    return this.pathTemplates.clusterPathTemplate.match(clusterName).project;
  }

  /**
   * Parse the location from Cluster resource.
   *
   * @param {string} clusterName
   *   A fully-qualified path representing Cluster resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromClusterName(clusterName: string) {
    return this.pathTemplates.clusterPathTemplate.match(clusterName).location;
  }

  /**
   * Parse the private_cloud from Cluster resource.
   *
   * @param {string} clusterName
   *   A fully-qualified path representing Cluster resource.
   * @returns {string} A string representing the private_cloud.
   */
  matchPrivateCloudFromClusterName(clusterName: string) {
    return this.pathTemplates.clusterPathTemplate.match(clusterName)
      .private_cloud;
  }

  /**
   * Parse the cluster from Cluster resource.
   *
   * @param {string} clusterName
   *   A fully-qualified path representing Cluster resource.
   * @returns {string} A string representing the cluster.
   */
  matchClusterFromClusterName(clusterName: string) {
    return this.pathTemplates.clusterPathTemplate.match(clusterName).cluster;
  }

  /**
   * Return a fully-qualified dnsBindPermission resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  dnsBindPermissionPath(project: string, location: string) {
    return this.pathTemplates.dnsBindPermissionPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from DnsBindPermission resource.
   *
   * @param {string} dnsBindPermissionName
   *   A fully-qualified path representing DnsBindPermission resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDnsBindPermissionName(dnsBindPermissionName: string) {
    return this.pathTemplates.dnsBindPermissionPathTemplate.match(
      dnsBindPermissionName
    ).project;
  }

  /**
   * Parse the location from DnsBindPermission resource.
   *
   * @param {string} dnsBindPermissionName
   *   A fully-qualified path representing DnsBindPermission resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromDnsBindPermissionName(dnsBindPermissionName: string) {
    return this.pathTemplates.dnsBindPermissionPathTemplate.match(
      dnsBindPermissionName
    ).location;
  }

  /**
   * Return a fully-qualified dnsForwarding resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} private_cloud
   * @returns {string} Resource name string.
   */
  dnsForwardingPath(project: string, location: string, privateCloud: string) {
    return this.pathTemplates.dnsForwardingPathTemplate.render({
      project: project,
      location: location,
      private_cloud: privateCloud,
    });
  }

  /**
   * Parse the project from DnsForwarding resource.
   *
   * @param {string} dnsForwardingName
   *   A fully-qualified path representing DnsForwarding resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDnsForwardingName(dnsForwardingName: string) {
    return this.pathTemplates.dnsForwardingPathTemplate.match(dnsForwardingName)
      .project;
  }

  /**
   * Parse the location from DnsForwarding resource.
   *
   * @param {string} dnsForwardingName
   *   A fully-qualified path representing DnsForwarding resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromDnsForwardingName(dnsForwardingName: string) {
    return this.pathTemplates.dnsForwardingPathTemplate.match(dnsForwardingName)
      .location;
  }

  /**
   * Parse the private_cloud from DnsForwarding resource.
   *
   * @param {string} dnsForwardingName
   *   A fully-qualified path representing DnsForwarding resource.
   * @returns {string} A string representing the private_cloud.
   */
  matchPrivateCloudFromDnsForwardingName(dnsForwardingName: string) {
    return this.pathTemplates.dnsForwardingPathTemplate.match(dnsForwardingName)
      .private_cloud;
  }

  /**
   * Return a fully-qualified externalAccessRule resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} network_policy
   * @param {string} external_access_rule
   * @returns {string} Resource name string.
   */
  externalAccessRulePath(
    project: string,
    location: string,
    networkPolicy: string,
    externalAccessRule: string
  ) {
    return this.pathTemplates.externalAccessRulePathTemplate.render({
      project: project,
      location: location,
      network_policy: networkPolicy,
      external_access_rule: externalAccessRule,
    });
  }

  /**
   * Parse the project from ExternalAccessRule resource.
   *
   * @param {string} externalAccessRuleName
   *   A fully-qualified path representing ExternalAccessRule resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromExternalAccessRuleName(externalAccessRuleName: string) {
    return this.pathTemplates.externalAccessRulePathTemplate.match(
      externalAccessRuleName
    ).project;
  }

  /**
   * Parse the location from ExternalAccessRule resource.
   *
   * @param {string} externalAccessRuleName
   *   A fully-qualified path representing ExternalAccessRule resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromExternalAccessRuleName(externalAccessRuleName: string) {
    return this.pathTemplates.externalAccessRulePathTemplate.match(
      externalAccessRuleName
    ).location;
  }

  /**
   * Parse the network_policy from ExternalAccessRule resource.
   *
   * @param {string} externalAccessRuleName
   *   A fully-qualified path representing ExternalAccessRule resource.
   * @returns {string} A string representing the network_policy.
   */
  matchNetworkPolicyFromExternalAccessRuleName(externalAccessRuleName: string) {
    return this.pathTemplates.externalAccessRulePathTemplate.match(
      externalAccessRuleName
    ).network_policy;
  }

  /**
   * Parse the external_access_rule from ExternalAccessRule resource.
   *
   * @param {string} externalAccessRuleName
   *   A fully-qualified path representing ExternalAccessRule resource.
   * @returns {string} A string representing the external_access_rule.
   */
  matchExternalAccessRuleFromExternalAccessRuleName(
    externalAccessRuleName: string
  ) {
    return this.pathTemplates.externalAccessRulePathTemplate.match(
      externalAccessRuleName
    ).external_access_rule;
  }

  /**
   * Return a fully-qualified externalAddress resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} private_cloud
   * @param {string} external_address
   * @returns {string} Resource name string.
   */
  externalAddressPath(
    project: string,
    location: string,
    privateCloud: string,
    externalAddress: string
  ) {
    return this.pathTemplates.externalAddressPathTemplate.render({
      project: project,
      location: location,
      private_cloud: privateCloud,
      external_address: externalAddress,
    });
  }

  /**
   * Parse the project from ExternalAddress resource.
   *
   * @param {string} externalAddressName
   *   A fully-qualified path representing ExternalAddress resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromExternalAddressName(externalAddressName: string) {
    return this.pathTemplates.externalAddressPathTemplate.match(
      externalAddressName
    ).project;
  }

  /**
   * Parse the location from ExternalAddress resource.
   *
   * @param {string} externalAddressName
   *   A fully-qualified path representing ExternalAddress resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromExternalAddressName(externalAddressName: string) {
    return this.pathTemplates.externalAddressPathTemplate.match(
      externalAddressName
    ).location;
  }

  /**
   * Parse the private_cloud from ExternalAddress resource.
   *
   * @param {string} externalAddressName
   *   A fully-qualified path representing ExternalAddress resource.
   * @returns {string} A string representing the private_cloud.
   */
  matchPrivateCloudFromExternalAddressName(externalAddressName: string) {
    return this.pathTemplates.externalAddressPathTemplate.match(
      externalAddressName
    ).private_cloud;
  }

  /**
   * Parse the external_address from ExternalAddress resource.
   *
   * @param {string} externalAddressName
   *   A fully-qualified path representing ExternalAddress resource.
   * @returns {string} A string representing the external_address.
   */
  matchExternalAddressFromExternalAddressName(externalAddressName: string) {
    return this.pathTemplates.externalAddressPathTemplate.match(
      externalAddressName
    ).external_address;
  }

  /**
   * Return a fully-qualified hcxActivationKey resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} private_cloud
   * @param {string} hcx_activation_key
   * @returns {string} Resource name string.
   */
  hcxActivationKeyPath(
    project: string,
    location: string,
    privateCloud: string,
    hcxActivationKey: string
  ) {
    return this.pathTemplates.hcxActivationKeyPathTemplate.render({
      project: project,
      location: location,
      private_cloud: privateCloud,
      hcx_activation_key: hcxActivationKey,
    });
  }

  /**
   * Parse the project from HcxActivationKey resource.
   *
   * @param {string} hcxActivationKeyName
   *   A fully-qualified path representing HcxActivationKey resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromHcxActivationKeyName(hcxActivationKeyName: string) {
    return this.pathTemplates.hcxActivationKeyPathTemplate.match(
      hcxActivationKeyName
    ).project;
  }

  /**
   * Parse the location from HcxActivationKey resource.
   *
   * @param {string} hcxActivationKeyName
   *   A fully-qualified path representing HcxActivationKey resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromHcxActivationKeyName(hcxActivationKeyName: string) {
    return this.pathTemplates.hcxActivationKeyPathTemplate.match(
      hcxActivationKeyName
    ).location;
  }

  /**
   * Parse the private_cloud from HcxActivationKey resource.
   *
   * @param {string} hcxActivationKeyName
   *   A fully-qualified path representing HcxActivationKey resource.
   * @returns {string} A string representing the private_cloud.
   */
  matchPrivateCloudFromHcxActivationKeyName(hcxActivationKeyName: string) {
    return this.pathTemplates.hcxActivationKeyPathTemplate.match(
      hcxActivationKeyName
    ).private_cloud;
  }

  /**
   * Parse the hcx_activation_key from HcxActivationKey resource.
   *
   * @param {string} hcxActivationKeyName
   *   A fully-qualified path representing HcxActivationKey resource.
   * @returns {string} A string representing the hcx_activation_key.
   */
  matchHcxActivationKeyFromHcxActivationKeyName(hcxActivationKeyName: string) {
    return this.pathTemplates.hcxActivationKeyPathTemplate.match(
      hcxActivationKeyName
    ).hcx_activation_key;
  }

  /**
   * Return a fully-qualified location resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  locationPath(project: string, location: string) {
    return this.pathTemplates.locationPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).project;
  }

  /**
   * Parse the location from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).location;
  }

  /**
   * Return a fully-qualified loggingServer resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} private_cloud
   * @param {string} logging_server
   * @returns {string} Resource name string.
   */
  loggingServerPath(
    project: string,
    location: string,
    privateCloud: string,
    loggingServer: string
  ) {
    return this.pathTemplates.loggingServerPathTemplate.render({
      project: project,
      location: location,
      private_cloud: privateCloud,
      logging_server: loggingServer,
    });
  }

  /**
   * Parse the project from LoggingServer resource.
   *
   * @param {string} loggingServerName
   *   A fully-qualified path representing LoggingServer resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLoggingServerName(loggingServerName: string) {
    return this.pathTemplates.loggingServerPathTemplate.match(loggingServerName)
      .project;
  }

  /**
   * Parse the location from LoggingServer resource.
   *
   * @param {string} loggingServerName
   *   A fully-qualified path representing LoggingServer resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLoggingServerName(loggingServerName: string) {
    return this.pathTemplates.loggingServerPathTemplate.match(loggingServerName)
      .location;
  }

  /**
   * Parse the private_cloud from LoggingServer resource.
   *
   * @param {string} loggingServerName
   *   A fully-qualified path representing LoggingServer resource.
   * @returns {string} A string representing the private_cloud.
   */
  matchPrivateCloudFromLoggingServerName(loggingServerName: string) {
    return this.pathTemplates.loggingServerPathTemplate.match(loggingServerName)
      .private_cloud;
  }

  /**
   * Parse the logging_server from LoggingServer resource.
   *
   * @param {string} loggingServerName
   *   A fully-qualified path representing LoggingServer resource.
   * @returns {string} A string representing the logging_server.
   */
  matchLoggingServerFromLoggingServerName(loggingServerName: string) {
    return this.pathTemplates.loggingServerPathTemplate.match(loggingServerName)
      .logging_server;
  }

  /**
   * Return a fully-qualified managementDnsZoneBinding resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} private_cloud
   * @param {string} management_dns_zone_binding
   * @returns {string} Resource name string.
   */
  managementDnsZoneBindingPath(
    project: string,
    location: string,
    privateCloud: string,
    managementDnsZoneBinding: string
  ) {
    return this.pathTemplates.managementDnsZoneBindingPathTemplate.render({
      project: project,
      location: location,
      private_cloud: privateCloud,
      management_dns_zone_binding: managementDnsZoneBinding,
    });
  }

  /**
   * Parse the project from ManagementDnsZoneBinding resource.
   *
   * @param {string} managementDnsZoneBindingName
   *   A fully-qualified path representing ManagementDnsZoneBinding resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromManagementDnsZoneBindingName(
    managementDnsZoneBindingName: string
  ) {
    return this.pathTemplates.managementDnsZoneBindingPathTemplate.match(
      managementDnsZoneBindingName
    ).project;
  }

  /**
   * Parse the location from ManagementDnsZoneBinding resource.
   *
   * @param {string} managementDnsZoneBindingName
   *   A fully-qualified path representing ManagementDnsZoneBinding resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromManagementDnsZoneBindingName(
    managementDnsZoneBindingName: string
  ) {
    return this.pathTemplates.managementDnsZoneBindingPathTemplate.match(
      managementDnsZoneBindingName
    ).location;
  }

  /**
   * Parse the private_cloud from ManagementDnsZoneBinding resource.
   *
   * @param {string} managementDnsZoneBindingName
   *   A fully-qualified path representing ManagementDnsZoneBinding resource.
   * @returns {string} A string representing the private_cloud.
   */
  matchPrivateCloudFromManagementDnsZoneBindingName(
    managementDnsZoneBindingName: string
  ) {
    return this.pathTemplates.managementDnsZoneBindingPathTemplate.match(
      managementDnsZoneBindingName
    ).private_cloud;
  }

  /**
   * Parse the management_dns_zone_binding from ManagementDnsZoneBinding resource.
   *
   * @param {string} managementDnsZoneBindingName
   *   A fully-qualified path representing ManagementDnsZoneBinding resource.
   * @returns {string} A string representing the management_dns_zone_binding.
   */
  matchManagementDnsZoneBindingFromManagementDnsZoneBindingName(
    managementDnsZoneBindingName: string
  ) {
    return this.pathTemplates.managementDnsZoneBindingPathTemplate.match(
      managementDnsZoneBindingName
    ).management_dns_zone_binding;
  }

  /**
   * Return a fully-qualified networkPeering resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} network_peering
   * @returns {string} Resource name string.
   */
  networkPeeringPath(
    project: string,
    location: string,
    networkPeering: string
  ) {
    return this.pathTemplates.networkPeeringPathTemplate.render({
      project: project,
      location: location,
      network_peering: networkPeering,
    });
  }

  /**
   * Parse the project from NetworkPeering resource.
   *
   * @param {string} networkPeeringName
   *   A fully-qualified path representing NetworkPeering resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromNetworkPeeringName(networkPeeringName: string) {
    return this.pathTemplates.networkPeeringPathTemplate.match(
      networkPeeringName
    ).project;
  }

  /**
   * Parse the location from NetworkPeering resource.
   *
   * @param {string} networkPeeringName
   *   A fully-qualified path representing NetworkPeering resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromNetworkPeeringName(networkPeeringName: string) {
    return this.pathTemplates.networkPeeringPathTemplate.match(
      networkPeeringName
    ).location;
  }

  /**
   * Parse the network_peering from NetworkPeering resource.
   *
   * @param {string} networkPeeringName
   *   A fully-qualified path representing NetworkPeering resource.
   * @returns {string} A string representing the network_peering.
   */
  matchNetworkPeeringFromNetworkPeeringName(networkPeeringName: string) {
    return this.pathTemplates.networkPeeringPathTemplate.match(
      networkPeeringName
    ).network_peering;
  }

  /**
   * Return a fully-qualified networkPolicy resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} network_policy
   * @returns {string} Resource name string.
   */
  networkPolicyPath(project: string, location: string, networkPolicy: string) {
    return this.pathTemplates.networkPolicyPathTemplate.render({
      project: project,
      location: location,
      network_policy: networkPolicy,
    });
  }

  /**
   * Parse the project from NetworkPolicy resource.
   *
   * @param {string} networkPolicyName
   *   A fully-qualified path representing NetworkPolicy resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromNetworkPolicyName(networkPolicyName: string) {
    return this.pathTemplates.networkPolicyPathTemplate.match(networkPolicyName)
      .project;
  }

  /**
   * Parse the location from NetworkPolicy resource.
   *
   * @param {string} networkPolicyName
   *   A fully-qualified path representing NetworkPolicy resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromNetworkPolicyName(networkPolicyName: string) {
    return this.pathTemplates.networkPolicyPathTemplate.match(networkPolicyName)
      .location;
  }

  /**
   * Parse the network_policy from NetworkPolicy resource.
   *
   * @param {string} networkPolicyName
   *   A fully-qualified path representing NetworkPolicy resource.
   * @returns {string} A string representing the network_policy.
   */
  matchNetworkPolicyFromNetworkPolicyName(networkPolicyName: string) {
    return this.pathTemplates.networkPolicyPathTemplate.match(networkPolicyName)
      .network_policy;
  }

  /**
   * Return a fully-qualified node resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} private_cloud
   * @param {string} cluster
   * @param {string} node
   * @returns {string} Resource name string.
   */
  nodePath(
    project: string,
    location: string,
    privateCloud: string,
    cluster: string,
    node: string
  ) {
    return this.pathTemplates.nodePathTemplate.render({
      project: project,
      location: location,
      private_cloud: privateCloud,
      cluster: cluster,
      node: node,
    });
  }

  /**
   * Parse the project from Node resource.
   *
   * @param {string} nodeName
   *   A fully-qualified path representing Node resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromNodeName(nodeName: string) {
    return this.pathTemplates.nodePathTemplate.match(nodeName).project;
  }

  /**
   * Parse the location from Node resource.
   *
   * @param {string} nodeName
   *   A fully-qualified path representing Node resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromNodeName(nodeName: string) {
    return this.pathTemplates.nodePathTemplate.match(nodeName).location;
  }

  /**
   * Parse the private_cloud from Node resource.
   *
   * @param {string} nodeName
   *   A fully-qualified path representing Node resource.
   * @returns {string} A string representing the private_cloud.
   */
  matchPrivateCloudFromNodeName(nodeName: string) {
    return this.pathTemplates.nodePathTemplate.match(nodeName).private_cloud;
  }

  /**
   * Parse the cluster from Node resource.
   *
   * @param {string} nodeName
   *   A fully-qualified path representing Node resource.
   * @returns {string} A string representing the cluster.
   */
  matchClusterFromNodeName(nodeName: string) {
    return this.pathTemplates.nodePathTemplate.match(nodeName).cluster;
  }

  /**
   * Parse the node from Node resource.
   *
   * @param {string} nodeName
   *   A fully-qualified path representing Node resource.
   * @returns {string} A string representing the node.
   */
  matchNodeFromNodeName(nodeName: string) {
    return this.pathTemplates.nodePathTemplate.match(nodeName).node;
  }

  /**
   * Return a fully-qualified nodeType resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} node_type
   * @returns {string} Resource name string.
   */
  nodeTypePath(project: string, location: string, nodeType: string) {
    return this.pathTemplates.nodeTypePathTemplate.render({
      project: project,
      location: location,
      node_type: nodeType,
    });
  }

  /**
   * Parse the project from NodeType resource.
   *
   * @param {string} nodeTypeName
   *   A fully-qualified path representing NodeType resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromNodeTypeName(nodeTypeName: string) {
    return this.pathTemplates.nodeTypePathTemplate.match(nodeTypeName).project;
  }

  /**
   * Parse the location from NodeType resource.
   *
   * @param {string} nodeTypeName
   *   A fully-qualified path representing NodeType resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromNodeTypeName(nodeTypeName: string) {
    return this.pathTemplates.nodeTypePathTemplate.match(nodeTypeName).location;
  }

  /**
   * Parse the node_type from NodeType resource.
   *
   * @param {string} nodeTypeName
   *   A fully-qualified path representing NodeType resource.
   * @returns {string} A string representing the node_type.
   */
  matchNodeTypeFromNodeTypeName(nodeTypeName: string) {
    return this.pathTemplates.nodeTypePathTemplate.match(nodeTypeName)
      .node_type;
  }

  /**
   * Return a fully-qualified privateCloud resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} private_cloud
   * @returns {string} Resource name string.
   */
  privateCloudPath(project: string, location: string, privateCloud: string) {
    return this.pathTemplates.privateCloudPathTemplate.render({
      project: project,
      location: location,
      private_cloud: privateCloud,
    });
  }

  /**
   * Parse the project from PrivateCloud resource.
   *
   * @param {string} privateCloudName
   *   A fully-qualified path representing PrivateCloud resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromPrivateCloudName(privateCloudName: string) {
    return this.pathTemplates.privateCloudPathTemplate.match(privateCloudName)
      .project;
  }

  /**
   * Parse the location from PrivateCloud resource.
   *
   * @param {string} privateCloudName
   *   A fully-qualified path representing PrivateCloud resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromPrivateCloudName(privateCloudName: string) {
    return this.pathTemplates.privateCloudPathTemplate.match(privateCloudName)
      .location;
  }

  /**
   * Parse the private_cloud from PrivateCloud resource.
   *
   * @param {string} privateCloudName
   *   A fully-qualified path representing PrivateCloud resource.
   * @returns {string} A string representing the private_cloud.
   */
  matchPrivateCloudFromPrivateCloudName(privateCloudName: string) {
    return this.pathTemplates.privateCloudPathTemplate.match(privateCloudName)
      .private_cloud;
  }

  /**
   * Return a fully-qualified privateConnection resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} private_connection
   * @returns {string} Resource name string.
   */
  privateConnectionPath(
    project: string,
    location: string,
    privateConnection: string
  ) {
    return this.pathTemplates.privateConnectionPathTemplate.render({
      project: project,
      location: location,
      private_connection: privateConnection,
    });
  }

  /**
   * Parse the project from PrivateConnection resource.
   *
   * @param {string} privateConnectionName
   *   A fully-qualified path representing PrivateConnection resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromPrivateConnectionName(privateConnectionName: string) {
    return this.pathTemplates.privateConnectionPathTemplate.match(
      privateConnectionName
    ).project;
  }

  /**
   * Parse the location from PrivateConnection resource.
   *
   * @param {string} privateConnectionName
   *   A fully-qualified path representing PrivateConnection resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromPrivateConnectionName(privateConnectionName: string) {
    return this.pathTemplates.privateConnectionPathTemplate.match(
      privateConnectionName
    ).location;
  }

  /**
   * Parse the private_connection from PrivateConnection resource.
   *
   * @param {string} privateConnectionName
   *   A fully-qualified path representing PrivateConnection resource.
   * @returns {string} A string representing the private_connection.
   */
  matchPrivateConnectionFromPrivateConnectionName(
    privateConnectionName: string
  ) {
    return this.pathTemplates.privateConnectionPathTemplate.match(
      privateConnectionName
    ).private_connection;
  }

  /**
   * Return a fully-qualified project resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  projectPath(project: string) {
    return this.pathTemplates.projectPathTemplate.render({
      project: project,
    });
  }

  /**
   * Parse the project from Project resource.
   *
   * @param {string} projectName
   *   A fully-qualified path representing Project resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectName(projectName: string) {
    return this.pathTemplates.projectPathTemplate.match(projectName).project;
  }

  /**
   * Return a fully-qualified subnet resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} private_cloud
   * @param {string} subnet
   * @returns {string} Resource name string.
   */
  subnetPath(
    project: string,
    location: string,
    privateCloud: string,
    subnet: string
  ) {
    return this.pathTemplates.subnetPathTemplate.render({
      project: project,
      location: location,
      private_cloud: privateCloud,
      subnet: subnet,
    });
  }

  /**
   * Parse the project from Subnet resource.
   *
   * @param {string} subnetName
   *   A fully-qualified path representing Subnet resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromSubnetName(subnetName: string) {
    return this.pathTemplates.subnetPathTemplate.match(subnetName).project;
  }

  /**
   * Parse the location from Subnet resource.
   *
   * @param {string} subnetName
   *   A fully-qualified path representing Subnet resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromSubnetName(subnetName: string) {
    return this.pathTemplates.subnetPathTemplate.match(subnetName).location;
  }

  /**
   * Parse the private_cloud from Subnet resource.
   *
   * @param {string} subnetName
   *   A fully-qualified path representing Subnet resource.
   * @returns {string} A string representing the private_cloud.
   */
  matchPrivateCloudFromSubnetName(subnetName: string) {
    return this.pathTemplates.subnetPathTemplate.match(subnetName)
      .private_cloud;
  }

  /**
   * Parse the subnet from Subnet resource.
   *
   * @param {string} subnetName
   *   A fully-qualified path representing Subnet resource.
   * @returns {string} A string representing the subnet.
   */
  matchSubnetFromSubnetName(subnetName: string) {
    return this.pathTemplates.subnetPathTemplate.match(subnetName).subnet;
  }

  /**
   * Return a fully-qualified vmwareEngineNetwork resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} vmware_engine_network
   * @returns {string} Resource name string.
   */
  vmwareEngineNetworkPath(
    project: string,
    location: string,
    vmwareEngineNetwork: string
  ) {
    return this.pathTemplates.vmwareEngineNetworkPathTemplate.render({
      project: project,
      location: location,
      vmware_engine_network: vmwareEngineNetwork,
    });
  }

  /**
   * Parse the project from VmwareEngineNetwork resource.
   *
   * @param {string} vmwareEngineNetworkName
   *   A fully-qualified path representing VmwareEngineNetwork resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromVmwareEngineNetworkName(vmwareEngineNetworkName: string) {
    return this.pathTemplates.vmwareEngineNetworkPathTemplate.match(
      vmwareEngineNetworkName
    ).project;
  }

  /**
   * Parse the location from VmwareEngineNetwork resource.
   *
   * @param {string} vmwareEngineNetworkName
   *   A fully-qualified path representing VmwareEngineNetwork resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromVmwareEngineNetworkName(vmwareEngineNetworkName: string) {
    return this.pathTemplates.vmwareEngineNetworkPathTemplate.match(
      vmwareEngineNetworkName
    ).location;
  }

  /**
   * Parse the vmware_engine_network from VmwareEngineNetwork resource.
   *
   * @param {string} vmwareEngineNetworkName
   *   A fully-qualified path representing VmwareEngineNetwork resource.
   * @returns {string} A string representing the vmware_engine_network.
   */
  matchVmwareEngineNetworkFromVmwareEngineNetworkName(
    vmwareEngineNetworkName: string
  ) {
    return this.pathTemplates.vmwareEngineNetworkPathTemplate.match(
      vmwareEngineNetworkName
    ).vmware_engine_network;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.vmwareEngineStub && !this._terminated) {
      return this.vmwareEngineStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.iamClient.close();
        this.locationsClient.close();
        this.operationsClient.close();
      });
    }
    return Promise.resolve();
  }
}
