// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(name) {
  // [START vmwareengine_v1_generated_VmwareEngine_DeletePrivateCloud_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The resource name of the private cloud to delete.
   *  Resource names are schemeless URIs that follow the conventions in
   *  https://cloud.google.com/apis/design/resource_names.
   *  For example:
   *  `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
   */
  // const name = 'abc123'
  /**
   *  Optional. The request ID must be a valid UUID with the exception that zero
   *  UUID is not supported (00000000-0000-0000-0000-000000000000).
   */
  // const requestId = 'abc123'
  /**
   *  Optional. If set to true, cascade delete is enabled and all children of
   *  this private cloud resource are also deleted. When this flag is set to
   *  false, the private cloud will not be deleted if there are any children
   *  other than the management cluster. The management cluster is always
   *  deleted.
   */
  // const force = true
  /**
   *  Optional. Time delay of the deletion specified in hours. The default value
   *  is `3`. Specifying a non-zero value for this field changes the value of
   *  `PrivateCloud.state` to `DELETED` and sets `expire_time` to the planned
   *  deletion time. Deletion can be cancelled before `expire_time` elapses using
   *  VmwareEngine.UndeletePrivateCloud google.cloud.vmwareengine.v1.VmwareEngine.UndeletePrivateCloud.
   *  Specifying a value of `0` for this field instead begins the deletion
   *  process and ceases billing immediately. During the final deletion process,
   *  the value of `PrivateCloud.state` becomes `PURGING`.
   */
  // const delayHours = 1234

  // Imports the Vmwareengine library
  const {VmwareEngineClient} = require('@google-cloud/vmwareengine').v1;

  // Instantiates a client
  const vmwareengineClient = new VmwareEngineClient();

  async function callDeletePrivateCloud() {
    // Construct request
    const request = {
      name,
    };

    // Run request
    const [operation] = await vmwareengineClient.deletePrivateCloud(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  callDeletePrivateCloud();
  // [END vmwareengine_v1_generated_VmwareEngine_DeletePrivateCloud_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
