{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "dialogflow": {
              "nested": {
                "cx": {
                  "nested": {
                    "v3": {
                      "options": {
                        "cc_enable_arenas": true,
                        "csharp_namespace": "Google.Cloud.Dialogflow.Cx.V3",
                        "go_package": "cloud.google.com/go/dialogflow/cx/apiv3/cxpb;cxpb",
                        "java_multiple_files": true,
                        "java_outer_classname": "VersionProto",
                        "java_package": "com.google.cloud.dialogflow.cx.v3",
                        "objc_class_prefix": "DF",
                        "ruby_package": "Google::Cloud::Dialogflow::CX::V3",
                        "(google.api.resource_definition).type": "dlp.googleapis.com/DeidentifyTemplate",
                        "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/deidentifyTemplates/{deidentify_template}"
                      },
                      "nested": {
                        "AdvancedSettings": {
                          "fields": {
                            "audioExportGcsDestination": {
                              "type": "GcsDestination",
                              "id": 2
                            },
                            "loggingSettings": {
                              "type": "LoggingSettings",
                              "id": 6
                            }
                          },
                          "nested": {
                            "LoggingSettings": {
                              "fields": {
                                "enableStackdriverLogging": {
                                  "type": "bool",
                                  "id": 2
                                },
                                "enableInteractionLogging": {
                                  "type": "bool",
                                  "id": 3
                                }
                              }
                            }
                          }
                        },
                        "GcsDestination": {
                          "fields": {
                            "uri": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "Agents": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListAgents": {
                              "requestType": "ListAgentsRequest",
                              "responseType": "ListAgentsResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*}/agents",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*}/agents"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetAgent": {
                              "requestType": "GetAgentRequest",
                              "responseType": "Agent",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateAgent": {
                              "requestType": "CreateAgentRequest",
                              "responseType": "Agent",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*}/agents",
                                "(google.api.http).body": "agent",
                                "(google.api.method_signature)": "parent,agent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*}/agents",
                                    "body": "agent"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,agent"
                                }
                              ]
                            },
                            "UpdateAgent": {
                              "requestType": "UpdateAgentRequest",
                              "responseType": "Agent",
                              "options": {
                                "(google.api.http).patch": "/v3/{agent.name=projects/*/locations/*/agents/*}",
                                "(google.api.http).body": "agent",
                                "(google.api.method_signature)": "agent,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{agent.name=projects/*/locations/*/agents/*}",
                                    "body": "agent"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "agent,update_mask"
                                }
                              ]
                            },
                            "DeleteAgent": {
                              "requestType": "DeleteAgentRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3/{name=projects/*/locations/*/agents/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3/{name=projects/*/locations/*/agents/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ExportAgent": {
                              "requestType": "ExportAgentRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{name=projects/*/locations/*/agents/*}:export",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "ExportAgentResponse",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{name=projects/*/locations/*/agents/*}:export",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "ExportAgentResponse",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "RestoreAgent": {
                              "requestType": "RestoreAgentRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{name=projects/*/locations/*/agents/*}:restore",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{name=projects/*/locations/*/agents/*}:restore",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.protobuf.Empty",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "ValidateAgent": {
                              "requestType": "ValidateAgentRequest",
                              "responseType": "AgentValidationResult",
                              "options": {
                                "(google.api.http).post": "/v3/{name=projects/*/locations/*/agents/*}:validate",
                                "(google.api.http).body": "*"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{name=projects/*/locations/*/agents/*}:validate",
                                    "body": "*"
                                  }
                                }
                              ]
                            },
                            "GetAgentValidationResult": {
                              "requestType": "GetAgentValidationResultRequest",
                              "responseType": "AgentValidationResult",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/validationResult}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/validationResult}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "SpeechToTextSettings": {
                          "fields": {
                            "enableSpeechAdaptation": {
                              "type": "bool",
                              "id": 1
                            }
                          }
                        },
                        "Agent": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Agent",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "defaultLanguageCode": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            },
                            "supportedLanguageCodes": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4
                            },
                            "timeZone": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 6
                            },
                            "avatarUri": {
                              "type": "string",
                              "id": 7
                            },
                            "speechToTextSettings": {
                              "type": "SpeechToTextSettings",
                              "id": 13
                            },
                            "startFlow": {
                              "type": "string",
                              "id": 16,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "securitySettings": {
                              "type": "string",
                              "id": 17,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/SecuritySettings"
                              }
                            },
                            "enableStackdriverLogging": {
                              "type": "bool",
                              "id": 18,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "enableSpellCorrection": {
                              "type": "bool",
                              "id": 20
                            },
                            "locked": {
                              "type": "bool",
                              "id": 27
                            },
                            "advancedSettings": {
                              "type": "AdvancedSettings",
                              "id": 22
                            },
                            "gitIntegrationSettings": {
                              "type": "GitIntegrationSettings",
                              "id": 30
                            },
                            "textToSpeechSettings": {
                              "type": "TextToSpeechSettings",
                              "id": 31
                            }
                          },
                          "nested": {
                            "GitIntegrationSettings": {
                              "oneofs": {
                                "gitSettings": {
                                  "oneof": [
                                    "githubSettings"
                                  ]
                                }
                              },
                              "fields": {
                                "githubSettings": {
                                  "type": "GithubSettings",
                                  "id": 1
                                }
                              },
                              "nested": {
                                "GithubSettings": {
                                  "fields": {
                                    "displayName": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "repositoryUri": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "trackingBranch": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "accessToken": {
                                      "type": "string",
                                      "id": 4
                                    },
                                    "branches": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 5
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "ListAgentsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListAgentsResponse": {
                          "fields": {
                            "agents": {
                              "rule": "repeated",
                              "type": "Agent",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetAgentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            }
                          }
                        },
                        "CreateAgentRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "agent": {
                              "type": "Agent",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateAgentRequest": {
                          "fields": {
                            "agent": {
                              "type": "Agent",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            }
                          }
                        },
                        "DeleteAgentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            }
                          }
                        },
                        "ExportAgentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "agentUri": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "dataFormat": {
                              "type": "DataFormat",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "environment": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "gitDestination": {
                              "type": "GitDestination",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "includeBigqueryExportSettings": {
                              "type": "bool",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "DataFormat": {
                              "values": {
                                "DATA_FORMAT_UNSPECIFIED": 0,
                                "BLOB": 1,
                                "JSON_PACKAGE": 4
                              }
                            },
                            "GitDestination": {
                              "fields": {
                                "trackingBranch": {
                                  "type": "string",
                                  "id": 1
                                },
                                "commitMessage": {
                                  "type": "string",
                                  "id": 2
                                }
                              }
                            }
                          }
                        },
                        "ExportAgentResponse": {
                          "oneofs": {
                            "agent": {
                              "oneof": [
                                "agentUri",
                                "agentContent",
                                "commitSha"
                              ]
                            }
                          },
                          "fields": {
                            "agentUri": {
                              "type": "string",
                              "id": 1
                            },
                            "agentContent": {
                              "type": "bytes",
                              "id": 2
                            },
                            "commitSha": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "RestoreAgentRequest": {
                          "oneofs": {
                            "agent": {
                              "oneof": [
                                "agentUri",
                                "agentContent",
                                "gitSource"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "agentUri": {
                              "type": "string",
                              "id": 2
                            },
                            "agentContent": {
                              "type": "bytes",
                              "id": 3
                            },
                            "gitSource": {
                              "type": "GitSource",
                              "id": 6
                            },
                            "restoreOption": {
                              "type": "RestoreOption",
                              "id": 5
                            }
                          },
                          "nested": {
                            "GitSource": {
                              "fields": {
                                "trackingBranch": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            },
                            "RestoreOption": {
                              "values": {
                                "RESTORE_OPTION_UNSPECIFIED": 0,
                                "KEEP": 1,
                                "FALLBACK": 2
                              }
                            }
                          }
                        },
                        "ValidateAgentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetAgentValidationResultRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/AgentValidationResult"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "AgentValidationResult": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/AgentValidationResult",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/validationResult"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "flowValidationResults": {
                              "rule": "repeated",
                              "type": "FlowValidationResult",
                              "id": 2
                            }
                          }
                        },
                        "AudioEncoding": {
                          "values": {
                            "AUDIO_ENCODING_UNSPECIFIED": 0,
                            "AUDIO_ENCODING_LINEAR_16": 1,
                            "AUDIO_ENCODING_FLAC": 2,
                            "AUDIO_ENCODING_MULAW": 3,
                            "AUDIO_ENCODING_AMR": 4,
                            "AUDIO_ENCODING_AMR_WB": 5,
                            "AUDIO_ENCODING_OGG_OPUS": 6,
                            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE": 7
                          }
                        },
                        "SpeechModelVariant": {
                          "values": {
                            "SPEECH_MODEL_VARIANT_UNSPECIFIED": 0,
                            "USE_BEST_AVAILABLE": 1,
                            "USE_STANDARD": 2,
                            "USE_ENHANCED": 3
                          }
                        },
                        "SpeechWordInfo": {
                          "fields": {
                            "word": {
                              "type": "string",
                              "id": 3
                            },
                            "startOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 1
                            },
                            "endOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 2
                            },
                            "confidence": {
                              "type": "float",
                              "id": 4
                            }
                          }
                        },
                        "InputAudioConfig": {
                          "fields": {
                            "audioEncoding": {
                              "type": "AudioEncoding",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "sampleRateHertz": {
                              "type": "int32",
                              "id": 2
                            },
                            "enableWordInfo": {
                              "type": "bool",
                              "id": 13
                            },
                            "phraseHints": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4
                            },
                            "model": {
                              "type": "string",
                              "id": 7
                            },
                            "modelVariant": {
                              "type": "SpeechModelVariant",
                              "id": 10
                            },
                            "singleUtterance": {
                              "type": "bool",
                              "id": 8
                            }
                          }
                        },
                        "SsmlVoiceGender": {
                          "values": {
                            "SSML_VOICE_GENDER_UNSPECIFIED": 0,
                            "SSML_VOICE_GENDER_MALE": 1,
                            "SSML_VOICE_GENDER_FEMALE": 2,
                            "SSML_VOICE_GENDER_NEUTRAL": 3
                          }
                        },
                        "VoiceSelectionParams": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "ssmlGender": {
                              "type": "SsmlVoiceGender",
                              "id": 2
                            }
                          }
                        },
                        "SynthesizeSpeechConfig": {
                          "fields": {
                            "speakingRate": {
                              "type": "double",
                              "id": 1
                            },
                            "pitch": {
                              "type": "double",
                              "id": 2
                            },
                            "volumeGainDb": {
                              "type": "double",
                              "id": 3
                            },
                            "effectsProfileId": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 5
                            },
                            "voice": {
                              "type": "VoiceSelectionParams",
                              "id": 4
                            }
                          }
                        },
                        "OutputAudioEncoding": {
                          "values": {
                            "OUTPUT_AUDIO_ENCODING_UNSPECIFIED": 0,
                            "OUTPUT_AUDIO_ENCODING_LINEAR_16": 1,
                            "OUTPUT_AUDIO_ENCODING_MP3": 2,
                            "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS": 4,
                            "OUTPUT_AUDIO_ENCODING_OGG_OPUS": 3,
                            "OUTPUT_AUDIO_ENCODING_MULAW": 5
                          }
                        },
                        "OutputAudioConfig": {
                          "fields": {
                            "audioEncoding": {
                              "type": "OutputAudioEncoding",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "sampleRateHertz": {
                              "type": "int32",
                              "id": 2
                            },
                            "synthesizeSpeechConfig": {
                              "type": "SynthesizeSpeechConfig",
                              "id": 3
                            }
                          }
                        },
                        "TextToSpeechSettings": {
                          "fields": {
                            "synthesizeSpeechConfigs": {
                              "keyType": "string",
                              "type": "SynthesizeSpeechConfig",
                              "id": 1
                            }
                          }
                        },
                        "Flows": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "CreateFlow": {
                              "requestType": "CreateFlowRequest",
                              "responseType": "Flow",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*}/flows",
                                "(google.api.http).body": "flow",
                                "(google.api.method_signature)": "parent,flow"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*}/flows",
                                    "body": "flow"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,flow"
                                }
                              ]
                            },
                            "DeleteFlow": {
                              "requestType": "DeleteFlowRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3/{name=projects/*/locations/*/agents/*/flows/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3/{name=projects/*/locations/*/agents/*/flows/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListFlows": {
                              "requestType": "ListFlowsRequest",
                              "responseType": "ListFlowsResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*}/flows",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*}/flows"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetFlow": {
                              "requestType": "GetFlowRequest",
                              "responseType": "Flow",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/flows/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/flows/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "UpdateFlow": {
                              "requestType": "UpdateFlowRequest",
                              "responseType": "Flow",
                              "options": {
                                "(google.api.http).patch": "/v3/{flow.name=projects/*/locations/*/agents/*/flows/*}",
                                "(google.api.http).body": "flow",
                                "(google.api.method_signature)": "flow,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{flow.name=projects/*/locations/*/agents/*/flows/*}",
                                    "body": "flow"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "flow,update_mask"
                                }
                              ]
                            },
                            "TrainFlow": {
                              "requestType": "TrainFlowRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{name=projects/*/locations/*/agents/*/flows/*}:train",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "name",
                                "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{name=projects/*/locations/*/agents/*/flows/*}:train",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.protobuf.Empty",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "ValidateFlow": {
                              "requestType": "ValidateFlowRequest",
                              "responseType": "FlowValidationResult",
                              "options": {
                                "(google.api.http).post": "/v3/{name=projects/*/locations/*/agents/*/flows/*}:validate",
                                "(google.api.http).body": "*"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{name=projects/*/locations/*/agents/*/flows/*}:validate",
                                    "body": "*"
                                  }
                                }
                              ]
                            },
                            "GetFlowValidationResult": {
                              "requestType": "GetFlowValidationResultRequest",
                              "responseType": "FlowValidationResult",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/flows/*/validationResult}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/flows/*/validationResult}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ImportFlow": {
                              "requestType": "ImportFlowRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*}/flows:import",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "ImportFlowResponse",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*}/flows:import",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "ImportFlowResponse",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "ExportFlow": {
                              "requestType": "ExportFlowRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{name=projects/*/locations/*/agents/*/flows/*}:export",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "ExportFlowResponse",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{name=projects/*/locations/*/agents/*/flows/*}:export",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "ExportFlowResponse",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "NluSettings": {
                          "fields": {
                            "modelType": {
                              "type": "ModelType",
                              "id": 1
                            },
                            "classificationThreshold": {
                              "type": "float",
                              "id": 3
                            },
                            "modelTrainingMode": {
                              "type": "ModelTrainingMode",
                              "id": 4
                            }
                          },
                          "nested": {
                            "ModelType": {
                              "values": {
                                "MODEL_TYPE_UNSPECIFIED": 0,
                                "MODEL_TYPE_STANDARD": 1,
                                "MODEL_TYPE_ADVANCED": 3
                              }
                            },
                            "ModelTrainingMode": {
                              "values": {
                                "MODEL_TRAINING_MODE_UNSPECIFIED": 0,
                                "MODEL_TRAINING_MODE_AUTOMATIC": 1,
                                "MODEL_TRAINING_MODE_MANUAL": 2
                              }
                            }
                          }
                        },
                        "Flow": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Flow",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/flows/{flow}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 3
                            },
                            "transitionRoutes": {
                              "rule": "repeated",
                              "type": "TransitionRoute",
                              "id": 4
                            },
                            "eventHandlers": {
                              "rule": "repeated",
                              "type": "EventHandler",
                              "id": 10
                            },
                            "transitionRouteGroups": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 15,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TransitionRouteGroup"
                              }
                            },
                            "nluSettings": {
                              "type": "NluSettings",
                              "id": 11
                            }
                          }
                        },
                        "CreateFlowRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "flow": {
                              "type": "Flow",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "DeleteFlowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "force": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "ListFlowsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListFlowsResponse": {
                          "fields": {
                            "flows": {
                              "rule": "repeated",
                              "type": "Flow",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetFlowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "UpdateFlowRequest": {
                          "fields": {
                            "flow": {
                              "type": "Flow",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "TrainFlowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            }
                          }
                        },
                        "ValidateFlowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetFlowValidationResultRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/FlowValidationResult"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "FlowValidationResult": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/FlowValidationResult",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/flows/{flow}/validationResult"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "validationMessages": {
                              "rule": "repeated",
                              "type": "ValidationMessage",
                              "id": 2
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        },
                        "ImportFlowRequest": {
                          "oneofs": {
                            "flow": {
                              "oneof": [
                                "flowUri",
                                "flowContent"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "flowUri": {
                              "type": "string",
                              "id": 2
                            },
                            "flowContent": {
                              "type": "bytes",
                              "id": 3
                            },
                            "importOption": {
                              "type": "ImportOption",
                              "id": 4
                            }
                          },
                          "nested": {
                            "ImportOption": {
                              "values": {
                                "IMPORT_OPTION_UNSPECIFIED": 0,
                                "KEEP": 1,
                                "FALLBACK": 2
                              }
                            }
                          }
                        },
                        "ImportFlowResponse": {
                          "fields": {
                            "flow": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            }
                          }
                        },
                        "ExportFlowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "flowUri": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "includeReferencedFlows": {
                              "type": "bool",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "ExportFlowResponse": {
                          "oneofs": {
                            "flow": {
                              "oneof": [
                                "flowUri",
                                "flowContent"
                              ]
                            }
                          },
                          "fields": {
                            "flowUri": {
                              "type": "string",
                              "id": 1
                            },
                            "flowContent": {
                              "type": "bytes",
                              "id": 2
                            }
                          }
                        },
                        "Pages": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListPages": {
                              "requestType": "ListPagesRequest",
                              "responseType": "ListPagesResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*/flows/*}/pages",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*/flows/*}/pages"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetPage": {
                              "requestType": "GetPageRequest",
                              "responseType": "Page",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/flows/*/pages/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/flows/*/pages/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreatePage": {
                              "requestType": "CreatePageRequest",
                              "responseType": "Page",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*/flows/*}/pages",
                                "(google.api.http).body": "page",
                                "(google.api.method_signature)": "parent,page"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*/flows/*}/pages",
                                    "body": "page"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,page"
                                }
                              ]
                            },
                            "UpdatePage": {
                              "requestType": "UpdatePageRequest",
                              "responseType": "Page",
                              "options": {
                                "(google.api.http).patch": "/v3/{page.name=projects/*/locations/*/agents/*/flows/*/pages/*}",
                                "(google.api.http).body": "page",
                                "(google.api.method_signature)": "page,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{page.name=projects/*/locations/*/agents/*/flows/*/pages/*}",
                                    "body": "page"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "page,update_mask"
                                }
                              ]
                            },
                            "DeletePage": {
                              "requestType": "DeletePageRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3/{name=projects/*/locations/*/agents/*/flows/*/pages/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3/{name=projects/*/locations/*/agents/*/flows/*/pages/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "Page": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Page",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/flows/{flow}/pages/{page}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "entryFulfillment": {
                              "type": "Fulfillment",
                              "id": 7
                            },
                            "form": {
                              "type": "Form",
                              "id": 4
                            },
                            "transitionRouteGroups": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 11,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TransitionRouteGroup"
                              }
                            },
                            "transitionRoutes": {
                              "rule": "repeated",
                              "type": "TransitionRoute",
                              "id": 9
                            },
                            "eventHandlers": {
                              "rule": "repeated",
                              "type": "EventHandler",
                              "id": 10
                            }
                          }
                        },
                        "Form": {
                          "fields": {
                            "parameters": {
                              "rule": "repeated",
                              "type": "Parameter",
                              "id": 1
                            }
                          },
                          "nested": {
                            "Parameter": {
                              "fields": {
                                "displayName": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "required": {
                                  "type": "bool",
                                  "id": 2
                                },
                                "entityType": {
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED",
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/EntityType"
                                  }
                                },
                                "isList": {
                                  "type": "bool",
                                  "id": 4
                                },
                                "fillBehavior": {
                                  "type": "FillBehavior",
                                  "id": 7,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "defaultValue": {
                                  "type": "google.protobuf.Value",
                                  "id": 9
                                },
                                "redact": {
                                  "type": "bool",
                                  "id": 11
                                }
                              },
                              "nested": {
                                "FillBehavior": {
                                  "fields": {
                                    "initialPromptFulfillment": {
                                      "type": "Fulfillment",
                                      "id": 3,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    },
                                    "repromptEventHandlers": {
                                      "rule": "repeated",
                                      "type": "EventHandler",
                                      "id": 5
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "EventHandler": {
                          "oneofs": {
                            "target": {
                              "oneof": [
                                "targetPage",
                                "targetFlow"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "event": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "triggerFulfillment": {
                              "type": "Fulfillment",
                              "id": 5
                            },
                            "targetPage": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "targetFlow": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            }
                          }
                        },
                        "TransitionRoute": {
                          "oneofs": {
                            "target": {
                              "oneof": [
                                "targetPage",
                                "targetFlow"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "intent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "condition": {
                              "type": "string",
                              "id": 2
                            },
                            "triggerFulfillment": {
                              "type": "Fulfillment",
                              "id": 3
                            },
                            "targetPage": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "targetFlow": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            }
                          }
                        },
                        "ListPagesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListPagesResponse": {
                          "fields": {
                            "pages": {
                              "rule": "repeated",
                              "type": "Page",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetPageRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "CreatePageRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "page": {
                              "type": "Page",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "UpdatePageRequest": {
                          "fields": {
                            "page": {
                              "type": "Page",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 3
                            }
                          }
                        },
                        "DeletePageRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "force": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "Fulfillment": {
                          "fields": {
                            "messages": {
                              "rule": "repeated",
                              "type": "ResponseMessage",
                              "id": 1
                            },
                            "webhook": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Webhook"
                              }
                            },
                            "returnPartialResponses": {
                              "type": "bool",
                              "id": 8
                            },
                            "tag": {
                              "type": "string",
                              "id": 3
                            },
                            "setParameterActions": {
                              "rule": "repeated",
                              "type": "SetParameterAction",
                              "id": 4
                            },
                            "conditionalCases": {
                              "rule": "repeated",
                              "type": "ConditionalCases",
                              "id": 5
                            }
                          },
                          "nested": {
                            "SetParameterAction": {
                              "fields": {
                                "parameter": {
                                  "type": "string",
                                  "id": 1
                                },
                                "value": {
                                  "type": "google.protobuf.Value",
                                  "id": 2
                                }
                              }
                            },
                            "ConditionalCases": {
                              "fields": {
                                "cases": {
                                  "rule": "repeated",
                                  "type": "Case",
                                  "id": 1
                                }
                              },
                              "nested": {
                                "Case": {
                                  "fields": {
                                    "condition": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "caseContent": {
                                      "rule": "repeated",
                                      "type": "CaseContent",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "CaseContent": {
                                      "oneofs": {
                                        "casesOrMessage": {
                                          "oneof": [
                                            "message",
                                            "additionalCases"
                                          ]
                                        }
                                      },
                                      "fields": {
                                        "message": {
                                          "type": "ResponseMessage",
                                          "id": 1
                                        },
                                        "additionalCases": {
                                          "type": "ConditionalCases",
                                          "id": 2
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "ResponseMessage": {
                          "oneofs": {
                            "message": {
                              "oneof": [
                                "text",
                                "payload",
                                "conversationSuccess",
                                "outputAudioText",
                                "liveAgentHandoff",
                                "endInteraction",
                                "playAudio",
                                "mixedAudio",
                                "telephonyTransferCall"
                              ]
                            }
                          },
                          "fields": {
                            "text": {
                              "type": "Text",
                              "id": 1
                            },
                            "payload": {
                              "type": "google.protobuf.Struct",
                              "id": 2
                            },
                            "conversationSuccess": {
                              "type": "ConversationSuccess",
                              "id": 9
                            },
                            "outputAudioText": {
                              "type": "OutputAudioText",
                              "id": 8
                            },
                            "liveAgentHandoff": {
                              "type": "LiveAgentHandoff",
                              "id": 10
                            },
                            "endInteraction": {
                              "type": "EndInteraction",
                              "id": 11,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "playAudio": {
                              "type": "PlayAudio",
                              "id": 12
                            },
                            "mixedAudio": {
                              "type": "MixedAudio",
                              "id": 13,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "telephonyTransferCall": {
                              "type": "TelephonyTransferCall",
                              "id": 18
                            },
                            "channel": {
                              "type": "string",
                              "id": 19
                            }
                          },
                          "nested": {
                            "Text": {
                              "fields": {
                                "text": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "allowPlaybackInterruption": {
                                  "type": "bool",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OUTPUT_ONLY"
                                  }
                                }
                              }
                            },
                            "LiveAgentHandoff": {
                              "fields": {
                                "metadata": {
                                  "type": "google.protobuf.Struct",
                                  "id": 1
                                }
                              }
                            },
                            "ConversationSuccess": {
                              "fields": {
                                "metadata": {
                                  "type": "google.protobuf.Struct",
                                  "id": 1
                                }
                              }
                            },
                            "OutputAudioText": {
                              "oneofs": {
                                "source": {
                                  "oneof": [
                                    "text",
                                    "ssml"
                                  ]
                                }
                              },
                              "fields": {
                                "text": {
                                  "type": "string",
                                  "id": 1
                                },
                                "ssml": {
                                  "type": "string",
                                  "id": 2
                                },
                                "allowPlaybackInterruption": {
                                  "type": "bool",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OUTPUT_ONLY"
                                  }
                                }
                              }
                            },
                            "EndInteraction": {
                              "fields": {}
                            },
                            "PlayAudio": {
                              "fields": {
                                "audioUri": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "allowPlaybackInterruption": {
                                  "type": "bool",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OUTPUT_ONLY"
                                  }
                                }
                              }
                            },
                            "MixedAudio": {
                              "fields": {
                                "segments": {
                                  "rule": "repeated",
                                  "type": "Segment",
                                  "id": 1
                                }
                              },
                              "nested": {
                                "Segment": {
                                  "oneofs": {
                                    "content": {
                                      "oneof": [
                                        "audio",
                                        "uri"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "audio": {
                                      "type": "bytes",
                                      "id": 1
                                    },
                                    "uri": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "allowPlaybackInterruption": {
                                      "type": "bool",
                                      "id": 3,
                                      "options": {
                                        "(google.api.field_behavior)": "OUTPUT_ONLY"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "TelephonyTransferCall": {
                              "oneofs": {
                                "endpoint": {
                                  "oneof": [
                                    "phoneNumber"
                                  ]
                                }
                              },
                              "fields": {
                                "phoneNumber": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            }
                          }
                        },
                        "ValidationMessage": {
                          "fields": {
                            "resourceType": {
                              "type": "ResourceType",
                              "id": 1
                            },
                            "resources": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "resourceNames": {
                              "rule": "repeated",
                              "type": "ResourceName",
                              "id": 6
                            },
                            "severity": {
                              "type": "Severity",
                              "id": 3
                            },
                            "detail": {
                              "type": "string",
                              "id": 4
                            }
                          },
                          "nested": {
                            "ResourceType": {
                              "values": {
                                "RESOURCE_TYPE_UNSPECIFIED": 0,
                                "AGENT": 1,
                                "INTENT": 2,
                                "INTENT_TRAINING_PHRASE": 8,
                                "INTENT_PARAMETER": 9,
                                "INTENTS": 10,
                                "INTENT_TRAINING_PHRASES": 11,
                                "ENTITY_TYPE": 3,
                                "ENTITY_TYPES": 12,
                                "WEBHOOK": 4,
                                "FLOW": 5,
                                "PAGE": 6,
                                "PAGES": 13,
                                "TRANSITION_ROUTE_GROUP": 7
                              }
                            },
                            "Severity": {
                              "values": {
                                "SEVERITY_UNSPECIFIED": 0,
                                "INFO": 1,
                                "WARNING": 2,
                                "ERROR": 3
                              }
                            }
                          }
                        },
                        "ResourceName": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "Changelogs": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListChangelogs": {
                              "requestType": "ListChangelogsRequest",
                              "responseType": "ListChangelogsResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*}/changelogs",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*}/changelogs"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetChangelog": {
                              "requestType": "GetChangelogRequest",
                              "responseType": "Changelog",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/changelogs/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/changelogs/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "ListChangelogsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Changelog"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListChangelogsResponse": {
                          "fields": {
                            "changelogs": {
                              "rule": "repeated",
                              "type": "Changelog",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetChangelogRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Changelog"
                              }
                            }
                          }
                        },
                        "Changelog": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Changelog",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/changelogs/{changelog}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "userEmail": {
                              "type": "string",
                              "id": 2
                            },
                            "displayName": {
                              "type": "string",
                              "id": 7
                            },
                            "action": {
                              "type": "string",
                              "id": 11
                            },
                            "type": {
                              "type": "string",
                              "id": 8
                            },
                            "resource": {
                              "type": "string",
                              "id": 3
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          }
                        },
                        "Deployments": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListDeployments": {
                              "requestType": "ListDeploymentsRequest",
                              "responseType": "ListDeploymentsResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*/environments/*}/deployments",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*/environments/*}/deployments"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetDeployment": {
                              "requestType": "GetDeploymentRequest",
                              "responseType": "Deployment",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/environments/*/deployments/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/environments/*/deployments/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "Deployment": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Deployment",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/environments/{environment}/deployments/{deployment}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "flowVersion": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 3
                            },
                            "result": {
                              "type": "Result",
                              "id": 4
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 6
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "RUNNING": 1,
                                "SUCCEEDED": 2,
                                "FAILED": 3
                              }
                            },
                            "Result": {
                              "fields": {
                                "deploymentTestResults": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCaseResult"
                                  }
                                },
                                "experiment": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/Experiment"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "ListDeploymentsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Deployment"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListDeploymentsResponse": {
                          "fields": {
                            "deployments": {
                              "rule": "repeated",
                              "type": "Deployment",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetDeploymentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Deployment"
                              }
                            }
                          }
                        },
                        "EntityTypes": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListEntityTypes": {
                              "requestType": "ListEntityTypesRequest",
                              "responseType": "ListEntityTypesResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*}/entityTypes",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*}/entityTypes"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetEntityType": {
                              "requestType": "GetEntityTypeRequest",
                              "responseType": "EntityType",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/entityTypes/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/entityTypes/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateEntityType": {
                              "requestType": "CreateEntityTypeRequest",
                              "responseType": "EntityType",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*}/entityTypes",
                                "(google.api.http).body": "entity_type",
                                "(google.api.method_signature)": "parent,entity_type"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*}/entityTypes",
                                    "body": "entity_type"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,entity_type"
                                }
                              ]
                            },
                            "UpdateEntityType": {
                              "requestType": "UpdateEntityTypeRequest",
                              "responseType": "EntityType",
                              "options": {
                                "(google.api.http).patch": "/v3/{entity_type.name=projects/*/locations/*/agents/*/entityTypes/*}",
                                "(google.api.http).body": "entity_type",
                                "(google.api.method_signature)": "entity_type,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{entity_type.name=projects/*/locations/*/agents/*/entityTypes/*}",
                                    "body": "entity_type"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "entity_type,update_mask"
                                }
                              ]
                            },
                            "DeleteEntityType": {
                              "requestType": "DeleteEntityTypeRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3/{name=projects/*/locations/*/agents/*/entityTypes/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3/{name=projects/*/locations/*/agents/*/entityTypes/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "EntityType": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/EntityType",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/entityTypes/{entity_type}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "kind": {
                              "type": "Kind",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "autoExpansionMode": {
                              "type": "AutoExpansionMode",
                              "id": 4
                            },
                            "entities": {
                              "rule": "repeated",
                              "type": "Entity",
                              "id": 5
                            },
                            "excludedPhrases": {
                              "rule": "repeated",
                              "type": "ExcludedPhrase",
                              "id": 6
                            },
                            "enableFuzzyExtraction": {
                              "type": "bool",
                              "id": 7
                            },
                            "redact": {
                              "type": "bool",
                              "id": 9
                            }
                          },
                          "nested": {
                            "Kind": {
                              "values": {
                                "KIND_UNSPECIFIED": 0,
                                "KIND_MAP": 1,
                                "KIND_LIST": 2,
                                "KIND_REGEXP": 3
                              }
                            },
                            "AutoExpansionMode": {
                              "values": {
                                "AUTO_EXPANSION_MODE_UNSPECIFIED": 0,
                                "AUTO_EXPANSION_MODE_DEFAULT": 1
                              }
                            },
                            "Entity": {
                              "fields": {
                                "value": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "synonyms": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "ExcludedPhrase": {
                              "fields": {
                                "value": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "ListEntityTypesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/EntityType"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListEntityTypesResponse": {
                          "fields": {
                            "entityTypes": {
                              "rule": "repeated",
                              "type": "EntityType",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetEntityTypeRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/EntityType"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "CreateEntityTypeRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/EntityType"
                              }
                            },
                            "entityType": {
                              "type": "EntityType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "UpdateEntityTypeRequest": {
                          "fields": {
                            "entityType": {
                              "type": "EntityType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 3
                            }
                          }
                        },
                        "DeleteEntityTypeRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/EntityType"
                              }
                            },
                            "force": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "Environments": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListEnvironments": {
                              "requestType": "ListEnvironmentsRequest",
                              "responseType": "ListEnvironmentsResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*}/environments",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*}/environments"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetEnvironment": {
                              "requestType": "GetEnvironmentRequest",
                              "responseType": "Environment",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/environments/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/environments/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateEnvironment": {
                              "requestType": "CreateEnvironmentRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*}/environments",
                                "(google.api.http).body": "environment",
                                "(google.api.method_signature)": "parent,environment",
                                "(google.longrunning.operation_info).response_type": "Environment",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*}/environments",
                                    "body": "environment"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,environment"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "Environment",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "UpdateEnvironment": {
                              "requestType": "UpdateEnvironmentRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).patch": "/v3/{environment.name=projects/*/locations/*/agents/*/environments/*}",
                                "(google.api.http).body": "environment",
                                "(google.api.method_signature)": "environment,update_mask",
                                "(google.longrunning.operation_info).response_type": "Environment",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{environment.name=projects/*/locations/*/agents/*/environments/*}",
                                    "body": "environment"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "environment,update_mask"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "Environment",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "DeleteEnvironment": {
                              "requestType": "DeleteEnvironmentRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3/{name=projects/*/locations/*/agents/*/environments/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3/{name=projects/*/locations/*/agents/*/environments/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "LookupEnvironmentHistory": {
                              "requestType": "LookupEnvironmentHistoryRequest",
                              "responseType": "LookupEnvironmentHistoryResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/environments/*}:lookupEnvironmentHistory",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/environments/*}:lookupEnvironmentHistory"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "RunContinuousTest": {
                              "requestType": "RunContinuousTestRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{environment=projects/*/locations/*/agents/*/environments/*}:runContinuousTest",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "RunContinuousTestResponse",
                                "(google.longrunning.operation_info).metadata_type": "RunContinuousTestMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{environment=projects/*/locations/*/agents/*/environments/*}:runContinuousTest",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "RunContinuousTestResponse",
                                    "metadata_type": "RunContinuousTestMetadata"
                                  }
                                }
                              ]
                            },
                            "ListContinuousTestResults": {
                              "requestType": "ListContinuousTestResultsRequest",
                              "responseType": "ListContinuousTestResultsResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*/environments/*}/continuousTestResults",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*/environments/*}/continuousTestResults"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "DeployFlow": {
                              "requestType": "DeployFlowRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{environment=projects/*/locations/*/agents/*/environments/*}:deployFlow",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "DeployFlowResponse",
                                "(google.longrunning.operation_info).metadata_type": "DeployFlowMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{environment=projects/*/locations/*/agents/*/environments/*}:deployFlow",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "DeployFlowResponse",
                                    "metadata_type": "DeployFlowMetadata"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "Environment": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Environment",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/environments/{environment}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 3
                            },
                            "versionConfigs": {
                              "rule": "repeated",
                              "type": "VersionConfig",
                              "id": 6
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "testCasesConfig": {
                              "type": "TestCasesConfig",
                              "id": 7
                            },
                            "webhookConfig": {
                              "type": "WebhookConfig",
                              "id": 10
                            }
                          },
                          "nested": {
                            "VersionConfig": {
                              "fields": {
                                "version": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED",
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                                  }
                                }
                              }
                            },
                            "TestCasesConfig": {
                              "fields": {
                                "testCases": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                                  }
                                },
                                "enableContinuousRun": {
                                  "type": "bool",
                                  "id": 2
                                },
                                "enablePredeploymentRun": {
                                  "type": "bool",
                                  "id": 3
                                }
                              }
                            },
                            "WebhookConfig": {
                              "fields": {
                                "webhookOverrides": {
                                  "rule": "repeated",
                                  "type": "Webhook",
                                  "id": 1
                                }
                              }
                            }
                          }
                        },
                        "ListEnvironmentsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListEnvironmentsResponse": {
                          "fields": {
                            "environments": {
                              "rule": "repeated",
                              "type": "Environment",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetEnvironmentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            }
                          }
                        },
                        "CreateEnvironmentRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "environment": {
                              "type": "Environment",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateEnvironmentRequest": {
                          "fields": {
                            "environment": {
                              "type": "Environment",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteEnvironmentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            }
                          }
                        },
                        "LookupEnvironmentHistoryRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "LookupEnvironmentHistoryResponse": {
                          "fields": {
                            "environments": {
                              "rule": "repeated",
                              "type": "Environment",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "ContinuousTestResult": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/ContinuousTestResult",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/environments/{environment}/continuousTestResults/{continuous_test_result}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "result": {
                              "type": "AggregatedTestResult",
                              "id": 2
                            },
                            "testCaseResults": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCaseResult"
                              }
                            },
                            "runTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          },
                          "nested": {
                            "AggregatedTestResult": {
                              "values": {
                                "AGGREGATED_TEST_RESULT_UNSPECIFIED": 0,
                                "PASSED": 1,
                                "FAILED": 2
                              }
                            }
                          }
                        },
                        "RunContinuousTestRequest": {
                          "fields": {
                            "environment": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            }
                          }
                        },
                        "RunContinuousTestResponse": {
                          "fields": {
                            "continuousTestResult": {
                              "type": "ContinuousTestResult",
                              "id": 1
                            }
                          }
                        },
                        "RunContinuousTestMetadata": {
                          "fields": {
                            "errors": {
                              "rule": "repeated",
                              "type": "TestError",
                              "id": 1
                            }
                          }
                        },
                        "ListContinuousTestResultsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/ContinuousTestResult"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListContinuousTestResultsResponse": {
                          "fields": {
                            "continuousTestResults": {
                              "rule": "repeated",
                              "type": "ContinuousTestResult",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "DeployFlowRequest": {
                          "fields": {
                            "environment": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "flowVersion": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            }
                          }
                        },
                        "DeployFlowResponse": {
                          "fields": {
                            "environment": {
                              "type": "Environment",
                              "id": 1
                            },
                            "deployment": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "DeployFlowMetadata": {
                          "fields": {
                            "testErrors": {
                              "rule": "repeated",
                              "type": "TestError",
                              "id": 1
                            }
                          }
                        },
                        "TestCases": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListTestCases": {
                              "requestType": "ListTestCasesRequest",
                              "responseType": "ListTestCasesResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*}/testCases",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*}/testCases"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "BatchDeleteTestCases": {
                              "requestType": "BatchDeleteTestCasesRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*}/testCases:batchDelete",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*}/testCases:batchDelete",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetTestCase": {
                              "requestType": "GetTestCaseRequest",
                              "responseType": "TestCase",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/testCases/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/testCases/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateTestCase": {
                              "requestType": "CreateTestCaseRequest",
                              "responseType": "TestCase",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*}/testCases",
                                "(google.api.http).body": "test_case",
                                "(google.api.method_signature)": "parent,test_case"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*}/testCases",
                                    "body": "test_case"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,test_case"
                                }
                              ]
                            },
                            "UpdateTestCase": {
                              "requestType": "UpdateTestCaseRequest",
                              "responseType": "TestCase",
                              "options": {
                                "(google.api.http).patch": "/v3/{test_case.name=projects/*/locations/*/agents/*/testCases/*}",
                                "(google.api.http).body": "test_case",
                                "(google.api.method_signature)": "test_case,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{test_case.name=projects/*/locations/*/agents/*/testCases/*}",
                                    "body": "test_case"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "test_case,update_mask"
                                }
                              ]
                            },
                            "RunTestCase": {
                              "requestType": "RunTestCaseRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{name=projects/*/locations/*/agents/*/testCases/*}:run",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "RunTestCaseResponse",
                                "(google.longrunning.operation_info).metadata_type": "RunTestCaseMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{name=projects/*/locations/*/agents/*/testCases/*}:run",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "RunTestCaseResponse",
                                    "metadata_type": "RunTestCaseMetadata"
                                  }
                                }
                              ]
                            },
                            "BatchRunTestCases": {
                              "requestType": "BatchRunTestCasesRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*}/testCases:batchRun",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "BatchRunTestCasesResponse",
                                "(google.longrunning.operation_info).metadata_type": "BatchRunTestCasesMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*}/testCases:batchRun",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "BatchRunTestCasesResponse",
                                    "metadata_type": "BatchRunTestCasesMetadata"
                                  }
                                }
                              ]
                            },
                            "CalculateCoverage": {
                              "requestType": "CalculateCoverageRequest",
                              "responseType": "CalculateCoverageResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{agent=projects/*/locations/*/agents/*}/testCases:calculateCoverage"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{agent=projects/*/locations/*/agents/*}/testCases:calculateCoverage"
                                  }
                                }
                              ]
                            },
                            "ImportTestCases": {
                              "requestType": "ImportTestCasesRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*}/testCases:import",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "ImportTestCasesResponse",
                                "(google.longrunning.operation_info).metadata_type": "ImportTestCasesMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*}/testCases:import",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "ImportTestCasesResponse",
                                    "metadata_type": "ImportTestCasesMetadata"
                                  }
                                }
                              ]
                            },
                            "ExportTestCases": {
                              "requestType": "ExportTestCasesRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*}/testCases:export",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "ExportTestCasesResponse",
                                "(google.longrunning.operation_info).metadata_type": "ExportTestCasesMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*}/testCases:export",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "ExportTestCasesResponse",
                                    "metadata_type": "ExportTestCasesMetadata"
                                  }
                                }
                              ]
                            },
                            "ListTestCaseResults": {
                              "requestType": "ListTestCaseResultsRequest",
                              "responseType": "ListTestCaseResultsResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*/testCases/*}/results",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*/testCases/*}/results"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetTestCaseResult": {
                              "requestType": "GetTestCaseResultRequest",
                              "responseType": "TestCaseResult",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/testCases/*/results/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/testCases/*/results/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "TestCase": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/TestCase",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/testCases/{test_case}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "tags": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "displayName": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "notes": {
                              "type": "string",
                              "id": 4
                            },
                            "testConfig": {
                              "type": "TestConfig",
                              "id": 13
                            },
                            "testCaseConversationTurns": {
                              "rule": "repeated",
                              "type": "ConversationTurn",
                              "id": 5
                            },
                            "creationTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "lastTestResult": {
                              "type": "TestCaseResult",
                              "id": 12
                            }
                          }
                        },
                        "TestCaseResult": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/TestCaseResult",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/testCases/{test_case}/results/{result}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "environment": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "conversationTurns": {
                              "rule": "repeated",
                              "type": "ConversationTurn",
                              "id": 3
                            },
                            "testResult": {
                              "type": "TestResult",
                              "id": 4
                            },
                            "testTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5
                            }
                          }
                        },
                        "TestConfig": {
                          "fields": {
                            "trackingParameters": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "flow": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "page": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            }
                          }
                        },
                        "ConversationTurn": {
                          "fields": {
                            "userInput": {
                              "type": "UserInput",
                              "id": 1
                            },
                            "virtualAgentOutput": {
                              "type": "VirtualAgentOutput",
                              "id": 2
                            }
                          },
                          "nested": {
                            "UserInput": {
                              "fields": {
                                "input": {
                                  "type": "QueryInput",
                                  "id": 5
                                },
                                "injectedParameters": {
                                  "type": "google.protobuf.Struct",
                                  "id": 2
                                },
                                "isWebhookEnabled": {
                                  "type": "bool",
                                  "id": 3
                                },
                                "enableSentimentAnalysis": {
                                  "type": "bool",
                                  "id": 7
                                }
                              }
                            },
                            "VirtualAgentOutput": {
                              "fields": {
                                "sessionParameters": {
                                  "type": "google.protobuf.Struct",
                                  "id": 4
                                },
                                "differences": {
                                  "rule": "repeated",
                                  "type": "TestRunDifference",
                                  "id": 5,
                                  "options": {
                                    "(google.api.field_behavior)": "OUTPUT_ONLY"
                                  }
                                },
                                "diagnosticInfo": {
                                  "type": "google.protobuf.Struct",
                                  "id": 6,
                                  "options": {
                                    "(google.api.field_behavior)": "INPUT_ONLY"
                                  }
                                },
                                "triggeredIntent": {
                                  "type": "Intent",
                                  "id": 7
                                },
                                "currentPage": {
                                  "type": "Page",
                                  "id": 8
                                },
                                "textResponses": {
                                  "rule": "repeated",
                                  "type": "ResponseMessage.Text",
                                  "id": 9
                                },
                                "status": {
                                  "type": "google.rpc.Status",
                                  "id": 10
                                }
                              }
                            }
                          }
                        },
                        "TestRunDifference": {
                          "fields": {
                            "type": {
                              "type": "DiffType",
                              "id": 1
                            },
                            "description": {
                              "type": "string",
                              "id": 2
                            }
                          },
                          "nested": {
                            "DiffType": {
                              "values": {
                                "DIFF_TYPE_UNSPECIFIED": 0,
                                "INTENT": 1,
                                "PAGE": 2,
                                "PARAMETERS": 3,
                                "UTTERANCE": 4,
                                "FLOW": 5
                              }
                            }
                          }
                        },
                        "TransitionCoverage": {
                          "fields": {
                            "transitions": {
                              "rule": "repeated",
                              "type": "Transition",
                              "id": 1
                            },
                            "coverageScore": {
                              "type": "float",
                              "id": 2
                            }
                          },
                          "nested": {
                            "TransitionNode": {
                              "oneofs": {
                                "kind": {
                                  "oneof": [
                                    "page",
                                    "flow"
                                  ]
                                }
                              },
                              "fields": {
                                "page": {
                                  "type": "Page",
                                  "id": 1
                                },
                                "flow": {
                                  "type": "Flow",
                                  "id": 2
                                }
                              }
                            },
                            "Transition": {
                              "oneofs": {
                                "detail": {
                                  "oneof": [
                                    "transitionRoute",
                                    "eventHandler"
                                  ]
                                }
                              },
                              "fields": {
                                "source": {
                                  "type": "TransitionNode",
                                  "id": 1
                                },
                                "index": {
                                  "type": "int32",
                                  "id": 4
                                },
                                "target": {
                                  "type": "TransitionNode",
                                  "id": 2
                                },
                                "covered": {
                                  "type": "bool",
                                  "id": 3
                                },
                                "transitionRoute": {
                                  "type": "TransitionRoute",
                                  "id": 5
                                },
                                "eventHandler": {
                                  "type": "EventHandler",
                                  "id": 6
                                }
                              }
                            }
                          }
                        },
                        "TransitionRouteGroupCoverage": {
                          "fields": {
                            "coverages": {
                              "rule": "repeated",
                              "type": "Coverage",
                              "id": 1
                            },
                            "coverageScore": {
                              "type": "float",
                              "id": 2
                            }
                          },
                          "nested": {
                            "Coverage": {
                              "fields": {
                                "routeGroup": {
                                  "type": "TransitionRouteGroup",
                                  "id": 1
                                },
                                "transitions": {
                                  "rule": "repeated",
                                  "type": "Transition",
                                  "id": 2
                                },
                                "coverageScore": {
                                  "type": "float",
                                  "id": 3
                                }
                              },
                              "nested": {
                                "Transition": {
                                  "fields": {
                                    "transitionRoute": {
                                      "type": "TransitionRoute",
                                      "id": 1
                                    },
                                    "covered": {
                                      "type": "bool",
                                      "id": 2
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "IntentCoverage": {
                          "fields": {
                            "intents": {
                              "rule": "repeated",
                              "type": "Intent",
                              "id": 1
                            },
                            "coverageScore": {
                              "type": "float",
                              "id": 2
                            }
                          },
                          "nested": {
                            "Intent": {
                              "fields": {
                                "intent": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                                  }
                                },
                                "covered": {
                                  "type": "bool",
                                  "id": 2
                                }
                              }
                            }
                          }
                        },
                        "CalculateCoverageRequest": {
                          "fields": {
                            "agent": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "type": {
                              "type": "CoverageType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "CoverageType": {
                              "values": {
                                "COVERAGE_TYPE_UNSPECIFIED": 0,
                                "INTENT": 1,
                                "PAGE_TRANSITION": 2,
                                "TRANSITION_ROUTE_GROUP": 3
                              }
                            }
                          }
                        },
                        "CalculateCoverageResponse": {
                          "oneofs": {
                            "coverageType": {
                              "oneof": [
                                "intentCoverage",
                                "transitionCoverage",
                                "routeGroupCoverage"
                              ]
                            }
                          },
                          "fields": {
                            "agent": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "intentCoverage": {
                              "type": "IntentCoverage",
                              "id": 2
                            },
                            "transitionCoverage": {
                              "type": "TransitionCoverage",
                              "id": 4
                            },
                            "routeGroupCoverage": {
                              "type": "TransitionRouteGroupCoverage",
                              "id": 6
                            }
                          }
                        },
                        "ListTestCasesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            },
                            "view": {
                              "type": "TestCaseView",
                              "id": 4
                            }
                          },
                          "nested": {
                            "TestCaseView": {
                              "values": {
                                "TEST_CASE_VIEW_UNSPECIFIED": 0,
                                "BASIC": 1,
                                "FULL": 2
                              }
                            }
                          }
                        },
                        "ListTestCasesResponse": {
                          "fields": {
                            "testCases": {
                              "rule": "repeated",
                              "type": "TestCase",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "BatchDeleteTestCasesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "names": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                              }
                            }
                          }
                        },
                        "CreateTestCaseRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "testCase": {
                              "type": "TestCase",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateTestCaseRequest": {
                          "fields": {
                            "testCase": {
                              "type": "TestCase",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "GetTestCaseRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                              }
                            }
                          }
                        },
                        "RunTestCaseRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "environment": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            }
                          }
                        },
                        "RunTestCaseResponse": {
                          "fields": {
                            "result": {
                              "type": "TestCaseResult",
                              "id": 2
                            }
                          }
                        },
                        "RunTestCaseMetadata": {
                          "fields": {}
                        },
                        "BatchRunTestCasesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "environment": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "testCases": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                              }
                            }
                          }
                        },
                        "BatchRunTestCasesResponse": {
                          "fields": {
                            "results": {
                              "rule": "repeated",
                              "type": "TestCaseResult",
                              "id": 1
                            }
                          }
                        },
                        "BatchRunTestCasesMetadata": {
                          "fields": {
                            "errors": {
                              "rule": "repeated",
                              "type": "TestError",
                              "id": 1
                            }
                          }
                        },
                        "TestError": {
                          "fields": {
                            "testCase": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "status": {
                              "type": "google.rpc.Status",
                              "id": 2
                            },
                            "testTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        },
                        "ImportTestCasesRequest": {
                          "oneofs": {
                            "source": {
                              "oneof": [
                                "gcsUri",
                                "content"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "gcsUri": {
                              "type": "string",
                              "id": 2
                            },
                            "content": {
                              "type": "bytes",
                              "id": 3
                            }
                          }
                        },
                        "ImportTestCasesResponse": {
                          "fields": {
                            "names": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                              }
                            }
                          }
                        },
                        "ImportTestCasesMetadata": {
                          "fields": {
                            "errors": {
                              "rule": "repeated",
                              "type": "TestCaseError",
                              "id": 1
                            }
                          }
                        },
                        "TestCaseError": {
                          "fields": {
                            "testCase": {
                              "type": "TestCase",
                              "id": 1
                            },
                            "status": {
                              "type": "google.rpc.Status",
                              "id": 2
                            }
                          }
                        },
                        "ExportTestCasesRequest": {
                          "oneofs": {
                            "destination": {
                              "oneof": [
                                "gcsUri"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "gcsUri": {
                              "type": "string",
                              "id": 2
                            },
                            "dataFormat": {
                              "type": "DataFormat",
                              "id": 3
                            },
                            "filter": {
                              "type": "string",
                              "id": 4
                            }
                          },
                          "nested": {
                            "DataFormat": {
                              "values": {
                                "DATA_FORMAT_UNSPECIFIED": 0,
                                "BLOB": 1,
                                "JSON": 2
                              }
                            }
                          }
                        },
                        "ExportTestCasesResponse": {
                          "oneofs": {
                            "destination": {
                              "oneof": [
                                "gcsUri",
                                "content"
                              ]
                            }
                          },
                          "fields": {
                            "gcsUri": {
                              "type": "string",
                              "id": 1
                            },
                            "content": {
                              "type": "bytes",
                              "id": 2
                            }
                          }
                        },
                        "ExportTestCasesMetadata": {
                          "fields": {}
                        },
                        "ListTestCaseResultsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCaseResult"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            },
                            "filter": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListTestCaseResultsResponse": {
                          "fields": {
                            "testCaseResults": {
                              "rule": "repeated",
                              "type": "TestCaseResult",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetTestCaseResultRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCaseResult"
                              }
                            }
                          }
                        },
                        "TestResult": {
                          "values": {
                            "TEST_RESULT_UNSPECIFIED": 0,
                            "PASSED": 1,
                            "FAILED": 2
                          }
                        },
                        "Intents": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListIntents": {
                              "requestType": "ListIntentsRequest",
                              "responseType": "ListIntentsResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*}/intents",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*}/intents"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetIntent": {
                              "requestType": "GetIntentRequest",
                              "responseType": "Intent",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/intents/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/intents/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateIntent": {
                              "requestType": "CreateIntentRequest",
                              "responseType": "Intent",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*}/intents",
                                "(google.api.http).body": "intent",
                                "(google.api.method_signature)": "parent,intent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*}/intents",
                                    "body": "intent"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,intent"
                                }
                              ]
                            },
                            "UpdateIntent": {
                              "requestType": "UpdateIntentRequest",
                              "responseType": "Intent",
                              "options": {
                                "(google.api.http).patch": "/v3/{intent.name=projects/*/locations/*/agents/*/intents/*}",
                                "(google.api.http).body": "intent",
                                "(google.api.method_signature)": "intent,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{intent.name=projects/*/locations/*/agents/*/intents/*}",
                                    "body": "intent"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "intent,update_mask"
                                }
                              ]
                            },
                            "DeleteIntent": {
                              "requestType": "DeleteIntentRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3/{name=projects/*/locations/*/agents/*/intents/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3/{name=projects/*/locations/*/agents/*/intents/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "Intent": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Intent",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/intents/{intent}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "trainingPhrases": {
                              "rule": "repeated",
                              "type": "TrainingPhrase",
                              "id": 3
                            },
                            "parameters": {
                              "rule": "repeated",
                              "type": "Parameter",
                              "id": 4
                            },
                            "priority": {
                              "type": "int32",
                              "id": 5
                            },
                            "isFallback": {
                              "type": "bool",
                              "id": 6
                            },
                            "labels": {
                              "keyType": "string",
                              "type": "string",
                              "id": 7
                            },
                            "description": {
                              "type": "string",
                              "id": 8
                            }
                          },
                          "nested": {
                            "TrainingPhrase": {
                              "fields": {
                                "id": {
                                  "type": "string",
                                  "id": 1
                                },
                                "parts": {
                                  "rule": "repeated",
                                  "type": "Part",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "repeatCount": {
                                  "type": "int32",
                                  "id": 3
                                }
                              },
                              "nested": {
                                "Part": {
                                  "fields": {
                                    "text": {
                                      "type": "string",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    },
                                    "parameterId": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                }
                              }
                            },
                            "Parameter": {
                              "fields": {
                                "id": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "entityType": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED",
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/EntityType"
                                  }
                                },
                                "isList": {
                                  "type": "bool",
                                  "id": 3
                                },
                                "redact": {
                                  "type": "bool",
                                  "id": 4
                                }
                              }
                            }
                          }
                        },
                        "ListIntentsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "intentView": {
                              "type": "IntentView",
                              "id": 5
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListIntentsResponse": {
                          "fields": {
                            "intents": {
                              "rule": "repeated",
                              "type": "Intent",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetIntentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "CreateIntentRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "intent": {
                              "type": "Intent",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "UpdateIntentRequest": {
                          "fields": {
                            "intent": {
                              "type": "Intent",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 3
                            }
                          }
                        },
                        "DeleteIntentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            }
                          }
                        },
                        "IntentView": {
                          "values": {
                            "INTENT_VIEW_UNSPECIFIED": 0,
                            "INTENT_VIEW_PARTIAL": 1,
                            "INTENT_VIEW_FULL": 2
                          }
                        },
                        "Sessions": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "DetectIntent": {
                              "requestType": "DetectIntentRequest",
                              "responseType": "DetectIntentResponse",
                              "options": {
                                "(google.api.http).post": "/v3/{session=projects/*/locations/*/agents/*/sessions/*}:detectIntent",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v3/{session=projects/*/locations/*/agents/*/environments/*/sessions/*}:detectIntent",
                                "(google.api.http).additional_bindings.body": "*"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{session=projects/*/locations/*/agents/*/sessions/*}:detectIntent",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v3/{session=projects/*/locations/*/agents/*/environments/*/sessions/*}:detectIntent",
                                      "body": "*"
                                    }
                                  }
                                }
                              ]
                            },
                            "StreamingDetectIntent": {
                              "requestType": "StreamingDetectIntentRequest",
                              "requestStream": true,
                              "responseType": "StreamingDetectIntentResponse",
                              "responseStream": true
                            },
                            "MatchIntent": {
                              "requestType": "MatchIntentRequest",
                              "responseType": "MatchIntentResponse",
                              "options": {
                                "(google.api.http).post": "/v3/{session=projects/*/locations/*/agents/*/sessions/*}:matchIntent",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v3/{session=projects/*/locations/*/agents/*/environments/*/sessions/*}:matchIntent",
                                "(google.api.http).additional_bindings.body": "*"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{session=projects/*/locations/*/agents/*/sessions/*}:matchIntent",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v3/{session=projects/*/locations/*/agents/*/environments/*/sessions/*}:matchIntent",
                                      "body": "*"
                                    }
                                  }
                                }
                              ]
                            },
                            "FulfillIntent": {
                              "requestType": "FulfillIntentRequest",
                              "responseType": "FulfillIntentResponse",
                              "options": {
                                "(google.api.http).post": "/v3/{match_intent_request.session=projects/*/locations/*/agents/*/sessions/*}:fulfillIntent",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v3/{match_intent_request.session=projects/*/locations/*/agents/*/environments/*/sessions/*}:fulfillIntent",
                                "(google.api.http).additional_bindings.body": "*"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{match_intent_request.session=projects/*/locations/*/agents/*/sessions/*}:fulfillIntent",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v3/{match_intent_request.session=projects/*/locations/*/agents/*/environments/*/sessions/*}:fulfillIntent",
                                      "body": "*"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "DetectIntentRequest": {
                          "fields": {
                            "session": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Session"
                              }
                            },
                            "queryParams": {
                              "type": "QueryParameters",
                              "id": 2
                            },
                            "queryInput": {
                              "type": "QueryInput",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "outputAudioConfig": {
                              "type": "OutputAudioConfig",
                              "id": 4
                            }
                          }
                        },
                        "DetectIntentResponse": {
                          "fields": {
                            "responseId": {
                              "type": "string",
                              "id": 1
                            },
                            "queryResult": {
                              "type": "QueryResult",
                              "id": 2
                            },
                            "outputAudio": {
                              "type": "bytes",
                              "id": 4
                            },
                            "outputAudioConfig": {
                              "type": "OutputAudioConfig",
                              "id": 5
                            },
                            "responseType": {
                              "type": "ResponseType",
                              "id": 6
                            },
                            "allowCancellation": {
                              "type": "bool",
                              "id": 7
                            }
                          },
                          "nested": {
                            "ResponseType": {
                              "values": {
                                "RESPONSE_TYPE_UNSPECIFIED": 0,
                                "PARTIAL": 1,
                                "FINAL": 2
                              }
                            }
                          }
                        },
                        "StreamingDetectIntentRequest": {
                          "fields": {
                            "session": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Session"
                              }
                            },
                            "queryParams": {
                              "type": "QueryParameters",
                              "id": 2
                            },
                            "queryInput": {
                              "type": "QueryInput",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "outputAudioConfig": {
                              "type": "OutputAudioConfig",
                              "id": 4
                            },
                            "enablePartialResponse": {
                              "type": "bool",
                              "id": 5
                            },
                            "enableDebuggingInfo": {
                              "type": "bool",
                              "id": 8
                            }
                          }
                        },
                        "CloudConversationDebuggingInfo": {
                          "fields": {
                            "audioDataChunks": {
                              "type": "int32",
                              "id": 1
                            },
                            "resultEndTimeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 2
                            },
                            "firstAudioDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 3
                            },
                            "singleUtterance": {
                              "type": "bool",
                              "id": 5
                            },
                            "speechPartialResultsEndTimes": {
                              "rule": "repeated",
                              "type": "google.protobuf.Duration",
                              "id": 6
                            },
                            "speechFinalResultsEndTimes": {
                              "rule": "repeated",
                              "type": "google.protobuf.Duration",
                              "id": 7
                            },
                            "partialResponses": {
                              "type": "int32",
                              "id": 8
                            },
                            "speakerIdPassiveLatencyMsOffset": {
                              "type": "int32",
                              "id": 9
                            },
                            "bargeinEventTriggered": {
                              "type": "bool",
                              "id": 10
                            },
                            "speechSingleUtterance": {
                              "type": "bool",
                              "id": 11
                            },
                            "dtmfPartialResultsTimes": {
                              "rule": "repeated",
                              "type": "google.protobuf.Duration",
                              "id": 12
                            },
                            "dtmfFinalResultsTimes": {
                              "rule": "repeated",
                              "type": "google.protobuf.Duration",
                              "id": 13
                            },
                            "singleUtteranceEndTimeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 14
                            },
                            "noSpeechTimeout": {
                              "type": "google.protobuf.Duration",
                              "id": 15
                            },
                            "isInputText": {
                              "type": "bool",
                              "id": 16
                            },
                            "clientHalfCloseTimeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 17
                            },
                            "clientHalfCloseStreamingTimeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 18
                            }
                          }
                        },
                        "StreamingDetectIntentResponse": {
                          "oneofs": {
                            "response": {
                              "oneof": [
                                "recognitionResult",
                                "detectIntentResponse"
                              ]
                            }
                          },
                          "fields": {
                            "recognitionResult": {
                              "type": "StreamingRecognitionResult",
                              "id": 1
                            },
                            "detectIntentResponse": {
                              "type": "DetectIntentResponse",
                              "id": 2
                            },
                            "debuggingInfo": {
                              "type": "CloudConversationDebuggingInfo",
                              "id": 4
                            }
                          }
                        },
                        "StreamingRecognitionResult": {
                          "fields": {
                            "messageType": {
                              "type": "MessageType",
                              "id": 1
                            },
                            "transcript": {
                              "type": "string",
                              "id": 2
                            },
                            "isFinal": {
                              "type": "bool",
                              "id": 3
                            },
                            "confidence": {
                              "type": "float",
                              "id": 4
                            },
                            "stability": {
                              "type": "float",
                              "id": 6
                            },
                            "speechWordInfo": {
                              "rule": "repeated",
                              "type": "SpeechWordInfo",
                              "id": 7
                            },
                            "speechEndOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 8
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 10
                            }
                          },
                          "nested": {
                            "MessageType": {
                              "values": {
                                "MESSAGE_TYPE_UNSPECIFIED": 0,
                                "TRANSCRIPT": 1,
                                "END_OF_SINGLE_UTTERANCE": 2
                              }
                            }
                          }
                        },
                        "QueryParameters": {
                          "fields": {
                            "timeZone": {
                              "type": "string",
                              "id": 1
                            },
                            "geoLocation": {
                              "type": "google.type.LatLng",
                              "id": 2
                            },
                            "sessionEntityTypes": {
                              "rule": "repeated",
                              "type": "SessionEntityType",
                              "id": 3
                            },
                            "payload": {
                              "type": "google.protobuf.Struct",
                              "id": 4
                            },
                            "parameters": {
                              "type": "google.protobuf.Struct",
                              "id": 5
                            },
                            "currentPage": {
                              "type": "string",
                              "id": 6,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "disableWebhook": {
                              "type": "bool",
                              "id": 7
                            },
                            "analyzeQueryTextSentiment": {
                              "type": "bool",
                              "id": 8
                            },
                            "webhookHeaders": {
                              "keyType": "string",
                              "type": "string",
                              "id": 10
                            },
                            "flowVersions": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 14,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "channel": {
                              "type": "string",
                              "id": 15
                            },
                            "sessionTtl": {
                              "type": "google.protobuf.Duration",
                              "id": 16,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "QueryInput": {
                          "oneofs": {
                            "input": {
                              "oneof": [
                                "text",
                                "intent",
                                "audio",
                                "event",
                                "dtmf"
                              ]
                            }
                          },
                          "fields": {
                            "text": {
                              "type": "TextInput",
                              "id": 2
                            },
                            "intent": {
                              "type": "IntentInput",
                              "id": 3
                            },
                            "audio": {
                              "type": "AudioInput",
                              "id": 5
                            },
                            "event": {
                              "type": "EventInput",
                              "id": 6
                            },
                            "dtmf": {
                              "type": "DtmfInput",
                              "id": 7
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "QueryResult": {
                          "oneofs": {
                            "query": {
                              "oneof": [
                                "text",
                                "triggerIntent",
                                "transcript",
                                "triggerEvent",
                                "dtmf"
                              ]
                            }
                          },
                          "fields": {
                            "text": {
                              "type": "string",
                              "id": 1
                            },
                            "triggerIntent": {
                              "type": "string",
                              "id": 11,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "transcript": {
                              "type": "string",
                              "id": 12
                            },
                            "triggerEvent": {
                              "type": "string",
                              "id": 14
                            },
                            "dtmf": {
                              "type": "DtmfInput",
                              "id": 23
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "parameters": {
                              "type": "google.protobuf.Struct",
                              "id": 3
                            },
                            "responseMessages": {
                              "rule": "repeated",
                              "type": "ResponseMessage",
                              "id": 4
                            },
                            "webhookStatuses": {
                              "rule": "repeated",
                              "type": "google.rpc.Status",
                              "id": 13
                            },
                            "webhookPayloads": {
                              "rule": "repeated",
                              "type": "google.protobuf.Struct",
                              "id": 6
                            },
                            "currentPage": {
                              "type": "Page",
                              "id": 7
                            },
                            "intent": {
                              "type": "Intent",
                              "id": 8,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "intentDetectionConfidence": {
                              "type": "float",
                              "id": 9,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "match": {
                              "type": "Match",
                              "id": 15
                            },
                            "diagnosticInfo": {
                              "type": "google.protobuf.Struct",
                              "id": 10
                            },
                            "sentimentAnalysisResult": {
                              "type": "SentimentAnalysisResult",
                              "id": 17
                            }
                          }
                        },
                        "TextInput": {
                          "fields": {
                            "text": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "IntentInput": {
                          "fields": {
                            "intent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            }
                          }
                        },
                        "AudioInput": {
                          "fields": {
                            "config": {
                              "type": "InputAudioConfig",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "audio": {
                              "type": "bytes",
                              "id": 2
                            }
                          }
                        },
                        "EventInput": {
                          "fields": {
                            "event": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "DtmfInput": {
                          "fields": {
                            "digits": {
                              "type": "string",
                              "id": 1
                            },
                            "finishDigit": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "Match": {
                          "fields": {
                            "intent": {
                              "type": "Intent",
                              "id": 1
                            },
                            "event": {
                              "type": "string",
                              "id": 6
                            },
                            "parameters": {
                              "type": "google.protobuf.Struct",
                              "id": 2
                            },
                            "resolvedInput": {
                              "type": "string",
                              "id": 3
                            },
                            "matchType": {
                              "type": "MatchType",
                              "id": 4
                            },
                            "confidence": {
                              "type": "float",
                              "id": 5
                            }
                          },
                          "nested": {
                            "MatchType": {
                              "values": {
                                "MATCH_TYPE_UNSPECIFIED": 0,
                                "INTENT": 1,
                                "DIRECT_INTENT": 2,
                                "PARAMETER_FILLING": 3,
                                "NO_MATCH": 4,
                                "NO_INPUT": 5,
                                "EVENT": 6
                              }
                            }
                          }
                        },
                        "MatchIntentRequest": {
                          "fields": {
                            "session": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Session"
                              }
                            },
                            "queryParams": {
                              "type": "QueryParameters",
                              "id": 2
                            },
                            "queryInput": {
                              "type": "QueryInput",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "persistParameterChanges": {
                              "type": "bool",
                              "id": 5
                            }
                          }
                        },
                        "MatchIntentResponse": {
                          "oneofs": {
                            "query": {
                              "oneof": [
                                "text",
                                "triggerIntent",
                                "transcript",
                                "triggerEvent"
                              ]
                            }
                          },
                          "fields": {
                            "text": {
                              "type": "string",
                              "id": 1
                            },
                            "triggerIntent": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "transcript": {
                              "type": "string",
                              "id": 3
                            },
                            "triggerEvent": {
                              "type": "string",
                              "id": 6
                            },
                            "matches": {
                              "rule": "repeated",
                              "type": "Match",
                              "id": 4
                            },
                            "currentPage": {
                              "type": "Page",
                              "id": 5
                            }
                          }
                        },
                        "FulfillIntentRequest": {
                          "fields": {
                            "matchIntentRequest": {
                              "type": "MatchIntentRequest",
                              "id": 1
                            },
                            "match": {
                              "type": "Match",
                              "id": 2
                            },
                            "outputAudioConfig": {
                              "type": "OutputAudioConfig",
                              "id": 3
                            }
                          }
                        },
                        "FulfillIntentResponse": {
                          "fields": {
                            "responseId": {
                              "type": "string",
                              "id": 1
                            },
                            "queryResult": {
                              "type": "QueryResult",
                              "id": 2
                            },
                            "outputAudio": {
                              "type": "bytes",
                              "id": 3
                            },
                            "outputAudioConfig": {
                              "type": "OutputAudioConfig",
                              "id": 4
                            }
                          }
                        },
                        "SentimentAnalysisResult": {
                          "fields": {
                            "score": {
                              "type": "float",
                              "id": 1
                            },
                            "magnitude": {
                              "type": "float",
                              "id": 2
                            }
                          }
                        },
                        "SessionEntityTypes": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListSessionEntityTypes": {
                              "requestType": "ListSessionEntityTypesRequest",
                              "responseType": "ListSessionEntityTypesResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*/sessions/*}/entityTypes",
                                "(google.api.http).additional_bindings.get": "/v3/{parent=projects/*/locations/*/agents/*/environments/*/sessions/*}/entityTypes",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*/sessions/*}/entityTypes",
                                    "additional_bindings": {
                                      "get": "/v3/{parent=projects/*/locations/*/agents/*/environments/*/sessions/*}/entityTypes"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetSessionEntityType": {
                              "requestType": "GetSessionEntityTypeRequest",
                              "responseType": "SessionEntityType",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}",
                                "(google.api.http).additional_bindings.get": "/v3/{name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}",
                                    "additional_bindings": {
                                      "get": "/v3/{name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateSessionEntityType": {
                              "requestType": "CreateSessionEntityTypeRequest",
                              "responseType": "SessionEntityType",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*/sessions/*}/entityTypes",
                                "(google.api.http).body": "session_entity_type",
                                "(google.api.http).additional_bindings.post": "/v3/{parent=projects/*/locations/*/agents/*/environments/*/sessions/*}/entityTypes",
                                "(google.api.http).additional_bindings.body": "session_entity_type",
                                "(google.api.method_signature)": "parent,session_entity_type"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*/sessions/*}/entityTypes",
                                    "body": "session_entity_type",
                                    "additional_bindings": {
                                      "post": "/v3/{parent=projects/*/locations/*/agents/*/environments/*/sessions/*}/entityTypes",
                                      "body": "session_entity_type"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,session_entity_type"
                                }
                              ]
                            },
                            "UpdateSessionEntityType": {
                              "requestType": "UpdateSessionEntityTypeRequest",
                              "responseType": "SessionEntityType",
                              "options": {
                                "(google.api.http).patch": "/v3/{session_entity_type.name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}",
                                "(google.api.http).body": "session_entity_type",
                                "(google.api.http).additional_bindings.patch": "/v3/{session_entity_type.name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}",
                                "(google.api.http).additional_bindings.body": "session_entity_type",
                                "(google.api.method_signature)": "session_entity_type,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{session_entity_type.name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}",
                                    "body": "session_entity_type",
                                    "additional_bindings": {
                                      "patch": "/v3/{session_entity_type.name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}",
                                      "body": "session_entity_type"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "session_entity_type,update_mask"
                                }
                              ]
                            },
                            "DeleteSessionEntityType": {
                              "requestType": "DeleteSessionEntityTypeRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3/{name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}",
                                "(google.api.http).additional_bindings.delete": "/v3/{name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3/{name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}",
                                    "additional_bindings": {
                                      "delete": "/v3/{name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "SessionEntityType": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/SessionEntityType",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/environments/{environment}/sessions/{session}/entityTypes/{entity_type}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "entityOverrideMode": {
                              "type": "EntityOverrideMode",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "entities": {
                              "rule": "repeated",
                              "type": "EntityType.Entity",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "EntityOverrideMode": {
                              "values": {
                                "ENTITY_OVERRIDE_MODE_UNSPECIFIED": 0,
                                "ENTITY_OVERRIDE_MODE_OVERRIDE": 1,
                                "ENTITY_OVERRIDE_MODE_SUPPLEMENT": 2
                              }
                            }
                          }
                        },
                        "ListSessionEntityTypesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/SessionEntityType"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListSessionEntityTypesResponse": {
                          "fields": {
                            "sessionEntityTypes": {
                              "rule": "repeated",
                              "type": "SessionEntityType",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetSessionEntityTypeRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/SessionEntityType"
                              }
                            }
                          }
                        },
                        "CreateSessionEntityTypeRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/SessionEntityType"
                              }
                            },
                            "sessionEntityType": {
                              "type": "SessionEntityType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateSessionEntityTypeRequest": {
                          "fields": {
                            "sessionEntityType": {
                              "type": "SessionEntityType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            }
                          }
                        },
                        "DeleteSessionEntityTypeRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/SessionEntityType"
                              }
                            }
                          }
                        },
                        "TransitionRouteGroups": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListTransitionRouteGroups": {
                              "requestType": "ListTransitionRouteGroupsRequest",
                              "responseType": "ListTransitionRouteGroupsResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*/flows/*}/transitionRouteGroups",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*/flows/*}/transitionRouteGroups"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetTransitionRouteGroup": {
                              "requestType": "GetTransitionRouteGroupRequest",
                              "responseType": "TransitionRouteGroup",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/flows/*/transitionRouteGroups/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/flows/*/transitionRouteGroups/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateTransitionRouteGroup": {
                              "requestType": "CreateTransitionRouteGroupRequest",
                              "responseType": "TransitionRouteGroup",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*/flows/*}/transitionRouteGroups",
                                "(google.api.http).body": "transition_route_group",
                                "(google.api.method_signature)": "parent,transition_route_group"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*/flows/*}/transitionRouteGroups",
                                    "body": "transition_route_group"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,transition_route_group"
                                }
                              ]
                            },
                            "UpdateTransitionRouteGroup": {
                              "requestType": "UpdateTransitionRouteGroupRequest",
                              "responseType": "TransitionRouteGroup",
                              "options": {
                                "(google.api.http).patch": "/v3/{transition_route_group.name=projects/*/locations/*/agents/*/flows/*/transitionRouteGroups/*}",
                                "(google.api.http).body": "transition_route_group",
                                "(google.api.method_signature)": "transition_route_group,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{transition_route_group.name=projects/*/locations/*/agents/*/flows/*/transitionRouteGroups/*}",
                                    "body": "transition_route_group"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "transition_route_group,update_mask"
                                }
                              ]
                            },
                            "DeleteTransitionRouteGroup": {
                              "requestType": "DeleteTransitionRouteGroupRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3/{name=projects/*/locations/*/agents/*/flows/*/transitionRouteGroups/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3/{name=projects/*/locations/*/agents/*/flows/*/transitionRouteGroups/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "TransitionRouteGroup": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/TransitionRouteGroup",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/flows/{flow}/transitionRouteGroups/{transition_route_group}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "transitionRoutes": {
                              "rule": "repeated",
                              "type": "TransitionRoute",
                              "id": 5
                            }
                          }
                        },
                        "ListTransitionRouteGroupsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TransitionRouteGroup"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListTransitionRouteGroupsResponse": {
                          "fields": {
                            "transitionRouteGroups": {
                              "rule": "repeated",
                              "type": "TransitionRouteGroup",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetTransitionRouteGroupRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TransitionRouteGroup"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "CreateTransitionRouteGroupRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TransitionRouteGroup"
                              }
                            },
                            "transitionRouteGroup": {
                              "type": "TransitionRouteGroup",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "UpdateTransitionRouteGroupRequest": {
                          "fields": {
                            "transitionRouteGroup": {
                              "type": "TransitionRouteGroup",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "DeleteTransitionRouteGroupRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TransitionRouteGroup"
                              }
                            },
                            "force": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "Webhooks": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListWebhooks": {
                              "requestType": "ListWebhooksRequest",
                              "responseType": "ListWebhooksResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*}/webhooks",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*}/webhooks"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetWebhook": {
                              "requestType": "GetWebhookRequest",
                              "responseType": "Webhook",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/webhooks/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/webhooks/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateWebhook": {
                              "requestType": "CreateWebhookRequest",
                              "responseType": "Webhook",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*}/webhooks",
                                "(google.api.http).body": "webhook",
                                "(google.api.method_signature)": "parent,webhook"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*}/webhooks",
                                    "body": "webhook"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,webhook"
                                }
                              ]
                            },
                            "UpdateWebhook": {
                              "requestType": "UpdateWebhookRequest",
                              "responseType": "Webhook",
                              "options": {
                                "(google.api.http).patch": "/v3/{webhook.name=projects/*/locations/*/agents/*/webhooks/*}",
                                "(google.api.http).body": "webhook",
                                "(google.api.method_signature)": "webhook,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{webhook.name=projects/*/locations/*/agents/*/webhooks/*}",
                                    "body": "webhook"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "webhook,update_mask"
                                }
                              ]
                            },
                            "DeleteWebhook": {
                              "requestType": "DeleteWebhookRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3/{name=projects/*/locations/*/agents/*/webhooks/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3/{name=projects/*/locations/*/agents/*/webhooks/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "Webhook": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Webhook",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/webhooks/{webhook}"
                          },
                          "oneofs": {
                            "webhook": {
                              "oneof": [
                                "genericWebService",
                                "serviceDirectory"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "genericWebService": {
                              "type": "GenericWebService",
                              "id": 4
                            },
                            "serviceDirectory": {
                              "type": "ServiceDirectoryConfig",
                              "id": 7
                            },
                            "timeout": {
                              "type": "google.protobuf.Duration",
                              "id": 6
                            },
                            "disabled": {
                              "type": "bool",
                              "id": 5
                            }
                          },
                          "nested": {
                            "GenericWebService": {
                              "fields": {
                                "uri": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "username": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "deprecated": true
                                  }
                                },
                                "password": {
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "deprecated": true
                                  }
                                },
                                "requestHeaders": {
                                  "keyType": "string",
                                  "type": "string",
                                  "id": 4
                                },
                                "allowedCaCerts": {
                                  "rule": "repeated",
                                  "type": "bytes",
                                  "id": 5,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "webhookType": {
                                  "type": "WebhookType",
                                  "id": 6,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "httpMethod": {
                                  "type": "HttpMethod",
                                  "id": 7,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "requestBody": {
                                  "type": "string",
                                  "id": 8,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "parameterMapping": {
                                  "keyType": "string",
                                  "type": "string",
                                  "id": 9,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              },
                              "nested": {
                                "WebhookType": {
                                  "values": {
                                    "WEBHOOK_TYPE_UNSPECIFIED": 0,
                                    "STANDARD": 1,
                                    "FLEXIBLE": 2
                                  }
                                },
                                "HttpMethod": {
                                  "values": {
                                    "HTTP_METHOD_UNSPECIFIED": 0,
                                    "POST": 1,
                                    "GET": 2,
                                    "HEAD": 3,
                                    "PUT": 4,
                                    "DELETE": 5,
                                    "PATCH": 6,
                                    "OPTIONS": 7
                                  }
                                }
                              }
                            },
                            "ServiceDirectoryConfig": {
                              "fields": {
                                "service": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED",
                                    "(google.api.resource_reference).type": "servicedirectory.googleapis.com/Service"
                                  }
                                },
                                "genericWebService": {
                                  "type": "GenericWebService",
                                  "id": 2
                                }
                              }
                            }
                          }
                        },
                        "ListWebhooksRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Webhook"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListWebhooksResponse": {
                          "fields": {
                            "webhooks": {
                              "rule": "repeated",
                              "type": "Webhook",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetWebhookRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Webhook"
                              }
                            }
                          }
                        },
                        "CreateWebhookRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Webhook"
                              }
                            },
                            "webhook": {
                              "type": "Webhook",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateWebhookRequest": {
                          "fields": {
                            "webhook": {
                              "type": "Webhook",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            }
                          }
                        },
                        "DeleteWebhookRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Webhook"
                              }
                            },
                            "force": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "WebhookRequest": {
                          "oneofs": {
                            "query": {
                              "oneof": [
                                "text",
                                "triggerIntent",
                                "transcript",
                                "triggerEvent",
                                "dtmfDigits"
                              ]
                            }
                          },
                          "fields": {
                            "detectIntentResponseId": {
                              "type": "string",
                              "id": 1
                            },
                            "text": {
                              "type": "string",
                              "id": 10
                            },
                            "triggerIntent": {
                              "type": "string",
                              "id": 11,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "transcript": {
                              "type": "string",
                              "id": 12
                            },
                            "triggerEvent": {
                              "type": "string",
                              "id": 14
                            },
                            "dtmfDigits": {
                              "type": "string",
                              "id": 17
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 15
                            },
                            "fulfillmentInfo": {
                              "type": "FulfillmentInfo",
                              "id": 6
                            },
                            "intentInfo": {
                              "type": "IntentInfo",
                              "id": 3
                            },
                            "pageInfo": {
                              "type": "PageInfo",
                              "id": 4
                            },
                            "sessionInfo": {
                              "type": "SessionInfo",
                              "id": 5
                            },
                            "messages": {
                              "rule": "repeated",
                              "type": "ResponseMessage",
                              "id": 7
                            },
                            "payload": {
                              "type": "google.protobuf.Struct",
                              "id": 8
                            },
                            "sentimentAnalysisResult": {
                              "type": "SentimentAnalysisResult",
                              "id": 9
                            }
                          },
                          "nested": {
                            "FulfillmentInfo": {
                              "fields": {
                                "tag": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            },
                            "IntentInfo": {
                              "fields": {
                                "lastMatchedIntent": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                                  }
                                },
                                "displayName": {
                                  "type": "string",
                                  "id": 3
                                },
                                "parameters": {
                                  "keyType": "string",
                                  "type": "IntentParameterValue",
                                  "id": 2
                                },
                                "confidence": {
                                  "type": "float",
                                  "id": 4
                                }
                              },
                              "nested": {
                                "IntentParameterValue": {
                                  "fields": {
                                    "originalValue": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "resolvedValue": {
                                      "type": "google.protobuf.Value",
                                      "id": 2
                                    }
                                  }
                                }
                              }
                            },
                            "SentimentAnalysisResult": {
                              "fields": {
                                "score": {
                                  "type": "float",
                                  "id": 1
                                },
                                "magnitude": {
                                  "type": "float",
                                  "id": 2
                                }
                              }
                            }
                          }
                        },
                        "WebhookResponse": {
                          "oneofs": {
                            "transition": {
                              "oneof": [
                                "targetPage",
                                "targetFlow"
                              ]
                            }
                          },
                          "fields": {
                            "fulfillmentResponse": {
                              "type": "FulfillmentResponse",
                              "id": 1
                            },
                            "pageInfo": {
                              "type": "PageInfo",
                              "id": 2
                            },
                            "sessionInfo": {
                              "type": "SessionInfo",
                              "id": 3
                            },
                            "payload": {
                              "type": "google.protobuf.Struct",
                              "id": 4
                            },
                            "targetPage": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "targetFlow": {
                              "type": "string",
                              "id": 6,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            }
                          },
                          "nested": {
                            "FulfillmentResponse": {
                              "fields": {
                                "messages": {
                                  "rule": "repeated",
                                  "type": "ResponseMessage",
                                  "id": 1
                                },
                                "mergeBehavior": {
                                  "type": "MergeBehavior",
                                  "id": 2
                                }
                              },
                              "nested": {
                                "MergeBehavior": {
                                  "values": {
                                    "MERGE_BEHAVIOR_UNSPECIFIED": 0,
                                    "APPEND": 1,
                                    "REPLACE": 2
                                  }
                                }
                              }
                            }
                          }
                        },
                        "PageInfo": {
                          "fields": {
                            "currentPage": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "displayName": {
                              "type": "string",
                              "id": 4
                            },
                            "formInfo": {
                              "type": "FormInfo",
                              "id": 3
                            }
                          },
                          "nested": {
                            "FormInfo": {
                              "fields": {
                                "parameterInfo": {
                                  "rule": "repeated",
                                  "type": "ParameterInfo",
                                  "id": 2
                                }
                              },
                              "nested": {
                                "ParameterInfo": {
                                  "fields": {
                                    "displayName": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "required": {
                                      "type": "bool",
                                      "id": 2
                                    },
                                    "state": {
                                      "type": "ParameterState",
                                      "id": 3
                                    },
                                    "value": {
                                      "type": "google.protobuf.Value",
                                      "id": 4
                                    },
                                    "justCollected": {
                                      "type": "bool",
                                      "id": 5
                                    }
                                  },
                                  "nested": {
                                    "ParameterState": {
                                      "values": {
                                        "PARAMETER_STATE_UNSPECIFIED": 0,
                                        "EMPTY": 1,
                                        "INVALID": 2,
                                        "FILLED": 3
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "SessionInfo": {
                          "fields": {
                            "session": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Session"
                              }
                            },
                            "parameters": {
                              "keyType": "string",
                              "type": "google.protobuf.Value",
                              "id": 2
                            }
                          }
                        },
                        "Experiments": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListExperiments": {
                              "requestType": "ListExperimentsRequest",
                              "responseType": "ListExperimentsResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*/environments/*}/experiments",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*/environments/*}/experiments"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetExperiment": {
                              "requestType": "GetExperimentRequest",
                              "responseType": "Experiment",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateExperiment": {
                              "requestType": "CreateExperimentRequest",
                              "responseType": "Experiment",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*/environments/*}/experiments",
                                "(google.api.http).body": "experiment",
                                "(google.api.method_signature)": "parent,experiment"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*/environments/*}/experiments",
                                    "body": "experiment"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,experiment"
                                }
                              ]
                            },
                            "UpdateExperiment": {
                              "requestType": "UpdateExperimentRequest",
                              "responseType": "Experiment",
                              "options": {
                                "(google.api.http).patch": "/v3/{experiment.name=projects/*/locations/*/agents/*/environments/*/experiments/*}",
                                "(google.api.http).body": "experiment",
                                "(google.api.method_signature)": "experiment,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{experiment.name=projects/*/locations/*/agents/*/environments/*/experiments/*}",
                                    "body": "experiment"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "experiment,update_mask"
                                }
                              ]
                            },
                            "DeleteExperiment": {
                              "requestType": "DeleteExperimentRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "StartExperiment": {
                              "requestType": "StartExperimentRequest",
                              "responseType": "Experiment",
                              "options": {
                                "(google.api.http).post": "/v3/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}:start",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}:start",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "StopExperiment": {
                              "requestType": "StopExperimentRequest",
                              "responseType": "Experiment",
                              "options": {
                                "(google.api.http).post": "/v3/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}:stop",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}:stop",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "Experiment": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Experiment",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/environments/{environment}/experiments/{experiment}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 3
                            },
                            "state": {
                              "type": "State",
                              "id": 4
                            },
                            "definition": {
                              "type": "Definition",
                              "id": 5
                            },
                            "rolloutConfig": {
                              "type": "RolloutConfig",
                              "id": 14
                            },
                            "rolloutState": {
                              "type": "RolloutState",
                              "id": 15
                            },
                            "rolloutFailureReason": {
                              "type": "string",
                              "id": 16
                            },
                            "result": {
                              "type": "Result",
                              "id": 6
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 7
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 8
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 9
                            },
                            "lastUpdateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 10
                            },
                            "experimentLength": {
                              "type": "google.protobuf.Duration",
                              "id": 11
                            },
                            "variantsHistory": {
                              "rule": "repeated",
                              "type": "VariantsHistory",
                              "id": 12
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "DRAFT": 1,
                                "RUNNING": 2,
                                "DONE": 3,
                                "ROLLOUT_FAILED": 4
                              }
                            },
                            "Definition": {
                              "oneofs": {
                                "variants": {
                                  "oneof": [
                                    "versionVariants"
                                  ]
                                }
                              },
                              "fields": {
                                "condition": {
                                  "type": "string",
                                  "id": 1
                                },
                                "versionVariants": {
                                  "type": "VersionVariants",
                                  "id": 2
                                }
                              }
                            },
                            "Result": {
                              "fields": {
                                "versionMetrics": {
                                  "rule": "repeated",
                                  "type": "VersionMetrics",
                                  "id": 1
                                },
                                "lastUpdateTime": {
                                  "type": "google.protobuf.Timestamp",
                                  "id": 2
                                }
                              },
                              "nested": {
                                "MetricType": {
                                  "values": {
                                    "METRIC_UNSPECIFIED": 0,
                                    "CONTAINED_SESSION_NO_CALLBACK_RATE": 1,
                                    "LIVE_AGENT_HANDOFF_RATE": 2,
                                    "CALLBACK_SESSION_RATE": 3,
                                    "ABANDONED_SESSION_RATE": 4,
                                    "SESSION_END_RATE": 5
                                  }
                                },
                                "CountType": {
                                  "values": {
                                    "COUNT_TYPE_UNSPECIFIED": 0,
                                    "TOTAL_NO_MATCH_COUNT": 1,
                                    "TOTAL_TURN_COUNT": 2,
                                    "AVERAGE_TURN_COUNT": 3
                                  }
                                },
                                "ConfidenceInterval": {
                                  "fields": {
                                    "confidenceLevel": {
                                      "type": "double",
                                      "id": 1
                                    },
                                    "ratio": {
                                      "type": "double",
                                      "id": 2
                                    },
                                    "lowerBound": {
                                      "type": "double",
                                      "id": 3
                                    },
                                    "upperBound": {
                                      "type": "double",
                                      "id": 4
                                    }
                                  }
                                },
                                "Metric": {
                                  "oneofs": {
                                    "value": {
                                      "oneof": [
                                        "ratio",
                                        "count"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "type": {
                                      "type": "MetricType",
                                      "id": 1
                                    },
                                    "countType": {
                                      "type": "CountType",
                                      "id": 5
                                    },
                                    "ratio": {
                                      "type": "double",
                                      "id": 2
                                    },
                                    "count": {
                                      "type": "double",
                                      "id": 4
                                    },
                                    "confidenceInterval": {
                                      "type": "ConfidenceInterval",
                                      "id": 3
                                    }
                                  }
                                },
                                "VersionMetrics": {
                                  "fields": {
                                    "version": {
                                      "type": "string",
                                      "id": 1,
                                      "options": {
                                        "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                                      }
                                    },
                                    "metrics": {
                                      "rule": "repeated",
                                      "type": "Metric",
                                      "id": 2
                                    },
                                    "sessionCount": {
                                      "type": "int32",
                                      "id": 3
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "VersionVariants": {
                          "fields": {
                            "variants": {
                              "rule": "repeated",
                              "type": "Variant",
                              "id": 1
                            }
                          },
                          "nested": {
                            "Variant": {
                              "fields": {
                                "version": {
                                  "type": "string",
                                  "id": 1
                                },
                                "trafficAllocation": {
                                  "type": "float",
                                  "id": 2
                                },
                                "isControlGroup": {
                                  "type": "bool",
                                  "id": 3
                                }
                              }
                            }
                          }
                        },
                        "VariantsHistory": {
                          "oneofs": {
                            "variants": {
                              "oneof": [
                                "versionVariants"
                              ]
                            }
                          },
                          "fields": {
                            "versionVariants": {
                              "type": "VersionVariants",
                              "id": 1
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            }
                          }
                        },
                        "RolloutConfig": {
                          "fields": {
                            "rolloutSteps": {
                              "rule": "repeated",
                              "type": "RolloutStep",
                              "id": 1
                            },
                            "rolloutCondition": {
                              "type": "string",
                              "id": 2
                            },
                            "failureCondition": {
                              "type": "string",
                              "id": 3
                            }
                          },
                          "nested": {
                            "RolloutStep": {
                              "fields": {
                                "displayName": {
                                  "type": "string",
                                  "id": 1
                                },
                                "trafficPercent": {
                                  "type": "int32",
                                  "id": 2
                                },
                                "minDuration": {
                                  "type": "google.protobuf.Duration",
                                  "id": 3
                                }
                              }
                            }
                          }
                        },
                        "RolloutState": {
                          "fields": {
                            "step": {
                              "type": "string",
                              "id": 1
                            },
                            "stepIndex": {
                              "type": "int32",
                              "id": 3
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            }
                          }
                        },
                        "ListExperimentsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Experiment"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListExperimentsResponse": {
                          "fields": {
                            "experiments": {
                              "rule": "repeated",
                              "type": "Experiment",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetExperimentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Experiment"
                              }
                            }
                          }
                        },
                        "CreateExperimentRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Experiment"
                              }
                            },
                            "experiment": {
                              "type": "Experiment",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateExperimentRequest": {
                          "fields": {
                            "experiment": {
                              "type": "Experiment",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteExperimentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Experiment"
                              }
                            }
                          }
                        },
                        "StartExperimentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Experiment"
                              }
                            }
                          }
                        },
                        "StopExperimentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Experiment"
                              }
                            }
                          }
                        },
                        "SecuritySettingsService": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "CreateSecuritySettings": {
                              "requestType": "CreateSecuritySettingsRequest",
                              "responseType": "SecuritySettings",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*}/securitySettings",
                                "(google.api.http).body": "security_settings",
                                "(google.api.method_signature)": "parent,security_settings"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*}/securitySettings",
                                    "body": "security_settings"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,security_settings"
                                }
                              ]
                            },
                            "GetSecuritySettings": {
                              "requestType": "GetSecuritySettingsRequest",
                              "responseType": "SecuritySettings",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/securitySettings/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/securitySettings/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "UpdateSecuritySettings": {
                              "requestType": "UpdateSecuritySettingsRequest",
                              "responseType": "SecuritySettings",
                              "options": {
                                "(google.api.http).patch": "/v3/{security_settings.name=projects/*/locations/*/securitySettings/*}",
                                "(google.api.http).body": "security_settings",
                                "(google.api.method_signature)": "security_settings,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{security_settings.name=projects/*/locations/*/securitySettings/*}",
                                    "body": "security_settings"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "security_settings,update_mask"
                                }
                              ]
                            },
                            "ListSecuritySettings": {
                              "requestType": "ListSecuritySettingsRequest",
                              "responseType": "ListSecuritySettingsResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*}/securitySettings",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*}/securitySettings"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "DeleteSecuritySettings": {
                              "requestType": "DeleteSecuritySettingsRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3/{name=projects/*/locations/*/securitySettings/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3/{name=projects/*/locations/*/securitySettings/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "GetSecuritySettingsRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/SecuritySettings"
                              }
                            }
                          }
                        },
                        "UpdateSecuritySettingsRequest": {
                          "fields": {
                            "securitySettings": {
                              "type": "SecuritySettings",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "ListSecuritySettingsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/SecuritySettings"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListSecuritySettingsResponse": {
                          "fields": {
                            "securitySettings": {
                              "rule": "repeated",
                              "type": "SecuritySettings",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "CreateSecuritySettingsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/SecuritySettings"
                              }
                            },
                            "securitySettings": {
                              "type": "SecuritySettings",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteSecuritySettingsRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/SecuritySettings"
                              }
                            }
                          }
                        },
                        "SecuritySettings": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/SecuritySettings",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/securitySettings/{security_settings}"
                          },
                          "oneofs": {
                            "dataRetention": {
                              "oneof": [
                                "retentionWindowDays"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "redactionStrategy": {
                              "type": "RedactionStrategy",
                              "id": 3
                            },
                            "redactionScope": {
                              "type": "RedactionScope",
                              "id": 4
                            },
                            "inspectTemplate": {
                              "type": "string",
                              "id": 9,
                              "options": {
                                "(google.api.resource_reference).type": "dlp.googleapis.com/InspectTemplate"
                              }
                            },
                            "deidentifyTemplate": {
                              "type": "string",
                              "id": 17,
                              "options": {
                                "(google.api.resource_reference).type": "dlp.googleapis.com/DeidentifyTemplate"
                              }
                            },
                            "retentionWindowDays": {
                              "type": "int32",
                              "id": 6
                            },
                            "purgeDataTypes": {
                              "rule": "repeated",
                              "type": "PurgeDataType",
                              "id": 8
                            },
                            "audioExportSettings": {
                              "type": "AudioExportSettings",
                              "id": 12
                            },
                            "insightsExportSettings": {
                              "type": "InsightsExportSettings",
                              "id": 13
                            }
                          },
                          "nested": {
                            "RedactionStrategy": {
                              "values": {
                                "REDACTION_STRATEGY_UNSPECIFIED": 0,
                                "REDACT_WITH_SERVICE": 1
                              }
                            },
                            "RedactionScope": {
                              "values": {
                                "REDACTION_SCOPE_UNSPECIFIED": 0,
                                "REDACT_DISK_STORAGE": 2
                              }
                            },
                            "PurgeDataType": {
                              "values": {
                                "PURGE_DATA_TYPE_UNSPECIFIED": 0,
                                "DIALOGFLOW_HISTORY": 1
                              }
                            },
                            "AudioExportSettings": {
                              "fields": {
                                "gcsBucket": {
                                  "type": "string",
                                  "id": 1
                                },
                                "audioExportPattern": {
                                  "type": "string",
                                  "id": 2
                                },
                                "enableAudioRedaction": {
                                  "type": "bool",
                                  "id": 3
                                },
                                "audioFormat": {
                                  "type": "AudioFormat",
                                  "id": 4
                                }
                              },
                              "nested": {
                                "AudioFormat": {
                                  "values": {
                                    "AUDIO_FORMAT_UNSPECIFIED": 0,
                                    "MULAW": 1,
                                    "MP3": 2,
                                    "OGG": 3
                                  }
                                }
                              }
                            },
                            "InsightsExportSettings": {
                              "fields": {
                                "enableInsightsExport": {
                                  "type": "bool",
                                  "id": 1
                                }
                              }
                            }
                          }
                        },
                        "Versions": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListVersions": {
                              "requestType": "ListVersionsRequest",
                              "responseType": "ListVersionsResponse",
                              "options": {
                                "(google.api.http).get": "/v3/{parent=projects/*/locations/*/agents/*/flows/*}/versions",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{parent=projects/*/locations/*/agents/*/flows/*}/versions"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetVersion": {
                              "requestType": "GetVersionRequest",
                              "responseType": "Version",
                              "options": {
                                "(google.api.http).get": "/v3/{name=projects/*/locations/*/agents/*/flows/*/versions/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3/{name=projects/*/locations/*/agents/*/flows/*/versions/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateVersion": {
                              "requestType": "CreateVersionRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{parent=projects/*/locations/*/agents/*/flows/*}/versions",
                                "(google.api.http).body": "version",
                                "(google.api.method_signature)": "parent,version",
                                "(google.longrunning.operation_info).response_type": "Version",
                                "(google.longrunning.operation_info).metadata_type": "CreateVersionOperationMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{parent=projects/*/locations/*/agents/*/flows/*}/versions",
                                    "body": "version"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,version"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "Version",
                                    "metadata_type": "CreateVersionOperationMetadata"
                                  }
                                }
                              ]
                            },
                            "UpdateVersion": {
                              "requestType": "UpdateVersionRequest",
                              "responseType": "Version",
                              "options": {
                                "(google.api.http).patch": "/v3/{version.name=projects/*/locations/*/agents/*/flows/*/versions/*}",
                                "(google.api.http).body": "version",
                                "(google.api.method_signature)": "version,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3/{version.name=projects/*/locations/*/agents/*/flows/*/versions/*}",
                                    "body": "version"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "version,update_mask"
                                }
                              ]
                            },
                            "DeleteVersion": {
                              "requestType": "DeleteVersionRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3/{name=projects/*/locations/*/agents/*/flows/*/versions/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3/{name=projects/*/locations/*/agents/*/flows/*/versions/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "LoadVersion": {
                              "requestType": "LoadVersionRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3/{name=projects/*/locations/*/agents/*/flows/*/versions/*}:load",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "name",
                                "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{name=projects/*/locations/*/agents/*/flows/*/versions/*}:load",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.protobuf.Empty",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "CompareVersions": {
                              "requestType": "CompareVersionsRequest",
                              "responseType": "CompareVersionsResponse",
                              "options": {
                                "(google.api.http).post": "/v3/{base_version=projects/*/locations/*/agents/*/flows/*/versions/*}:compareVersions",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "base_version"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3/{base_version=projects/*/locations/*/agents/*/flows/*/versions/*}:compareVersions",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "base_version"
                                }
                              ]
                            }
                          }
                        },
                        "CreateVersionOperationMetadata": {
                          "fields": {
                            "version": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            }
                          }
                        },
                        "Version": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Version",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/flows/{flow}/versions/{version}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 3
                            },
                            "nluSettings": {
                              "type": "NluSettings",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "RUNNING": 1,
                                "SUCCEEDED": 2,
                                "FAILED": 3
                              }
                            }
                          }
                        },
                        "ListVersionsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListVersionsResponse": {
                          "fields": {
                            "versions": {
                              "rule": "repeated",
                              "type": "Version",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetVersionRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            }
                          }
                        },
                        "CreateVersionRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "version": {
                              "type": "Version",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateVersionRequest": {
                          "fields": {
                            "version": {
                              "type": "Version",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteVersionRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            }
                          }
                        },
                        "LoadVersionRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "allowOverrideAgentResources": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "CompareVersionsRequest": {
                          "fields": {
                            "baseVersion": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "targetVersion": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "CompareVersionsResponse": {
                          "fields": {
                            "baseVersionContentJson": {
                              "type": "string",
                              "id": 1
                            },
                            "targetVersionContentJson": {
                              "type": "string",
                              "id": 2
                            },
                            "compareTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        }
                      }
                    },
                    "v3beta1": {
                      "options": {
                        "cc_enable_arenas": true,
                        "csharp_namespace": "Google.Cloud.Dialogflow.Cx.V3Beta1",
                        "go_package": "cloud.google.com/go/dialogflow/cx/apiv3beta1/cxpb;cxpb",
                        "java_multiple_files": true,
                        "java_outer_classname": "VersionProto",
                        "java_package": "com.google.cloud.dialogflow.cx.v3beta1",
                        "objc_class_prefix": "DF",
                        "ruby_package": "Google::Cloud::Dialogflow::CX::V3beta1",
                        "(google.api.resource_definition).type": "dlp.googleapis.com/DeidentifyTemplate",
                        "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/deidentifyTemplates/{deidentify_template}"
                      },
                      "nested": {
                        "AdvancedSettings": {
                          "fields": {
                            "audioExportGcsDestination": {
                              "type": "GcsDestination",
                              "id": 2
                            },
                            "loggingSettings": {
                              "type": "LoggingSettings",
                              "id": 6
                            }
                          },
                          "nested": {
                            "LoggingSettings": {
                              "fields": {
                                "enableStackdriverLogging": {
                                  "type": "bool",
                                  "id": 2
                                },
                                "enableInteractionLogging": {
                                  "type": "bool",
                                  "id": 3
                                }
                              }
                            }
                          }
                        },
                        "GcsDestination": {
                          "fields": {
                            "uri": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "Agents": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListAgents": {
                              "requestType": "ListAgentsRequest",
                              "responseType": "ListAgentsResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*}/agents",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*}/agents"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetAgent": {
                              "requestType": "GetAgentRequest",
                              "responseType": "Agent",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateAgent": {
                              "requestType": "CreateAgentRequest",
                              "responseType": "Agent",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*}/agents",
                                "(google.api.http).body": "agent",
                                "(google.api.method_signature)": "parent,agent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*}/agents",
                                    "body": "agent"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,agent"
                                }
                              ]
                            },
                            "UpdateAgent": {
                              "requestType": "UpdateAgentRequest",
                              "responseType": "Agent",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{agent.name=projects/*/locations/*/agents/*}",
                                "(google.api.http).body": "agent",
                                "(google.api.method_signature)": "agent,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{agent.name=projects/*/locations/*/agents/*}",
                                    "body": "agent"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "agent,update_mask"
                                }
                              ]
                            },
                            "DeleteAgent": {
                              "requestType": "DeleteAgentRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3beta1/{name=projects/*/locations/*/agents/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3beta1/{name=projects/*/locations/*/agents/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ExportAgent": {
                              "requestType": "ExportAgentRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{name=projects/*/locations/*/agents/*}:export",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "ExportAgentResponse",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{name=projects/*/locations/*/agents/*}:export",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "ExportAgentResponse",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "RestoreAgent": {
                              "requestType": "RestoreAgentRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{name=projects/*/locations/*/agents/*}:restore",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{name=projects/*/locations/*/agents/*}:restore",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.protobuf.Empty",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "ValidateAgent": {
                              "requestType": "ValidateAgentRequest",
                              "responseType": "AgentValidationResult",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{name=projects/*/locations/*/agents/*}:validate",
                                "(google.api.http).body": "*"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{name=projects/*/locations/*/agents/*}:validate",
                                    "body": "*"
                                  }
                                }
                              ]
                            },
                            "GetAgentValidationResult": {
                              "requestType": "GetAgentValidationResultRequest",
                              "responseType": "AgentValidationResult",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/validationResult}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/validationResult}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "SpeechToTextSettings": {
                          "fields": {
                            "enableSpeechAdaptation": {
                              "type": "bool",
                              "id": 1
                            }
                          }
                        },
                        "Agent": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Agent",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "defaultLanguageCode": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE"
                              }
                            },
                            "supportedLanguageCodes": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4
                            },
                            "timeZone": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 6
                            },
                            "avatarUri": {
                              "type": "string",
                              "id": 7
                            },
                            "speechToTextSettings": {
                              "type": "SpeechToTextSettings",
                              "id": 13
                            },
                            "startFlow": {
                              "type": "string",
                              "id": 16,
                              "options": {
                                "(google.api.field_behavior)": "IMMUTABLE",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "securitySettings": {
                              "type": "string",
                              "id": 17,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/SecuritySettings"
                              }
                            },
                            "enableStackdriverLogging": {
                              "type": "bool",
                              "id": 18,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "enableSpellCorrection": {
                              "type": "bool",
                              "id": 20
                            },
                            "locked": {
                              "type": "bool",
                              "id": 27
                            },
                            "advancedSettings": {
                              "type": "AdvancedSettings",
                              "id": 22
                            },
                            "gitIntegrationSettings": {
                              "type": "GitIntegrationSettings",
                              "id": 30
                            },
                            "textToSpeechSettings": {
                              "type": "TextToSpeechSettings",
                              "id": 31
                            }
                          },
                          "nested": {
                            "GitIntegrationSettings": {
                              "oneofs": {
                                "gitSettings": {
                                  "oneof": [
                                    "githubSettings"
                                  ]
                                }
                              },
                              "fields": {
                                "githubSettings": {
                                  "type": "GithubSettings",
                                  "id": 1
                                }
                              },
                              "nested": {
                                "GithubSettings": {
                                  "fields": {
                                    "displayName": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "repositoryUri": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "trackingBranch": {
                                      "type": "string",
                                      "id": 3
                                    },
                                    "accessToken": {
                                      "type": "string",
                                      "id": 4
                                    },
                                    "branches": {
                                      "rule": "repeated",
                                      "type": "string",
                                      "id": 5
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "ListAgentsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListAgentsResponse": {
                          "fields": {
                            "agents": {
                              "rule": "repeated",
                              "type": "Agent",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetAgentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            }
                          }
                        },
                        "CreateAgentRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "agent": {
                              "type": "Agent",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateAgentRequest": {
                          "fields": {
                            "agent": {
                              "type": "Agent",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            }
                          }
                        },
                        "DeleteAgentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            }
                          }
                        },
                        "ExportAgentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "agentUri": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "dataFormat": {
                              "type": "DataFormat",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "environment": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "gitDestination": {
                              "type": "GitDestination",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "includeBigqueryExportSettings": {
                              "type": "bool",
                              "id": 7,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          },
                          "nested": {
                            "DataFormat": {
                              "values": {
                                "DATA_FORMAT_UNSPECIFIED": 0,
                                "BLOB": 1,
                                "JSON_PACKAGE": 4
                              }
                            },
                            "GitDestination": {
                              "fields": {
                                "trackingBranch": {
                                  "type": "string",
                                  "id": 1
                                },
                                "commitMessage": {
                                  "type": "string",
                                  "id": 2
                                }
                              }
                            }
                          }
                        },
                        "ExportAgentResponse": {
                          "oneofs": {
                            "agent": {
                              "oneof": [
                                "agentUri",
                                "agentContent",
                                "commitSha"
                              ]
                            }
                          },
                          "fields": {
                            "agentUri": {
                              "type": "string",
                              "id": 1
                            },
                            "agentContent": {
                              "type": "bytes",
                              "id": 2
                            },
                            "commitSha": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "RestoreAgentRequest": {
                          "oneofs": {
                            "agent": {
                              "oneof": [
                                "agentUri",
                                "agentContent",
                                "gitSource"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "agentUri": {
                              "type": "string",
                              "id": 2
                            },
                            "agentContent": {
                              "type": "bytes",
                              "id": 3
                            },
                            "gitSource": {
                              "type": "GitSource",
                              "id": 6
                            },
                            "restoreOption": {
                              "type": "RestoreOption",
                              "id": 5
                            }
                          },
                          "nested": {
                            "GitSource": {
                              "fields": {
                                "trackingBranch": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            },
                            "RestoreOption": {
                              "values": {
                                "RESTORE_OPTION_UNSPECIFIED": 0,
                                "KEEP": 1,
                                "FALLBACK": 2
                              }
                            }
                          }
                        },
                        "ValidateAgentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetAgentValidationResultRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/AgentValidationResult"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "AgentValidationResult": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/AgentValidationResult",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/validationResult"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "flowValidationResults": {
                              "rule": "repeated",
                              "type": "FlowValidationResult",
                              "id": 2
                            }
                          }
                        },
                        "AudioEncoding": {
                          "values": {
                            "AUDIO_ENCODING_UNSPECIFIED": 0,
                            "AUDIO_ENCODING_LINEAR_16": 1,
                            "AUDIO_ENCODING_FLAC": 2,
                            "AUDIO_ENCODING_MULAW": 3,
                            "AUDIO_ENCODING_AMR": 4,
                            "AUDIO_ENCODING_AMR_WB": 5,
                            "AUDIO_ENCODING_OGG_OPUS": 6,
                            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE": 7
                          }
                        },
                        "SpeechModelVariant": {
                          "values": {
                            "SPEECH_MODEL_VARIANT_UNSPECIFIED": 0,
                            "USE_BEST_AVAILABLE": 1,
                            "USE_STANDARD": 2,
                            "USE_ENHANCED": 3
                          }
                        },
                        "SpeechWordInfo": {
                          "fields": {
                            "word": {
                              "type": "string",
                              "id": 3
                            },
                            "startOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 1
                            },
                            "endOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 2
                            },
                            "confidence": {
                              "type": "float",
                              "id": 4
                            }
                          }
                        },
                        "InputAudioConfig": {
                          "fields": {
                            "audioEncoding": {
                              "type": "AudioEncoding",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "sampleRateHertz": {
                              "type": "int32",
                              "id": 2
                            },
                            "enableWordInfo": {
                              "type": "bool",
                              "id": 13
                            },
                            "phraseHints": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 4
                            },
                            "model": {
                              "type": "string",
                              "id": 7
                            },
                            "modelVariant": {
                              "type": "SpeechModelVariant",
                              "id": 10
                            },
                            "singleUtterance": {
                              "type": "bool",
                              "id": 8
                            }
                          }
                        },
                        "SsmlVoiceGender": {
                          "values": {
                            "SSML_VOICE_GENDER_UNSPECIFIED": 0,
                            "SSML_VOICE_GENDER_MALE": 1,
                            "SSML_VOICE_GENDER_FEMALE": 2,
                            "SSML_VOICE_GENDER_NEUTRAL": 3
                          }
                        },
                        "VoiceSelectionParams": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "ssmlGender": {
                              "type": "SsmlVoiceGender",
                              "id": 2
                            }
                          }
                        },
                        "SynthesizeSpeechConfig": {
                          "fields": {
                            "speakingRate": {
                              "type": "double",
                              "id": 1
                            },
                            "pitch": {
                              "type": "double",
                              "id": 2
                            },
                            "volumeGainDb": {
                              "type": "double",
                              "id": 3
                            },
                            "effectsProfileId": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 5
                            },
                            "voice": {
                              "type": "VoiceSelectionParams",
                              "id": 4
                            }
                          }
                        },
                        "OutputAudioEncoding": {
                          "values": {
                            "OUTPUT_AUDIO_ENCODING_UNSPECIFIED": 0,
                            "OUTPUT_AUDIO_ENCODING_LINEAR_16": 1,
                            "OUTPUT_AUDIO_ENCODING_MP3": 2,
                            "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS": 4,
                            "OUTPUT_AUDIO_ENCODING_OGG_OPUS": 3,
                            "OUTPUT_AUDIO_ENCODING_MULAW": 5
                          }
                        },
                        "OutputAudioConfig": {
                          "fields": {
                            "audioEncoding": {
                              "type": "OutputAudioEncoding",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "sampleRateHertz": {
                              "type": "int32",
                              "id": 2
                            },
                            "synthesizeSpeechConfig": {
                              "type": "SynthesizeSpeechConfig",
                              "id": 3
                            }
                          }
                        },
                        "TextToSpeechSettings": {
                          "fields": {
                            "synthesizeSpeechConfigs": {
                              "keyType": "string",
                              "type": "SynthesizeSpeechConfig",
                              "id": 1
                            }
                          }
                        },
                        "Flows": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "CreateFlow": {
                              "requestType": "CreateFlowRequest",
                              "responseType": "Flow",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/flows",
                                "(google.api.http).body": "flow",
                                "(google.api.method_signature)": "parent,flow"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/flows",
                                    "body": "flow"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,flow"
                                }
                              ]
                            },
                            "DeleteFlow": {
                              "requestType": "DeleteFlowRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ListFlows": {
                              "requestType": "ListFlowsRequest",
                              "responseType": "ListFlowsResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/flows",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/flows"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetFlow": {
                              "requestType": "GetFlowRequest",
                              "responseType": "Flow",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "UpdateFlow": {
                              "requestType": "UpdateFlowRequest",
                              "responseType": "Flow",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{flow.name=projects/*/locations/*/agents/*/flows/*}",
                                "(google.api.http).body": "flow",
                                "(google.api.method_signature)": "flow,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{flow.name=projects/*/locations/*/agents/*/flows/*}",
                                    "body": "flow"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "flow,update_mask"
                                }
                              ]
                            },
                            "TrainFlow": {
                              "requestType": "TrainFlowRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*}:train",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "name",
                                "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*}:train",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.protobuf.Empty",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "ValidateFlow": {
                              "requestType": "ValidateFlowRequest",
                              "responseType": "FlowValidationResult",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*}:validate",
                                "(google.api.http).body": "*"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*}:validate",
                                    "body": "*"
                                  }
                                }
                              ]
                            },
                            "GetFlowValidationResult": {
                              "requestType": "GetFlowValidationResultRequest",
                              "responseType": "FlowValidationResult",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/validationResult}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/validationResult}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "ImportFlow": {
                              "requestType": "ImportFlowRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/flows:import",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "ImportFlowResponse",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/flows:import",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "ImportFlowResponse",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "ExportFlow": {
                              "requestType": "ExportFlowRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*}:export",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "ExportFlowResponse",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*}:export",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "ExportFlowResponse",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "NluSettings": {
                          "fields": {
                            "modelType": {
                              "type": "ModelType",
                              "id": 1
                            },
                            "classificationThreshold": {
                              "type": "float",
                              "id": 3
                            },
                            "modelTrainingMode": {
                              "type": "ModelTrainingMode",
                              "id": 4
                            }
                          },
                          "nested": {
                            "ModelType": {
                              "values": {
                                "MODEL_TYPE_UNSPECIFIED": 0,
                                "MODEL_TYPE_STANDARD": 1,
                                "MODEL_TYPE_ADVANCED": 3
                              }
                            },
                            "ModelTrainingMode": {
                              "values": {
                                "MODEL_TRAINING_MODE_UNSPECIFIED": 0,
                                "MODEL_TRAINING_MODE_AUTOMATIC": 1,
                                "MODEL_TRAINING_MODE_MANUAL": 2
                              }
                            }
                          }
                        },
                        "Flow": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Flow",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/flows/{flow}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 3
                            },
                            "transitionRoutes": {
                              "rule": "repeated",
                              "type": "TransitionRoute",
                              "id": 4
                            },
                            "eventHandlers": {
                              "rule": "repeated",
                              "type": "EventHandler",
                              "id": 10
                            },
                            "transitionRouteGroups": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 15,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TransitionRouteGroup"
                              }
                            },
                            "nluSettings": {
                              "type": "NluSettings",
                              "id": 11
                            }
                          }
                        },
                        "CreateFlowRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "flow": {
                              "type": "Flow",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "DeleteFlowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "force": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "ListFlowsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListFlowsResponse": {
                          "fields": {
                            "flows": {
                              "rule": "repeated",
                              "type": "Flow",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetFlowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "UpdateFlowRequest": {
                          "fields": {
                            "flow": {
                              "type": "Flow",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "TrainFlowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            }
                          }
                        },
                        "ValidateFlowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetFlowValidationResultRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/FlowValidationResult"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "FlowValidationResult": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/FlowValidationResult",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/flows/{flow}/validationResult"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "validationMessages": {
                              "rule": "repeated",
                              "type": "ValidationMessage",
                              "id": 2
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        },
                        "ImportFlowRequest": {
                          "oneofs": {
                            "flow": {
                              "oneof": [
                                "flowUri",
                                "flowContent"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "flowUri": {
                              "type": "string",
                              "id": 2
                            },
                            "flowContent": {
                              "type": "bytes",
                              "id": 3
                            },
                            "importOption": {
                              "type": "ImportOption",
                              "id": 4
                            }
                          },
                          "nested": {
                            "ImportOption": {
                              "values": {
                                "IMPORT_OPTION_UNSPECIFIED": 0,
                                "KEEP": 1,
                                "FALLBACK": 2
                              }
                            }
                          }
                        },
                        "ImportFlowResponse": {
                          "fields": {
                            "flow": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            }
                          }
                        },
                        "ExportFlowRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "flowUri": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            },
                            "includeReferencedFlows": {
                              "type": "bool",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "ExportFlowResponse": {
                          "oneofs": {
                            "flow": {
                              "oneof": [
                                "flowUri",
                                "flowContent"
                              ]
                            }
                          },
                          "fields": {
                            "flowUri": {
                              "type": "string",
                              "id": 1
                            },
                            "flowContent": {
                              "type": "bytes",
                              "id": 2
                            }
                          }
                        },
                        "Pages": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListPages": {
                              "requestType": "ListPagesRequest",
                              "responseType": "ListPagesResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*/flows/*}/pages",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*/flows/*}/pages"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetPage": {
                              "requestType": "GetPageRequest",
                              "responseType": "Page",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/pages/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/pages/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreatePage": {
                              "requestType": "CreatePageRequest",
                              "responseType": "Page",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*/flows/*}/pages",
                                "(google.api.http).body": "page",
                                "(google.api.method_signature)": "parent,page"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*/flows/*}/pages",
                                    "body": "page"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,page"
                                }
                              ]
                            },
                            "UpdatePage": {
                              "requestType": "UpdatePageRequest",
                              "responseType": "Page",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{page.name=projects/*/locations/*/agents/*/flows/*/pages/*}",
                                "(google.api.http).body": "page",
                                "(google.api.method_signature)": "page,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{page.name=projects/*/locations/*/agents/*/flows/*/pages/*}",
                                    "body": "page"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "page,update_mask"
                                }
                              ]
                            },
                            "DeletePage": {
                              "requestType": "DeletePageRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/pages/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/pages/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "Page": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Page",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/flows/{flow}/pages/{page}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "entryFulfillment": {
                              "type": "Fulfillment",
                              "id": 7
                            },
                            "form": {
                              "type": "Form",
                              "id": 4
                            },
                            "transitionRouteGroups": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 11,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TransitionRouteGroup"
                              }
                            },
                            "transitionRoutes": {
                              "rule": "repeated",
                              "type": "TransitionRoute",
                              "id": 9
                            },
                            "eventHandlers": {
                              "rule": "repeated",
                              "type": "EventHandler",
                              "id": 10
                            }
                          }
                        },
                        "Form": {
                          "fields": {
                            "parameters": {
                              "rule": "repeated",
                              "type": "Parameter",
                              "id": 1
                            }
                          },
                          "nested": {
                            "Parameter": {
                              "fields": {
                                "displayName": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "required": {
                                  "type": "bool",
                                  "id": 2
                                },
                                "entityType": {
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED",
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/EntityType"
                                  }
                                },
                                "isList": {
                                  "type": "bool",
                                  "id": 4
                                },
                                "fillBehavior": {
                                  "type": "FillBehavior",
                                  "id": 7,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "defaultValue": {
                                  "type": "google.protobuf.Value",
                                  "id": 9
                                },
                                "redact": {
                                  "type": "bool",
                                  "id": 11
                                }
                              },
                              "nested": {
                                "FillBehavior": {
                                  "fields": {
                                    "initialPromptFulfillment": {
                                      "type": "Fulfillment",
                                      "id": 3,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    },
                                    "repromptEventHandlers": {
                                      "rule": "repeated",
                                      "type": "EventHandler",
                                      "id": 5
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "EventHandler": {
                          "oneofs": {
                            "target": {
                              "oneof": [
                                "targetPage",
                                "targetFlow"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "event": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "triggerFulfillment": {
                              "type": "Fulfillment",
                              "id": 5
                            },
                            "targetPage": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "targetFlow": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            }
                          }
                        },
                        "TransitionRoute": {
                          "oneofs": {
                            "target": {
                              "oneof": [
                                "targetPage",
                                "targetFlow"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "intent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "condition": {
                              "type": "string",
                              "id": 2
                            },
                            "triggerFulfillment": {
                              "type": "Fulfillment",
                              "id": 3
                            },
                            "targetPage": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "targetFlow": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            }
                          }
                        },
                        "ListPagesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListPagesResponse": {
                          "fields": {
                            "pages": {
                              "rule": "repeated",
                              "type": "Page",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetPageRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "CreatePageRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "page": {
                              "type": "Page",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "UpdatePageRequest": {
                          "fields": {
                            "page": {
                              "type": "Page",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 3
                            }
                          }
                        },
                        "DeletePageRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "force": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "Fulfillment": {
                          "fields": {
                            "messages": {
                              "rule": "repeated",
                              "type": "ResponseMessage",
                              "id": 1
                            },
                            "webhook": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Webhook"
                              }
                            },
                            "returnPartialResponses": {
                              "type": "bool",
                              "id": 8
                            },
                            "tag": {
                              "type": "string",
                              "id": 3
                            },
                            "setParameterActions": {
                              "rule": "repeated",
                              "type": "SetParameterAction",
                              "id": 4
                            },
                            "conditionalCases": {
                              "rule": "repeated",
                              "type": "ConditionalCases",
                              "id": 5
                            }
                          },
                          "nested": {
                            "SetParameterAction": {
                              "fields": {
                                "parameter": {
                                  "type": "string",
                                  "id": 1
                                },
                                "value": {
                                  "type": "google.protobuf.Value",
                                  "id": 2
                                }
                              }
                            },
                            "ConditionalCases": {
                              "fields": {
                                "cases": {
                                  "rule": "repeated",
                                  "type": "Case",
                                  "id": 1
                                }
                              },
                              "nested": {
                                "Case": {
                                  "fields": {
                                    "condition": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "caseContent": {
                                      "rule": "repeated",
                                      "type": "CaseContent",
                                      "id": 2
                                    }
                                  },
                                  "nested": {
                                    "CaseContent": {
                                      "oneofs": {
                                        "casesOrMessage": {
                                          "oneof": [
                                            "message",
                                            "additionalCases"
                                          ]
                                        }
                                      },
                                      "fields": {
                                        "message": {
                                          "type": "ResponseMessage",
                                          "id": 1
                                        },
                                        "additionalCases": {
                                          "type": "ConditionalCases",
                                          "id": 2
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "ResponseMessage": {
                          "oneofs": {
                            "message": {
                              "oneof": [
                                "text",
                                "payload",
                                "conversationSuccess",
                                "outputAudioText",
                                "liveAgentHandoff",
                                "endInteraction",
                                "playAudio",
                                "mixedAudio",
                                "telephonyTransferCall"
                              ]
                            }
                          },
                          "fields": {
                            "text": {
                              "type": "Text",
                              "id": 1
                            },
                            "payload": {
                              "type": "google.protobuf.Struct",
                              "id": 2
                            },
                            "conversationSuccess": {
                              "type": "ConversationSuccess",
                              "id": 9
                            },
                            "outputAudioText": {
                              "type": "OutputAudioText",
                              "id": 8
                            },
                            "liveAgentHandoff": {
                              "type": "LiveAgentHandoff",
                              "id": 10
                            },
                            "endInteraction": {
                              "type": "EndInteraction",
                              "id": 11,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "playAudio": {
                              "type": "PlayAudio",
                              "id": 12
                            },
                            "mixedAudio": {
                              "type": "MixedAudio",
                              "id": 13,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "telephonyTransferCall": {
                              "type": "TelephonyTransferCall",
                              "id": 18
                            },
                            "channel": {
                              "type": "string",
                              "id": 19
                            }
                          },
                          "nested": {
                            "Text": {
                              "fields": {
                                "text": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "allowPlaybackInterruption": {
                                  "type": "bool",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OUTPUT_ONLY"
                                  }
                                }
                              }
                            },
                            "LiveAgentHandoff": {
                              "fields": {
                                "metadata": {
                                  "type": "google.protobuf.Struct",
                                  "id": 1
                                }
                              }
                            },
                            "ConversationSuccess": {
                              "fields": {
                                "metadata": {
                                  "type": "google.protobuf.Struct",
                                  "id": 1
                                }
                              }
                            },
                            "OutputAudioText": {
                              "oneofs": {
                                "source": {
                                  "oneof": [
                                    "text",
                                    "ssml"
                                  ]
                                }
                              },
                              "fields": {
                                "text": {
                                  "type": "string",
                                  "id": 1
                                },
                                "ssml": {
                                  "type": "string",
                                  "id": 2
                                },
                                "allowPlaybackInterruption": {
                                  "type": "bool",
                                  "id": 3,
                                  "options": {
                                    "(google.api.field_behavior)": "OUTPUT_ONLY"
                                  }
                                }
                              }
                            },
                            "EndInteraction": {
                              "fields": {}
                            },
                            "PlayAudio": {
                              "fields": {
                                "audioUri": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "allowPlaybackInterruption": {
                                  "type": "bool",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "OUTPUT_ONLY"
                                  }
                                }
                              }
                            },
                            "MixedAudio": {
                              "fields": {
                                "segments": {
                                  "rule": "repeated",
                                  "type": "Segment",
                                  "id": 1
                                }
                              },
                              "nested": {
                                "Segment": {
                                  "oneofs": {
                                    "content": {
                                      "oneof": [
                                        "audio",
                                        "uri"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "audio": {
                                      "type": "bytes",
                                      "id": 1
                                    },
                                    "uri": {
                                      "type": "string",
                                      "id": 2
                                    },
                                    "allowPlaybackInterruption": {
                                      "type": "bool",
                                      "id": 3,
                                      "options": {
                                        "(google.api.field_behavior)": "OUTPUT_ONLY"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "TelephonyTransferCall": {
                              "oneofs": {
                                "endpoint": {
                                  "oneof": [
                                    "phoneNumber"
                                  ]
                                }
                              },
                              "fields": {
                                "phoneNumber": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            }
                          }
                        },
                        "ValidationMessage": {
                          "fields": {
                            "resourceType": {
                              "type": "ResourceType",
                              "id": 1
                            },
                            "resources": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "resourceNames": {
                              "rule": "repeated",
                              "type": "ResourceName",
                              "id": 6
                            },
                            "severity": {
                              "type": "Severity",
                              "id": 3
                            },
                            "detail": {
                              "type": "string",
                              "id": 4
                            }
                          },
                          "nested": {
                            "ResourceType": {
                              "values": {
                                "RESOURCE_TYPE_UNSPECIFIED": 0,
                                "AGENT": 1,
                                "INTENT": 2,
                                "INTENT_TRAINING_PHRASE": 8,
                                "INTENT_PARAMETER": 9,
                                "INTENTS": 10,
                                "INTENT_TRAINING_PHRASES": 11,
                                "ENTITY_TYPE": 3,
                                "ENTITY_TYPES": 12,
                                "WEBHOOK": 4,
                                "FLOW": 5,
                                "PAGE": 6,
                                "PAGES": 13,
                                "TRANSITION_ROUTE_GROUP": 7
                              }
                            },
                            "Severity": {
                              "values": {
                                "SEVERITY_UNSPECIFIED": 0,
                                "INFO": 1,
                                "WARNING": 2,
                                "ERROR": 3
                              }
                            }
                          }
                        },
                        "ResourceName": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "Changelogs": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListChangelogs": {
                              "requestType": "ListChangelogsRequest",
                              "responseType": "ListChangelogsResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/changelogs",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/changelogs"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetChangelog": {
                              "requestType": "GetChangelogRequest",
                              "responseType": "Changelog",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/changelogs/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/changelogs/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "ListChangelogsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Changelog"
                              }
                            },
                            "filter": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListChangelogsResponse": {
                          "fields": {
                            "changelogs": {
                              "rule": "repeated",
                              "type": "Changelog",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetChangelogRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Changelog"
                              }
                            }
                          }
                        },
                        "Changelog": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Changelog",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/changelogs/{changelog}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "userEmail": {
                              "type": "string",
                              "id": 2
                            },
                            "displayName": {
                              "type": "string",
                              "id": 7
                            },
                            "action": {
                              "type": "string",
                              "id": 11
                            },
                            "type": {
                              "type": "string",
                              "id": 8
                            },
                            "resource": {
                              "type": "string",
                              "id": 3
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          }
                        },
                        "Deployments": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListDeployments": {
                              "requestType": "ListDeploymentsRequest",
                              "responseType": "ListDeploymentsResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*}/deployments",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*}/deployments"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetDeployment": {
                              "requestType": "GetDeploymentRequest",
                              "responseType": "Deployment",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/deployments/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/deployments/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "Deployment": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Deployment",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/environments/{environment}/deployments/{deployment}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "flowVersion": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 3
                            },
                            "result": {
                              "type": "Result",
                              "id": 4
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 6
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "RUNNING": 1,
                                "SUCCEEDED": 2,
                                "FAILED": 3
                              }
                            },
                            "Result": {
                              "fields": {
                                "deploymentTestResults": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCaseResult"
                                  }
                                },
                                "experiment": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/Experiment"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "ListDeploymentsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Deployment"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListDeploymentsResponse": {
                          "fields": {
                            "deployments": {
                              "rule": "repeated",
                              "type": "Deployment",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetDeploymentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Deployment"
                              }
                            }
                          }
                        },
                        "EntityTypes": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListEntityTypes": {
                              "requestType": "ListEntityTypesRequest",
                              "responseType": "ListEntityTypesResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/entityTypes",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/entityTypes"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetEntityType": {
                              "requestType": "GetEntityTypeRequest",
                              "responseType": "EntityType",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/entityTypes/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/entityTypes/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateEntityType": {
                              "requestType": "CreateEntityTypeRequest",
                              "responseType": "EntityType",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/entityTypes",
                                "(google.api.http).body": "entity_type",
                                "(google.api.method_signature)": "parent,entity_type"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/entityTypes",
                                    "body": "entity_type"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,entity_type"
                                }
                              ]
                            },
                            "UpdateEntityType": {
                              "requestType": "UpdateEntityTypeRequest",
                              "responseType": "EntityType",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{entity_type.name=projects/*/locations/*/agents/*/entityTypes/*}",
                                "(google.api.http).body": "entity_type",
                                "(google.api.method_signature)": "entity_type,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{entity_type.name=projects/*/locations/*/agents/*/entityTypes/*}",
                                    "body": "entity_type"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "entity_type,update_mask"
                                }
                              ]
                            },
                            "DeleteEntityType": {
                              "requestType": "DeleteEntityTypeRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3beta1/{name=projects/*/locations/*/agents/*/entityTypes/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3beta1/{name=projects/*/locations/*/agents/*/entityTypes/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "EntityType": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/EntityType",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/entityTypes/{entity_type}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "kind": {
                              "type": "Kind",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "autoExpansionMode": {
                              "type": "AutoExpansionMode",
                              "id": 4
                            },
                            "entities": {
                              "rule": "repeated",
                              "type": "Entity",
                              "id": 5
                            },
                            "excludedPhrases": {
                              "rule": "repeated",
                              "type": "ExcludedPhrase",
                              "id": 6
                            },
                            "enableFuzzyExtraction": {
                              "type": "bool",
                              "id": 7
                            },
                            "redact": {
                              "type": "bool",
                              "id": 9
                            }
                          },
                          "nested": {
                            "Kind": {
                              "values": {
                                "KIND_UNSPECIFIED": 0,
                                "KIND_MAP": 1,
                                "KIND_LIST": 2,
                                "KIND_REGEXP": 3
                              }
                            },
                            "AutoExpansionMode": {
                              "values": {
                                "AUTO_EXPANSION_MODE_UNSPECIFIED": 0,
                                "AUTO_EXPANSION_MODE_DEFAULT": 1
                              }
                            },
                            "Entity": {
                              "fields": {
                                "value": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "synonyms": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            },
                            "ExcludedPhrase": {
                              "fields": {
                                "value": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "ListEntityTypesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/EntityType"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListEntityTypesResponse": {
                          "fields": {
                            "entityTypes": {
                              "rule": "repeated",
                              "type": "EntityType",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetEntityTypeRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/EntityType"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "CreateEntityTypeRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/EntityType"
                              }
                            },
                            "entityType": {
                              "type": "EntityType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "UpdateEntityTypeRequest": {
                          "fields": {
                            "entityType": {
                              "type": "EntityType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 3
                            }
                          }
                        },
                        "DeleteEntityTypeRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/EntityType"
                              }
                            },
                            "force": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "Environments": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListEnvironments": {
                              "requestType": "ListEnvironmentsRequest",
                              "responseType": "ListEnvironmentsResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/environments",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/environments"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetEnvironment": {
                              "requestType": "GetEnvironmentRequest",
                              "responseType": "Environment",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateEnvironment": {
                              "requestType": "CreateEnvironmentRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/environments",
                                "(google.api.http).body": "environment",
                                "(google.api.method_signature)": "parent,environment",
                                "(google.longrunning.operation_info).response_type": "Environment",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/environments",
                                    "body": "environment"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,environment"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "Environment",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "UpdateEnvironment": {
                              "requestType": "UpdateEnvironmentRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{environment.name=projects/*/locations/*/agents/*/environments/*}",
                                "(google.api.http).body": "environment",
                                "(google.api.method_signature)": "environment,update_mask",
                                "(google.longrunning.operation_info).response_type": "Environment",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{environment.name=projects/*/locations/*/agents/*/environments/*}",
                                    "body": "environment"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "environment,update_mask"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "Environment",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "DeleteEnvironment": {
                              "requestType": "DeleteEnvironmentRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "LookupEnvironmentHistory": {
                              "requestType": "LookupEnvironmentHistoryRequest",
                              "responseType": "LookupEnvironmentHistoryResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*}:lookupEnvironmentHistory",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*}:lookupEnvironmentHistory"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "RunContinuousTest": {
                              "requestType": "RunContinuousTestRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{environment=projects/*/locations/*/agents/*/environments/*}:runContinuousTest",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "RunContinuousTestResponse",
                                "(google.longrunning.operation_info).metadata_type": "RunContinuousTestMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{environment=projects/*/locations/*/agents/*/environments/*}:runContinuousTest",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "RunContinuousTestResponse",
                                    "metadata_type": "RunContinuousTestMetadata"
                                  }
                                }
                              ]
                            },
                            "ListContinuousTestResults": {
                              "requestType": "ListContinuousTestResultsRequest",
                              "responseType": "ListContinuousTestResultsResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*}/continuousTestResults",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*}/continuousTestResults"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "DeployFlow": {
                              "requestType": "DeployFlowRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{environment=projects/*/locations/*/agents/*/environments/*}:deployFlow",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "DeployFlowResponse",
                                "(google.longrunning.operation_info).metadata_type": "DeployFlowMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{environment=projects/*/locations/*/agents/*/environments/*}:deployFlow",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "DeployFlowResponse",
                                    "metadata_type": "DeployFlowMetadata"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "Environment": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Environment",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/environments/{environment}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 3
                            },
                            "versionConfigs": {
                              "rule": "repeated",
                              "type": "VersionConfig",
                              "id": 6
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "testCasesConfig": {
                              "type": "TestCasesConfig",
                              "id": 7
                            },
                            "webhookConfig": {
                              "type": "WebhookConfig",
                              "id": 10
                            }
                          },
                          "nested": {
                            "VersionConfig": {
                              "fields": {
                                "version": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED",
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                                  }
                                }
                              }
                            },
                            "TestCasesConfig": {
                              "fields": {
                                "testCases": {
                                  "rule": "repeated",
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                                  }
                                },
                                "enableContinuousRun": {
                                  "type": "bool",
                                  "id": 2
                                },
                                "enablePredeploymentRun": {
                                  "type": "bool",
                                  "id": 3
                                }
                              }
                            },
                            "WebhookConfig": {
                              "fields": {
                                "webhookOverrides": {
                                  "rule": "repeated",
                                  "type": "Webhook",
                                  "id": 1
                                }
                              }
                            }
                          }
                        },
                        "ListEnvironmentsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListEnvironmentsResponse": {
                          "fields": {
                            "environments": {
                              "rule": "repeated",
                              "type": "Environment",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetEnvironmentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            }
                          }
                        },
                        "CreateEnvironmentRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "environment": {
                              "type": "Environment",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateEnvironmentRequest": {
                          "fields": {
                            "environment": {
                              "type": "Environment",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteEnvironmentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            }
                          }
                        },
                        "LookupEnvironmentHistoryRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "LookupEnvironmentHistoryResponse": {
                          "fields": {
                            "environments": {
                              "rule": "repeated",
                              "type": "Environment",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "ContinuousTestResult": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/ContinuousTestResult",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/environments/{environment}/continuousTestResults/{continuous_test_result}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "result": {
                              "type": "AggregatedTestResult",
                              "id": 2
                            },
                            "testCaseResults": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCaseResult"
                              }
                            },
                            "runTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 4
                            }
                          },
                          "nested": {
                            "AggregatedTestResult": {
                              "values": {
                                "AGGREGATED_TEST_RESULT_UNSPECIFIED": 0,
                                "PASSED": 1,
                                "FAILED": 2
                              }
                            }
                          }
                        },
                        "RunContinuousTestRequest": {
                          "fields": {
                            "environment": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            }
                          }
                        },
                        "RunContinuousTestResponse": {
                          "fields": {
                            "continuousTestResult": {
                              "type": "ContinuousTestResult",
                              "id": 1
                            }
                          }
                        },
                        "RunContinuousTestMetadata": {
                          "fields": {
                            "errors": {
                              "rule": "repeated",
                              "type": "TestError",
                              "id": 1
                            }
                          }
                        },
                        "ListContinuousTestResultsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/ContinuousTestResult"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListContinuousTestResultsResponse": {
                          "fields": {
                            "continuousTestResults": {
                              "rule": "repeated",
                              "type": "ContinuousTestResult",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "DeployFlowRequest": {
                          "fields": {
                            "environment": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "flowVersion": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            }
                          }
                        },
                        "DeployFlowResponse": {
                          "fields": {
                            "environment": {
                              "type": "Environment",
                              "id": 1
                            },
                            "deployment": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "DeployFlowMetadata": {
                          "fields": {
                            "testErrors": {
                              "rule": "repeated",
                              "type": "TestError",
                              "id": 1
                            }
                          }
                        },
                        "TestCases": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListTestCases": {
                              "requestType": "ListTestCasesRequest",
                              "responseType": "ListTestCasesResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/testCases",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/testCases"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "BatchDeleteTestCases": {
                              "requestType": "BatchDeleteTestCasesRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/testCases:batchDelete",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/testCases:batchDelete",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetTestCase": {
                              "requestType": "GetTestCaseRequest",
                              "responseType": "TestCase",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/testCases/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/testCases/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateTestCase": {
                              "requestType": "CreateTestCaseRequest",
                              "responseType": "TestCase",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/testCases",
                                "(google.api.http).body": "test_case",
                                "(google.api.method_signature)": "parent,test_case"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/testCases",
                                    "body": "test_case"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,test_case"
                                }
                              ]
                            },
                            "UpdateTestCase": {
                              "requestType": "UpdateTestCaseRequest",
                              "responseType": "TestCase",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{test_case.name=projects/*/locations/*/agents/*/testCases/*}",
                                "(google.api.http).body": "test_case",
                                "(google.api.method_signature)": "test_case,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{test_case.name=projects/*/locations/*/agents/*/testCases/*}",
                                    "body": "test_case"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "test_case,update_mask"
                                }
                              ]
                            },
                            "RunTestCase": {
                              "requestType": "RunTestCaseRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{name=projects/*/locations/*/agents/*/testCases/*}:run",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "RunTestCaseResponse",
                                "(google.longrunning.operation_info).metadata_type": "RunTestCaseMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{name=projects/*/locations/*/agents/*/testCases/*}:run",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "RunTestCaseResponse",
                                    "metadata_type": "RunTestCaseMetadata"
                                  }
                                }
                              ]
                            },
                            "BatchRunTestCases": {
                              "requestType": "BatchRunTestCasesRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/testCases:batchRun",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "BatchRunTestCasesResponse",
                                "(google.longrunning.operation_info).metadata_type": "BatchRunTestCasesMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/testCases:batchRun",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "BatchRunTestCasesResponse",
                                    "metadata_type": "BatchRunTestCasesMetadata"
                                  }
                                }
                              ]
                            },
                            "CalculateCoverage": {
                              "requestType": "CalculateCoverageRequest",
                              "responseType": "CalculateCoverageResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{agent=projects/*/locations/*/agents/*}/testCases:calculateCoverage"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{agent=projects/*/locations/*/agents/*}/testCases:calculateCoverage"
                                  }
                                }
                              ]
                            },
                            "ImportTestCases": {
                              "requestType": "ImportTestCasesRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/testCases:import",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "ImportTestCasesResponse",
                                "(google.longrunning.operation_info).metadata_type": "ImportTestCasesMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/testCases:import",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "ImportTestCasesResponse",
                                    "metadata_type": "ImportTestCasesMetadata"
                                  }
                                }
                              ]
                            },
                            "ExportTestCases": {
                              "requestType": "ExportTestCasesRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/testCases:export",
                                "(google.api.http).body": "*",
                                "(google.longrunning.operation_info).response_type": "ExportTestCasesResponse",
                                "(google.longrunning.operation_info).metadata_type": "ExportTestCasesMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/testCases:export",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "ExportTestCasesResponse",
                                    "metadata_type": "ExportTestCasesMetadata"
                                  }
                                }
                              ]
                            },
                            "ListTestCaseResults": {
                              "requestType": "ListTestCaseResultsRequest",
                              "responseType": "ListTestCaseResultsResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*/testCases/*}/results",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*/testCases/*}/results"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetTestCaseResult": {
                              "requestType": "GetTestCaseResultRequest",
                              "responseType": "TestCaseResult",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/testCases/*/results/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/testCases/*/results/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "TestCase": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/TestCase",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/testCases/{test_case}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "tags": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "displayName": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "notes": {
                              "type": "string",
                              "id": 4
                            },
                            "testConfig": {
                              "type": "TestConfig",
                              "id": 13
                            },
                            "testCaseConversationTurns": {
                              "rule": "repeated",
                              "type": "ConversationTurn",
                              "id": 5
                            },
                            "creationTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 10,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "lastTestResult": {
                              "type": "TestCaseResult",
                              "id": 12
                            }
                          }
                        },
                        "TestCaseResult": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/TestCaseResult",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/testCases/{test_case}/results/{result}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "environment": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "conversationTurns": {
                              "rule": "repeated",
                              "type": "ConversationTurn",
                              "id": 3
                            },
                            "testResult": {
                              "type": "TestResult",
                              "id": 4
                            },
                            "testTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5
                            }
                          }
                        },
                        "TestConfig": {
                          "fields": {
                            "trackingParameters": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "flow": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            },
                            "page": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            }
                          }
                        },
                        "ConversationTurn": {
                          "fields": {
                            "userInput": {
                              "type": "UserInput",
                              "id": 1
                            },
                            "virtualAgentOutput": {
                              "type": "VirtualAgentOutput",
                              "id": 2
                            }
                          },
                          "nested": {
                            "UserInput": {
                              "fields": {
                                "input": {
                                  "type": "QueryInput",
                                  "id": 5
                                },
                                "injectedParameters": {
                                  "type": "google.protobuf.Struct",
                                  "id": 2
                                },
                                "isWebhookEnabled": {
                                  "type": "bool",
                                  "id": 3
                                },
                                "enableSentimentAnalysis": {
                                  "type": "bool",
                                  "id": 7
                                }
                              }
                            },
                            "VirtualAgentOutput": {
                              "fields": {
                                "sessionParameters": {
                                  "type": "google.protobuf.Struct",
                                  "id": 4
                                },
                                "differences": {
                                  "rule": "repeated",
                                  "type": "TestRunDifference",
                                  "id": 5,
                                  "options": {
                                    "(google.api.field_behavior)": "OUTPUT_ONLY"
                                  }
                                },
                                "diagnosticInfo": {
                                  "type": "google.protobuf.Struct",
                                  "id": 6,
                                  "options": {
                                    "(google.api.field_behavior)": "INPUT_ONLY"
                                  }
                                },
                                "triggeredIntent": {
                                  "type": "Intent",
                                  "id": 7
                                },
                                "currentPage": {
                                  "type": "Page",
                                  "id": 8
                                },
                                "textResponses": {
                                  "rule": "repeated",
                                  "type": "ResponseMessage.Text",
                                  "id": 9
                                },
                                "status": {
                                  "type": "google.rpc.Status",
                                  "id": 10
                                }
                              }
                            }
                          }
                        },
                        "TestRunDifference": {
                          "fields": {
                            "type": {
                              "type": "DiffType",
                              "id": 1
                            },
                            "description": {
                              "type": "string",
                              "id": 2
                            }
                          },
                          "nested": {
                            "DiffType": {
                              "values": {
                                "DIFF_TYPE_UNSPECIFIED": 0,
                                "INTENT": 1,
                                "PAGE": 2,
                                "PARAMETERS": 3,
                                "UTTERANCE": 4,
                                "FLOW": 5
                              }
                            }
                          }
                        },
                        "TransitionCoverage": {
                          "fields": {
                            "transitions": {
                              "rule": "repeated",
                              "type": "Transition",
                              "id": 1
                            },
                            "coverageScore": {
                              "type": "float",
                              "id": 2
                            }
                          },
                          "nested": {
                            "TransitionNode": {
                              "oneofs": {
                                "kind": {
                                  "oneof": [
                                    "page",
                                    "flow"
                                  ]
                                }
                              },
                              "fields": {
                                "page": {
                                  "type": "Page",
                                  "id": 1
                                },
                                "flow": {
                                  "type": "Flow",
                                  "id": 2
                                }
                              }
                            },
                            "Transition": {
                              "oneofs": {
                                "detail": {
                                  "oneof": [
                                    "transitionRoute",
                                    "eventHandler"
                                  ]
                                }
                              },
                              "fields": {
                                "source": {
                                  "type": "TransitionNode",
                                  "id": 1
                                },
                                "index": {
                                  "type": "int32",
                                  "id": 4
                                },
                                "target": {
                                  "type": "TransitionNode",
                                  "id": 2
                                },
                                "covered": {
                                  "type": "bool",
                                  "id": 3
                                },
                                "transitionRoute": {
                                  "type": "TransitionRoute",
                                  "id": 5
                                },
                                "eventHandler": {
                                  "type": "EventHandler",
                                  "id": 6
                                }
                              }
                            }
                          }
                        },
                        "TransitionRouteGroupCoverage": {
                          "fields": {
                            "coverages": {
                              "rule": "repeated",
                              "type": "Coverage",
                              "id": 1
                            },
                            "coverageScore": {
                              "type": "float",
                              "id": 2
                            }
                          },
                          "nested": {
                            "Coverage": {
                              "fields": {
                                "routeGroup": {
                                  "type": "TransitionRouteGroup",
                                  "id": 1
                                },
                                "transitions": {
                                  "rule": "repeated",
                                  "type": "Transition",
                                  "id": 2
                                },
                                "coverageScore": {
                                  "type": "float",
                                  "id": 3
                                }
                              },
                              "nested": {
                                "Transition": {
                                  "fields": {
                                    "transitionRoute": {
                                      "type": "TransitionRoute",
                                      "id": 1
                                    },
                                    "covered": {
                                      "type": "bool",
                                      "id": 2
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "IntentCoverage": {
                          "fields": {
                            "intents": {
                              "rule": "repeated",
                              "type": "Intent",
                              "id": 1
                            },
                            "coverageScore": {
                              "type": "float",
                              "id": 2
                            }
                          },
                          "nested": {
                            "Intent": {
                              "fields": {
                                "intent": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                                  }
                                },
                                "covered": {
                                  "type": "bool",
                                  "id": 2
                                }
                              }
                            }
                          }
                        },
                        "CalculateCoverageRequest": {
                          "fields": {
                            "agent": {
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "type": {
                              "type": "CoverageType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "CoverageType": {
                              "values": {
                                "COVERAGE_TYPE_UNSPECIFIED": 0,
                                "INTENT": 1,
                                "PAGE_TRANSITION": 2,
                                "TRANSITION_ROUTE_GROUP": 3
                              }
                            }
                          }
                        },
                        "CalculateCoverageResponse": {
                          "oneofs": {
                            "coverageType": {
                              "oneof": [
                                "intentCoverage",
                                "transitionCoverage",
                                "routeGroupCoverage"
                              ]
                            }
                          },
                          "fields": {
                            "agent": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Agent"
                              }
                            },
                            "intentCoverage": {
                              "type": "IntentCoverage",
                              "id": 2
                            },
                            "transitionCoverage": {
                              "type": "TransitionCoverage",
                              "id": 4
                            },
                            "routeGroupCoverage": {
                              "type": "TransitionRouteGroupCoverage",
                              "id": 6
                            }
                          }
                        },
                        "ListTestCasesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            },
                            "view": {
                              "type": "TestCaseView",
                              "id": 4
                            }
                          },
                          "nested": {
                            "TestCaseView": {
                              "values": {
                                "TEST_CASE_VIEW_UNSPECIFIED": 0,
                                "BASIC": 1,
                                "FULL": 2
                              }
                            }
                          }
                        },
                        "ListTestCasesResponse": {
                          "fields": {
                            "testCases": {
                              "rule": "repeated",
                              "type": "TestCase",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "BatchDeleteTestCasesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "names": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                              }
                            }
                          }
                        },
                        "CreateTestCaseRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "testCase": {
                              "type": "TestCase",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateTestCaseRequest": {
                          "fields": {
                            "testCase": {
                              "type": "TestCase",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "GetTestCaseRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                              }
                            }
                          }
                        },
                        "RunTestCaseRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "environment": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            }
                          }
                        },
                        "RunTestCaseResponse": {
                          "fields": {
                            "result": {
                              "type": "TestCaseResult",
                              "id": 2
                            }
                          }
                        },
                        "RunTestCaseMetadata": {
                          "fields": {}
                        },
                        "BatchRunTestCasesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "environment": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Environment"
                              }
                            },
                            "testCases": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                              }
                            }
                          }
                        },
                        "BatchRunTestCasesResponse": {
                          "fields": {
                            "results": {
                              "rule": "repeated",
                              "type": "TestCaseResult",
                              "id": 1
                            }
                          }
                        },
                        "BatchRunTestCasesMetadata": {
                          "fields": {
                            "errors": {
                              "rule": "repeated",
                              "type": "TestError",
                              "id": 1
                            }
                          }
                        },
                        "TestError": {
                          "fields": {
                            "testCase": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "status": {
                              "type": "google.rpc.Status",
                              "id": 2
                            },
                            "testTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        },
                        "ImportTestCasesRequest": {
                          "oneofs": {
                            "source": {
                              "oneof": [
                                "gcsUri",
                                "content"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "gcsUri": {
                              "type": "string",
                              "id": 2
                            },
                            "content": {
                              "type": "bytes",
                              "id": 3
                            }
                          }
                        },
                        "ImportTestCasesResponse": {
                          "fields": {
                            "names": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCase"
                              }
                            }
                          }
                        },
                        "ImportTestCasesMetadata": {
                          "fields": {
                            "errors": {
                              "rule": "repeated",
                              "type": "TestCaseError",
                              "id": 1
                            }
                          }
                        },
                        "TestCaseError": {
                          "fields": {
                            "testCase": {
                              "type": "TestCase",
                              "id": 1
                            },
                            "status": {
                              "type": "google.rpc.Status",
                              "id": 2
                            }
                          }
                        },
                        "ExportTestCasesRequest": {
                          "oneofs": {
                            "destination": {
                              "oneof": [
                                "gcsUri"
                              ]
                            }
                          },
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCase"
                              }
                            },
                            "gcsUri": {
                              "type": "string",
                              "id": 2
                            },
                            "dataFormat": {
                              "type": "DataFormat",
                              "id": 3
                            },
                            "filter": {
                              "type": "string",
                              "id": 4
                            }
                          },
                          "nested": {
                            "DataFormat": {
                              "values": {
                                "DATA_FORMAT_UNSPECIFIED": 0,
                                "BLOB": 1,
                                "JSON": 2
                              }
                            }
                          }
                        },
                        "ExportTestCasesResponse": {
                          "oneofs": {
                            "destination": {
                              "oneof": [
                                "gcsUri",
                                "content"
                              ]
                            }
                          },
                          "fields": {
                            "gcsUri": {
                              "type": "string",
                              "id": 1
                            },
                            "content": {
                              "type": "bytes",
                              "id": 2
                            }
                          }
                        },
                        "ExportTestCasesMetadata": {
                          "fields": {}
                        },
                        "ListTestCaseResultsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TestCaseResult"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            },
                            "filter": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListTestCaseResultsResponse": {
                          "fields": {
                            "testCaseResults": {
                              "rule": "repeated",
                              "type": "TestCaseResult",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetTestCaseResultRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TestCaseResult"
                              }
                            }
                          }
                        },
                        "TestResult": {
                          "values": {
                            "TEST_RESULT_UNSPECIFIED": 0,
                            "PASSED": 1,
                            "FAILED": 2
                          }
                        },
                        "Intents": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListIntents": {
                              "requestType": "ListIntentsRequest",
                              "responseType": "ListIntentsResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/intents",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/intents"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetIntent": {
                              "requestType": "GetIntentRequest",
                              "responseType": "Intent",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/intents/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/intents/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateIntent": {
                              "requestType": "CreateIntentRequest",
                              "responseType": "Intent",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/intents",
                                "(google.api.http).body": "intent",
                                "(google.api.method_signature)": "parent,intent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/intents",
                                    "body": "intent"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,intent"
                                }
                              ]
                            },
                            "UpdateIntent": {
                              "requestType": "UpdateIntentRequest",
                              "responseType": "Intent",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{intent.name=projects/*/locations/*/agents/*/intents/*}",
                                "(google.api.http).body": "intent",
                                "(google.api.method_signature)": "intent,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{intent.name=projects/*/locations/*/agents/*/intents/*}",
                                    "body": "intent"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "intent,update_mask"
                                }
                              ]
                            },
                            "DeleteIntent": {
                              "requestType": "DeleteIntentRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3beta1/{name=projects/*/locations/*/agents/*/intents/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3beta1/{name=projects/*/locations/*/agents/*/intents/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "Intent": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Intent",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/intents/{intent}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "trainingPhrases": {
                              "rule": "repeated",
                              "type": "TrainingPhrase",
                              "id": 3
                            },
                            "parameters": {
                              "rule": "repeated",
                              "type": "Parameter",
                              "id": 4
                            },
                            "priority": {
                              "type": "int32",
                              "id": 5
                            },
                            "isFallback": {
                              "type": "bool",
                              "id": 6
                            },
                            "labels": {
                              "keyType": "string",
                              "type": "string",
                              "id": 7
                            },
                            "description": {
                              "type": "string",
                              "id": 8
                            }
                          },
                          "nested": {
                            "TrainingPhrase": {
                              "fields": {
                                "id": {
                                  "type": "string",
                                  "id": 1
                                },
                                "parts": {
                                  "rule": "repeated",
                                  "type": "Part",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "repeatCount": {
                                  "type": "int32",
                                  "id": 3
                                }
                              },
                              "nested": {
                                "Part": {
                                  "fields": {
                                    "text": {
                                      "type": "string",
                                      "id": 1,
                                      "options": {
                                        "(google.api.field_behavior)": "REQUIRED"
                                      }
                                    },
                                    "parameterId": {
                                      "type": "string",
                                      "id": 2
                                    }
                                  }
                                }
                              }
                            },
                            "Parameter": {
                              "fields": {
                                "id": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "entityType": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED",
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/EntityType"
                                  }
                                },
                                "isList": {
                                  "type": "bool",
                                  "id": 3
                                },
                                "redact": {
                                  "type": "bool",
                                  "id": 4
                                }
                              }
                            }
                          }
                        },
                        "ListIntentsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "intentView": {
                              "type": "IntentView",
                              "id": 5
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 3
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListIntentsResponse": {
                          "fields": {
                            "intents": {
                              "rule": "repeated",
                              "type": "Intent",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetIntentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "CreateIntentRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "intent": {
                              "type": "Intent",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "UpdateIntentRequest": {
                          "fields": {
                            "intent": {
                              "type": "Intent",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 3
                            }
                          }
                        },
                        "DeleteIntentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            }
                          }
                        },
                        "IntentView": {
                          "values": {
                            "INTENT_VIEW_UNSPECIFIED": 0,
                            "INTENT_VIEW_PARTIAL": 1,
                            "INTENT_VIEW_FULL": 2
                          }
                        },
                        "Sessions": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "DetectIntent": {
                              "requestType": "DetectIntentRequest",
                              "responseType": "DetectIntentResponse",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{session=projects/*/locations/*/agents/*/sessions/*}:detectIntent",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v3beta1/{session=projects/*/locations/*/agents/*/environments/*/sessions/*}:detectIntent",
                                "(google.api.http).additional_bindings.body": "*"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{session=projects/*/locations/*/agents/*/sessions/*}:detectIntent",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v3beta1/{session=projects/*/locations/*/agents/*/environments/*/sessions/*}:detectIntent",
                                      "body": "*"
                                    }
                                  }
                                }
                              ]
                            },
                            "StreamingDetectIntent": {
                              "requestType": "StreamingDetectIntentRequest",
                              "requestStream": true,
                              "responseType": "StreamingDetectIntentResponse",
                              "responseStream": true
                            },
                            "MatchIntent": {
                              "requestType": "MatchIntentRequest",
                              "responseType": "MatchIntentResponse",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{session=projects/*/locations/*/agents/*/sessions/*}:matchIntent",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v3beta1/{session=projects/*/locations/*/agents/*/environments/*/sessions/*}:matchIntent",
                                "(google.api.http).additional_bindings.body": "*"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{session=projects/*/locations/*/agents/*/sessions/*}:matchIntent",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v3beta1/{session=projects/*/locations/*/agents/*/environments/*/sessions/*}:matchIntent",
                                      "body": "*"
                                    }
                                  }
                                }
                              ]
                            },
                            "FulfillIntent": {
                              "requestType": "FulfillIntentRequest",
                              "responseType": "FulfillIntentResponse",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{match_intent_request.session=projects/*/locations/*/agents/*/sessions/*}:fulfillIntent",
                                "(google.api.http).body": "*",
                                "(google.api.http).additional_bindings.post": "/v3beta1/{match_intent_request.session=projects/*/locations/*/agents/*/environments/*/sessions/*}:fulfillIntent",
                                "(google.api.http).additional_bindings.body": "*"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{match_intent_request.session=projects/*/locations/*/agents/*/sessions/*}:fulfillIntent",
                                    "body": "*",
                                    "additional_bindings": {
                                      "post": "/v3beta1/{match_intent_request.session=projects/*/locations/*/agents/*/environments/*/sessions/*}:fulfillIntent",
                                      "body": "*"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "DetectIntentRequest": {
                          "fields": {
                            "session": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Session"
                              }
                            },
                            "queryParams": {
                              "type": "QueryParameters",
                              "id": 2
                            },
                            "queryInput": {
                              "type": "QueryInput",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "outputAudioConfig": {
                              "type": "OutputAudioConfig",
                              "id": 4
                            }
                          }
                        },
                        "DetectIntentResponse": {
                          "fields": {
                            "responseId": {
                              "type": "string",
                              "id": 1
                            },
                            "queryResult": {
                              "type": "QueryResult",
                              "id": 2
                            },
                            "outputAudio": {
                              "type": "bytes",
                              "id": 4
                            },
                            "outputAudioConfig": {
                              "type": "OutputAudioConfig",
                              "id": 5
                            },
                            "responseType": {
                              "type": "ResponseType",
                              "id": 6
                            },
                            "allowCancellation": {
                              "type": "bool",
                              "id": 7
                            }
                          },
                          "nested": {
                            "ResponseType": {
                              "values": {
                                "RESPONSE_TYPE_UNSPECIFIED": 0,
                                "PARTIAL": 1,
                                "FINAL": 2
                              }
                            }
                          }
                        },
                        "StreamingDetectIntentRequest": {
                          "fields": {
                            "session": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Session"
                              }
                            },
                            "queryParams": {
                              "type": "QueryParameters",
                              "id": 2
                            },
                            "queryInput": {
                              "type": "QueryInput",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "outputAudioConfig": {
                              "type": "OutputAudioConfig",
                              "id": 4
                            },
                            "enablePartialResponse": {
                              "type": "bool",
                              "id": 5
                            },
                            "enableDebuggingInfo": {
                              "type": "bool",
                              "id": 8
                            }
                          }
                        },
                        "CloudConversationDebuggingInfo": {
                          "fields": {
                            "audioDataChunks": {
                              "type": "int32",
                              "id": 1
                            },
                            "resultEndTimeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 2
                            },
                            "firstAudioDuration": {
                              "type": "google.protobuf.Duration",
                              "id": 3
                            },
                            "singleUtterance": {
                              "type": "bool",
                              "id": 5
                            },
                            "speechPartialResultsEndTimes": {
                              "rule": "repeated",
                              "type": "google.protobuf.Duration",
                              "id": 6
                            },
                            "speechFinalResultsEndTimes": {
                              "rule": "repeated",
                              "type": "google.protobuf.Duration",
                              "id": 7
                            },
                            "partialResponses": {
                              "type": "int32",
                              "id": 8
                            },
                            "speakerIdPassiveLatencyMsOffset": {
                              "type": "int32",
                              "id": 9
                            },
                            "bargeinEventTriggered": {
                              "type": "bool",
                              "id": 10
                            },
                            "speechSingleUtterance": {
                              "type": "bool",
                              "id": 11
                            },
                            "dtmfPartialResultsTimes": {
                              "rule": "repeated",
                              "type": "google.protobuf.Duration",
                              "id": 12
                            },
                            "dtmfFinalResultsTimes": {
                              "rule": "repeated",
                              "type": "google.protobuf.Duration",
                              "id": 13
                            },
                            "singleUtteranceEndTimeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 14
                            },
                            "noSpeechTimeout": {
                              "type": "google.protobuf.Duration",
                              "id": 15
                            },
                            "isInputText": {
                              "type": "bool",
                              "id": 16
                            },
                            "clientHalfCloseTimeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 17
                            },
                            "clientHalfCloseStreamingTimeOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 18
                            }
                          }
                        },
                        "StreamingDetectIntentResponse": {
                          "oneofs": {
                            "response": {
                              "oneof": [
                                "recognitionResult",
                                "detectIntentResponse"
                              ]
                            }
                          },
                          "fields": {
                            "recognitionResult": {
                              "type": "StreamingRecognitionResult",
                              "id": 1
                            },
                            "detectIntentResponse": {
                              "type": "DetectIntentResponse",
                              "id": 2
                            },
                            "debuggingInfo": {
                              "type": "CloudConversationDebuggingInfo",
                              "id": 4
                            }
                          }
                        },
                        "StreamingRecognitionResult": {
                          "fields": {
                            "messageType": {
                              "type": "MessageType",
                              "id": 1
                            },
                            "transcript": {
                              "type": "string",
                              "id": 2
                            },
                            "isFinal": {
                              "type": "bool",
                              "id": 3
                            },
                            "confidence": {
                              "type": "float",
                              "id": 4
                            },
                            "stability": {
                              "type": "float",
                              "id": 6
                            },
                            "speechWordInfo": {
                              "rule": "repeated",
                              "type": "SpeechWordInfo",
                              "id": 7
                            },
                            "speechEndOffset": {
                              "type": "google.protobuf.Duration",
                              "id": 8
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 10
                            }
                          },
                          "nested": {
                            "MessageType": {
                              "values": {
                                "MESSAGE_TYPE_UNSPECIFIED": 0,
                                "TRANSCRIPT": 1,
                                "END_OF_SINGLE_UTTERANCE": 2
                              }
                            }
                          }
                        },
                        "QueryParameters": {
                          "fields": {
                            "timeZone": {
                              "type": "string",
                              "id": 1
                            },
                            "geoLocation": {
                              "type": "google.type.LatLng",
                              "id": 2
                            },
                            "sessionEntityTypes": {
                              "rule": "repeated",
                              "type": "SessionEntityType",
                              "id": 3
                            },
                            "payload": {
                              "type": "google.protobuf.Struct",
                              "id": 4
                            },
                            "parameters": {
                              "type": "google.protobuf.Struct",
                              "id": 5
                            },
                            "currentPage": {
                              "type": "string",
                              "id": 6,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "disableWebhook": {
                              "type": "bool",
                              "id": 7
                            },
                            "analyzeQueryTextSentiment": {
                              "type": "bool",
                              "id": 8
                            },
                            "webhookHeaders": {
                              "keyType": "string",
                              "type": "string",
                              "id": 10
                            },
                            "flowVersions": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 14,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "channel": {
                              "type": "string",
                              "id": 15
                            },
                            "sessionTtl": {
                              "type": "google.protobuf.Duration",
                              "id": 16,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "QueryInput": {
                          "oneofs": {
                            "input": {
                              "oneof": [
                                "text",
                                "intent",
                                "audio",
                                "event",
                                "dtmf"
                              ]
                            }
                          },
                          "fields": {
                            "text": {
                              "type": "TextInput",
                              "id": 2
                            },
                            "intent": {
                              "type": "IntentInput",
                              "id": 3
                            },
                            "audio": {
                              "type": "AudioInput",
                              "id": 5
                            },
                            "event": {
                              "type": "EventInput",
                              "id": 6
                            },
                            "dtmf": {
                              "type": "DtmfInput",
                              "id": 7
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "QueryResult": {
                          "oneofs": {
                            "query": {
                              "oneof": [
                                "text",
                                "triggerIntent",
                                "transcript",
                                "triggerEvent",
                                "dtmf"
                              ]
                            }
                          },
                          "fields": {
                            "text": {
                              "type": "string",
                              "id": 1
                            },
                            "triggerIntent": {
                              "type": "string",
                              "id": 11,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "transcript": {
                              "type": "string",
                              "id": 12
                            },
                            "triggerEvent": {
                              "type": "string",
                              "id": 14
                            },
                            "dtmf": {
                              "type": "DtmfInput",
                              "id": 23
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            },
                            "parameters": {
                              "type": "google.protobuf.Struct",
                              "id": 3
                            },
                            "responseMessages": {
                              "rule": "repeated",
                              "type": "ResponseMessage",
                              "id": 4
                            },
                            "webhookStatuses": {
                              "rule": "repeated",
                              "type": "google.rpc.Status",
                              "id": 13
                            },
                            "webhookPayloads": {
                              "rule": "repeated",
                              "type": "google.protobuf.Struct",
                              "id": 6
                            },
                            "currentPage": {
                              "type": "Page",
                              "id": 7
                            },
                            "intent": {
                              "type": "Intent",
                              "id": 8,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "intentDetectionConfidence": {
                              "type": "float",
                              "id": 9,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "match": {
                              "type": "Match",
                              "id": 15
                            },
                            "diagnosticInfo": {
                              "type": "google.protobuf.Struct",
                              "id": 10
                            },
                            "sentimentAnalysisResult": {
                              "type": "SentimentAnalysisResult",
                              "id": 17
                            }
                          }
                        },
                        "TextInput": {
                          "fields": {
                            "text": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "IntentInput": {
                          "fields": {
                            "intent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            }
                          }
                        },
                        "AudioInput": {
                          "fields": {
                            "config": {
                              "type": "InputAudioConfig",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "audio": {
                              "type": "bytes",
                              "id": 2
                            }
                          }
                        },
                        "EventInput": {
                          "fields": {
                            "event": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "DtmfInput": {
                          "fields": {
                            "digits": {
                              "type": "string",
                              "id": 1
                            },
                            "finishDigit": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "Match": {
                          "fields": {
                            "intent": {
                              "type": "Intent",
                              "id": 1
                            },
                            "event": {
                              "type": "string",
                              "id": 6
                            },
                            "parameters": {
                              "type": "google.protobuf.Struct",
                              "id": 2
                            },
                            "resolvedInput": {
                              "type": "string",
                              "id": 3
                            },
                            "matchType": {
                              "type": "MatchType",
                              "id": 4
                            },
                            "confidence": {
                              "type": "float",
                              "id": 5
                            }
                          },
                          "nested": {
                            "MatchType": {
                              "values": {
                                "MATCH_TYPE_UNSPECIFIED": 0,
                                "INTENT": 1,
                                "DIRECT_INTENT": 2,
                                "PARAMETER_FILLING": 3,
                                "NO_MATCH": 4,
                                "NO_INPUT": 5,
                                "EVENT": 6
                              }
                            }
                          }
                        },
                        "MatchIntentRequest": {
                          "fields": {
                            "session": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Session"
                              }
                            },
                            "queryParams": {
                              "type": "QueryParameters",
                              "id": 2
                            },
                            "queryInput": {
                              "type": "QueryInput",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "persistParameterChanges": {
                              "type": "bool",
                              "id": 5
                            }
                          }
                        },
                        "MatchIntentResponse": {
                          "oneofs": {
                            "query": {
                              "oneof": [
                                "text",
                                "triggerIntent",
                                "transcript",
                                "triggerEvent"
                              ]
                            }
                          },
                          "fields": {
                            "text": {
                              "type": "string",
                              "id": 1
                            },
                            "triggerIntent": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "transcript": {
                              "type": "string",
                              "id": 3
                            },
                            "triggerEvent": {
                              "type": "string",
                              "id": 6
                            },
                            "matches": {
                              "rule": "repeated",
                              "type": "Match",
                              "id": 4
                            },
                            "currentPage": {
                              "type": "Page",
                              "id": 5
                            }
                          }
                        },
                        "FulfillIntentRequest": {
                          "fields": {
                            "matchIntentRequest": {
                              "type": "MatchIntentRequest",
                              "id": 1
                            },
                            "match": {
                              "type": "Match",
                              "id": 2
                            },
                            "outputAudioConfig": {
                              "type": "OutputAudioConfig",
                              "id": 3
                            }
                          }
                        },
                        "FulfillIntentResponse": {
                          "fields": {
                            "responseId": {
                              "type": "string",
                              "id": 1
                            },
                            "queryResult": {
                              "type": "QueryResult",
                              "id": 2
                            },
                            "outputAudio": {
                              "type": "bytes",
                              "id": 3
                            },
                            "outputAudioConfig": {
                              "type": "OutputAudioConfig",
                              "id": 4
                            }
                          }
                        },
                        "SentimentAnalysisResult": {
                          "fields": {
                            "score": {
                              "type": "float",
                              "id": 1
                            },
                            "magnitude": {
                              "type": "float",
                              "id": 2
                            }
                          }
                        },
                        "SessionEntityTypes": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListSessionEntityTypes": {
                              "requestType": "ListSessionEntityTypesRequest",
                              "responseType": "ListSessionEntityTypesResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*/sessions/*}/entityTypes",
                                "(google.api.http).additional_bindings.get": "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*/sessions/*}/entityTypes",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*/sessions/*}/entityTypes",
                                    "additional_bindings": {
                                      "get": "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*/sessions/*}/entityTypes"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetSessionEntityType": {
                              "requestType": "GetSessionEntityTypeRequest",
                              "responseType": "SessionEntityType",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}",
                                "(google.api.http).additional_bindings.get": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}",
                                    "additional_bindings": {
                                      "get": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateSessionEntityType": {
                              "requestType": "CreateSessionEntityTypeRequest",
                              "responseType": "SessionEntityType",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*/sessions/*}/entityTypes",
                                "(google.api.http).body": "session_entity_type",
                                "(google.api.http).additional_bindings.post": "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*/sessions/*}/entityTypes",
                                "(google.api.http).additional_bindings.body": "session_entity_type",
                                "(google.api.method_signature)": "parent,session_entity_type"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*/sessions/*}/entityTypes",
                                    "body": "session_entity_type",
                                    "additional_bindings": {
                                      "post": "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*/sessions/*}/entityTypes",
                                      "body": "session_entity_type"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,session_entity_type"
                                }
                              ]
                            },
                            "UpdateSessionEntityType": {
                              "requestType": "UpdateSessionEntityTypeRequest",
                              "responseType": "SessionEntityType",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{session_entity_type.name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}",
                                "(google.api.http).body": "session_entity_type",
                                "(google.api.http).additional_bindings.patch": "/v3beta1/{session_entity_type.name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}",
                                "(google.api.http).additional_bindings.body": "session_entity_type",
                                "(google.api.method_signature)": "session_entity_type,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{session_entity_type.name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}",
                                    "body": "session_entity_type",
                                    "additional_bindings": {
                                      "patch": "/v3beta1/{session_entity_type.name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}",
                                      "body": "session_entity_type"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "session_entity_type,update_mask"
                                }
                              ]
                            },
                            "DeleteSessionEntityType": {
                              "requestType": "DeleteSessionEntityTypeRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3beta1/{name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}",
                                "(google.api.http).additional_bindings.delete": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3beta1/{name=projects/*/locations/*/agents/*/sessions/*/entityTypes/*}",
                                    "additional_bindings": {
                                      "delete": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/sessions/*/entityTypes/*}"
                                    }
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "SessionEntityType": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/SessionEntityType",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/environments/{environment}/sessions/{session}/entityTypes/{entity_type}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "entityOverrideMode": {
                              "type": "EntityOverrideMode",
                              "id": 3,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "entities": {
                              "rule": "repeated",
                              "type": "EntityType.Entity",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          },
                          "nested": {
                            "EntityOverrideMode": {
                              "values": {
                                "ENTITY_OVERRIDE_MODE_UNSPECIFIED": 0,
                                "ENTITY_OVERRIDE_MODE_OVERRIDE": 1,
                                "ENTITY_OVERRIDE_MODE_SUPPLEMENT": 2
                              }
                            }
                          }
                        },
                        "ListSessionEntityTypesRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/SessionEntityType"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListSessionEntityTypesResponse": {
                          "fields": {
                            "sessionEntityTypes": {
                              "rule": "repeated",
                              "type": "SessionEntityType",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetSessionEntityTypeRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/SessionEntityType"
                              }
                            }
                          }
                        },
                        "CreateSessionEntityTypeRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/SessionEntityType"
                              }
                            },
                            "sessionEntityType": {
                              "type": "SessionEntityType",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateSessionEntityTypeRequest": {
                          "fields": {
                            "sessionEntityType": {
                              "type": "SessionEntityType",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            }
                          }
                        },
                        "DeleteSessionEntityTypeRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/SessionEntityType"
                              }
                            }
                          }
                        },
                        "TransitionRouteGroups": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListTransitionRouteGroups": {
                              "requestType": "ListTransitionRouteGroupsRequest",
                              "responseType": "ListTransitionRouteGroupsResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*/flows/*}/transitionRouteGroups",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*/flows/*}/transitionRouteGroups"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetTransitionRouteGroup": {
                              "requestType": "GetTransitionRouteGroupRequest",
                              "responseType": "TransitionRouteGroup",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/transitionRouteGroups/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/transitionRouteGroups/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateTransitionRouteGroup": {
                              "requestType": "CreateTransitionRouteGroupRequest",
                              "responseType": "TransitionRouteGroup",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*/flows/*}/transitionRouteGroups",
                                "(google.api.http).body": "transition_route_group",
                                "(google.api.method_signature)": "parent,transition_route_group"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*/flows/*}/transitionRouteGroups",
                                    "body": "transition_route_group"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,transition_route_group"
                                }
                              ]
                            },
                            "UpdateTransitionRouteGroup": {
                              "requestType": "UpdateTransitionRouteGroupRequest",
                              "responseType": "TransitionRouteGroup",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{transition_route_group.name=projects/*/locations/*/agents/*/flows/*/transitionRouteGroups/*}",
                                "(google.api.http).body": "transition_route_group",
                                "(google.api.method_signature)": "transition_route_group,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{transition_route_group.name=projects/*/locations/*/agents/*/flows/*/transitionRouteGroups/*}",
                                    "body": "transition_route_group"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "transition_route_group,update_mask"
                                }
                              ]
                            },
                            "DeleteTransitionRouteGroup": {
                              "requestType": "DeleteTransitionRouteGroupRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/transitionRouteGroups/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/transitionRouteGroups/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "TransitionRouteGroup": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/TransitionRouteGroup",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/flows/{flow}/transitionRouteGroups/{transition_route_group}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "transitionRoutes": {
                              "rule": "repeated",
                              "type": "TransitionRoute",
                              "id": 5
                            }
                          }
                        },
                        "ListTransitionRouteGroupsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TransitionRouteGroup"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 4
                            }
                          }
                        },
                        "ListTransitionRouteGroupsResponse": {
                          "fields": {
                            "transitionRouteGroups": {
                              "rule": "repeated",
                              "type": "TransitionRouteGroup",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetTransitionRouteGroupRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TransitionRouteGroup"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "CreateTransitionRouteGroupRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/TransitionRouteGroup"
                              }
                            },
                            "transitionRouteGroup": {
                              "type": "TransitionRouteGroup",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "UpdateTransitionRouteGroupRequest": {
                          "fields": {
                            "transitionRouteGroup": {
                              "type": "TransitionRouteGroup",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "DeleteTransitionRouteGroupRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/TransitionRouteGroup"
                              }
                            },
                            "force": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "Webhooks": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListWebhooks": {
                              "requestType": "ListWebhooksRequest",
                              "responseType": "ListWebhooksResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/webhooks",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*}/webhooks"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetWebhook": {
                              "requestType": "GetWebhookRequest",
                              "responseType": "Webhook",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/webhooks/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/webhooks/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateWebhook": {
                              "requestType": "CreateWebhookRequest",
                              "responseType": "Webhook",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/webhooks",
                                "(google.api.http).body": "webhook",
                                "(google.api.method_signature)": "parent,webhook"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*}/webhooks",
                                    "body": "webhook"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,webhook"
                                }
                              ]
                            },
                            "UpdateWebhook": {
                              "requestType": "UpdateWebhookRequest",
                              "responseType": "Webhook",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{webhook.name=projects/*/locations/*/agents/*/webhooks/*}",
                                "(google.api.http).body": "webhook",
                                "(google.api.method_signature)": "webhook,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{webhook.name=projects/*/locations/*/agents/*/webhooks/*}",
                                    "body": "webhook"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "webhook,update_mask"
                                }
                              ]
                            },
                            "DeleteWebhook": {
                              "requestType": "DeleteWebhookRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3beta1/{name=projects/*/locations/*/agents/*/webhooks/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3beta1/{name=projects/*/locations/*/agents/*/webhooks/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "Webhook": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Webhook",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/webhooks/{webhook}"
                          },
                          "oneofs": {
                            "webhook": {
                              "oneof": [
                                "genericWebService",
                                "serviceDirectory"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "genericWebService": {
                              "type": "GenericWebService",
                              "id": 4
                            },
                            "serviceDirectory": {
                              "type": "ServiceDirectoryConfig",
                              "id": 7
                            },
                            "timeout": {
                              "type": "google.protobuf.Duration",
                              "id": 6
                            },
                            "disabled": {
                              "type": "bool",
                              "id": 5
                            }
                          },
                          "nested": {
                            "GenericWebService": {
                              "fields": {
                                "uri": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED"
                                  }
                                },
                                "username": {
                                  "type": "string",
                                  "id": 2,
                                  "options": {
                                    "deprecated": true
                                  }
                                },
                                "password": {
                                  "type": "string",
                                  "id": 3,
                                  "options": {
                                    "deprecated": true
                                  }
                                },
                                "requestHeaders": {
                                  "keyType": "string",
                                  "type": "string",
                                  "id": 4
                                },
                                "allowedCaCerts": {
                                  "rule": "repeated",
                                  "type": "bytes",
                                  "id": 5,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "webhookType": {
                                  "type": "WebhookType",
                                  "id": 6,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "httpMethod": {
                                  "type": "HttpMethod",
                                  "id": 7,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "requestBody": {
                                  "type": "string",
                                  "id": 8,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                },
                                "parameterMapping": {
                                  "keyType": "string",
                                  "type": "string",
                                  "id": 9,
                                  "options": {
                                    "(google.api.field_behavior)": "OPTIONAL"
                                  }
                                }
                              },
                              "nested": {
                                "WebhookType": {
                                  "values": {
                                    "WEBHOOK_TYPE_UNSPECIFIED": 0,
                                    "STANDARD": 1,
                                    "FLEXIBLE": 2
                                  }
                                },
                                "HttpMethod": {
                                  "values": {
                                    "HTTP_METHOD_UNSPECIFIED": 0,
                                    "POST": 1,
                                    "GET": 2,
                                    "HEAD": 3,
                                    "PUT": 4,
                                    "DELETE": 5,
                                    "PATCH": 6,
                                    "OPTIONS": 7
                                  }
                                }
                              }
                            },
                            "ServiceDirectoryConfig": {
                              "fields": {
                                "service": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.field_behavior)": "REQUIRED",
                                    "(google.api.resource_reference).type": "servicedirectory.googleapis.com/Service"
                                  }
                                },
                                "genericWebService": {
                                  "type": "GenericWebService",
                                  "id": 2
                                }
                              }
                            }
                          }
                        },
                        "ListWebhooksRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Webhook"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListWebhooksResponse": {
                          "fields": {
                            "webhooks": {
                              "rule": "repeated",
                              "type": "Webhook",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetWebhookRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Webhook"
                              }
                            }
                          }
                        },
                        "CreateWebhookRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Webhook"
                              }
                            },
                            "webhook": {
                              "type": "Webhook",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateWebhookRequest": {
                          "fields": {
                            "webhook": {
                              "type": "Webhook",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2
                            }
                          }
                        },
                        "DeleteWebhookRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Webhook"
                              }
                            },
                            "force": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "WebhookRequest": {
                          "oneofs": {
                            "query": {
                              "oneof": [
                                "text",
                                "triggerIntent",
                                "transcript",
                                "triggerEvent",
                                "dtmfDigits"
                              ]
                            }
                          },
                          "fields": {
                            "detectIntentResponseId": {
                              "type": "string",
                              "id": 1
                            },
                            "text": {
                              "type": "string",
                              "id": 10
                            },
                            "triggerIntent": {
                              "type": "string",
                              "id": 11,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                              }
                            },
                            "transcript": {
                              "type": "string",
                              "id": 12
                            },
                            "triggerEvent": {
                              "type": "string",
                              "id": 14
                            },
                            "dtmfDigits": {
                              "type": "string",
                              "id": 17
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 15
                            },
                            "fulfillmentInfo": {
                              "type": "FulfillmentInfo",
                              "id": 6
                            },
                            "intentInfo": {
                              "type": "IntentInfo",
                              "id": 3
                            },
                            "pageInfo": {
                              "type": "PageInfo",
                              "id": 4
                            },
                            "sessionInfo": {
                              "type": "SessionInfo",
                              "id": 5
                            },
                            "messages": {
                              "rule": "repeated",
                              "type": "ResponseMessage",
                              "id": 7
                            },
                            "payload": {
                              "type": "google.protobuf.Struct",
                              "id": 8
                            },
                            "sentimentAnalysisResult": {
                              "type": "SentimentAnalysisResult",
                              "id": 9
                            }
                          },
                          "nested": {
                            "FulfillmentInfo": {
                              "fields": {
                                "tag": {
                                  "type": "string",
                                  "id": 1
                                }
                              }
                            },
                            "IntentInfo": {
                              "fields": {
                                "lastMatchedIntent": {
                                  "type": "string",
                                  "id": 1,
                                  "options": {
                                    "(google.api.resource_reference).type": "dialogflow.googleapis.com/Intent"
                                  }
                                },
                                "displayName": {
                                  "type": "string",
                                  "id": 3
                                },
                                "parameters": {
                                  "keyType": "string",
                                  "type": "IntentParameterValue",
                                  "id": 2
                                },
                                "confidence": {
                                  "type": "float",
                                  "id": 4
                                }
                              },
                              "nested": {
                                "IntentParameterValue": {
                                  "fields": {
                                    "originalValue": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "resolvedValue": {
                                      "type": "google.protobuf.Value",
                                      "id": 2
                                    }
                                  }
                                }
                              }
                            },
                            "SentimentAnalysisResult": {
                              "fields": {
                                "score": {
                                  "type": "float",
                                  "id": 1
                                },
                                "magnitude": {
                                  "type": "float",
                                  "id": 2
                                }
                              }
                            }
                          }
                        },
                        "WebhookResponse": {
                          "oneofs": {
                            "transition": {
                              "oneof": [
                                "targetPage",
                                "targetFlow"
                              ]
                            }
                          },
                          "fields": {
                            "fulfillmentResponse": {
                              "type": "FulfillmentResponse",
                              "id": 1
                            },
                            "pageInfo": {
                              "type": "PageInfo",
                              "id": 2
                            },
                            "sessionInfo": {
                              "type": "SessionInfo",
                              "id": 3
                            },
                            "payload": {
                              "type": "google.protobuf.Struct",
                              "id": 4
                            },
                            "targetPage": {
                              "type": "string",
                              "id": 5,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "targetFlow": {
                              "type": "string",
                              "id": 6,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Flow"
                              }
                            }
                          },
                          "nested": {
                            "FulfillmentResponse": {
                              "fields": {
                                "messages": {
                                  "rule": "repeated",
                                  "type": "ResponseMessage",
                                  "id": 1
                                },
                                "mergeBehavior": {
                                  "type": "MergeBehavior",
                                  "id": 2
                                }
                              },
                              "nested": {
                                "MergeBehavior": {
                                  "values": {
                                    "MERGE_BEHAVIOR_UNSPECIFIED": 0,
                                    "APPEND": 1,
                                    "REPLACE": 2
                                  }
                                }
                              }
                            }
                          }
                        },
                        "PageInfo": {
                          "fields": {
                            "currentPage": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Page"
                              }
                            },
                            "displayName": {
                              "type": "string",
                              "id": 4
                            },
                            "formInfo": {
                              "type": "FormInfo",
                              "id": 3
                            }
                          },
                          "nested": {
                            "FormInfo": {
                              "fields": {
                                "parameterInfo": {
                                  "rule": "repeated",
                                  "type": "ParameterInfo",
                                  "id": 2
                                }
                              },
                              "nested": {
                                "ParameterInfo": {
                                  "fields": {
                                    "displayName": {
                                      "type": "string",
                                      "id": 1
                                    },
                                    "required": {
                                      "type": "bool",
                                      "id": 2
                                    },
                                    "state": {
                                      "type": "ParameterState",
                                      "id": 3
                                    },
                                    "value": {
                                      "type": "google.protobuf.Value",
                                      "id": 4
                                    },
                                    "justCollected": {
                                      "type": "bool",
                                      "id": 5
                                    }
                                  },
                                  "nested": {
                                    "ParameterState": {
                                      "values": {
                                        "PARAMETER_STATE_UNSPECIFIED": 0,
                                        "EMPTY": 1,
                                        "INVALID": 2,
                                        "FILLED": 3
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "SessionInfo": {
                          "fields": {
                            "session": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Session"
                              }
                            },
                            "parameters": {
                              "keyType": "string",
                              "type": "google.protobuf.Value",
                              "id": 2
                            }
                          }
                        },
                        "Experiments": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListExperiments": {
                              "requestType": "ListExperimentsRequest",
                              "responseType": "ListExperimentsResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*}/experiments",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*}/experiments"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetExperiment": {
                              "requestType": "GetExperimentRequest",
                              "responseType": "Experiment",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateExperiment": {
                              "requestType": "CreateExperimentRequest",
                              "responseType": "Experiment",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*}/experiments",
                                "(google.api.http).body": "experiment",
                                "(google.api.method_signature)": "parent,experiment"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*/environments/*}/experiments",
                                    "body": "experiment"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,experiment"
                                }
                              ]
                            },
                            "UpdateExperiment": {
                              "requestType": "UpdateExperimentRequest",
                              "responseType": "Experiment",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{experiment.name=projects/*/locations/*/agents/*/environments/*/experiments/*}",
                                "(google.api.http).body": "experiment",
                                "(google.api.method_signature)": "experiment,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{experiment.name=projects/*/locations/*/agents/*/environments/*/experiments/*}",
                                    "body": "experiment"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "experiment,update_mask"
                                }
                              ]
                            },
                            "DeleteExperiment": {
                              "requestType": "DeleteExperimentRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "StartExperiment": {
                              "requestType": "StartExperimentRequest",
                              "responseType": "Experiment",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}:start",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}:start",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "StopExperiment": {
                              "requestType": "StopExperimentRequest",
                              "responseType": "Experiment",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}:stop",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{name=projects/*/locations/*/agents/*/environments/*/experiments/*}:stop",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "Experiment": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Experiment",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/environments/{environment}/experiments/{experiment}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 3
                            },
                            "state": {
                              "type": "State",
                              "id": 4
                            },
                            "definition": {
                              "type": "Definition",
                              "id": 5
                            },
                            "rolloutConfig": {
                              "type": "RolloutConfig",
                              "id": 14
                            },
                            "rolloutState": {
                              "type": "RolloutState",
                              "id": 15
                            },
                            "rolloutFailureReason": {
                              "type": "string",
                              "id": 16
                            },
                            "result": {
                              "type": "Result",
                              "id": 6
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 7
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 8
                            },
                            "endTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 9
                            },
                            "lastUpdateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 10
                            },
                            "experimentLength": {
                              "type": "google.protobuf.Duration",
                              "id": 11
                            },
                            "variantsHistory": {
                              "rule": "repeated",
                              "type": "VariantsHistory",
                              "id": 12
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "DRAFT": 1,
                                "RUNNING": 2,
                                "DONE": 3,
                                "ROLLOUT_FAILED": 4
                              }
                            },
                            "Definition": {
                              "oneofs": {
                                "variants": {
                                  "oneof": [
                                    "versionVariants"
                                  ]
                                }
                              },
                              "fields": {
                                "condition": {
                                  "type": "string",
                                  "id": 1
                                },
                                "versionVariants": {
                                  "type": "VersionVariants",
                                  "id": 2
                                }
                              }
                            },
                            "Result": {
                              "fields": {
                                "versionMetrics": {
                                  "rule": "repeated",
                                  "type": "VersionMetrics",
                                  "id": 1
                                },
                                "lastUpdateTime": {
                                  "type": "google.protobuf.Timestamp",
                                  "id": 2
                                }
                              },
                              "nested": {
                                "MetricType": {
                                  "values": {
                                    "METRIC_UNSPECIFIED": 0,
                                    "CONTAINED_SESSION_NO_CALLBACK_RATE": 1,
                                    "LIVE_AGENT_HANDOFF_RATE": 2,
                                    "CALLBACK_SESSION_RATE": 3,
                                    "ABANDONED_SESSION_RATE": 4,
                                    "SESSION_END_RATE": 5
                                  }
                                },
                                "CountType": {
                                  "values": {
                                    "COUNT_TYPE_UNSPECIFIED": 0,
                                    "TOTAL_NO_MATCH_COUNT": 1,
                                    "TOTAL_TURN_COUNT": 2,
                                    "AVERAGE_TURN_COUNT": 3
                                  }
                                },
                                "ConfidenceInterval": {
                                  "fields": {
                                    "confidenceLevel": {
                                      "type": "double",
                                      "id": 1
                                    },
                                    "ratio": {
                                      "type": "double",
                                      "id": 2
                                    },
                                    "lowerBound": {
                                      "type": "double",
                                      "id": 3
                                    },
                                    "upperBound": {
                                      "type": "double",
                                      "id": 4
                                    }
                                  }
                                },
                                "Metric": {
                                  "oneofs": {
                                    "value": {
                                      "oneof": [
                                        "ratio",
                                        "count"
                                      ]
                                    }
                                  },
                                  "fields": {
                                    "type": {
                                      "type": "MetricType",
                                      "id": 1
                                    },
                                    "countType": {
                                      "type": "CountType",
                                      "id": 5
                                    },
                                    "ratio": {
                                      "type": "double",
                                      "id": 2
                                    },
                                    "count": {
                                      "type": "double",
                                      "id": 4
                                    },
                                    "confidenceInterval": {
                                      "type": "ConfidenceInterval",
                                      "id": 3
                                    }
                                  }
                                },
                                "VersionMetrics": {
                                  "fields": {
                                    "version": {
                                      "type": "string",
                                      "id": 1,
                                      "options": {
                                        "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                                      }
                                    },
                                    "metrics": {
                                      "rule": "repeated",
                                      "type": "Metric",
                                      "id": 2
                                    },
                                    "sessionCount": {
                                      "type": "int32",
                                      "id": 3
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "VersionVariants": {
                          "fields": {
                            "variants": {
                              "rule": "repeated",
                              "type": "Variant",
                              "id": 1
                            }
                          },
                          "nested": {
                            "Variant": {
                              "fields": {
                                "version": {
                                  "type": "string",
                                  "id": 1
                                },
                                "trafficAllocation": {
                                  "type": "float",
                                  "id": 2
                                },
                                "isControlGroup": {
                                  "type": "bool",
                                  "id": 3
                                }
                              }
                            }
                          }
                        },
                        "RolloutConfig": {
                          "fields": {
                            "rolloutSteps": {
                              "rule": "repeated",
                              "type": "RolloutStep",
                              "id": 1
                            },
                            "rolloutCondition": {
                              "type": "string",
                              "id": 2
                            },
                            "failureCondition": {
                              "type": "string",
                              "id": 3
                            }
                          },
                          "nested": {
                            "RolloutStep": {
                              "fields": {
                                "displayName": {
                                  "type": "string",
                                  "id": 1
                                },
                                "trafficPercent": {
                                  "type": "int32",
                                  "id": 2
                                },
                                "minDuration": {
                                  "type": "google.protobuf.Duration",
                                  "id": 3
                                }
                              }
                            }
                          }
                        },
                        "RolloutState": {
                          "fields": {
                            "step": {
                              "type": "string",
                              "id": 1
                            },
                            "stepIndex": {
                              "type": "int32",
                              "id": 3
                            },
                            "startTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            }
                          }
                        },
                        "VariantsHistory": {
                          "oneofs": {
                            "variants": {
                              "oneof": [
                                "versionVariants"
                              ]
                            }
                          },
                          "fields": {
                            "versionVariants": {
                              "type": "VersionVariants",
                              "id": 1
                            },
                            "updateTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 2
                            }
                          }
                        },
                        "ListExperimentsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Experiment"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListExperimentsResponse": {
                          "fields": {
                            "experiments": {
                              "rule": "repeated",
                              "type": "Experiment",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetExperimentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Experiment"
                              }
                            }
                          }
                        },
                        "CreateExperimentRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Experiment"
                              }
                            },
                            "experiment": {
                              "type": "Experiment",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateExperimentRequest": {
                          "fields": {
                            "experiment": {
                              "type": "Experiment",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteExperimentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Experiment"
                              }
                            }
                          }
                        },
                        "StartExperimentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Experiment"
                              }
                            }
                          }
                        },
                        "StopExperimentRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Experiment"
                              }
                            }
                          }
                        },
                        "SecuritySettingsService": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "CreateSecuritySettings": {
                              "requestType": "CreateSecuritySettingsRequest",
                              "responseType": "SecuritySettings",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*}/securitySettings",
                                "(google.api.http).body": "security_settings",
                                "(google.api.method_signature)": "parent,security_settings"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*}/securitySettings",
                                    "body": "security_settings"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,security_settings"
                                }
                              ]
                            },
                            "GetSecuritySettings": {
                              "requestType": "GetSecuritySettingsRequest",
                              "responseType": "SecuritySettings",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/securitySettings/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/securitySettings/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "UpdateSecuritySettings": {
                              "requestType": "UpdateSecuritySettingsRequest",
                              "responseType": "SecuritySettings",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{security_settings.name=projects/*/locations/*/securitySettings/*}",
                                "(google.api.http).body": "security_settings",
                                "(google.api.method_signature)": "security_settings,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{security_settings.name=projects/*/locations/*/securitySettings/*}",
                                    "body": "security_settings"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "security_settings,update_mask"
                                }
                              ]
                            },
                            "ListSecuritySettings": {
                              "requestType": "ListSecuritySettingsRequest",
                              "responseType": "ListSecuritySettingsResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*}/securitySettings",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*}/securitySettings"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "DeleteSecuritySettings": {
                              "requestType": "DeleteSecuritySettingsRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3beta1/{name=projects/*/locations/*/securitySettings/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3beta1/{name=projects/*/locations/*/securitySettings/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            }
                          }
                        },
                        "GetSecuritySettingsRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/SecuritySettings"
                              }
                            }
                          }
                        },
                        "UpdateSecuritySettingsRequest": {
                          "fields": {
                            "securitySettings": {
                              "type": "SecuritySettings",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "ListSecuritySettingsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/SecuritySettings"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListSecuritySettingsResponse": {
                          "fields": {
                            "securitySettings": {
                              "rule": "repeated",
                              "type": "SecuritySettings",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "CreateSecuritySettingsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/SecuritySettings"
                              }
                            },
                            "securitySettings": {
                              "type": "SecuritySettings",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteSecuritySettingsRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/SecuritySettings"
                              }
                            }
                          }
                        },
                        "SecuritySettings": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/SecuritySettings",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/securitySettings/{security_settings}"
                          },
                          "oneofs": {
                            "dataRetention": {
                              "oneof": [
                                "retentionWindowDays"
                              ]
                            }
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "redactionStrategy": {
                              "type": "RedactionStrategy",
                              "id": 3
                            },
                            "redactionScope": {
                              "type": "RedactionScope",
                              "id": 4
                            },
                            "inspectTemplate": {
                              "type": "string",
                              "id": 9,
                              "options": {
                                "(google.api.resource_reference).type": "dlp.googleapis.com/InspectTemplate"
                              }
                            },
                            "deidentifyTemplate": {
                              "type": "string",
                              "id": 17,
                              "options": {
                                "(google.api.resource_reference).type": "dlp.googleapis.com/DeidentifyTemplate"
                              }
                            },
                            "retentionWindowDays": {
                              "type": "int32",
                              "id": 6
                            },
                            "purgeDataTypes": {
                              "rule": "repeated",
                              "type": "PurgeDataType",
                              "id": 8
                            },
                            "audioExportSettings": {
                              "type": "AudioExportSettings",
                              "id": 12
                            },
                            "insightsExportSettings": {
                              "type": "InsightsExportSettings",
                              "id": 13
                            }
                          },
                          "nested": {
                            "RedactionStrategy": {
                              "values": {
                                "REDACTION_STRATEGY_UNSPECIFIED": 0,
                                "REDACT_WITH_SERVICE": 1
                              }
                            },
                            "RedactionScope": {
                              "values": {
                                "REDACTION_SCOPE_UNSPECIFIED": 0,
                                "REDACT_DISK_STORAGE": 2
                              }
                            },
                            "PurgeDataType": {
                              "values": {
                                "PURGE_DATA_TYPE_UNSPECIFIED": 0,
                                "DIALOGFLOW_HISTORY": 1
                              }
                            },
                            "AudioExportSettings": {
                              "fields": {
                                "gcsBucket": {
                                  "type": "string",
                                  "id": 1
                                },
                                "audioExportPattern": {
                                  "type": "string",
                                  "id": 2
                                },
                                "enableAudioRedaction": {
                                  "type": "bool",
                                  "id": 3
                                },
                                "audioFormat": {
                                  "type": "AudioFormat",
                                  "id": 4
                                }
                              },
                              "nested": {
                                "AudioFormat": {
                                  "values": {
                                    "AUDIO_FORMAT_UNSPECIFIED": 0,
                                    "MULAW": 1,
                                    "MP3": 2,
                                    "OGG": 3
                                  }
                                }
                              }
                            },
                            "InsightsExportSettings": {
                              "fields": {
                                "enableInsightsExport": {
                                  "type": "bool",
                                  "id": 1
                                }
                              }
                            }
                          }
                        },
                        "Versions": {
                          "options": {
                            "(google.api.default_host)": "dialogflow.googleapis.com",
                            "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/dialogflow"
                          },
                          "methods": {
                            "ListVersions": {
                              "requestType": "ListVersionsRequest",
                              "responseType": "ListVersionsResponse",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{parent=projects/*/locations/*/agents/*/flows/*}/versions",
                                "(google.api.method_signature)": "parent"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{parent=projects/*/locations/*/agents/*/flows/*}/versions"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent"
                                }
                              ]
                            },
                            "GetVersion": {
                              "requestType": "GetVersionRequest",
                              "responseType": "Version",
                              "options": {
                                "(google.api.http).get": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/versions/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "get": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/versions/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "CreateVersion": {
                              "requestType": "CreateVersionRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{parent=projects/*/locations/*/agents/*/flows/*}/versions",
                                "(google.api.http).body": "version",
                                "(google.api.method_signature)": "parent,version",
                                "(google.longrunning.operation_info).response_type": "Version",
                                "(google.longrunning.operation_info).metadata_type": "CreateVersionOperationMetadata"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{parent=projects/*/locations/*/agents/*/flows/*}/versions",
                                    "body": "version"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "parent,version"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "Version",
                                    "metadata_type": "CreateVersionOperationMetadata"
                                  }
                                }
                              ]
                            },
                            "UpdateVersion": {
                              "requestType": "UpdateVersionRequest",
                              "responseType": "Version",
                              "options": {
                                "(google.api.http).patch": "/v3beta1/{version.name=projects/*/locations/*/agents/*/flows/*/versions/*}",
                                "(google.api.http).body": "version",
                                "(google.api.method_signature)": "version,update_mask"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "patch": "/v3beta1/{version.name=projects/*/locations/*/agents/*/flows/*/versions/*}",
                                    "body": "version"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "version,update_mask"
                                }
                              ]
                            },
                            "DeleteVersion": {
                              "requestType": "DeleteVersionRequest",
                              "responseType": "google.protobuf.Empty",
                              "options": {
                                "(google.api.http).delete": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/versions/*}",
                                "(google.api.method_signature)": "name"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "delete": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/versions/*}"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                }
                              ]
                            },
                            "LoadVersion": {
                              "requestType": "LoadVersionRequest",
                              "responseType": "google.longrunning.Operation",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/versions/*}:load",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "name",
                                "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                                "(google.longrunning.operation_info).metadata_type": "google.protobuf.Struct"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{name=projects/*/locations/*/agents/*/flows/*/versions/*}:load",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "name"
                                },
                                {
                                  "(google.longrunning.operation_info)": {
                                    "response_type": "google.protobuf.Empty",
                                    "metadata_type": "google.protobuf.Struct"
                                  }
                                }
                              ]
                            },
                            "CompareVersions": {
                              "requestType": "CompareVersionsRequest",
                              "responseType": "CompareVersionsResponse",
                              "options": {
                                "(google.api.http).post": "/v3beta1/{base_version=projects/*/locations/*/agents/*/flows/*/versions/*}:compareVersions",
                                "(google.api.http).body": "*",
                                "(google.api.method_signature)": "base_version"
                              },
                              "parsedOptions": [
                                {
                                  "(google.api.http)": {
                                    "post": "/v3beta1/{base_version=projects/*/locations/*/agents/*/flows/*/versions/*}:compareVersions",
                                    "body": "*"
                                  }
                                },
                                {
                                  "(google.api.method_signature)": "base_version"
                                }
                              ]
                            }
                          }
                        },
                        "CreateVersionOperationMetadata": {
                          "fields": {
                            "version": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            }
                          }
                        },
                        "Version": {
                          "options": {
                            "(google.api.resource).type": "dialogflow.googleapis.com/Version",
                            "(google.api.resource).pattern": "projects/{project}/locations/{location}/agents/{agent}/flows/{flow}/versions/{version}"
                          },
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "description": {
                              "type": "string",
                              "id": 3
                            },
                            "nluSettings": {
                              "type": "NluSettings",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "createTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 5,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            },
                            "state": {
                              "type": "State",
                              "id": 6,
                              "options": {
                                "(google.api.field_behavior)": "OUTPUT_ONLY"
                              }
                            }
                          },
                          "nested": {
                            "State": {
                              "values": {
                                "STATE_UNSPECIFIED": 0,
                                "RUNNING": 1,
                                "SUCCEEDED": 2,
                                "FAILED": 3
                              }
                            }
                          }
                        },
                        "ListVersionsRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "pageSize": {
                              "type": "int32",
                              "id": 2
                            },
                            "pageToken": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "ListVersionsResponse": {
                          "fields": {
                            "versions": {
                              "rule": "repeated",
                              "type": "Version",
                              "id": 1
                            },
                            "nextPageToken": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "GetVersionRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            }
                          }
                        },
                        "CreateVersionRequest": {
                          "fields": {
                            "parent": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).child_type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "version": {
                              "type": "Version",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "UpdateVersionRequest": {
                          "fields": {
                            "version": {
                              "type": "Version",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            },
                            "updateMask": {
                              "type": "google.protobuf.FieldMask",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED"
                              }
                            }
                          }
                        },
                        "DeleteVersionRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            }
                          }
                        },
                        "LoadVersionRequest": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "allowOverrideAgentResources": {
                              "type": "bool",
                              "id": 2
                            }
                          }
                        },
                        "CompareVersionsRequest": {
                          "fields": {
                            "baseVersion": {
                              "type": "string",
                              "id": 1,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "targetVersion": {
                              "type": "string",
                              "id": 2,
                              "options": {
                                "(google.api.field_behavior)": "REQUIRED",
                                "(google.api.resource_reference).type": "dialogflow.googleapis.com/Version"
                              }
                            },
                            "languageCode": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "CompareVersionsResponse": {
                          "fields": {
                            "baseVersionContentJson": {
                              "type": "string",
                              "id": 1
                            },
                            "targetVersionContentJson": {
                              "type": "string",
                              "id": 2
                            },
                            "compareTime": {
                              "type": "google.protobuf.Timestamp",
                              "id": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ResourceProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "target": {
                  "type": "OptionTargetType",
                  "id": 18
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Struct": {
              "fields": {
                "fields": {
                  "keyType": "string",
                  "type": "Value",
                  "id": 1
                }
              }
            },
            "Value": {
              "oneofs": {
                "kind": {
                  "oneof": [
                    "nullValue",
                    "numberValue",
                    "stringValue",
                    "boolValue",
                    "structValue",
                    "listValue"
                  ]
                }
              },
              "fields": {
                "nullValue": {
                  "type": "NullValue",
                  "id": 1
                },
                "numberValue": {
                  "type": "double",
                  "id": 2
                },
                "stringValue": {
                  "type": "string",
                  "id": 3
                },
                "boolValue": {
                  "type": "bool",
                  "id": 4
                },
                "structValue": {
                  "type": "Struct",
                  "id": 5
                },
                "listValue": {
                  "type": "ListValue",
                  "id": 6
                }
              }
            },
            "NullValue": {
              "values": {
                "NULL_VALUE": 0
              }
            },
            "ListValue": {
              "fields": {
                "values": {
                  "rule": "repeated",
                  "type": "Value",
                  "id": 1
                }
              }
            },
            "Empty": {
              "fields": {}
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "google.golang.org/genproto/googleapis/longrunning;longrunning",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/type/latlng;latlng",
            "java_multiple_files": true,
            "java_outer_classname": "LatLngProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "LatLng": {
              "fields": {
                "latitude": {
                  "type": "double",
                  "id": 1
                },
                "longitude": {
                  "type": "double",
                  "id": 2
                }
              }
            }
          }
        }
      }
    }
  }
}