// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by synthtool. **
// ** https://github.com/googleapis/synthtool **
// ** All changes to this file may be overwritten. **

import * as v3 from './v3';
import * as v3beta1 from './v3beta1';

const AgentsClient = v3.AgentsClient;
type AgentsClient = v3.AgentsClient;
const ChangelogsClient = v3.ChangelogsClient;
type ChangelogsClient = v3.ChangelogsClient;
const DeploymentsClient = v3.DeploymentsClient;
type DeploymentsClient = v3.DeploymentsClient;
const EntityTypesClient = v3.EntityTypesClient;
type EntityTypesClient = v3.EntityTypesClient;
const EnvironmentsClient = v3.EnvironmentsClient;
type EnvironmentsClient = v3.EnvironmentsClient;
const ExperimentsClient = v3.ExperimentsClient;
type ExperimentsClient = v3.ExperimentsClient;
const FlowsClient = v3.FlowsClient;
type FlowsClient = v3.FlowsClient;
const IntentsClient = v3.IntentsClient;
type IntentsClient = v3.IntentsClient;
const PagesClient = v3.PagesClient;
type PagesClient = v3.PagesClient;
const SecuritySettingsServiceClient = v3.SecuritySettingsServiceClient;
type SecuritySettingsServiceClient = v3.SecuritySettingsServiceClient;
const SessionEntityTypesClient = v3.SessionEntityTypesClient;
type SessionEntityTypesClient = v3.SessionEntityTypesClient;
const SessionsClient = v3.SessionsClient;
type SessionsClient = v3.SessionsClient;
const TestCasesClient = v3.TestCasesClient;
type TestCasesClient = v3.TestCasesClient;
const TransitionRouteGroupsClient = v3.TransitionRouteGroupsClient;
type TransitionRouteGroupsClient = v3.TransitionRouteGroupsClient;
const VersionsClient = v3.VersionsClient;
type VersionsClient = v3.VersionsClient;
const WebhooksClient = v3.WebhooksClient;
type WebhooksClient = v3.WebhooksClient;

export {
  v3,
  v3beta1,
  AgentsClient,
  ChangelogsClient,
  DeploymentsClient,
  EntityTypesClient,
  EnvironmentsClient,
  ExperimentsClient,
  FlowsClient,
  IntentsClient,
  PagesClient,
  SecuritySettingsServiceClient,
  SessionEntityTypesClient,
  SessionsClient,
  TestCasesClient,
  TransitionRouteGroupsClient,
  VersionsClient,
  WebhooksClient,
};
export default {
  v3,
  v3beta1,
  AgentsClient,
  ChangelogsClient,
  DeploymentsClient,
  EntityTypesClient,
  EnvironmentsClient,
  ExperimentsClient,
  FlowsClient,
  IntentsClient,
  PagesClient,
  SecuritySettingsServiceClient,
  SessionEntityTypesClient,
  SessionsClient,
  TestCasesClient,
  TransitionRouteGroupsClient,
  VersionsClient,
  WebhooksClient,
};
import * as protos from '../protos/protos';
export {protos};
