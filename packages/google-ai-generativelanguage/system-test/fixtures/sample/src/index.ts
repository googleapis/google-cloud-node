// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

import {
  DiscussServiceClient,
  FileServiceClient,
  GenerativeServiceClient,
  ModelServiceClient,
  PermissionServiceClient,
  RetrieverServiceClient,
  TextServiceClient,
} from '@google-ai/generativelanguage';

// check that the client class type name can be used
function doStuffWithDiscussServiceClient(client: DiscussServiceClient) {
  client.close();
}
function doStuffWithFileServiceClient(client: FileServiceClient) {
  client.close();
}
function doStuffWithGenerativeServiceClient(client: GenerativeServiceClient) {
  client.close();
}
function doStuffWithModelServiceClient(client: ModelServiceClient) {
  client.close();
}
function doStuffWithPermissionServiceClient(client: PermissionServiceClient) {
  client.close();
}
function doStuffWithRetrieverServiceClient(client: RetrieverServiceClient) {
  client.close();
}
function doStuffWithTextServiceClient(client: TextServiceClient) {
  client.close();
}

function main() {
  // check that the client instance can be created
  const discussServiceClient = new DiscussServiceClient();
  doStuffWithDiscussServiceClient(discussServiceClient);
  // check that the client instance can be created
  const fileServiceClient = new FileServiceClient();
  doStuffWithFileServiceClient(fileServiceClient);
  // check that the client instance can be created
  const generativeServiceClient = new GenerativeServiceClient();
  doStuffWithGenerativeServiceClient(generativeServiceClient);
  // check that the client instance can be created
  const modelServiceClient = new ModelServiceClient();
  doStuffWithModelServiceClient(modelServiceClient);
  // check that the client instance can be created
  const permissionServiceClient = new PermissionServiceClient();
  doStuffWithPermissionServiceClient(permissionServiceClient);
  // check that the client instance can be created
  const retrieverServiceClient = new RetrieverServiceClient();
  doStuffWithRetrieverServiceClient(retrieverServiceClient);
  // check that the client instance can be created
  const textServiceClient = new TextServiceClient();
  doStuffWithTextServiceClient(textServiceClient);
}

main();
