{
  "schema": "1.0",
  "comment": "This file maps proto services/RPCs to the corresponding library clients/methods",
  "language": "typescript",
  "protoPackage": "google.cloud.orchestration.airflow.service.v1",
  "libraryPackage": "@google-cloud/orchestration-airflow",
  "services": {
    "Environments": {
      "clients": {
        "grpc": {
          "libraryClient": "EnvironmentsClient",
          "rpcs": {
            "GetEnvironment": {
              "methods": [
                "getEnvironment"
              ]
            },
            "ExecuteAirflowCommand": {
              "methods": [
                "executeAirflowCommand"
              ]
            },
            "StopAirflowCommand": {
              "methods": [
                "stopAirflowCommand"
              ]
            },
            "PollAirflowCommand": {
              "methods": [
                "pollAirflowCommand"
              ]
            },
            "CreateUserWorkloadsSecret": {
              "methods": [
                "createUserWorkloadsSecret"
              ]
            },
            "GetUserWorkloadsSecret": {
              "methods": [
                "getUserWorkloadsSecret"
              ]
            },
            "UpdateUserWorkloadsSecret": {
              "methods": [
                "updateUserWorkloadsSecret"
              ]
            },
            "DeleteUserWorkloadsSecret": {
              "methods": [
                "deleteUserWorkloadsSecret"
              ]
            },
            "CreateUserWorkloadsConfigMap": {
              "methods": [
                "createUserWorkloadsConfigMap"
              ]
            },
            "GetUserWorkloadsConfigMap": {
              "methods": [
                "getUserWorkloadsConfigMap"
              ]
            },
            "UpdateUserWorkloadsConfigMap": {
              "methods": [
                "updateUserWorkloadsConfigMap"
              ]
            },
            "DeleteUserWorkloadsConfigMap": {
              "methods": [
                "deleteUserWorkloadsConfigMap"
              ]
            },
            "FetchDatabaseProperties": {
              "methods": [
                "fetchDatabaseProperties"
              ]
            },
            "CreateEnvironment": {
              "methods": [
                "createEnvironment"
              ]
            },
            "UpdateEnvironment": {
              "methods": [
                "updateEnvironment"
              ]
            },
            "DeleteEnvironment": {
              "methods": [
                "deleteEnvironment"
              ]
            },
            "SaveSnapshot": {
              "methods": [
                "saveSnapshot"
              ]
            },
            "LoadSnapshot": {
              "methods": [
                "loadSnapshot"
              ]
            },
            "DatabaseFailover": {
              "methods": [
                "databaseFailover"
              ]
            },
            "ListEnvironments": {
              "methods": [
                "listEnvironments",
                "listEnvironmentsStream",
                "listEnvironmentsAsync"
              ]
            },
            "ListWorkloads": {
              "methods": [
                "listWorkloads",
                "listWorkloadsStream",
                "listWorkloadsAsync"
              ]
            },
            "ListUserWorkloadsSecrets": {
              "methods": [
                "listUserWorkloadsSecrets",
                "listUserWorkloadsSecretsStream",
                "listUserWorkloadsSecretsAsync"
              ]
            },
            "ListUserWorkloadsConfigMaps": {
              "methods": [
                "listUserWorkloadsConfigMaps",
                "listUserWorkloadsConfigMapsStream",
                "listUserWorkloadsConfigMapsAsync"
              ]
            }
          }
        },
        "grpc-fallback": {
          "libraryClient": "EnvironmentsClient",
          "rpcs": {
            "GetEnvironment": {
              "methods": [
                "getEnvironment"
              ]
            },
            "ExecuteAirflowCommand": {
              "methods": [
                "executeAirflowCommand"
              ]
            },
            "StopAirflowCommand": {
              "methods": [
                "stopAirflowCommand"
              ]
            },
            "PollAirflowCommand": {
              "methods": [
                "pollAirflowCommand"
              ]
            },
            "CreateUserWorkloadsSecret": {
              "methods": [
                "createUserWorkloadsSecret"
              ]
            },
            "GetUserWorkloadsSecret": {
              "methods": [
                "getUserWorkloadsSecret"
              ]
            },
            "UpdateUserWorkloadsSecret": {
              "methods": [
                "updateUserWorkloadsSecret"
              ]
            },
            "DeleteUserWorkloadsSecret": {
              "methods": [
                "deleteUserWorkloadsSecret"
              ]
            },
            "CreateUserWorkloadsConfigMap": {
              "methods": [
                "createUserWorkloadsConfigMap"
              ]
            },
            "GetUserWorkloadsConfigMap": {
              "methods": [
                "getUserWorkloadsConfigMap"
              ]
            },
            "UpdateUserWorkloadsConfigMap": {
              "methods": [
                "updateUserWorkloadsConfigMap"
              ]
            },
            "DeleteUserWorkloadsConfigMap": {
              "methods": [
                "deleteUserWorkloadsConfigMap"
              ]
            },
            "FetchDatabaseProperties": {
              "methods": [
                "fetchDatabaseProperties"
              ]
            },
            "CreateEnvironment": {
              "methods": [
                "createEnvironment"
              ]
            },
            "UpdateEnvironment": {
              "methods": [
                "updateEnvironment"
              ]
            },
            "DeleteEnvironment": {
              "methods": [
                "deleteEnvironment"
              ]
            },
            "SaveSnapshot": {
              "methods": [
                "saveSnapshot"
              ]
            },
            "LoadSnapshot": {
              "methods": [
                "loadSnapshot"
              ]
            },
            "DatabaseFailover": {
              "methods": [
                "databaseFailover"
              ]
            },
            "ListEnvironments": {
              "methods": [
                "listEnvironments",
                "listEnvironmentsStream",
                "listEnvironmentsAsync"
              ]
            },
            "ListWorkloads": {
              "methods": [
                "listWorkloads",
                "listWorkloadsStream",
                "listWorkloadsAsync"
              ]
            },
            "ListUserWorkloadsSecrets": {
              "methods": [
                "listUserWorkloadsSecrets",
                "listUserWorkloadsSecretsStream",
                "listUserWorkloadsSecretsAsync"
              ]
            },
            "ListUserWorkloadsConfigMaps": {
              "methods": [
                "listUserWorkloadsConfigMaps",
                "listUserWorkloadsConfigMapsStream",
                "listUserWorkloadsConfigMapsAsync"
              ]
            }
          }
        }
      }
    },
    "ImageVersions": {
      "clients": {
        "grpc": {
          "libraryClient": "ImageVersionsClient",
          "rpcs": {
            "ListImageVersions": {
              "methods": [
                "listImageVersions",
                "listImageVersionsStream",
                "listImageVersionsAsync"
              ]
            }
          }
        },
        "grpc-fallback": {
          "libraryClient": "ImageVersionsClient",
          "rpcs": {
            "ListImageVersions": {
              "methods": [
                "listImageVersions",
                "listImageVersionsStream",
                "listImageVersionsAsync"
              ]
            }
          }
        }
      }
    }
  }
}
