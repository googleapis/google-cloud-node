// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(space) {
  // [START chat_v1_generated_ChatService_UpdateSpace_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Space with fields to be updated. `Space.name` must be
   *  populated in the form of `spaces/{space}`. Only fields
   *  specified by `update_mask` are updated.
   */
  // const space = {}
  /**
   *  Required. The updated field paths, comma separated if there are
   *  multiple.
   *  Currently supported field paths:
   *  - `display_name` (Only supports changing the display name of a space with
   *  the `SPACE` type, or when also including the `space_type` mask to change a
   *  `GROUP_CHAT` space type to `SPACE`. Trying to update the display name of a
   *  `GROUP_CHAT` or a `DIRECT_MESSAGE` space results in an invalid argument
   *  error. If you receive the error message `ALREADY_EXISTS` when updating the
   *  `displayName`, try a different `displayName`. An existing space within the
   *  Google Workspace organization might already use this display name.)
   *  - `space_type` (Only supports changing a `GROUP_CHAT` space type to
   *  `SPACE`. Include `display_name` together
   *  with `space_type` in the update mask and ensure that the specified space
   *  has a non-empty display name and the `SPACE` space type. Including the
   *  `space_type` mask and the `SPACE` type in the specified space when updating
   *  the display name is optional if the existing space already has the `SPACE`
   *  type. Trying to update the space type in other ways results in an invalid
   *  argument error).
   *  - `space_details`
   *  - `space_history_state` (Supports turning history on or off for the
   *  space (https://support.google.com/chat/answer/7664687) if the organization
   *  allows users to change their history
   *  setting (https://support.google.com/a/answer/7664184).
   *  Warning: mutually exclusive with all other field paths.)
   *  - Developer Preview: `access_settings.audience` (Supports changing the
   *  access setting (https://support.google.com/chat/answer/11971020) of a
   *  space. If no audience is specified in the access setting, the space's
   *  access setting is updated to restricted. Warning: mutually exclusive with
   *  all other field paths.)
   */
  // const updateMask = {}

  // Imports the Chat library
  const {ChatServiceClient} = require('@google-apps/chat').v1;

  // Instantiates a client
  const chatClient = new ChatServiceClient();

  async function callUpdateSpace() {
    // Construct request
    const request = {
      space,
    };

    // Run request
    const response = await chatClient.updateSpace(request);
    console.log(response);
  }

  callUpdateSpace();
  // [END chat_v1_generated_ChatService_UpdateSpace_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
