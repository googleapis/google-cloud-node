// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

'use strict';

function main(parent) {
  // [START fleetengine_quickstart]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Optional. The standard Delivery API request header.
   */
  // const header = {}
  /**
   *  Required. Must be in the format `providers/{provider}`.
   *  The `provider` must be the Google Cloud Project ID.
   *  For example, `sample-cloud-project`.
   */
  // const parent = 'abc123'
  /**
   *  Optional. The maximum number of vehicles to return. The service may return
   *  fewer than this number. If you don't specify this number, then the server
   *  determines the number of results to return.
   */
  // const pageSize = 1234
  /**
   *  Optional. A page token, received from a previous `ListDeliveryVehicles`
   *  call. You must provide this in order to retrieve the subsequent page.
   *  When paginating, all other parameters provided to `ListDeliveryVehicles`
   *  must match the call that provided the page token.
   */
  // const pageToken = 'abc123'
  /**
   *  Optional. A filter query to apply when listing delivery vehicles. See
   *  http://aip.dev/160 for examples of the filter syntax. If you don't specify
   *  a value, or if you specify an empty string for the filter, then all
   *  delivery vehicles are returned.
   *  Note that the only queries supported for `ListDeliveryVehicles` are
   *  on vehicle attributes (for example, `attributes.<key> = <value>` or
   *  `attributes.<key1> = <value1> AND attributes.<key2> = <value2>`). Also, all
   *  attributes are stored as strings, so the only supported comparisons against
   *  attributes are string comparisons. In order to compare against number or
   *  boolean values, the values must be explicitly quoted to be treated as
   *  strings (for example, `attributes.<key> = "10"` or
   *  `attributes.<key> = "true"`).
   *  The maximum number of restrictions allowed in a filter query is 50. A
   *  restriction is a part of the query of the form
   *  `attribute.<KEY> <COMPARATOR> <VALUE>`, for example `attributes.foo = bar`
   *  is 1 restriction.
   */
  // const filter = 'abc123'
  /**
   *  Optional. A filter that limits the vehicles returned to those whose last
   *  known location was in the rectangular area defined by the viewport.
   */
  // const viewport = {}

  // Imports the Delivery library
  const {DeliveryServiceClient} =
    require('@googlemaps/fleetengine-delivery').v1;

  // Instantiates a client
  const deliveryClient = new DeliveryServiceClient();

  async function callListDeliveryVehicles() {
    // Construct request
    const request = {
      parent,
    };

    // Run request
    const iterable = deliveryClient.listDeliveryVehiclesAsync(request);
    for await (const response of iterable) {
      console.log(response);
    }
  }

  callListDeliveryVehicles();
  // [END fleetengine_quickstart]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
