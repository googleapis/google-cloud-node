// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent, query) {
  // [START telcoautomation_v1alpha1_generated_TelcoAutomation_SearchDeploymentRevisions_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The name of parent orchestration cluster resource.
   *  Format should be -
   *  "projects/{project_id}/locations/{location_name}/orchestrationClusters/{orchestration_cluster}".
   */
  // const parent = 'abc123'
  /**
   *  Required. Supported queries:
   *  1. ""                       : Lists all revisions across all deployments.
   *  2. "latest=true"            : Lists latest revisions across all
   *  deployments.
   *  3. "name={name}"            : Lists all revisions of deployment with name
   *  {name}.
   *  4. "name={name} latest=true": Lists latest revision of deployment with name
   *  {name}
   */
  // const query = 'abc123'
  /**
   *  Optional. The maximum number of deployment revisions to return per page.
   *  max page size = 100, default page size = 20.
   */
  // const pageSize = 1234
  /**
   *  Optional. The page token, received from a previous search call.
   *  It can be provided to retrieve the subsequent page.
   */
  // const pageToken = 'abc123'

  // Imports the Telcoautomation library
  const {TelcoAutomationClient} = require('@google-cloud/telcoautomation').v1alpha1;

  // Instantiates a client
  const telcoautomationClient = new TelcoAutomationClient();

  async function callSearchDeploymentRevisions() {
    // Construct request
    const request = {
      parent,
      query,
    };

    // Run request
    const iterable = telcoautomationClient.searchDeploymentRevisionsAsync(request);
    for await (const response of iterable) {
        console.log(response);
    }
  }

  callSearchDeploymentRevisions();
  // [END telcoautomation_v1alpha1_generated_TelcoAutomation_SearchDeploymentRevisions_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
