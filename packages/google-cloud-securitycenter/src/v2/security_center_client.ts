// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  GrpcClientOptions,
  LROperation,
  PaginationCallback,
  GaxCall,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');

/**
 * Client JSON configuration object, loaded from
 * `src/v2/security_center_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './security_center_client_config.json';
const version = require('../../../package.json').version;

/**
 *  V2 APIs for Security Center service.
 * @class
 * @memberof v2
 */
export class SecurityCenterClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  private _universeDomain: string;
  private _servicePath: string;
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  securityCenterStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of SecurityCenterClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new SecurityCenterClient({fallback: true}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof SecurityCenterClient;
    if (
      opts?.universe_domain &&
      opts?.universeDomain &&
      opts?.universe_domain !== opts?.universeDomain
    ) {
      throw new Error(
        'Please set either universe_domain or universeDomain, but not both.'
      );
    }
    this._universeDomain =
      opts?.universeDomain ?? opts?.universe_domain ?? 'googleapis.com';
    this._servicePath = 'securitycenter.' + this._universeDomain;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || this._servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== this._servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = this._servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === this._servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      attackPathPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/simulations/{simulation}/valuedResources/{valued_resource}/attackPaths/{attack_path}'
      ),
      folderAssetSecurityMarksPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/assets/{asset}/securityMarks'
      ),
      folderConstraintNamePathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/policies/{constraint_name}'
      ),
      folderLocationExportPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/locations/{location}/bigQueryExports/{export}'
      ),
      folderLocationMuteConfigPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/locations/{location}/muteConfigs/{mute_config}'
      ),
      folderLocationNotificationConfigPathTemplate:
        new this._gaxModule.PathTemplate(
          'folders/{folder}/locations/{location}/notificationConfigs/{notification_config}'
        ),
      folderMuteConfigPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/muteConfigs/{mute_config}'
      ),
      folderSourcePathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/sources/{source}'
      ),
      folderSourceFindingPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/sources/{source}/findings/{finding}'
      ),
      folderSourceFindingExternalsystemPathTemplate:
        new this._gaxModule.PathTemplate(
          'folders/{folder}/sources/{source}/findings/{finding}/externalSystems/{externalsystem}'
        ),
      folderSourceFindingSecurityMarksPathTemplate:
        new this._gaxModule.PathTemplate(
          'folders/{folder}/sources/{source}/findings/{finding}/securityMarks'
        ),
      folderSourceLocationFindingPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/sources/{source}/locations/{location}/findings/{finding}'
      ),
      folderSourceLocationFindingExternalsystemPathTemplate:
        new this._gaxModule.PathTemplate(
          'folders/{folder}/sources/{source}/locations/{location}/findings/{finding}/externalSystems/{externalsystem}'
        ),
      folderSourceLocationFindingSecurityMarksPathTemplate:
        new this._gaxModule.PathTemplate(
          'folders/{folder}/sources/{source}/locations/{location}/findings/{finding}/securityMarks'
        ),
      organizationPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}'
      ),
      organizationAssetSecurityMarksPathTemplate:
        new this._gaxModule.PathTemplate(
          'organizations/{organization}/assets/{asset}/securityMarks'
        ),
      organizationConstraintNamePathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/policies/{constraint_name}'
      ),
      organizationLocationPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/locations/{location}'
      ),
      organizationLocationExportPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/locations/{location}/bigQueryExports/{export}'
      ),
      organizationLocationMuteConfigPathTemplate:
        new this._gaxModule.PathTemplate(
          'organizations/{organization}/locations/{location}/muteConfigs/{mute_config}'
        ),
      organizationLocationNotificationConfigPathTemplate:
        new this._gaxModule.PathTemplate(
          'organizations/{organization}/locations/{location}/notificationConfigs/{notification_config}'
        ),
      organizationMuteConfigPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/muteConfigs/{mute_config}'
      ),
      organizationSourcePathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/sources/{source}'
      ),
      organizationSourceFindingPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/sources/{source}/findings/{finding}'
      ),
      organizationSourceFindingExternalsystemPathTemplate:
        new this._gaxModule.PathTemplate(
          'organizations/{organization}/sources/{source}/findings/{finding}/externalSystems/{externalsystem}'
        ),
      organizationSourceFindingSecurityMarksPathTemplate:
        new this._gaxModule.PathTemplate(
          'organizations/{organization}/sources/{source}/findings/{finding}/securityMarks'
        ),
      organizationSourceLocationFindingPathTemplate:
        new this._gaxModule.PathTemplate(
          'organizations/{organization}/sources/{source}/locations/{location}/findings/{finding}'
        ),
      organizationSourceLocationFindingExternalsystemPathTemplate:
        new this._gaxModule.PathTemplate(
          'organizations/{organization}/sources/{source}/locations/{location}/findings/{finding}/externalSystems/{externalsystem}'
        ),
      organizationSourceLocationFindingSecurityMarksPathTemplate:
        new this._gaxModule.PathTemplate(
          'organizations/{organization}/sources/{source}/locations/{location}/findings/{finding}/securityMarks'
        ),
      projectAssetSecurityMarksPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/assets/{asset}/securityMarks'
      ),
      projectConstraintNamePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/policies/{constraint_name}'
      ),
      projectLocationExportPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/bigQueryExports/{export}'
      ),
      projectLocationMuteConfigPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/muteConfigs/{mute_config}'
      ),
      projectLocationNotificationConfigPathTemplate:
        new this._gaxModule.PathTemplate(
          'projects/{project}/locations/{location}/notificationConfigs/{notification_config}'
        ),
      projectMuteConfigPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/muteConfigs/{mute_config}'
      ),
      projectSourcePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/sources/{source}'
      ),
      projectSourceFindingPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/sources/{source}/findings/{finding}'
      ),
      projectSourceFindingExternalsystemPathTemplate:
        new this._gaxModule.PathTemplate(
          'projects/{project}/sources/{source}/findings/{finding}/externalSystems/{externalsystem}'
        ),
      projectSourceFindingSecurityMarksPathTemplate:
        new this._gaxModule.PathTemplate(
          'projects/{project}/sources/{source}/findings/{finding}/securityMarks'
        ),
      projectSourceLocationFindingPathTemplate:
        new this._gaxModule.PathTemplate(
          'projects/{project}/sources/{source}/locations/{location}/findings/{finding}'
        ),
      projectSourceLocationFindingExternalsystemPathTemplate:
        new this._gaxModule.PathTemplate(
          'projects/{project}/sources/{source}/locations/{location}/findings/{finding}/externalSystems/{externalsystem}'
        ),
      projectSourceLocationFindingSecurityMarksPathTemplate:
        new this._gaxModule.PathTemplate(
          'projects/{project}/sources/{source}/locations/{location}/findings/{finding}/securityMarks'
        ),
      resourceValueConfigPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/resourceValueConfigs/{resource_value_config}'
      ),
      simulationPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/simulations/{simulation}'
      ),
      valuedResourcePathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/simulations/{simulation}/valuedResources/{valued_resource}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      groupFindings: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'groupByResults'
      ),
      listAttackPaths: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'attackPaths'
      ),
      listBigQueryExports: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'bigQueryExports'
      ),
      listFindings: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'listFindingsResults'
      ),
      listMuteConfigs: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'muteConfigs'
      ),
      listNotificationConfigs: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'notificationConfigs'
      ),
      listResourceValueConfigs: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'resourceValueConfigs'
      ),
      listSources: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'sources'
      ),
      listValuedResources: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'valuedResources'
      ),
    };

    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);
    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const lroOptions: GrpcClientOptions = {
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,
    };
    if (opts.fallback) {
      lroOptions.protoJson = protoFilesRoot;
      lroOptions.httpRules = [
        {
          selector: 'google.longrunning.Operations.CancelOperation',
          post: '/v2/{name=organizations/*/operations/*}:cancel',
        },
        {
          selector: 'google.longrunning.Operations.DeleteOperation',
          delete: '/v2/{name=organizations/*/operations/*}',
        },
        {
          selector: 'google.longrunning.Operations.GetOperation',
          get: '/v2/{name=organizations/*/operations/*}',
        },
        {
          selector: 'google.longrunning.Operations.ListOperations',
          get: '/v2/{name=organizations/*/operations}',
        },
      ];
    }
    this.operationsClient = this._gaxModule
      .lro(lroOptions)
      .operationsClient(opts);
    const bulkMuteFindingsResponse = protoFilesRoot.lookup(
      '.google.cloud.securitycenter.v2.BulkMuteFindingsResponse'
    ) as gax.protobuf.Type;
    const bulkMuteFindingsMetadata = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;

    this.descriptors.longrunning = {
      bulkMuteFindings: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        bulkMuteFindingsResponse.decode.bind(bulkMuteFindingsResponse),
        bulkMuteFindingsMetadata.decode.bind(bulkMuteFindingsMetadata)
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.securitycenter.v2.SecurityCenter',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.securityCenterStub) {
      return this.securityCenterStub;
    }

    // Put together the "service stub" for
    // google.cloud.securitycenter.v2.SecurityCenter.
    this.securityCenterStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.securitycenter.v2.SecurityCenter'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.securitycenter.v2.SecurityCenter,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const securityCenterStubMethods = [
      'batchCreateResourceValueConfigs',
      'bulkMuteFindings',
      'createBigQueryExport',
      'createFinding',
      'createMuteConfig',
      'createNotificationConfig',
      'createSource',
      'deleteBigQueryExport',
      'deleteMuteConfig',
      'deleteNotificationConfig',
      'deleteResourceValueConfig',
      'getBigQueryExport',
      'getSimulation',
      'getValuedResource',
      'getIamPolicy',
      'getMuteConfig',
      'getNotificationConfig',
      'getResourceValueConfig',
      'getSource',
      'groupFindings',
      'listAttackPaths',
      'listBigQueryExports',
      'listFindings',
      'listMuteConfigs',
      'listNotificationConfigs',
      'listResourceValueConfigs',
      'listSources',
      'listValuedResources',
      'setFindingState',
      'setIamPolicy',
      'setMute',
      'testIamPermissions',
      'updateBigQueryExport',
      'updateExternalSystem',
      'updateFinding',
      'updateMuteConfig',
      'updateNotificationConfig',
      'updateResourceValueConfig',
      'updateSecurityMarks',
      'updateSource',
    ];
    for (const methodName of securityCenterStubMethods) {
      const callPromise = this.securityCenterStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor =
        this.descriptors.page[methodName] ||
        this.descriptors.longrunning[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.securityCenterStub;
  }

  /**
   * The DNS address for this API service.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    if (
      typeof process !== undefined &&
      typeof process.emitWarning === 'function'
    ) {
      process.emitWarning(
        'Static servicePath is deprecated, please use the instance method instead.',
        'DeprecationWarning'
      );
    }
    return 'securitycenter.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath.
   * @deprecated Use the apiEndpoint method of the client instance.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    if (
      typeof process !== undefined &&
      typeof process.emitWarning === 'function'
    ) {
      process.emitWarning(
        'Static apiEndpoint is deprecated, please use the instance method instead.',
        'DeprecationWarning'
      );
    }
    return 'securitycenter.googleapis.com';
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  get apiEndpoint() {
    return this._servicePath;
  }

  get universeDomain() {
    return this._universeDomain;
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Creates a ResourceValueConfig for an organization. Maps user's tags to
   * difference resource values for use by the attack path simulation.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the new ResourceValueConfig's parent.
   *   The parent field in the CreateResourceValueConfigRequest
   *   messages must either be empty or match this field.
   * @param {number[]} request.requests
   *   Required. The resource value configs to be created.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.BatchCreateResourceValueConfigsResponse|BatchCreateResourceValueConfigsResponse}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.batch_create_resource_value_configs.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_BatchCreateResourceValueConfigs_async
   */
  batchCreateResourceValueConfigs(
    request?: protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsResponse,
      (
        | protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  batchCreateResourceValueConfigs(
    request: protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsResponse,
      | protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  batchCreateResourceValueConfigs(
    request: protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsResponse,
      | protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  batchCreateResourceValueConfigs(
    request?: protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsResponse,
          | protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsResponse,
      | protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsResponse,
      (
        | protos.google.cloud.securitycenter.v2.IBatchCreateResourceValueConfigsRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.batchCreateResourceValueConfigs(
      request,
      options,
      callback
    );
  }
  /**
   * Creates a BigQuery export.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent resource of the new BigQuery export. Its
   *   format is "organizations/[organization_id]/locations/[location_id]",
   *   "folders/[folder_id]/locations/[location_id]", or
   *   "projects/[project_id]/locations/[location_id]".
   * @param {google.cloud.securitycenter.v2.BigQueryExport} request.bigQueryExport
   *   Required. The BigQuery export being created.
   * @param {string} request.bigQueryExportId
   *   Required. Unique identifier provided by the client within the parent scope.
   *   It must consist of only lowercase letters, numbers, and hyphens, must start
   *   with a letter, must end with either a letter or a number, and must be 63
   *   characters or less.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.BigQueryExport|BigQueryExport}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.create_big_query_export.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_CreateBigQueryExport_async
   */
  createBigQueryExport(
    request?: protos.google.cloud.securitycenter.v2.ICreateBigQueryExportRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      (
        | protos.google.cloud.securitycenter.v2.ICreateBigQueryExportRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  createBigQueryExport(
    request: protos.google.cloud.securitycenter.v2.ICreateBigQueryExportRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      | protos.google.cloud.securitycenter.v2.ICreateBigQueryExportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createBigQueryExport(
    request: protos.google.cloud.securitycenter.v2.ICreateBigQueryExportRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      | protos.google.cloud.securitycenter.v2.ICreateBigQueryExportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createBigQueryExport(
    request?: protos.google.cloud.securitycenter.v2.ICreateBigQueryExportRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IBigQueryExport,
          | protos.google.cloud.securitycenter.v2.ICreateBigQueryExportRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      | protos.google.cloud.securitycenter.v2.ICreateBigQueryExportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      (
        | protos.google.cloud.securitycenter.v2.ICreateBigQueryExportRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createBigQueryExport(request, options, callback);
  }
  /**
   * Creates a finding in a location. The corresponding source must exist for
   * finding creation to succeed.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the new finding's parent. The following list
   *   shows some examples of the format:
   *   +
   *   `organizations/[organization_id]/sources/[source_id]`
   *   +
   *   `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
   * @param {string} request.findingId
   *   Required. Unique identifier provided by the client within the parent scope.
   *   It must be alphanumeric and less than or equal to 32 characters and
   *   greater than 0 characters in length.
   * @param {google.cloud.securitycenter.v2.Finding} request.finding
   *   Required. The Finding being created. The name and security_marks will be
   *   ignored as they are both output only fields on this resource.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.Finding|Finding}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.create_finding.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_CreateFinding_async
   */
  createFinding(
    request?: protos.google.cloud.securitycenter.v2.ICreateFindingRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IFinding,
      protos.google.cloud.securitycenter.v2.ICreateFindingRequest | undefined,
      {} | undefined,
    ]
  >;
  createFinding(
    request: protos.google.cloud.securitycenter.v2.ICreateFindingRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IFinding,
      | protos.google.cloud.securitycenter.v2.ICreateFindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createFinding(
    request: protos.google.cloud.securitycenter.v2.ICreateFindingRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IFinding,
      | protos.google.cloud.securitycenter.v2.ICreateFindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createFinding(
    request?: protos.google.cloud.securitycenter.v2.ICreateFindingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IFinding,
          | protos.google.cloud.securitycenter.v2.ICreateFindingRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IFinding,
      | protos.google.cloud.securitycenter.v2.ICreateFindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IFinding,
      protos.google.cloud.securitycenter.v2.ICreateFindingRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createFinding(request, options, callback);
  }
  /**
   * Creates a mute config.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the new mute configs's parent. Its format is
   *   "organizations/[organization_id]/locations/[location_id]",
   *   "folders/[folder_id]/locations/[location_id]", or
   *   "projects/[project_id]/locations/[location_id]".
   * @param {google.cloud.securitycenter.v2.MuteConfig} request.muteConfig
   *   Required. The mute config being created.
   * @param {string} request.muteConfigId
   *   Required. Unique identifier provided by the client within the parent scope.
   *   It must consist of only lowercase letters, numbers, and hyphens, must start
   *   with a letter, must end with either a letter or a number, and must be 63
   *   characters or less.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.MuteConfig|MuteConfig}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.create_mute_config.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_CreateMuteConfig_async
   */
  createMuteConfig(
    request?: protos.google.cloud.securitycenter.v2.ICreateMuteConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      (
        | protos.google.cloud.securitycenter.v2.ICreateMuteConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  createMuteConfig(
    request: protos.google.cloud.securitycenter.v2.ICreateMuteConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      | protos.google.cloud.securitycenter.v2.ICreateMuteConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createMuteConfig(
    request: protos.google.cloud.securitycenter.v2.ICreateMuteConfigRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      | protos.google.cloud.securitycenter.v2.ICreateMuteConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createMuteConfig(
    request?: protos.google.cloud.securitycenter.v2.ICreateMuteConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IMuteConfig,
          | protos.google.cloud.securitycenter.v2.ICreateMuteConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      | protos.google.cloud.securitycenter.v2.ICreateMuteConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      (
        | protos.google.cloud.securitycenter.v2.ICreateMuteConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const routingParameter = {};
    {
      const fieldValue = request.parent;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(RegExp('projects/[^/]+/locations/(?<location>[^/]+)'));
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.parent;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(RegExp('organizations/[^/]+/locations/(?<location>[^/]+)'));
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.parent;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(RegExp('folders/[^/]+/locations/(?<location>[^/]+)'));
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams(routingParameter);
    this.initialize();
    return this.innerApiCalls.createMuteConfig(request, options, callback);
  }
  /**
   * Creates a notification config.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the new notification config's parent. Its format
   *   is "organizations/[organization_id]/locations/[location_id]",
   *   "folders/[folder_id]/locations/[location_id]", or
   *   "projects/[project_id]/locations/[location_id]".
   * @param {string} request.configId
   *   Required.
   *   Unique identifier provided by the client within the parent scope.
   *   It must be between 1 and 128 characters and contain alphanumeric
   *   characters, underscores, or hyphens only.
   * @param {google.cloud.securitycenter.v2.NotificationConfig} request.notificationConfig
   *   Required. The notification config being created. The name and the service
   *   account will be ignored as they are both output only fields on this
   *   resource.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.NotificationConfig|NotificationConfig}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.create_notification_config.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_CreateNotificationConfig_async
   */
  createNotificationConfig(
    request?: protos.google.cloud.securitycenter.v2.ICreateNotificationConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      (
        | protos.google.cloud.securitycenter.v2.ICreateNotificationConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  createNotificationConfig(
    request: protos.google.cloud.securitycenter.v2.ICreateNotificationConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      | protos.google.cloud.securitycenter.v2.ICreateNotificationConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createNotificationConfig(
    request: protos.google.cloud.securitycenter.v2.ICreateNotificationConfigRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      | protos.google.cloud.securitycenter.v2.ICreateNotificationConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createNotificationConfig(
    request?: protos.google.cloud.securitycenter.v2.ICreateNotificationConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.INotificationConfig,
          | protos.google.cloud.securitycenter.v2.ICreateNotificationConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      | protos.google.cloud.securitycenter.v2.ICreateNotificationConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      (
        | protos.google.cloud.securitycenter.v2.ICreateNotificationConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createNotificationConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Creates a source.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the new source's parent. Its format should be
   *   "organizations/[organization_id]".
   * @param {google.cloud.securitycenter.v2.Source} request.source
   *   Required. The Source being created, only the display_name and description
   *   will be used. All other fields will be ignored.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.Source|Source}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.create_source.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_CreateSource_async
   */
  createSource(
    request?: protos.google.cloud.securitycenter.v2.ICreateSourceRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ISource,
      protos.google.cloud.securitycenter.v2.ICreateSourceRequest | undefined,
      {} | undefined,
    ]
  >;
  createSource(
    request: protos.google.cloud.securitycenter.v2.ICreateSourceRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.ISource,
      | protos.google.cloud.securitycenter.v2.ICreateSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createSource(
    request: protos.google.cloud.securitycenter.v2.ICreateSourceRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.ISource,
      | protos.google.cloud.securitycenter.v2.ICreateSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createSource(
    request?: protos.google.cloud.securitycenter.v2.ICreateSourceRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.ISource,
          | protos.google.cloud.securitycenter.v2.ICreateSourceRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.ISource,
      | protos.google.cloud.securitycenter.v2.ICreateSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ISource,
      protos.google.cloud.securitycenter.v2.ICreateSourceRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createSource(request, options, callback);
  }
  /**
   * Deletes an existing BigQuery export.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of the BigQuery export to delete. The following list
   *   shows some examples of the format:
   *
   *   +
   *   `organizations/{organization}/locations/{location}/bigQueryExports/{export_id}`
   *   + `folders/{folder}/locations/{location}/bigQueryExports/{export_id}`
   *   + `projects/{project}/locations/{location}/bigQueryExports/{export_id}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.delete_big_query_export.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_DeleteBigQueryExport_async
   */
  deleteBigQueryExport(
    request?: protos.google.cloud.securitycenter.v2.IDeleteBigQueryExportRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.securitycenter.v2.IDeleteBigQueryExportRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  deleteBigQueryExport(
    request: protos.google.cloud.securitycenter.v2.IDeleteBigQueryExportRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.securitycenter.v2.IDeleteBigQueryExportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteBigQueryExport(
    request: protos.google.cloud.securitycenter.v2.IDeleteBigQueryExportRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.securitycenter.v2.IDeleteBigQueryExportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteBigQueryExport(
    request?: protos.google.cloud.securitycenter.v2.IDeleteBigQueryExportRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.securitycenter.v2.IDeleteBigQueryExportRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.securitycenter.v2.IDeleteBigQueryExportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.securitycenter.v2.IDeleteBigQueryExportRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteBigQueryExport(request, options, callback);
  }
  /**
   * Deletes an existing mute config. If no location is specified, default is
   * global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the mute config to delete. The following list shows some
   *   examples of the format:
   *
   *   + `organizations/{organization}/muteConfigs/{config_id}`
   *   +
   *   `organizations/{organization}/locations/{location}/muteConfigs/{config_id}`
   *   + `folders/{folder}/muteConfigs/{config_id}`
   *   + `folders/{folder}/locations/{location}/muteConfigs/{config_id}`
   *   + `projects/{project}/muteConfigs/{config_id}`
   *   + `projects/{project}/locations/{location}/muteConfigs/{config_id}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.delete_mute_config.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_DeleteMuteConfig_async
   */
  deleteMuteConfig(
    request?: protos.google.cloud.securitycenter.v2.IDeleteMuteConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.securitycenter.v2.IDeleteMuteConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  deleteMuteConfig(
    request: protos.google.cloud.securitycenter.v2.IDeleteMuteConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.securitycenter.v2.IDeleteMuteConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteMuteConfig(
    request: protos.google.cloud.securitycenter.v2.IDeleteMuteConfigRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.securitycenter.v2.IDeleteMuteConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteMuteConfig(
    request?: protos.google.cloud.securitycenter.v2.IDeleteMuteConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.securitycenter.v2.IDeleteMuteConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.securitycenter.v2.IDeleteMuteConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.securitycenter.v2.IDeleteMuteConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const routingParameter = {};
    {
      const fieldValue = request.name;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp(
              'projects/[^/]+/locations/(?<location>[^/]+)/muteConfigs/[^/]+'
            )
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.name;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp(
              'organizations/[^/]+/locations/(?<location>[^/]+)/muteConfigs/[^/]+'
            )
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.name;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp(
              'folders/[^/]+/locations/(?<location>[^/]+)/muteConfigs/[^/]+'
            )
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams(routingParameter);
    this.initialize();
    return this.innerApiCalls.deleteMuteConfig(request, options, callback);
  }
  /**
   * Deletes a notification config.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the notification config to delete. The following list
   *   shows some examples of the format:
   *
   *   +
   *   `organizations/[organization_id]/locations/[location_id]/notificationConfigs/[config_id]`
   *   +
   *   `folders/[folder_id]/locations/[location_id]notificationConfigs/[config_id]`
   *   +
   *   `projects/[project_id]/locations/[location_id]notificationConfigs/[config_id]`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.delete_notification_config.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_DeleteNotificationConfig_async
   */
  deleteNotificationConfig(
    request?: protos.google.cloud.securitycenter.v2.IDeleteNotificationConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.securitycenter.v2.IDeleteNotificationConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  deleteNotificationConfig(
    request: protos.google.cloud.securitycenter.v2.IDeleteNotificationConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.securitycenter.v2.IDeleteNotificationConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteNotificationConfig(
    request: protos.google.cloud.securitycenter.v2.IDeleteNotificationConfigRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.securitycenter.v2.IDeleteNotificationConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteNotificationConfig(
    request?: protos.google.cloud.securitycenter.v2.IDeleteNotificationConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.securitycenter.v2.IDeleteNotificationConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.securitycenter.v2.IDeleteNotificationConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.securitycenter.v2.IDeleteNotificationConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteNotificationConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Deletes a ResourceValueConfig.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the ResourceValueConfig to delete
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.protobuf.Empty|Empty}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.delete_resource_value_config.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_DeleteResourceValueConfig_async
   */
  deleteResourceValueConfig(
    request?: protos.google.cloud.securitycenter.v2.IDeleteResourceValueConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.securitycenter.v2.IDeleteResourceValueConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  deleteResourceValueConfig(
    request: protos.google.cloud.securitycenter.v2.IDeleteResourceValueConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.securitycenter.v2.IDeleteResourceValueConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteResourceValueConfig(
    request: protos.google.cloud.securitycenter.v2.IDeleteResourceValueConfigRequest,
    callback: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.securitycenter.v2.IDeleteResourceValueConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  deleteResourceValueConfig(
    request?: protos.google.cloud.securitycenter.v2.IDeleteResourceValueConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.protobuf.IEmpty,
          | protos.google.cloud.securitycenter.v2.IDeleteResourceValueConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.IEmpty,
      | protos.google.cloud.securitycenter.v2.IDeleteResourceValueConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.protobuf.IEmpty,
      (
        | protos.google.cloud.securitycenter.v2.IDeleteResourceValueConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.deleteResourceValueConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Gets a BigQuery export.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the BigQuery export to retrieve. The following list shows
   *   some examples of the format:
   *
   *   +
   *   `organizations/{organization}/locations/{location}/bigQueryExports/{export_id}`
   *   + `folders/{folder}/locations/{location}/bigQueryExports/{export_id}`
   *   + `projects/{project}locations/{location}//bigQueryExports/{export_id}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.BigQueryExport|BigQueryExport}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.get_big_query_export.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_GetBigQueryExport_async
   */
  getBigQueryExport(
    request?: protos.google.cloud.securitycenter.v2.IGetBigQueryExportRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      (
        | protos.google.cloud.securitycenter.v2.IGetBigQueryExportRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  getBigQueryExport(
    request: protos.google.cloud.securitycenter.v2.IGetBigQueryExportRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      | protos.google.cloud.securitycenter.v2.IGetBigQueryExportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getBigQueryExport(
    request: protos.google.cloud.securitycenter.v2.IGetBigQueryExportRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      | protos.google.cloud.securitycenter.v2.IGetBigQueryExportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getBigQueryExport(
    request?: protos.google.cloud.securitycenter.v2.IGetBigQueryExportRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IBigQueryExport,
          | protos.google.cloud.securitycenter.v2.IGetBigQueryExportRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      | protos.google.cloud.securitycenter.v2.IGetBigQueryExportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      (
        | protos.google.cloud.securitycenter.v2.IGetBigQueryExportRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getBigQueryExport(request, options, callback);
  }
  /**
   * Get the simulation by name or the latest simulation for the given
   * organization.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The organization name or simulation name of this simulation
   *
   *   Valid format:
   *   "organizations/{organization}/simulations/latest"
   *   "organizations/{organization}/simulations/{simulation}"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.Simulation|Simulation}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.get_simulation.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_GetSimulation_async
   */
  getSimulation(
    request?: protos.google.cloud.securitycenter.v2.IGetSimulationRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ISimulation,
      protos.google.cloud.securitycenter.v2.IGetSimulationRequest | undefined,
      {} | undefined,
    ]
  >;
  getSimulation(
    request: protos.google.cloud.securitycenter.v2.IGetSimulationRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.ISimulation,
      | protos.google.cloud.securitycenter.v2.IGetSimulationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getSimulation(
    request: protos.google.cloud.securitycenter.v2.IGetSimulationRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.ISimulation,
      | protos.google.cloud.securitycenter.v2.IGetSimulationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getSimulation(
    request?: protos.google.cloud.securitycenter.v2.IGetSimulationRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.ISimulation,
          | protos.google.cloud.securitycenter.v2.IGetSimulationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.ISimulation,
      | protos.google.cloud.securitycenter.v2.IGetSimulationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ISimulation,
      protos.google.cloud.securitycenter.v2.IGetSimulationRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getSimulation(request, options, callback);
  }
  /**
   * Get the valued resource by name
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The name of this valued resource
   *
   *   Valid format:
   *   "organizations/{organization}/simulations/{simulation}/valuedResources/{valued_resource}"
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.ValuedResource|ValuedResource}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.get_valued_resource.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_GetValuedResource_async
   */
  getValuedResource(
    request?: protos.google.cloud.securitycenter.v2.IGetValuedResourceRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IValuedResource,
      (
        | protos.google.cloud.securitycenter.v2.IGetValuedResourceRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  getValuedResource(
    request: protos.google.cloud.securitycenter.v2.IGetValuedResourceRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IValuedResource,
      | protos.google.cloud.securitycenter.v2.IGetValuedResourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getValuedResource(
    request: protos.google.cloud.securitycenter.v2.IGetValuedResourceRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IValuedResource,
      | protos.google.cloud.securitycenter.v2.IGetValuedResourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getValuedResource(
    request?: protos.google.cloud.securitycenter.v2.IGetValuedResourceRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IValuedResource,
          | protos.google.cloud.securitycenter.v2.IGetValuedResourceRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IValuedResource,
      | protos.google.cloud.securitycenter.v2.IGetValuedResourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IValuedResource,
      (
        | protos.google.cloud.securitycenter.v2.IGetValuedResourceRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getValuedResource(request, options, callback);
  }
  /**
   * Gets the access control policy on the specified Source.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {google.iam.v1.GetPolicyOptions} request.options
   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
   *   `GetIamPolicy`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.iam.v1.Policy|Policy}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.get_iam_policy.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_GetIamPolicy_async
   */
  getIamPolicy(
    request?: protos.google.iam.v1.IGetIamPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | undefined,
      {} | undefined,
    ]
  >;
  getIamPolicy(
    request: protos.google.iam.v1.IGetIamPolicyRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getIamPolicy(
    request: protos.google.iam.v1.IGetIamPolicyRequest,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getIamPolicy(
    request?: protos.google.iam.v1.IGetIamPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getIamPolicy(request, options, callback);
  }
  /**
   * Gets a mute config. If no location is specified, default is
   * global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the mute config to retrieve. The following list shows
   *   some examples of the format:
   *
   *   + `organizations/{organization}/muteConfigs/{config_id}`
   *   +
   *   `organizations/{organization}/locations/{location}/muteConfigs/{config_id}`
   *   + `folders/{folder}/muteConfigs/{config_id}`
   *   + `folders/{folder}/locations/{location}/muteConfigs/{config_id}`
   *   + `projects/{project}/muteConfigs/{config_id}`
   *   + `projects/{project}/locations/{location}/muteConfigs/{config_id}`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.MuteConfig|MuteConfig}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.get_mute_config.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_GetMuteConfig_async
   */
  getMuteConfig(
    request?: protos.google.cloud.securitycenter.v2.IGetMuteConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      protos.google.cloud.securitycenter.v2.IGetMuteConfigRequest | undefined,
      {} | undefined,
    ]
  >;
  getMuteConfig(
    request: protos.google.cloud.securitycenter.v2.IGetMuteConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      | protos.google.cloud.securitycenter.v2.IGetMuteConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getMuteConfig(
    request: protos.google.cloud.securitycenter.v2.IGetMuteConfigRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      | protos.google.cloud.securitycenter.v2.IGetMuteConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getMuteConfig(
    request?: protos.google.cloud.securitycenter.v2.IGetMuteConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IMuteConfig,
          | protos.google.cloud.securitycenter.v2.IGetMuteConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      | protos.google.cloud.securitycenter.v2.IGetMuteConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      protos.google.cloud.securitycenter.v2.IGetMuteConfigRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const routingParameter = {};
    {
      const fieldValue = request.name;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp(
              'projects/[^/]+/locations/(?<location>[^/]+)/muteConfigs/[^/]+'
            )
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.name;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp(
              'organizations/[^/]+/locations/(?<location>[^/]+)/muteConfigs/[^/]+'
            )
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.name;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp(
              'folders/[^/]+/locations/(?<location>[^/]+)/muteConfigs/[^/]+'
            )
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams(routingParameter);
    this.initialize();
    return this.innerApiCalls.getMuteConfig(request, options, callback);
  }
  /**
   * Gets a notification config.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the notification config to get. The following list shows
   *   some examples of the format:
   *
   *   +
   *   `organizations/[organization_id]/locations/[location_id]/notificationConfigs/[config_id]`
   *   +
   *   `folders/[folder_id]/locations/[location_id]/notificationConfigs/[config_id]`
   *   +
   *   `projects/[project_id]/locations/[location_id]/notificationConfigs/[config_id]`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.NotificationConfig|NotificationConfig}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.get_notification_config.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_GetNotificationConfig_async
   */
  getNotificationConfig(
    request?: protos.google.cloud.securitycenter.v2.IGetNotificationConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      (
        | protos.google.cloud.securitycenter.v2.IGetNotificationConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  getNotificationConfig(
    request: protos.google.cloud.securitycenter.v2.IGetNotificationConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      | protos.google.cloud.securitycenter.v2.IGetNotificationConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getNotificationConfig(
    request: protos.google.cloud.securitycenter.v2.IGetNotificationConfigRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      | protos.google.cloud.securitycenter.v2.IGetNotificationConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getNotificationConfig(
    request?: protos.google.cloud.securitycenter.v2.IGetNotificationConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.INotificationConfig,
          | protos.google.cloud.securitycenter.v2.IGetNotificationConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      | protos.google.cloud.securitycenter.v2.IGetNotificationConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      (
        | protos.google.cloud.securitycenter.v2.IGetNotificationConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getNotificationConfig(request, options, callback);
  }
  /**
   * Gets a ResourceValueConfig.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the resource value config to retrieve. Its format is
   *   organizations/{organization}/resourceValueConfigs/{config_id}.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.ResourceValueConfig|ResourceValueConfig}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.get_resource_value_config.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_GetResourceValueConfig_async
   */
  getResourceValueConfig(
    request?: protos.google.cloud.securitycenter.v2.IGetResourceValueConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IResourceValueConfig,
      (
        | protos.google.cloud.securitycenter.v2.IGetResourceValueConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  getResourceValueConfig(
    request: protos.google.cloud.securitycenter.v2.IGetResourceValueConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IResourceValueConfig,
      | protos.google.cloud.securitycenter.v2.IGetResourceValueConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getResourceValueConfig(
    request: protos.google.cloud.securitycenter.v2.IGetResourceValueConfigRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IResourceValueConfig,
      | protos.google.cloud.securitycenter.v2.IGetResourceValueConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getResourceValueConfig(
    request?: protos.google.cloud.securitycenter.v2.IGetResourceValueConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IResourceValueConfig,
          | protos.google.cloud.securitycenter.v2.IGetResourceValueConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IResourceValueConfig,
      | protos.google.cloud.securitycenter.v2.IGetResourceValueConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IResourceValueConfig,
      (
        | protos.google.cloud.securitycenter.v2.IGetResourceValueConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getResourceValueConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Gets a source.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Relative resource name of the source. Its format is
   *   "organizations/[organization_id]/source/[source_id]".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.Source|Source}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.get_source.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_GetSource_async
   */
  getSource(
    request?: protos.google.cloud.securitycenter.v2.IGetSourceRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ISource,
      protos.google.cloud.securitycenter.v2.IGetSourceRequest | undefined,
      {} | undefined,
    ]
  >;
  getSource(
    request: protos.google.cloud.securitycenter.v2.IGetSourceRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.ISource,
      | protos.google.cloud.securitycenter.v2.IGetSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getSource(
    request: protos.google.cloud.securitycenter.v2.IGetSourceRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.ISource,
      | protos.google.cloud.securitycenter.v2.IGetSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getSource(
    request?: protos.google.cloud.securitycenter.v2.IGetSourceRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.ISource,
          | protos.google.cloud.securitycenter.v2.IGetSourceRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.ISource,
      | protos.google.cloud.securitycenter.v2.IGetSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ISource,
      protos.google.cloud.securitycenter.v2.IGetSourceRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getSource(request, options, callback);
  }
  /**
   * Updates the state of a finding. If no location is specified, finding is
   * assumed to be in global
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The [relative resource
   *   name](https://cloud.google.com/apis/design/resource_names#relative_resource_name)
   *   of the finding. If no location is specified, finding is assumed to be in
   *   global. The following list shows some examples:
   *
   *   +
   *   `organizations/{organization_id}/sources/{source_id}/findings/{finding_id}`
   *   +
   *   `organizations/{organization_id}/sources/{source_id}/locations/{location_id}/findings/{finding_id}`
   *   + `folders/{folder_id}/sources/{source_id}/findings/{finding_id}`
   *   +
   *   `folders/{folder_id}/sources/{source_id}/locations/{location_id}/findings/{finding_id}`
   *   + `projects/{project_id}/sources/{source_id}/findings/{finding_id}`
   *   +
   *   `projects/{project_id}/sources/{source_id}/locations/{location_id}/findings/{finding_id}`
   * @param {google.cloud.securitycenter.v2.Finding.State} request.state
   *   Required. The desired State of the finding.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.Finding|Finding}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.set_finding_state.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_SetFindingState_async
   */
  setFindingState(
    request?: protos.google.cloud.securitycenter.v2.ISetFindingStateRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IFinding,
      protos.google.cloud.securitycenter.v2.ISetFindingStateRequest | undefined,
      {} | undefined,
    ]
  >;
  setFindingState(
    request: protos.google.cloud.securitycenter.v2.ISetFindingStateRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IFinding,
      | protos.google.cloud.securitycenter.v2.ISetFindingStateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  setFindingState(
    request: protos.google.cloud.securitycenter.v2.ISetFindingStateRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IFinding,
      | protos.google.cloud.securitycenter.v2.ISetFindingStateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  setFindingState(
    request?: protos.google.cloud.securitycenter.v2.ISetFindingStateRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IFinding,
          | protos.google.cloud.securitycenter.v2.ISetFindingStateRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IFinding,
      | protos.google.cloud.securitycenter.v2.ISetFindingStateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IFinding,
      protos.google.cloud.securitycenter.v2.ISetFindingStateRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.setFindingState(request, options, callback);
  }
  /**
   * Sets the access control policy on the specified Source.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being specified.
   *   See the operation documentation for the appropriate value for this field.
   * @param {google.iam.v1.Policy} request.policy
   *   REQUIRED: The complete policy to be applied to the `resource`. The size of
   *   the policy is limited to a few 10s of KB. An empty policy is a
   *   valid policy but certain Cloud Platform services (such as Projects)
   *   might reject them.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
   *   the fields in the mask will be modified. If no mask is provided, the
   *   following default mask is used:
   *
   *   `paths: "bindings, etag"`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.iam.v1.Policy|Policy}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.set_iam_policy.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_SetIamPolicy_async
   */
  setIamPolicy(
    request?: protos.google.iam.v1.ISetIamPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | undefined,
      {} | undefined,
    ]
  >;
  setIamPolicy(
    request: protos.google.iam.v1.ISetIamPolicyRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  setIamPolicy(
    request: protos.google.iam.v1.ISetIamPolicyRequest,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  setIamPolicy(
    request?: protos.google.iam.v1.ISetIamPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.setIamPolicy(request, options, callback);
  }
  /**
   * Updates the mute state of a finding. If no location is specified, finding
   * is assumed to be in global
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The [relative resource
   *   name](https://cloud.google.com/apis/design/resource_names#relative_resource_name)
   *   of the finding. If no location is specified, finding is assumed to be in
   *   global. The following list shows some examples:
   *
   *   +
   *   `organizations/{organization_id}/sources/{source_id}/findings/{finding_id}`
   *   +
   *   `organizations/{organization_id}/sources/{source_id}/locations/{location_id}/findings/{finding_id}`
   *   + `folders/{folder_id}/sources/{source_id}/findings/{finding_id}`
   *   +
   *   `folders/{folder_id}/sources/{source_id}/locations/{location_id}/findings/{finding_id}`
   *   + `projects/{project_id}/sources/{source_id}/findings/{finding_id}`
   *   +
   *   `projects/{project_id}/sources/{source_id}/locations/{location_id}/findings/{finding_id}`
   * @param {google.cloud.securitycenter.v2.Finding.Mute} request.mute
   *   Required. The desired state of the Mute.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.Finding|Finding}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.set_mute.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_SetMute_async
   */
  setMute(
    request?: protos.google.cloud.securitycenter.v2.ISetMuteRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IFinding,
      protos.google.cloud.securitycenter.v2.ISetMuteRequest | undefined,
      {} | undefined,
    ]
  >;
  setMute(
    request: protos.google.cloud.securitycenter.v2.ISetMuteRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IFinding,
      protos.google.cloud.securitycenter.v2.ISetMuteRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  setMute(
    request: protos.google.cloud.securitycenter.v2.ISetMuteRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IFinding,
      protos.google.cloud.securitycenter.v2.ISetMuteRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  setMute(
    request?: protos.google.cloud.securitycenter.v2.ISetMuteRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IFinding,
          | protos.google.cloud.securitycenter.v2.ISetMuteRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IFinding,
      protos.google.cloud.securitycenter.v2.ISetMuteRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IFinding,
      protos.google.cloud.securitycenter.v2.ISetMuteRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.setMute(request, options, callback);
  }
  /**
   * Returns the permissions that a caller has on the specified source.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see
   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.iam.v1.TestIamPermissionsResponse|TestIamPermissionsResponse}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.test_iam_permissions.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_TestIamPermissions_async
   */
  testIamPermissions(
    request?: protos.google.iam.v1.ITestIamPermissionsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | undefined,
      {} | undefined,
    ]
  >;
  testIamPermissions(
    request: protos.google.iam.v1.ITestIamPermissionsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  testIamPermissions(
    request: protos.google.iam.v1.ITestIamPermissionsRequest,
    callback: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  testIamPermissions(
    request?: protos.google.iam.v1.ITestIamPermissionsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.ITestIamPermissionsResponse,
          protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.testIamPermissions(request, options, callback);
  }
  /**
   * Updates a BigQuery export.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.securitycenter.v2.BigQueryExport} request.bigQueryExport
   *   Required. The BigQuery export being updated.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The list of fields to be updated.
   *   If empty all mutable fields will be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.BigQueryExport|BigQueryExport}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.update_big_query_export.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_UpdateBigQueryExport_async
   */
  updateBigQueryExport(
    request?: protos.google.cloud.securitycenter.v2.IUpdateBigQueryExportRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      (
        | protos.google.cloud.securitycenter.v2.IUpdateBigQueryExportRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  updateBigQueryExport(
    request: protos.google.cloud.securitycenter.v2.IUpdateBigQueryExportRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      | protos.google.cloud.securitycenter.v2.IUpdateBigQueryExportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateBigQueryExport(
    request: protos.google.cloud.securitycenter.v2.IUpdateBigQueryExportRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      | protos.google.cloud.securitycenter.v2.IUpdateBigQueryExportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateBigQueryExport(
    request?: protos.google.cloud.securitycenter.v2.IUpdateBigQueryExportRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IBigQueryExport,
          | protos.google.cloud.securitycenter.v2.IUpdateBigQueryExportRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      | protos.google.cloud.securitycenter.v2.IUpdateBigQueryExportRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IBigQueryExport,
      (
        | protos.google.cloud.securitycenter.v2.IUpdateBigQueryExportRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'big_query_export.name': request.bigQueryExport!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateBigQueryExport(request, options, callback);
  }
  /**
   * Updates external system. This is for a given finding. If no location is
   * specified, finding is assumed to be in global
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.securitycenter.v2.ExternalSystem} request.externalSystem
   *   Required. The external system resource to update.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The FieldMask to use when updating the external system resource.
   *
   *   If empty all mutable fields will be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.ExternalSystem|ExternalSystem}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.update_external_system.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_UpdateExternalSystem_async
   */
  updateExternalSystem(
    request?: protos.google.cloud.securitycenter.v2.IUpdateExternalSystemRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IExternalSystem,
      (
        | protos.google.cloud.securitycenter.v2.IUpdateExternalSystemRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  updateExternalSystem(
    request: protos.google.cloud.securitycenter.v2.IUpdateExternalSystemRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IExternalSystem,
      | protos.google.cloud.securitycenter.v2.IUpdateExternalSystemRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateExternalSystem(
    request: protos.google.cloud.securitycenter.v2.IUpdateExternalSystemRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IExternalSystem,
      | protos.google.cloud.securitycenter.v2.IUpdateExternalSystemRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateExternalSystem(
    request?: protos.google.cloud.securitycenter.v2.IUpdateExternalSystemRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IExternalSystem,
          | protos.google.cloud.securitycenter.v2.IUpdateExternalSystemRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IExternalSystem,
      | protos.google.cloud.securitycenter.v2.IUpdateExternalSystemRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IExternalSystem,
      (
        | protos.google.cloud.securitycenter.v2.IUpdateExternalSystemRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'external_system.name': request.externalSystem!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateExternalSystem(request, options, callback);
  }
  /**
   * Creates or updates a finding. If no location is specified, finding is
   * assumed to be in global. The corresponding source must exist for a finding
   * creation to succeed.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.securitycenter.v2.Finding} request.finding
   *   Required. The finding resource to update or create if it does not already
   *   exist. parent, security_marks, and update_time will be ignored.
   *
   *   In the case of creation, the finding id portion of the name must be
   *   alphanumeric and less than or equal to 32 characters and greater than 0
   *   characters in length.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The FieldMask to use when updating the finding resource. This field should
   *   not be specified when creating a finding.
   *
   *   When updating a finding, an empty mask is treated as updating all mutable
   *   fields and replacing source_properties.  Individual source_properties can
   *   be added/updated by using "source_properties.<property key>" in the field
   *   mask.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.Finding|Finding}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.update_finding.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_UpdateFinding_async
   */
  updateFinding(
    request?: protos.google.cloud.securitycenter.v2.IUpdateFindingRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IFinding,
      protos.google.cloud.securitycenter.v2.IUpdateFindingRequest | undefined,
      {} | undefined,
    ]
  >;
  updateFinding(
    request: protos.google.cloud.securitycenter.v2.IUpdateFindingRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IFinding,
      | protos.google.cloud.securitycenter.v2.IUpdateFindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateFinding(
    request: protos.google.cloud.securitycenter.v2.IUpdateFindingRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IFinding,
      | protos.google.cloud.securitycenter.v2.IUpdateFindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateFinding(
    request?: protos.google.cloud.securitycenter.v2.IUpdateFindingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IFinding,
          | protos.google.cloud.securitycenter.v2.IUpdateFindingRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IFinding,
      | protos.google.cloud.securitycenter.v2.IUpdateFindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IFinding,
      protos.google.cloud.securitycenter.v2.IUpdateFindingRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'finding.name': request.finding!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateFinding(request, options, callback);
  }
  /**
   * Updates a mute config. If no location is specified, default is
   * global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.securitycenter.v2.MuteConfig} request.muteConfig
   *   Required. The mute config being updated.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The list of fields to be updated.
   *   If empty all mutable fields will be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.MuteConfig|MuteConfig}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.update_mute_config.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_UpdateMuteConfig_async
   */
  updateMuteConfig(
    request?: protos.google.cloud.securitycenter.v2.IUpdateMuteConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      (
        | protos.google.cloud.securitycenter.v2.IUpdateMuteConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  updateMuteConfig(
    request: protos.google.cloud.securitycenter.v2.IUpdateMuteConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      | protos.google.cloud.securitycenter.v2.IUpdateMuteConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateMuteConfig(
    request: protos.google.cloud.securitycenter.v2.IUpdateMuteConfigRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      | protos.google.cloud.securitycenter.v2.IUpdateMuteConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateMuteConfig(
    request?: protos.google.cloud.securitycenter.v2.IUpdateMuteConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IMuteConfig,
          | protos.google.cloud.securitycenter.v2.IUpdateMuteConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      | protos.google.cloud.securitycenter.v2.IUpdateMuteConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IMuteConfig,
      (
        | protos.google.cloud.securitycenter.v2.IUpdateMuteConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const routingParameter = {};
    {
      const fieldValue = request.muteConfig?.name;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp(
              'projects/[^/]+/locations/(?<location>[^/]+)/muteConfigs/[^/]+'
            )
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.muteConfig?.name;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp(
              'organizations/[^/]+/locations/(?<location>[^/]+)/muteConfigs/[^/]+'
            )
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.muteConfig?.name;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp(
              'folders/[^/]+/locations/(?<location>[^/]+)/muteConfigs/[^/]+'
            )
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams(routingParameter);
    this.initialize();
    return this.innerApiCalls.updateMuteConfig(request, options, callback);
  }
  /**
   * Updates a notification config. The following update
   * fields are allowed: description, pubsub_topic, streaming_config.filter
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.securitycenter.v2.NotificationConfig} request.notificationConfig
   *   Required. The notification config to update.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The FieldMask to use when updating the notification config.
   *
   *   If empty all mutable fields will be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.NotificationConfig|NotificationConfig}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.update_notification_config.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_UpdateNotificationConfig_async
   */
  updateNotificationConfig(
    request?: protos.google.cloud.securitycenter.v2.IUpdateNotificationConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      (
        | protos.google.cloud.securitycenter.v2.IUpdateNotificationConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  updateNotificationConfig(
    request: protos.google.cloud.securitycenter.v2.IUpdateNotificationConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      | protos.google.cloud.securitycenter.v2.IUpdateNotificationConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateNotificationConfig(
    request: protos.google.cloud.securitycenter.v2.IUpdateNotificationConfigRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      | protos.google.cloud.securitycenter.v2.IUpdateNotificationConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateNotificationConfig(
    request?: protos.google.cloud.securitycenter.v2.IUpdateNotificationConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.INotificationConfig,
          | protos.google.cloud.securitycenter.v2.IUpdateNotificationConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      | protos.google.cloud.securitycenter.v2.IUpdateNotificationConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.INotificationConfig,
      (
        | protos.google.cloud.securitycenter.v2.IUpdateNotificationConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'notification_config.name': request.notificationConfig!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateNotificationConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Updates an existing ResourceValueConfigs with new rules.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.securitycenter.v2.ResourceValueConfig} request.resourceValueConfig
   *   Required. The resource value config being updated.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The list of fields to be updated.
   *   If empty all mutable fields will be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.ResourceValueConfig|ResourceValueConfig}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.update_resource_value_config.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_UpdateResourceValueConfig_async
   */
  updateResourceValueConfig(
    request?: protos.google.cloud.securitycenter.v2.IUpdateResourceValueConfigRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IResourceValueConfig,
      (
        | protos.google.cloud.securitycenter.v2.IUpdateResourceValueConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  updateResourceValueConfig(
    request: protos.google.cloud.securitycenter.v2.IUpdateResourceValueConfigRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IResourceValueConfig,
      | protos.google.cloud.securitycenter.v2.IUpdateResourceValueConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateResourceValueConfig(
    request: protos.google.cloud.securitycenter.v2.IUpdateResourceValueConfigRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.IResourceValueConfig,
      | protos.google.cloud.securitycenter.v2.IUpdateResourceValueConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateResourceValueConfig(
    request?: protos.google.cloud.securitycenter.v2.IUpdateResourceValueConfigRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.IResourceValueConfig,
          | protos.google.cloud.securitycenter.v2.IUpdateResourceValueConfigRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.IResourceValueConfig,
      | protos.google.cloud.securitycenter.v2.IUpdateResourceValueConfigRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IResourceValueConfig,
      (
        | protos.google.cloud.securitycenter.v2.IUpdateResourceValueConfigRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'resource_value_config.name': request.resourceValueConfig!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateResourceValueConfig(
      request,
      options,
      callback
    );
  }
  /**
   * Updates security marks. For Finding Security marks, if no location is
   * specified, finding is assumed to be in global. Assets Security Marks can
   * only be accessed through global endpoint.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.securitycenter.v2.SecurityMarks} request.securityMarks
   *   Required. The security marks resource to update.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The FieldMask to use when updating the security marks resource.
   *
   *   The field mask must not contain duplicate fields.
   *   If empty or set to "marks", all marks will be replaced.  Individual
   *   marks can be updated using "marks.<mark_key>".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.SecurityMarks|SecurityMarks}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.update_security_marks.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_UpdateSecurityMarks_async
   */
  updateSecurityMarks(
    request?: protos.google.cloud.securitycenter.v2.IUpdateSecurityMarksRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ISecurityMarks,
      (
        | protos.google.cloud.securitycenter.v2.IUpdateSecurityMarksRequest
        | undefined
      ),
      {} | undefined,
    ]
  >;
  updateSecurityMarks(
    request: protos.google.cloud.securitycenter.v2.IUpdateSecurityMarksRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.ISecurityMarks,
      | protos.google.cloud.securitycenter.v2.IUpdateSecurityMarksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateSecurityMarks(
    request: protos.google.cloud.securitycenter.v2.IUpdateSecurityMarksRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.ISecurityMarks,
      | protos.google.cloud.securitycenter.v2.IUpdateSecurityMarksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateSecurityMarks(
    request?: protos.google.cloud.securitycenter.v2.IUpdateSecurityMarksRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.ISecurityMarks,
          | protos.google.cloud.securitycenter.v2.IUpdateSecurityMarksRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.ISecurityMarks,
      | protos.google.cloud.securitycenter.v2.IUpdateSecurityMarksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ISecurityMarks,
      (
        | protos.google.cloud.securitycenter.v2.IUpdateSecurityMarksRequest
        | undefined
      ),
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'security_marks.name': request.securityMarks!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateSecurityMarks(request, options, callback);
  }
  /**
   * Updates a source.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.securitycenter.v2.Source} request.source
   *   Required. The source resource to update.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The FieldMask to use when updating the source resource.
   *
   *   If empty all mutable fields will be updated.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing {@link protos.google.cloud.securitycenter.v2.Source|Source}.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.update_source.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_UpdateSource_async
   */
  updateSource(
    request?: protos.google.cloud.securitycenter.v2.IUpdateSourceRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ISource,
      protos.google.cloud.securitycenter.v2.IUpdateSourceRequest | undefined,
      {} | undefined,
    ]
  >;
  updateSource(
    request: protos.google.cloud.securitycenter.v2.IUpdateSourceRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.ISource,
      | protos.google.cloud.securitycenter.v2.IUpdateSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateSource(
    request: protos.google.cloud.securitycenter.v2.IUpdateSourceRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v2.ISource,
      | protos.google.cloud.securitycenter.v2.IUpdateSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateSource(
    request?: protos.google.cloud.securitycenter.v2.IUpdateSourceRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v2.ISource,
          | protos.google.cloud.securitycenter.v2.IUpdateSourceRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v2.ISource,
      | protos.google.cloud.securitycenter.v2.IUpdateSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ISource,
      protos.google.cloud.securitycenter.v2.IUpdateSourceRequest | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'source.name': request.source!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateSource(request, options, callback);
  }

  /**
   * Kicks off an LRO to bulk mute findings for a parent based on a filter. If
   * no location is specified, findings are muted in global. The parent
   * can be either an organization, folder, or project. The findings matched by
   * the filter will be muted after the LRO is done.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, at which bulk action needs to be applied. If no
   *   location is specified, findings are updated in global. The following list
   *   shows some examples:
   *
   *   + `organizations/[organization_id]`
   *   + `organizations/[organization_id]/locations/[location_id]`
   *   + `folders/[folder_id]`
   *   + `folders/[folder_id]/locations/[location_id]`
   *   + `projects/[project_id]`
   *   + `projects/[project_id]/locations/[location_id]`
   * @param {string} request.filter
   *   Expression that identifies findings that should be updated.
   *   The expression is a list of zero or more restrictions combined
   *   via logical operators `AND` and `OR`. Parentheses are supported, and `OR`
   *   has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a
   *   `-` character in front of them to indicate negation. The fields map to
   *   those defined in the corresponding resource.
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.bulk_mute_findings.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_BulkMuteFindings_async
   */
  bulkMuteFindings(
    request?: protos.google.cloud.securitycenter.v2.IBulkMuteFindingsRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<
        protos.google.cloud.securitycenter.v2.IBulkMuteFindingsResponse,
        protos.google.protobuf.IEmpty
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  >;
  bulkMuteFindings(
    request: protos.google.cloud.securitycenter.v2.IBulkMuteFindingsRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<
        protos.google.cloud.securitycenter.v2.IBulkMuteFindingsResponse,
        protos.google.protobuf.IEmpty
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  bulkMuteFindings(
    request: protos.google.cloud.securitycenter.v2.IBulkMuteFindingsRequest,
    callback: Callback<
      LROperation<
        protos.google.cloud.securitycenter.v2.IBulkMuteFindingsResponse,
        protos.google.protobuf.IEmpty
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  bulkMuteFindings(
    request?: protos.google.cloud.securitycenter.v2.IBulkMuteFindingsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.cloud.securitycenter.v2.IBulkMuteFindingsResponse,
            protos.google.protobuf.IEmpty
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<
        protos.google.cloud.securitycenter.v2.IBulkMuteFindingsResponse,
        protos.google.protobuf.IEmpty
      >,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<
        protos.google.cloud.securitycenter.v2.IBulkMuteFindingsResponse,
        protos.google.protobuf.IEmpty
      >,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.bulkMuteFindings(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `bulkMuteFindings()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.bulk_mute_findings.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_BulkMuteFindings_async
   */
  async checkBulkMuteFindingsProgress(
    name: string
  ): Promise<
    LROperation<
      protos.google.cloud.securitycenter.v2.BulkMuteFindingsResponse,
      protos.google.protobuf.Empty
    >
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.bulkMuteFindings,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.cloud.securitycenter.v2.BulkMuteFindingsResponse,
      protos.google.protobuf.Empty
    >;
  }
  /**
   * Filters an organization or source's findings and groups them by their
   * specified properties in a location. If no location is specified, findings
   * are assumed to be in global
   *
   * To group across all sources provide a `-` as the source id.
   * The following list shows some examples:
   *
   * + `/v2/organizations/{organization_id}/sources/-/findings`
   * +
   * `/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings`
   * + `/v2/folders/{folder_id}/sources/-/findings`
   * + `/v2/folders/{folder_id}/sources/-/locations/{location_id}/findings`
   * + `/v2/projects/{project_id}/sources/-/findings`
   * + `/v2/projects/{project_id}/sources/-/locations/{location_id}/findings`
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the source to groupBy. If no location is specified,
   *   finding is assumed to be in global.
   *    The following list shows some examples:
   *
   *   + `organizations/[organization_id]/sources/[source_id]`
   *   +
   *   `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
   *   + `folders/[folder_id]/sources/[source_id]`
   *   + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
   *   + `projects/[project_id]/sources/[source_id]`
   *   + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
   *
   *   To groupBy across all sources provide a source_id of `-`. The following
   *   list shows some examples:
   *
   *   + `organizations/{organization_id}/sources/-`
   *   + `organizations/{organization_id}/sources/-/locations/[location_id]`
   *   + `folders/{folder_id}/sources/-`
   *   + `folders/{folder_id}/sources/-/locations/[location_id]`
   *   + `projects/{project_id}/sources/-`
   *   + `projects/{project_id}/sources/-/locations/[location_id]`
   * @param {string} request.filter
   *   Expression that defines the filter to apply across findings.
   *   The expression is a list of one or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. Examples include:
   *
   *    * name
   *    * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   The following field and operator combinations are supported:
   *
   *   * name: `=`
   *   * parent: `=`, `:`
   *   * resource_name: `=`, `:`
   *   * state: `=`, `:`
   *   * category: `=`, `:`
   *   * external_uri: `=`, `:`
   *   * event_time: `=`, `>`, `<`, `>=`, `<=`
   *
   *     Usage: This should be milliseconds since epoch or an RFC3339 string.
   *     Examples:
   *       `event_time = "2019-06-10T16:07:18-07:00"`
   *       `event_time = 1560208038000`
   *
   *   * severity: `=`, `:`
   *   * security_marks.marks: `=`, `:`
   *   * resource:
   *     * resource.name: `=`, `:`
   *     * resource.parent_name: `=`, `:`
   *     * resource.parent_display_name: `=`, `:`
   *     * resource.project_name: `=`, `:`
   *     * resource.project_display_name: `=`, `:`
   *     * resource.type: `=`, `:`
   * @param {string} request.groupBy
   *   Required. Expression that defines what assets fields to use for grouping.
   *   The string value should follow SQL syntax: comma separated list of fields.
   *   For example: "parent,resource_name".
   *
   *   The following fields are supported:
   *
   *   * resource_name
   *   * category
   *   * state
   *   * parent
   *   * severity
   * @param {string} request.pageToken
   *   The value returned by the last `GroupFindingsResponse`; indicates
   *   that this is a continuation of a prior `GroupFindings` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.securitycenter.v2.GroupResult|GroupResult}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `groupFindingsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  groupFindings(
    request?: protos.google.cloud.securitycenter.v2.IGroupFindingsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IGroupResult[],
      protos.google.cloud.securitycenter.v2.IGroupFindingsRequest | null,
      protos.google.cloud.securitycenter.v2.IGroupFindingsResponse,
    ]
  >;
  groupFindings(
    request: protos.google.cloud.securitycenter.v2.IGroupFindingsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IGroupFindingsRequest,
      | protos.google.cloud.securitycenter.v2.IGroupFindingsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IGroupResult
    >
  ): void;
  groupFindings(
    request: protos.google.cloud.securitycenter.v2.IGroupFindingsRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IGroupFindingsRequest,
      | protos.google.cloud.securitycenter.v2.IGroupFindingsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IGroupResult
    >
  ): void;
  groupFindings(
    request?: protos.google.cloud.securitycenter.v2.IGroupFindingsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v2.IGroupFindingsRequest,
          | protos.google.cloud.securitycenter.v2.IGroupFindingsResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v2.IGroupResult
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IGroupFindingsRequest,
      | protos.google.cloud.securitycenter.v2.IGroupFindingsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IGroupResult
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IGroupResult[],
      protos.google.cloud.securitycenter.v2.IGroupFindingsRequest | null,
      protos.google.cloud.securitycenter.v2.IGroupFindingsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.groupFindings(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the source to groupBy. If no location is specified,
   *   finding is assumed to be in global.
   *    The following list shows some examples:
   *
   *   + `organizations/[organization_id]/sources/[source_id]`
   *   +
   *   `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
   *   + `folders/[folder_id]/sources/[source_id]`
   *   + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
   *   + `projects/[project_id]/sources/[source_id]`
   *   + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
   *
   *   To groupBy across all sources provide a source_id of `-`. The following
   *   list shows some examples:
   *
   *   + `organizations/{organization_id}/sources/-`
   *   + `organizations/{organization_id}/sources/-/locations/[location_id]`
   *   + `folders/{folder_id}/sources/-`
   *   + `folders/{folder_id}/sources/-/locations/[location_id]`
   *   + `projects/{project_id}/sources/-`
   *   + `projects/{project_id}/sources/-/locations/[location_id]`
   * @param {string} request.filter
   *   Expression that defines the filter to apply across findings.
   *   The expression is a list of one or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. Examples include:
   *
   *    * name
   *    * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   The following field and operator combinations are supported:
   *
   *   * name: `=`
   *   * parent: `=`, `:`
   *   * resource_name: `=`, `:`
   *   * state: `=`, `:`
   *   * category: `=`, `:`
   *   * external_uri: `=`, `:`
   *   * event_time: `=`, `>`, `<`, `>=`, `<=`
   *
   *     Usage: This should be milliseconds since epoch or an RFC3339 string.
   *     Examples:
   *       `event_time = "2019-06-10T16:07:18-07:00"`
   *       `event_time = 1560208038000`
   *
   *   * severity: `=`, `:`
   *   * security_marks.marks: `=`, `:`
   *   * resource:
   *     * resource.name: `=`, `:`
   *     * resource.parent_name: `=`, `:`
   *     * resource.parent_display_name: `=`, `:`
   *     * resource.project_name: `=`, `:`
   *     * resource.project_display_name: `=`, `:`
   *     * resource.type: `=`, `:`
   * @param {string} request.groupBy
   *   Required. Expression that defines what assets fields to use for grouping.
   *   The string value should follow SQL syntax: comma separated list of fields.
   *   For example: "parent,resource_name".
   *
   *   The following fields are supported:
   *
   *   * resource_name
   *   * category
   *   * state
   *   * parent
   *   * severity
   * @param {string} request.pageToken
   *   The value returned by the last `GroupFindingsResponse`; indicates
   *   that this is a continuation of a prior `GroupFindings` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.securitycenter.v2.GroupResult|GroupResult} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `groupFindingsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  groupFindingsStream(
    request?: protos.google.cloud.securitycenter.v2.IGroupFindingsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['groupFindings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.groupFindings.createStream(
      this.innerApiCalls.groupFindings as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `groupFindings`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the source to groupBy. If no location is specified,
   *   finding is assumed to be in global.
   *    The following list shows some examples:
   *
   *   + `organizations/[organization_id]/sources/[source_id]`
   *   +
   *   `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
   *   + `folders/[folder_id]/sources/[source_id]`
   *   + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
   *   + `projects/[project_id]/sources/[source_id]`
   *   + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
   *
   *   To groupBy across all sources provide a source_id of `-`. The following
   *   list shows some examples:
   *
   *   + `organizations/{organization_id}/sources/-`
   *   + `organizations/{organization_id}/sources/-/locations/[location_id]`
   *   + `folders/{folder_id}/sources/-`
   *   + `folders/{folder_id}/sources/-/locations/[location_id]`
   *   + `projects/{project_id}/sources/-`
   *   + `projects/{project_id}/sources/-/locations/[location_id]`
   * @param {string} request.filter
   *   Expression that defines the filter to apply across findings.
   *   The expression is a list of one or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. Examples include:
   *
   *    * name
   *    * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   The following field and operator combinations are supported:
   *
   *   * name: `=`
   *   * parent: `=`, `:`
   *   * resource_name: `=`, `:`
   *   * state: `=`, `:`
   *   * category: `=`, `:`
   *   * external_uri: `=`, `:`
   *   * event_time: `=`, `>`, `<`, `>=`, `<=`
   *
   *     Usage: This should be milliseconds since epoch or an RFC3339 string.
   *     Examples:
   *       `event_time = "2019-06-10T16:07:18-07:00"`
   *       `event_time = 1560208038000`
   *
   *   * severity: `=`, `:`
   *   * security_marks.marks: `=`, `:`
   *   * resource:
   *     * resource.name: `=`, `:`
   *     * resource.parent_name: `=`, `:`
   *     * resource.parent_display_name: `=`, `:`
   *     * resource.project_name: `=`, `:`
   *     * resource.project_display_name: `=`, `:`
   *     * resource.type: `=`, `:`
   * @param {string} request.groupBy
   *   Required. Expression that defines what assets fields to use for grouping.
   *   The string value should follow SQL syntax: comma separated list of fields.
   *   For example: "parent,resource_name".
   *
   *   The following fields are supported:
   *
   *   * resource_name
   *   * category
   *   * state
   *   * parent
   *   * severity
   * @param {string} request.pageToken
   *   The value returned by the last `GroupFindingsResponse`; indicates
   *   that this is a continuation of a prior `GroupFindings` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.securitycenter.v2.GroupResult|GroupResult}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.group_findings.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_GroupFindings_async
   */
  groupFindingsAsync(
    request?: protos.google.cloud.securitycenter.v2.IGroupFindingsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v2.IGroupResult> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['groupFindings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.groupFindings.asyncIterate(
      this.innerApiCalls['groupFindings'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v2.IGroupResult>;
  }
  /**
   * Lists the attack paths for a set of simulation results or valued resources
   * and filter.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of parent to list attack paths.
   *
   *   Valid formats:
   *   "organizations/{organization}",
   *   "organizations/{organization}/simulations/{simulation}"
   *   "organizations/{organization}/simulations/{simulation}/attackExposureResults/{attack_exposure_result_v2}"
   *   "organizations/{organization}/simulations/{simulation}/valuedResources/{valued_resource}"
   * @param {string} request.filter
   *   The filter expression that filters the attack path in the response.
   *   Supported fields:
   *
   *     * `valued_resources` supports =
   * @param {string} request.pageToken
   *   The value returned by the last `ListAttackPathsResponse`; indicates
   *   that this is a continuation of a prior `ListAttackPaths` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.securitycenter.v2.AttackPath|AttackPath}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listAttackPathsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listAttackPaths(
    request?: protos.google.cloud.securitycenter.v2.IListAttackPathsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IAttackPath[],
      protos.google.cloud.securitycenter.v2.IListAttackPathsRequest | null,
      protos.google.cloud.securitycenter.v2.IListAttackPathsResponse,
    ]
  >;
  listAttackPaths(
    request: protos.google.cloud.securitycenter.v2.IListAttackPathsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListAttackPathsRequest,
      | protos.google.cloud.securitycenter.v2.IListAttackPathsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IAttackPath
    >
  ): void;
  listAttackPaths(
    request: protos.google.cloud.securitycenter.v2.IListAttackPathsRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListAttackPathsRequest,
      | protos.google.cloud.securitycenter.v2.IListAttackPathsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IAttackPath
    >
  ): void;
  listAttackPaths(
    request?: protos.google.cloud.securitycenter.v2.IListAttackPathsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v2.IListAttackPathsRequest,
          | protos.google.cloud.securitycenter.v2.IListAttackPathsResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v2.IAttackPath
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListAttackPathsRequest,
      | protos.google.cloud.securitycenter.v2.IListAttackPathsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IAttackPath
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IAttackPath[],
      protos.google.cloud.securitycenter.v2.IListAttackPathsRequest | null,
      protos.google.cloud.securitycenter.v2.IListAttackPathsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listAttackPaths(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of parent to list attack paths.
   *
   *   Valid formats:
   *   "organizations/{organization}",
   *   "organizations/{organization}/simulations/{simulation}"
   *   "organizations/{organization}/simulations/{simulation}/attackExposureResults/{attack_exposure_result_v2}"
   *   "organizations/{organization}/simulations/{simulation}/valuedResources/{valued_resource}"
   * @param {string} request.filter
   *   The filter expression that filters the attack path in the response.
   *   Supported fields:
   *
   *     * `valued_resources` supports =
   * @param {string} request.pageToken
   *   The value returned by the last `ListAttackPathsResponse`; indicates
   *   that this is a continuation of a prior `ListAttackPaths` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.securitycenter.v2.AttackPath|AttackPath} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listAttackPathsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listAttackPathsStream(
    request?: protos.google.cloud.securitycenter.v2.IListAttackPathsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listAttackPaths'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listAttackPaths.createStream(
      this.innerApiCalls.listAttackPaths as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listAttackPaths`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of parent to list attack paths.
   *
   *   Valid formats:
   *   "organizations/{organization}",
   *   "organizations/{organization}/simulations/{simulation}"
   *   "organizations/{organization}/simulations/{simulation}/attackExposureResults/{attack_exposure_result_v2}"
   *   "organizations/{organization}/simulations/{simulation}/valuedResources/{valued_resource}"
   * @param {string} request.filter
   *   The filter expression that filters the attack path in the response.
   *   Supported fields:
   *
   *     * `valued_resources` supports =
   * @param {string} request.pageToken
   *   The value returned by the last `ListAttackPathsResponse`; indicates
   *   that this is a continuation of a prior `ListAttackPaths` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.securitycenter.v2.AttackPath|AttackPath}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.list_attack_paths.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_ListAttackPaths_async
   */
  listAttackPathsAsync(
    request?: protos.google.cloud.securitycenter.v2.IListAttackPathsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v2.IAttackPath> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listAttackPaths'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listAttackPaths.asyncIterate(
      this.innerApiCalls['listAttackPaths'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v2.IAttackPath>;
  }
  /**
   * Lists BigQuery exports. Note that when requesting BigQuery exports at a
   * given level all exports under that level are also returned e.g. if
   * requesting BigQuery exports under a folder, then all BigQuery exports
   * immediately under the folder plus the ones created under the projects
   * within the folder are returned.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns the collection of BigQuery exports. Its
   *   format is "organizations/[organization_id]/locations/[location_id]",
   *   "folders/[folder_id]/locations/[location_id]", or
   *   "projects/[project_id]/locations/[location_id]".
   * @param {number} request.pageSize
   *   The maximum number of configs to return. The service may return fewer than
   *   this value.
   *   If unspecified, at most 10 configs will be returned.
   *   The maximum value is 1000; values above 1000 will be coerced to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListBigQueryExports` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListBigQueryExports`
   *   must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.securitycenter.v2.BigQueryExport|BigQueryExport}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listBigQueryExportsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listBigQueryExports(
    request?: protos.google.cloud.securitycenter.v2.IListBigQueryExportsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IBigQueryExport[],
      protos.google.cloud.securitycenter.v2.IListBigQueryExportsRequest | null,
      protos.google.cloud.securitycenter.v2.IListBigQueryExportsResponse,
    ]
  >;
  listBigQueryExports(
    request: protos.google.cloud.securitycenter.v2.IListBigQueryExportsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListBigQueryExportsRequest,
      | protos.google.cloud.securitycenter.v2.IListBigQueryExportsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IBigQueryExport
    >
  ): void;
  listBigQueryExports(
    request: protos.google.cloud.securitycenter.v2.IListBigQueryExportsRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListBigQueryExportsRequest,
      | protos.google.cloud.securitycenter.v2.IListBigQueryExportsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IBigQueryExport
    >
  ): void;
  listBigQueryExports(
    request?: protos.google.cloud.securitycenter.v2.IListBigQueryExportsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v2.IListBigQueryExportsRequest,
          | protos.google.cloud.securitycenter.v2.IListBigQueryExportsResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v2.IBigQueryExport
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListBigQueryExportsRequest,
      | protos.google.cloud.securitycenter.v2.IListBigQueryExportsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IBigQueryExport
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IBigQueryExport[],
      protos.google.cloud.securitycenter.v2.IListBigQueryExportsRequest | null,
      protos.google.cloud.securitycenter.v2.IListBigQueryExportsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listBigQueryExports(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns the collection of BigQuery exports. Its
   *   format is "organizations/[organization_id]/locations/[location_id]",
   *   "folders/[folder_id]/locations/[location_id]", or
   *   "projects/[project_id]/locations/[location_id]".
   * @param {number} request.pageSize
   *   The maximum number of configs to return. The service may return fewer than
   *   this value.
   *   If unspecified, at most 10 configs will be returned.
   *   The maximum value is 1000; values above 1000 will be coerced to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListBigQueryExports` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListBigQueryExports`
   *   must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.securitycenter.v2.BigQueryExport|BigQueryExport} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listBigQueryExportsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listBigQueryExportsStream(
    request?: protos.google.cloud.securitycenter.v2.IListBigQueryExportsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listBigQueryExports'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listBigQueryExports.createStream(
      this.innerApiCalls.listBigQueryExports as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listBigQueryExports`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns the collection of BigQuery exports. Its
   *   format is "organizations/[organization_id]/locations/[location_id]",
   *   "folders/[folder_id]/locations/[location_id]", or
   *   "projects/[project_id]/locations/[location_id]".
   * @param {number} request.pageSize
   *   The maximum number of configs to return. The service may return fewer than
   *   this value.
   *   If unspecified, at most 10 configs will be returned.
   *   The maximum value is 1000; values above 1000 will be coerced to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListBigQueryExports` call.
   *   Provide this to retrieve the subsequent page.
   *   When paginating, all other parameters provided to `ListBigQueryExports`
   *   must match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.securitycenter.v2.BigQueryExport|BigQueryExport}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.list_big_query_exports.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_ListBigQueryExports_async
   */
  listBigQueryExportsAsync(
    request?: protos.google.cloud.securitycenter.v2.IListBigQueryExportsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v2.IBigQueryExport> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listBigQueryExports'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listBigQueryExports.asyncIterate(
      this.innerApiCalls['listBigQueryExports'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v2.IBigQueryExport>;
  }
  /**
   * Lists an organization or source's findings.
   *
   * To list across all sources for a given location provide a `-` as the source
   * id. If no location is specified, finding are assumed to be in global.
   * The following list shows some examples:
   *
   * + `/v2/organizations/{organization_id}/sources/-/findings`
   * +
   * `/v2/organizations/{organization_id}/sources/-/locations/{location_id}/findings`
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the source the findings belong to. If no location is
   *   specified, the default is global. The following list shows some examples:
   *
   *   + `organizations/[organization_id]/sources/[source_id]`
   *   +
   *   `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
   *   + `folders/[folder_id]/sources/[source_id]`
   *   + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
   *   + `projects/[project_id]/sources/[source_id]`
   *   + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
   *
   *   To list across all sources provide a source_id of `-`. The following
   *   list shows some examples:
   *
   *   + `organizations/{organization_id}/sources/-`
   *   + `organizations/{organization_id}/sources/-/locations/{location_id}`
   *   + `folders/{folder_id}/sources/-`
   *   + `folders/{folder_id}/sources/-locations/{location_id}`
   *   + `projects/{projects_id}/sources/-`
   *   + `projects/{projects_id}/sources/-/locations/{location_id}`
   * @param {string} request.filter
   *   Expression that defines the filter to apply across findings.
   *   The expression is a list of one or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. Examples include:
   *
   *    * name
   *    * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   The following field and operator combinations are supported:
   *
   *   * name: `=`
   *   * parent: `=`, `:`
   *   * resource_name: `=`, `:`
   *   * state: `=`, `:`
   *   * category: `=`, `:`
   *   * external_uri: `=`, `:`
   *   * event_time: `=`, `>`, `<`, `>=`, `<=`
   *
   *     Usage: This should be milliseconds since epoch or an RFC3339 string.
   *     Examples:
   *       `event_time = "2019-06-10T16:07:18-07:00"`
   *       `event_time = 1560208038000`
   *
   *   * severity: `=`, `:`
   *   * security_marks.marks: `=`, `:`
   *   * resource:
   *     * resource.name: `=`, `:`
   *     * resource.parent_name: `=`, `:`
   *     * resource.parent_display_name: `=`, `:`
   *     * resource.project_name: `=`, `:`
   *     * resource.project_display_name: `=`, `:`
   *     * resource.type: `=`, `:`
   *     * resource.folders.resource_folder: `=`, `:`
   *     * resource.display_name: `=`, `:`
   * @param {string} request.orderBy
   *   Expression that defines what fields and order to use for sorting. The
   *   string value should follow SQL syntax: comma separated list of fields. For
   *   example: "name,parent". The default sorting order
   *   is ascending. To specify descending order for a field, a suffix " desc"
   *   should be appended to the field name. For example: "name
   *   desc,parent". Redundant space characters in the
   *   syntax are insignificant. "name desc,parent" and "
   *   name     desc  ,   parent  " are equivalent.
   *
   *   The following fields are supported:
   *   name
   *   parent
   *   state
   *   category
   *   resource_name
   *   event_time
   *   security_marks.marks
   * @param {google.protobuf.FieldMask} request.fieldMask
   *   A field mask to specify the Finding fields to be listed in the response.
   *   An empty field mask will list all fields.
   * @param {string} request.pageToken
   *   The value returned by the last `ListFindingsResponse`; indicates
   *   that this is a continuation of a prior `ListFindings` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.securitycenter.v2.ListFindingsResponse.ListFindingsResult|ListFindingsResult}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listFindingsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listFindings(
    request?: protos.google.cloud.securitycenter.v2.IListFindingsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ListFindingsResponse.IListFindingsResult[],
      protos.google.cloud.securitycenter.v2.IListFindingsRequest | null,
      protos.google.cloud.securitycenter.v2.IListFindingsResponse,
    ]
  >;
  listFindings(
    request: protos.google.cloud.securitycenter.v2.IListFindingsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListFindingsRequest,
      | protos.google.cloud.securitycenter.v2.IListFindingsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.ListFindingsResponse.IListFindingsResult
    >
  ): void;
  listFindings(
    request: protos.google.cloud.securitycenter.v2.IListFindingsRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListFindingsRequest,
      | protos.google.cloud.securitycenter.v2.IListFindingsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.ListFindingsResponse.IListFindingsResult
    >
  ): void;
  listFindings(
    request?: protos.google.cloud.securitycenter.v2.IListFindingsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v2.IListFindingsRequest,
          | protos.google.cloud.securitycenter.v2.IListFindingsResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v2.ListFindingsResponse.IListFindingsResult
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListFindingsRequest,
      | protos.google.cloud.securitycenter.v2.IListFindingsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.ListFindingsResponse.IListFindingsResult
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ListFindingsResponse.IListFindingsResult[],
      protos.google.cloud.securitycenter.v2.IListFindingsRequest | null,
      protos.google.cloud.securitycenter.v2.IListFindingsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listFindings(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the source the findings belong to. If no location is
   *   specified, the default is global. The following list shows some examples:
   *
   *   + `organizations/[organization_id]/sources/[source_id]`
   *   +
   *   `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
   *   + `folders/[folder_id]/sources/[source_id]`
   *   + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
   *   + `projects/[project_id]/sources/[source_id]`
   *   + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
   *
   *   To list across all sources provide a source_id of `-`. The following
   *   list shows some examples:
   *
   *   + `organizations/{organization_id}/sources/-`
   *   + `organizations/{organization_id}/sources/-/locations/{location_id}`
   *   + `folders/{folder_id}/sources/-`
   *   + `folders/{folder_id}/sources/-locations/{location_id}`
   *   + `projects/{projects_id}/sources/-`
   *   + `projects/{projects_id}/sources/-/locations/{location_id}`
   * @param {string} request.filter
   *   Expression that defines the filter to apply across findings.
   *   The expression is a list of one or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. Examples include:
   *
   *    * name
   *    * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   The following field and operator combinations are supported:
   *
   *   * name: `=`
   *   * parent: `=`, `:`
   *   * resource_name: `=`, `:`
   *   * state: `=`, `:`
   *   * category: `=`, `:`
   *   * external_uri: `=`, `:`
   *   * event_time: `=`, `>`, `<`, `>=`, `<=`
   *
   *     Usage: This should be milliseconds since epoch or an RFC3339 string.
   *     Examples:
   *       `event_time = "2019-06-10T16:07:18-07:00"`
   *       `event_time = 1560208038000`
   *
   *   * severity: `=`, `:`
   *   * security_marks.marks: `=`, `:`
   *   * resource:
   *     * resource.name: `=`, `:`
   *     * resource.parent_name: `=`, `:`
   *     * resource.parent_display_name: `=`, `:`
   *     * resource.project_name: `=`, `:`
   *     * resource.project_display_name: `=`, `:`
   *     * resource.type: `=`, `:`
   *     * resource.folders.resource_folder: `=`, `:`
   *     * resource.display_name: `=`, `:`
   * @param {string} request.orderBy
   *   Expression that defines what fields and order to use for sorting. The
   *   string value should follow SQL syntax: comma separated list of fields. For
   *   example: "name,parent". The default sorting order
   *   is ascending. To specify descending order for a field, a suffix " desc"
   *   should be appended to the field name. For example: "name
   *   desc,parent". Redundant space characters in the
   *   syntax are insignificant. "name desc,parent" and "
   *   name     desc  ,   parent  " are equivalent.
   *
   *   The following fields are supported:
   *   name
   *   parent
   *   state
   *   category
   *   resource_name
   *   event_time
   *   security_marks.marks
   * @param {google.protobuf.FieldMask} request.fieldMask
   *   A field mask to specify the Finding fields to be listed in the response.
   *   An empty field mask will list all fields.
   * @param {string} request.pageToken
   *   The value returned by the last `ListFindingsResponse`; indicates
   *   that this is a continuation of a prior `ListFindings` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.securitycenter.v2.ListFindingsResponse.ListFindingsResult|ListFindingsResult} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listFindingsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listFindingsStream(
    request?: protos.google.cloud.securitycenter.v2.IListFindingsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listFindings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listFindings.createStream(
      this.innerApiCalls.listFindings as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listFindings`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the source the findings belong to. If no location is
   *   specified, the default is global. The following list shows some examples:
   *
   *   + `organizations/[organization_id]/sources/[source_id]`
   *   +
   *   `organizations/[organization_id]/sources/[source_id]/locations/[location_id]`
   *   + `folders/[folder_id]/sources/[source_id]`
   *   + `folders/[folder_id]/sources/[source_id]/locations/[location_id]`
   *   + `projects/[project_id]/sources/[source_id]`
   *   + `projects/[project_id]/sources/[source_id]/locations/[location_id]`
   *
   *   To list across all sources provide a source_id of `-`. The following
   *   list shows some examples:
   *
   *   + `organizations/{organization_id}/sources/-`
   *   + `organizations/{organization_id}/sources/-/locations/{location_id}`
   *   + `folders/{folder_id}/sources/-`
   *   + `folders/{folder_id}/sources/-locations/{location_id}`
   *   + `projects/{projects_id}/sources/-`
   *   + `projects/{projects_id}/sources/-/locations/{location_id}`
   * @param {string} request.filter
   *   Expression that defines the filter to apply across findings.
   *   The expression is a list of one or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. Examples include:
   *
   *    * name
   *    * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   The following field and operator combinations are supported:
   *
   *   * name: `=`
   *   * parent: `=`, `:`
   *   * resource_name: `=`, `:`
   *   * state: `=`, `:`
   *   * category: `=`, `:`
   *   * external_uri: `=`, `:`
   *   * event_time: `=`, `>`, `<`, `>=`, `<=`
   *
   *     Usage: This should be milliseconds since epoch or an RFC3339 string.
   *     Examples:
   *       `event_time = "2019-06-10T16:07:18-07:00"`
   *       `event_time = 1560208038000`
   *
   *   * severity: `=`, `:`
   *   * security_marks.marks: `=`, `:`
   *   * resource:
   *     * resource.name: `=`, `:`
   *     * resource.parent_name: `=`, `:`
   *     * resource.parent_display_name: `=`, `:`
   *     * resource.project_name: `=`, `:`
   *     * resource.project_display_name: `=`, `:`
   *     * resource.type: `=`, `:`
   *     * resource.folders.resource_folder: `=`, `:`
   *     * resource.display_name: `=`, `:`
   * @param {string} request.orderBy
   *   Expression that defines what fields and order to use for sorting. The
   *   string value should follow SQL syntax: comma separated list of fields. For
   *   example: "name,parent". The default sorting order
   *   is ascending. To specify descending order for a field, a suffix " desc"
   *   should be appended to the field name. For example: "name
   *   desc,parent". Redundant space characters in the
   *   syntax are insignificant. "name desc,parent" and "
   *   name     desc  ,   parent  " are equivalent.
   *
   *   The following fields are supported:
   *   name
   *   parent
   *   state
   *   category
   *   resource_name
   *   event_time
   *   security_marks.marks
   * @param {google.protobuf.FieldMask} request.fieldMask
   *   A field mask to specify the Finding fields to be listed in the response.
   *   An empty field mask will list all fields.
   * @param {string} request.pageToken
   *   The value returned by the last `ListFindingsResponse`; indicates
   *   that this is a continuation of a prior `ListFindings` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.securitycenter.v2.ListFindingsResponse.ListFindingsResult|ListFindingsResult}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.list_findings.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_ListFindings_async
   */
  listFindingsAsync(
    request?: protos.google.cloud.securitycenter.v2.IListFindingsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v2.ListFindingsResponse.IListFindingsResult> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listFindings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listFindings.asyncIterate(
      this.innerApiCalls['listFindings'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v2.ListFindingsResponse.IListFindingsResult>;
  }
  /**
   * Lists mute configs. If no location is specified, default is
   * global.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns the collection of mute configs. Its format
   *   is "organizations/[organization_id]", "folders/[folder_id]",
   *   "projects/[project_id]",
   *   "organizations/[organization_id]/locations/[location_id]",
   *   "folders/[folder_id]/locations/[location_id]",
   *   "projects/[project_id]/locations/[location_id]".
   * @param {number} request.pageSize
   *   The maximum number of configs to return. The service may return fewer than
   *   this value.
   *   If unspecified, at most 10 configs will be returned.
   *   The maximum value is 1000; values above 1000 will be coerced to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListMuteConfigs` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListMuteConfigs` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.securitycenter.v2.MuteConfig|MuteConfig}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listMuteConfigsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listMuteConfigs(
    request?: protos.google.cloud.securitycenter.v2.IListMuteConfigsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IMuteConfig[],
      protos.google.cloud.securitycenter.v2.IListMuteConfigsRequest | null,
      protos.google.cloud.securitycenter.v2.IListMuteConfigsResponse,
    ]
  >;
  listMuteConfigs(
    request: protos.google.cloud.securitycenter.v2.IListMuteConfigsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListMuteConfigsRequest,
      | protos.google.cloud.securitycenter.v2.IListMuteConfigsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IMuteConfig
    >
  ): void;
  listMuteConfigs(
    request: protos.google.cloud.securitycenter.v2.IListMuteConfigsRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListMuteConfigsRequest,
      | protos.google.cloud.securitycenter.v2.IListMuteConfigsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IMuteConfig
    >
  ): void;
  listMuteConfigs(
    request?: protos.google.cloud.securitycenter.v2.IListMuteConfigsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v2.IListMuteConfigsRequest,
          | protos.google.cloud.securitycenter.v2.IListMuteConfigsResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v2.IMuteConfig
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListMuteConfigsRequest,
      | protos.google.cloud.securitycenter.v2.IListMuteConfigsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IMuteConfig
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IMuteConfig[],
      protos.google.cloud.securitycenter.v2.IListMuteConfigsRequest | null,
      protos.google.cloud.securitycenter.v2.IListMuteConfigsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const routingParameter = {};
    {
      const fieldValue = request.parent;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp('projects/[^/]+/locations/(?<location>[^/]+)/muteConfigs')
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.parent;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp(
              'organizations/[^/]+/locations/(?<location>[^/]+)/muteConfigs'
            )
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.parent;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp('folders/[^/]+/locations/(?<location>[^/]+)/muteConfigs')
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams(routingParameter);
    this.initialize();
    return this.innerApiCalls.listMuteConfigs(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns the collection of mute configs. Its format
   *   is "organizations/[organization_id]", "folders/[folder_id]",
   *   "projects/[project_id]",
   *   "organizations/[organization_id]/locations/[location_id]",
   *   "folders/[folder_id]/locations/[location_id]",
   *   "projects/[project_id]/locations/[location_id]".
   * @param {number} request.pageSize
   *   The maximum number of configs to return. The service may return fewer than
   *   this value.
   *   If unspecified, at most 10 configs will be returned.
   *   The maximum value is 1000; values above 1000 will be coerced to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListMuteConfigs` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListMuteConfigs` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.securitycenter.v2.MuteConfig|MuteConfig} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listMuteConfigsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listMuteConfigsStream(
    request?: protos.google.cloud.securitycenter.v2.IListMuteConfigsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const routingParameter = {};
    {
      const fieldValue = request.parent;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp('projects/[^/]+/locations/(?<location>[^/]+)/muteConfigs')
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.parent;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp(
              'organizations/[^/]+/locations/(?<location>[^/]+)/muteConfigs'
            )
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.parent;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp('folders/[^/]+/locations/(?<location>[^/]+)/muteConfigs')
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams(routingParameter);
    const defaultCallSettings = this._defaults['listMuteConfigs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listMuteConfigs.createStream(
      this.innerApiCalls.listMuteConfigs as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listMuteConfigs`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns the collection of mute configs. Its format
   *   is "organizations/[organization_id]", "folders/[folder_id]",
   *   "projects/[project_id]",
   *   "organizations/[organization_id]/locations/[location_id]",
   *   "folders/[folder_id]/locations/[location_id]",
   *   "projects/[project_id]/locations/[location_id]".
   * @param {number} request.pageSize
   *   The maximum number of configs to return. The service may return fewer than
   *   this value.
   *   If unspecified, at most 10 configs will be returned.
   *   The maximum value is 1000; values above 1000 will be coerced to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListMuteConfigs` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to `ListMuteConfigs` must
   *   match the call that provided the page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.securitycenter.v2.MuteConfig|MuteConfig}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.list_mute_configs.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_ListMuteConfigs_async
   */
  listMuteConfigsAsync(
    request?: protos.google.cloud.securitycenter.v2.IListMuteConfigsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v2.IMuteConfig> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    const routingParameter = {};
    {
      const fieldValue = request.parent;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp('projects/[^/]+/locations/(?<location>[^/]+)/muteConfigs')
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.parent;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp(
              'organizations/[^/]+/locations/(?<location>[^/]+)/muteConfigs'
            )
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    {
      const fieldValue = request.parent;
      if (fieldValue !== undefined && fieldValue !== null) {
        const match = fieldValue
          .toString()
          .match(
            RegExp('folders/[^/]+/locations/(?<location>[^/]+)/muteConfigs')
          );
        if (match) {
          const parameterValue = match.groups?.['location'] ?? fieldValue;
          Object.assign(routingParameter, {location: parameterValue});
        }
      }
    }
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams(routingParameter);
    const defaultCallSettings = this._defaults['listMuteConfigs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listMuteConfigs.asyncIterate(
      this.innerApiCalls['listMuteConfigs'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v2.IMuteConfig>;
  }
  /**
   * Lists notification configs.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent in which to list the notification
   *   configurations. Its format is
   *   "organizations/[organization_id]/locations/[location_id]",
   *   "folders/[folder_id]/locations/[location_id]", or
   *   "projects/[project_id]/locations/[location_id]".
   * @param {string} request.pageToken
   *   The value returned by the last `ListNotificationConfigsResponse`; indicates
   *   that this is a continuation of a prior `ListNotificationConfigs` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.securitycenter.v2.NotificationConfig|NotificationConfig}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listNotificationConfigsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listNotificationConfigs(
    request?: protos.google.cloud.securitycenter.v2.IListNotificationConfigsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.INotificationConfig[],
      protos.google.cloud.securitycenter.v2.IListNotificationConfigsRequest | null,
      protos.google.cloud.securitycenter.v2.IListNotificationConfigsResponse,
    ]
  >;
  listNotificationConfigs(
    request: protos.google.cloud.securitycenter.v2.IListNotificationConfigsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListNotificationConfigsRequest,
      | protos.google.cloud.securitycenter.v2.IListNotificationConfigsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.INotificationConfig
    >
  ): void;
  listNotificationConfigs(
    request: protos.google.cloud.securitycenter.v2.IListNotificationConfigsRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListNotificationConfigsRequest,
      | protos.google.cloud.securitycenter.v2.IListNotificationConfigsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.INotificationConfig
    >
  ): void;
  listNotificationConfigs(
    request?: protos.google.cloud.securitycenter.v2.IListNotificationConfigsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v2.IListNotificationConfigsRequest,
          | protos.google.cloud.securitycenter.v2.IListNotificationConfigsResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v2.INotificationConfig
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListNotificationConfigsRequest,
      | protos.google.cloud.securitycenter.v2.IListNotificationConfigsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.INotificationConfig
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.INotificationConfig[],
      protos.google.cloud.securitycenter.v2.IListNotificationConfigsRequest | null,
      protos.google.cloud.securitycenter.v2.IListNotificationConfigsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listNotificationConfigs(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent in which to list the notification
   *   configurations. Its format is
   *   "organizations/[organization_id]/locations/[location_id]",
   *   "folders/[folder_id]/locations/[location_id]", or
   *   "projects/[project_id]/locations/[location_id]".
   * @param {string} request.pageToken
   *   The value returned by the last `ListNotificationConfigsResponse`; indicates
   *   that this is a continuation of a prior `ListNotificationConfigs` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.securitycenter.v2.NotificationConfig|NotificationConfig} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listNotificationConfigsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listNotificationConfigsStream(
    request?: protos.google.cloud.securitycenter.v2.IListNotificationConfigsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listNotificationConfigs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listNotificationConfigs.createStream(
      this.innerApiCalls.listNotificationConfigs as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listNotificationConfigs`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The name of the parent in which to list the notification
   *   configurations. Its format is
   *   "organizations/[organization_id]/locations/[location_id]",
   *   "folders/[folder_id]/locations/[location_id]", or
   *   "projects/[project_id]/locations/[location_id]".
   * @param {string} request.pageToken
   *   The value returned by the last `ListNotificationConfigsResponse`; indicates
   *   that this is a continuation of a prior `ListNotificationConfigs` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.securitycenter.v2.NotificationConfig|NotificationConfig}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.list_notification_configs.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_ListNotificationConfigs_async
   */
  listNotificationConfigsAsync(
    request?: protos.google.cloud.securitycenter.v2.IListNotificationConfigsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v2.INotificationConfig> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listNotificationConfigs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listNotificationConfigs.asyncIterate(
      this.innerApiCalls['listNotificationConfigs'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v2.INotificationConfig>;
  }
  /**
   * Lists all ResourceValueConfigs.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns the collection of resource value configs.
   *   Its format is
   *   "organizations/[organization_id]"
   * @param {number} request.pageSize
   *   The maximum number of configs to return. The service may return fewer than
   *   this value.
   *   If unspecified, at most 10 configs will be returned.
   *   The maximum value is 1000; values above 1000 will be coerced to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListResourceValueConfigs` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListResourceValueConfigs` must match the call that provided the
   *   page token.
   *
   *   page_size can be specified, and the new page_size will be used.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.securitycenter.v2.ResourceValueConfig|ResourceValueConfig}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listResourceValueConfigsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listResourceValueConfigs(
    request?: protos.google.cloud.securitycenter.v2.IListResourceValueConfigsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IResourceValueConfig[],
      protos.google.cloud.securitycenter.v2.IListResourceValueConfigsRequest | null,
      protos.google.cloud.securitycenter.v2.IListResourceValueConfigsResponse,
    ]
  >;
  listResourceValueConfigs(
    request: protos.google.cloud.securitycenter.v2.IListResourceValueConfigsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListResourceValueConfigsRequest,
      | protos.google.cloud.securitycenter.v2.IListResourceValueConfigsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IResourceValueConfig
    >
  ): void;
  listResourceValueConfigs(
    request: protos.google.cloud.securitycenter.v2.IListResourceValueConfigsRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListResourceValueConfigsRequest,
      | protos.google.cloud.securitycenter.v2.IListResourceValueConfigsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IResourceValueConfig
    >
  ): void;
  listResourceValueConfigs(
    request?: protos.google.cloud.securitycenter.v2.IListResourceValueConfigsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v2.IListResourceValueConfigsRequest,
          | protos.google.cloud.securitycenter.v2.IListResourceValueConfigsResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v2.IResourceValueConfig
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListResourceValueConfigsRequest,
      | protos.google.cloud.securitycenter.v2.IListResourceValueConfigsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IResourceValueConfig
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IResourceValueConfig[],
      protos.google.cloud.securitycenter.v2.IListResourceValueConfigsRequest | null,
      protos.google.cloud.securitycenter.v2.IListResourceValueConfigsResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listResourceValueConfigs(
      request,
      options,
      callback
    );
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns the collection of resource value configs.
   *   Its format is
   *   "organizations/[organization_id]"
   * @param {number} request.pageSize
   *   The maximum number of configs to return. The service may return fewer than
   *   this value.
   *   If unspecified, at most 10 configs will be returned.
   *   The maximum value is 1000; values above 1000 will be coerced to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListResourceValueConfigs` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListResourceValueConfigs` must match the call that provided the
   *   page token.
   *
   *   page_size can be specified, and the new page_size will be used.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.securitycenter.v2.ResourceValueConfig|ResourceValueConfig} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listResourceValueConfigsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listResourceValueConfigsStream(
    request?: protos.google.cloud.securitycenter.v2.IListResourceValueConfigsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listResourceValueConfigs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listResourceValueConfigs.createStream(
      this.innerApiCalls.listResourceValueConfigs as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listResourceValueConfigs`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. The parent, which owns the collection of resource value configs.
   *   Its format is
   *   "organizations/[organization_id]"
   * @param {number} request.pageSize
   *   The maximum number of configs to return. The service may return fewer than
   *   this value.
   *   If unspecified, at most 10 configs will be returned.
   *   The maximum value is 1000; values above 1000 will be coerced to 1000.
   * @param {string} request.pageToken
   *   A page token, received from a previous `ListResourceValueConfigs` call.
   *   Provide this to retrieve the subsequent page.
   *
   *   When paginating, all other parameters provided to
   *   `ListResourceValueConfigs` must match the call that provided the
   *   page token.
   *
   *   page_size can be specified, and the new page_size will be used.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.securitycenter.v2.ResourceValueConfig|ResourceValueConfig}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.list_resource_value_configs.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_ListResourceValueConfigs_async
   */
  listResourceValueConfigsAsync(
    request?: protos.google.cloud.securitycenter.v2.IListResourceValueConfigsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v2.IResourceValueConfig> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listResourceValueConfigs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listResourceValueConfigs.asyncIterate(
      this.innerApiCalls['listResourceValueConfigs'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v2.IResourceValueConfig>;
  }
  /**
   * Lists all sources belonging to an organization.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the parent of sources to list. Its format should
   *   be "organizations/[organization_id]", "folders/[folder_id]", or
   *   "projects/[project_id]".
   * @param {string} request.pageToken
   *   The value returned by the last `ListSourcesResponse`; indicates
   *   that this is a continuation of a prior `ListSources` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.securitycenter.v2.Source|Source}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listSourcesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listSources(
    request?: protos.google.cloud.securitycenter.v2.IListSourcesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ISource[],
      protos.google.cloud.securitycenter.v2.IListSourcesRequest | null,
      protos.google.cloud.securitycenter.v2.IListSourcesResponse,
    ]
  >;
  listSources(
    request: protos.google.cloud.securitycenter.v2.IListSourcesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListSourcesRequest,
      | protos.google.cloud.securitycenter.v2.IListSourcesResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.ISource
    >
  ): void;
  listSources(
    request: protos.google.cloud.securitycenter.v2.IListSourcesRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListSourcesRequest,
      | protos.google.cloud.securitycenter.v2.IListSourcesResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.ISource
    >
  ): void;
  listSources(
    request?: protos.google.cloud.securitycenter.v2.IListSourcesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v2.IListSourcesRequest,
          | protos.google.cloud.securitycenter.v2.IListSourcesResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v2.ISource
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListSourcesRequest,
      | protos.google.cloud.securitycenter.v2.IListSourcesResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.ISource
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.ISource[],
      protos.google.cloud.securitycenter.v2.IListSourcesRequest | null,
      protos.google.cloud.securitycenter.v2.IListSourcesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listSources(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the parent of sources to list. Its format should
   *   be "organizations/[organization_id]", "folders/[folder_id]", or
   *   "projects/[project_id]".
   * @param {string} request.pageToken
   *   The value returned by the last `ListSourcesResponse`; indicates
   *   that this is a continuation of a prior `ListSources` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.securitycenter.v2.Source|Source} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listSourcesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listSourcesStream(
    request?: protos.google.cloud.securitycenter.v2.IListSourcesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listSources'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listSources.createStream(
      this.innerApiCalls.listSources as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listSources`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the parent of sources to list. Its format should
   *   be "organizations/[organization_id]", "folders/[folder_id]", or
   *   "projects/[project_id]".
   * @param {string} request.pageToken
   *   The value returned by the last `ListSourcesResponse`; indicates
   *   that this is a continuation of a prior `ListSources` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.securitycenter.v2.Source|Source}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.list_sources.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_ListSources_async
   */
  listSourcesAsync(
    request?: protos.google.cloud.securitycenter.v2.IListSourcesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v2.ISource> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listSources'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listSources.asyncIterate(
      this.innerApiCalls['listSources'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v2.ISource>;
  }
  /**
   * Lists the valued resources for a set of simulation results and filter.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of parent to list exposed resources.
   *
   *   Valid formats:
   *   "organizations/{organization}",
   *   "organizations/{organization}/simulations/{simulation}"
   *   "organizations/{organization}/simulations/{simulation}/attackExposureResults/{attack_exposure_result_v2}"
   * @param {string} request.filter
   *   The filter expression that filters the valued resources in the response.
   *   Supported fields:
   *
   *     * `resource_value` supports =
   *     * `resource_type` supports =
   * @param {string} request.pageToken
   *   The value returned by the last `ListValuedResourcesResponse`; indicates
   *   that this is a continuation of a prior `ListValuedResources` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {string} [request.orderBy]
   *   Optional. The fields by which to order the valued resources response.
   *
   *   Supported fields:
   *
   *     * `exposed_score`
   *
   *     * `resource_value`
   *
   *     * `resource_type`
   *
   *   Values should be a comma separated list of fields. For example:
   *   `exposed_score,resource_value`.
   *
   *   The default sorting order is descending. To specify ascending or descending
   *   order for a field, append a " ASC" or a " DESC" suffix, respectively; for
   *   example: `exposed_score DESC`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of {@link protos.google.cloud.securitycenter.v2.ValuedResource|ValuedResource}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listValuedResourcesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listValuedResources(
    request?: protos.google.cloud.securitycenter.v2.IListValuedResourcesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IValuedResource[],
      protos.google.cloud.securitycenter.v2.IListValuedResourcesRequest | null,
      protos.google.cloud.securitycenter.v2.IListValuedResourcesResponse,
    ]
  >;
  listValuedResources(
    request: protos.google.cloud.securitycenter.v2.IListValuedResourcesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListValuedResourcesRequest,
      | protos.google.cloud.securitycenter.v2.IListValuedResourcesResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IValuedResource
    >
  ): void;
  listValuedResources(
    request: protos.google.cloud.securitycenter.v2.IListValuedResourcesRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListValuedResourcesRequest,
      | protos.google.cloud.securitycenter.v2.IListValuedResourcesResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IValuedResource
    >
  ): void;
  listValuedResources(
    request?: protos.google.cloud.securitycenter.v2.IListValuedResourcesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v2.IListValuedResourcesRequest,
          | protos.google.cloud.securitycenter.v2.IListValuedResourcesResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v2.IValuedResource
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v2.IListValuedResourcesRequest,
      | protos.google.cloud.securitycenter.v2.IListValuedResourcesResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v2.IValuedResource
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v2.IValuedResource[],
      protos.google.cloud.securitycenter.v2.IListValuedResourcesRequest | null,
      protos.google.cloud.securitycenter.v2.IListValuedResourcesResponse,
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listValuedResources(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of parent to list exposed resources.
   *
   *   Valid formats:
   *   "organizations/{organization}",
   *   "organizations/{organization}/simulations/{simulation}"
   *   "organizations/{organization}/simulations/{simulation}/attackExposureResults/{attack_exposure_result_v2}"
   * @param {string} request.filter
   *   The filter expression that filters the valued resources in the response.
   *   Supported fields:
   *
   *     * `resource_value` supports =
   *     * `resource_type` supports =
   * @param {string} request.pageToken
   *   The value returned by the last `ListValuedResourcesResponse`; indicates
   *   that this is a continuation of a prior `ListValuedResources` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {string} [request.orderBy]
   *   Optional. The fields by which to order the valued resources response.
   *
   *   Supported fields:
   *
   *     * `exposed_score`
   *
   *     * `resource_value`
   *
   *     * `resource_type`
   *
   *   Values should be a comma separated list of fields. For example:
   *   `exposed_score,resource_value`.
   *
   *   The default sorting order is descending. To specify ascending or descending
   *   order for a field, append a " ASC" or a " DESC" suffix, respectively; for
   *   example: `exposed_score DESC`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing {@link protos.google.cloud.securitycenter.v2.ValuedResource|ValuedResource} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listValuedResourcesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   */
  listValuedResourcesStream(
    request?: protos.google.cloud.securitycenter.v2.IListValuedResourcesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listValuedResources'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listValuedResources.createStream(
      this.innerApiCalls.listValuedResources as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listValuedResources`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of parent to list exposed resources.
   *
   *   Valid formats:
   *   "organizations/{organization}",
   *   "organizations/{organization}/simulations/{simulation}"
   *   "organizations/{organization}/simulations/{simulation}/attackExposureResults/{attack_exposure_result_v2}"
   * @param {string} request.filter
   *   The filter expression that filters the valued resources in the response.
   *   Supported fields:
   *
   *     * `resource_value` supports =
   *     * `resource_type` supports =
   * @param {string} request.pageToken
   *   The value returned by the last `ListValuedResourcesResponse`; indicates
   *   that this is a continuation of a prior `ListValuedResources` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {string} [request.orderBy]
   *   Optional. The fields by which to order the valued resources response.
   *
   *   Supported fields:
   *
   *     * `exposed_score`
   *
   *     * `resource_value`
   *
   *     * `resource_type`
   *
   *   Values should be a comma separated list of fields. For example:
   *   `exposed_score,resource_value`.
   *
   *   The default sorting order is descending. To specify ascending or descending
   *   order for a field, append a " ASC" or a " DESC" suffix, respectively; for
   *   example: `exposed_score DESC`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
   *   When you iterate the returned iterable, each element will be an object representing
   *   {@link protos.google.cloud.securitycenter.v2.ValuedResource|ValuedResource}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
   *   for more details and examples.
   * @example <caption>include:samples/generated/v2/security_center.list_valued_resources.js</caption>
   * region_tag:securitycenter_v2_generated_SecurityCenter_ListValuedResources_async
   */
  listValuedResourcesAsync(
    request?: protos.google.cloud.securitycenter.v2.IListValuedResourcesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v2.IValuedResource> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listValuedResources'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listValuedResources.asyncIterate(
      this.innerApiCalls['listValuedResources'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v2.IValuedResource>;
  }
  /**
   * Gets the latest state of a long-running operation.  Clients can use this
   * method to poll the operation result at intervals as recommended by the API
   * service.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See {@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
   *   for the details.
   * @param {function(?Error, ?Object)=} callback
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing
   *   {@link google.longrunning.Operation | google.longrunning.Operation}.
   * @return {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   * {@link google.longrunning.Operation | google.longrunning.Operation}.
   * The promise has a method named "cancel" which cancels the ongoing API call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * const name = '';
   * const [response] = await client.getOperation({name});
   * // doThingsWith(response)
   * ```
   */
  getOperation(
    request: protos.google.longrunning.GetOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.longrunning.Operation,
          protos.google.longrunning.GetOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.longrunning.Operation,
      protos.google.longrunning.GetOperationRequest,
      {} | null | undefined
    >
  ): Promise<[protos.google.longrunning.Operation]> {
    return this.operationsClient.getOperation(request, options, callback);
  }
  /**
   * Lists operations that match the specified filter in the request. If the
   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
   *
   * For-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation collection.
   * @param {string} request.filter - The standard list filter.
   * @param {number=} request.pageSize -
   *   The maximum number of resources contained in the underlying API
   *   response. If page streaming is performed per-resource, this
   *   parameter does not affect the return value. If page streaming is
   *   performed per-page, this determines the maximum number of
   *   resources in a page.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See {@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
   *   details.
   * @returns {Object}
   *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * for await (const response of client.listOperationsAsync(request));
   * // doThingsWith(response)
   * ```
   */
  listOperationsAsync(
    request: protos.google.longrunning.ListOperationsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.longrunning.ListOperationsResponse> {
    return this.operationsClient.listOperationsAsync(request, options);
  }
  /**
   * Starts asynchronous cancellation on a long-running operation.  The server
   * makes a best effort to cancel the operation, but success is not
   * guaranteed.  If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
   * {@link Operations.GetOperation} or
   * other methods to check whether the cancellation succeeded or whether the
   * operation completed despite cancellation. On successful cancellation,
   * the operation is not deleted; instead, it becomes an operation with
   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
   * 1, corresponding to `Code.CANCELLED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be cancelled.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See {@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.cancelOperation({name: ''});
   * ```
   */
  cancelOperation(
    request: protos.google.longrunning.CancelOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.CancelOperationRequest,
          {} | undefined | null
        >,
    callback?: Callback<
      protos.google.longrunning.CancelOperationRequest,
      protos.google.protobuf.Empty,
      {} | undefined | null
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.cancelOperation(request, options, callback);
  }

  /**
   * Deletes a long-running operation. This method indicates that the client is
   * no longer interested in the operation result. It does not cancel the
   * operation. If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be deleted.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See {@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}
   * for the details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.deleteOperation({name: ''});
   * ```
   */
  deleteOperation(
    request: protos.google.longrunning.DeleteOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.DeleteOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.Empty,
      protos.google.longrunning.DeleteOperationRequest,
      {} | null | undefined
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.deleteOperation(request, options, callback);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified attackPath resource name string.
   *
   * @param {string} organization
   * @param {string} simulation
   * @param {string} valued_resource
   * @param {string} attack_path
   * @returns {string} Resource name string.
   */
  attackPathPath(
    organization: string,
    simulation: string,
    valuedResource: string,
    attackPath: string
  ) {
    return this.pathTemplates.attackPathPathTemplate.render({
      organization: organization,
      simulation: simulation,
      valued_resource: valuedResource,
      attack_path: attackPath,
    });
  }

  /**
   * Parse the organization from AttackPath resource.
   *
   * @param {string} attackPathName
   *   A fully-qualified path representing AttackPath resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromAttackPathName(attackPathName: string) {
    return this.pathTemplates.attackPathPathTemplate.match(attackPathName)
      .organization;
  }

  /**
   * Parse the simulation from AttackPath resource.
   *
   * @param {string} attackPathName
   *   A fully-qualified path representing AttackPath resource.
   * @returns {string} A string representing the simulation.
   */
  matchSimulationFromAttackPathName(attackPathName: string) {
    return this.pathTemplates.attackPathPathTemplate.match(attackPathName)
      .simulation;
  }

  /**
   * Parse the valued_resource from AttackPath resource.
   *
   * @param {string} attackPathName
   *   A fully-qualified path representing AttackPath resource.
   * @returns {string} A string representing the valued_resource.
   */
  matchValuedResourceFromAttackPathName(attackPathName: string) {
    return this.pathTemplates.attackPathPathTemplate.match(attackPathName)
      .valued_resource;
  }

  /**
   * Parse the attack_path from AttackPath resource.
   *
   * @param {string} attackPathName
   *   A fully-qualified path representing AttackPath resource.
   * @returns {string} A string representing the attack_path.
   */
  matchAttackPathFromAttackPathName(attackPathName: string) {
    return this.pathTemplates.attackPathPathTemplate.match(attackPathName)
      .attack_path;
  }

  /**
   * Return a fully-qualified folderAssetSecurityMarks resource name string.
   *
   * @param {string} folder
   * @param {string} asset
   * @returns {string} Resource name string.
   */
  folderAssetSecurityMarksPath(folder: string, asset: string) {
    return this.pathTemplates.folderAssetSecurityMarksPathTemplate.render({
      folder: folder,
      asset: asset,
    });
  }

  /**
   * Parse the folder from FolderAssetSecurityMarks resource.
   *
   * @param {string} folderAssetSecurityMarksName
   *   A fully-qualified path representing folder_asset_securityMarks resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderAssetSecurityMarksName(
    folderAssetSecurityMarksName: string
  ) {
    return this.pathTemplates.folderAssetSecurityMarksPathTemplate.match(
      folderAssetSecurityMarksName
    ).folder;
  }

  /**
   * Parse the asset from FolderAssetSecurityMarks resource.
   *
   * @param {string} folderAssetSecurityMarksName
   *   A fully-qualified path representing folder_asset_securityMarks resource.
   * @returns {string} A string representing the asset.
   */
  matchAssetFromFolderAssetSecurityMarksName(
    folderAssetSecurityMarksName: string
  ) {
    return this.pathTemplates.folderAssetSecurityMarksPathTemplate.match(
      folderAssetSecurityMarksName
    ).asset;
  }

  /**
   * Return a fully-qualified folderConstraintName resource name string.
   *
   * @param {string} folder
   * @param {string} constraint_name
   * @returns {string} Resource name string.
   */
  folderConstraintNamePath(folder: string, constraintName: string) {
    return this.pathTemplates.folderConstraintNamePathTemplate.render({
      folder: folder,
      constraint_name: constraintName,
    });
  }

  /**
   * Parse the folder from FolderConstraintName resource.
   *
   * @param {string} folderConstraintNameName
   *   A fully-qualified path representing folder_constraint_name resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderConstraintNameName(folderConstraintNameName: string) {
    return this.pathTemplates.folderConstraintNamePathTemplate.match(
      folderConstraintNameName
    ).folder;
  }

  /**
   * Parse the constraint_name from FolderConstraintName resource.
   *
   * @param {string} folderConstraintNameName
   *   A fully-qualified path representing folder_constraint_name resource.
   * @returns {string} A string representing the constraint_name.
   */
  matchConstraintNameFromFolderConstraintNameName(
    folderConstraintNameName: string
  ) {
    return this.pathTemplates.folderConstraintNamePathTemplate.match(
      folderConstraintNameName
    ).constraint_name;
  }

  /**
   * Return a fully-qualified folderLocationExport resource name string.
   *
   * @param {string} folder
   * @param {string} location
   * @param {string} exportParam
   * @returns {string} Resource name string.
   */
  folderLocationExportPath(
    folder: string,
    location: string,
    exportParam: string
  ) {
    return this.pathTemplates.folderLocationExportPathTemplate.render({
      folder: folder,
      location: location,
      export: exportParam,
    });
  }

  /**
   * Parse the folder from FolderLocationExport resource.
   *
   * @param {string} folderLocationExportName
   *   A fully-qualified path representing folder_location_export resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderLocationExportName(folderLocationExportName: string) {
    return this.pathTemplates.folderLocationExportPathTemplate.match(
      folderLocationExportName
    ).folder;
  }

  /**
   * Parse the location from FolderLocationExport resource.
   *
   * @param {string} folderLocationExportName
   *   A fully-qualified path representing folder_location_export resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFolderLocationExportName(folderLocationExportName: string) {
    return this.pathTemplates.folderLocationExportPathTemplate.match(
      folderLocationExportName
    ).location;
  }

  /**
   * Parse the export from FolderLocationExport resource.
   *
   * @param {string} folderLocationExportName
   *   A fully-qualified path representing folder_location_export resource.
   * @returns {string} A string representing the export.
   */
  matchExportFromFolderLocationExportName(folderLocationExportName: string) {
    return this.pathTemplates.folderLocationExportPathTemplate.match(
      folderLocationExportName
    ).export;
  }

  /**
   * Return a fully-qualified folderLocationMuteConfig resource name string.
   *
   * @param {string} folder
   * @param {string} location
   * @param {string} mute_config
   * @returns {string} Resource name string.
   */
  folderLocationMuteConfigPath(
    folder: string,
    location: string,
    muteConfig: string
  ) {
    return this.pathTemplates.folderLocationMuteConfigPathTemplate.render({
      folder: folder,
      location: location,
      mute_config: muteConfig,
    });
  }

  /**
   * Parse the folder from FolderLocationMuteConfig resource.
   *
   * @param {string} folderLocationMuteConfigName
   *   A fully-qualified path representing folder_location_mute_config resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderLocationMuteConfigName(
    folderLocationMuteConfigName: string
  ) {
    return this.pathTemplates.folderLocationMuteConfigPathTemplate.match(
      folderLocationMuteConfigName
    ).folder;
  }

  /**
   * Parse the location from FolderLocationMuteConfig resource.
   *
   * @param {string} folderLocationMuteConfigName
   *   A fully-qualified path representing folder_location_mute_config resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFolderLocationMuteConfigName(
    folderLocationMuteConfigName: string
  ) {
    return this.pathTemplates.folderLocationMuteConfigPathTemplate.match(
      folderLocationMuteConfigName
    ).location;
  }

  /**
   * Parse the mute_config from FolderLocationMuteConfig resource.
   *
   * @param {string} folderLocationMuteConfigName
   *   A fully-qualified path representing folder_location_mute_config resource.
   * @returns {string} A string representing the mute_config.
   */
  matchMuteConfigFromFolderLocationMuteConfigName(
    folderLocationMuteConfigName: string
  ) {
    return this.pathTemplates.folderLocationMuteConfigPathTemplate.match(
      folderLocationMuteConfigName
    ).mute_config;
  }

  /**
   * Return a fully-qualified folderLocationNotificationConfig resource name string.
   *
   * @param {string} folder
   * @param {string} location
   * @param {string} notification_config
   * @returns {string} Resource name string.
   */
  folderLocationNotificationConfigPath(
    folder: string,
    location: string,
    notificationConfig: string
  ) {
    return this.pathTemplates.folderLocationNotificationConfigPathTemplate.render(
      {
        folder: folder,
        location: location,
        notification_config: notificationConfig,
      }
    );
  }

  /**
   * Parse the folder from FolderLocationNotificationConfig resource.
   *
   * @param {string} folderLocationNotificationConfigName
   *   A fully-qualified path representing folder_location_notification_config resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderLocationNotificationConfigName(
    folderLocationNotificationConfigName: string
  ) {
    return this.pathTemplates.folderLocationNotificationConfigPathTemplate.match(
      folderLocationNotificationConfigName
    ).folder;
  }

  /**
   * Parse the location from FolderLocationNotificationConfig resource.
   *
   * @param {string} folderLocationNotificationConfigName
   *   A fully-qualified path representing folder_location_notification_config resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFolderLocationNotificationConfigName(
    folderLocationNotificationConfigName: string
  ) {
    return this.pathTemplates.folderLocationNotificationConfigPathTemplate.match(
      folderLocationNotificationConfigName
    ).location;
  }

  /**
   * Parse the notification_config from FolderLocationNotificationConfig resource.
   *
   * @param {string} folderLocationNotificationConfigName
   *   A fully-qualified path representing folder_location_notification_config resource.
   * @returns {string} A string representing the notification_config.
   */
  matchNotificationConfigFromFolderLocationNotificationConfigName(
    folderLocationNotificationConfigName: string
  ) {
    return this.pathTemplates.folderLocationNotificationConfigPathTemplate.match(
      folderLocationNotificationConfigName
    ).notification_config;
  }

  /**
   * Return a fully-qualified folderMuteConfig resource name string.
   *
   * @param {string} folder
   * @param {string} mute_config
   * @returns {string} Resource name string.
   */
  folderMuteConfigPath(folder: string, muteConfig: string) {
    return this.pathTemplates.folderMuteConfigPathTemplate.render({
      folder: folder,
      mute_config: muteConfig,
    });
  }

  /**
   * Parse the folder from FolderMuteConfig resource.
   *
   * @param {string} folderMuteConfigName
   *   A fully-qualified path representing folder_mute_config resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderMuteConfigName(folderMuteConfigName: string) {
    return this.pathTemplates.folderMuteConfigPathTemplate.match(
      folderMuteConfigName
    ).folder;
  }

  /**
   * Parse the mute_config from FolderMuteConfig resource.
   *
   * @param {string} folderMuteConfigName
   *   A fully-qualified path representing folder_mute_config resource.
   * @returns {string} A string representing the mute_config.
   */
  matchMuteConfigFromFolderMuteConfigName(folderMuteConfigName: string) {
    return this.pathTemplates.folderMuteConfigPathTemplate.match(
      folderMuteConfigName
    ).mute_config;
  }

  /**
   * Return a fully-qualified folderSource resource name string.
   *
   * @param {string} folder
   * @param {string} source
   * @returns {string} Resource name string.
   */
  folderSourcePath(folder: string, source: string) {
    return this.pathTemplates.folderSourcePathTemplate.render({
      folder: folder,
      source: source,
    });
  }

  /**
   * Parse the folder from FolderSource resource.
   *
   * @param {string} folderSourceName
   *   A fully-qualified path representing folder_source resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderSourceName(folderSourceName: string) {
    return this.pathTemplates.folderSourcePathTemplate.match(folderSourceName)
      .folder;
  }

  /**
   * Parse the source from FolderSource resource.
   *
   * @param {string} folderSourceName
   *   A fully-qualified path representing folder_source resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromFolderSourceName(folderSourceName: string) {
    return this.pathTemplates.folderSourcePathTemplate.match(folderSourceName)
      .source;
  }

  /**
   * Return a fully-qualified folderSourceFinding resource name string.
   *
   * @param {string} folder
   * @param {string} source
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  folderSourceFindingPath(folder: string, source: string, finding: string) {
    return this.pathTemplates.folderSourceFindingPathTemplate.render({
      folder: folder,
      source: source,
      finding: finding,
    });
  }

  /**
   * Parse the folder from FolderSourceFinding resource.
   *
   * @param {string} folderSourceFindingName
   *   A fully-qualified path representing folder_source_finding resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderSourceFindingName(folderSourceFindingName: string) {
    return this.pathTemplates.folderSourceFindingPathTemplate.match(
      folderSourceFindingName
    ).folder;
  }

  /**
   * Parse the source from FolderSourceFinding resource.
   *
   * @param {string} folderSourceFindingName
   *   A fully-qualified path representing folder_source_finding resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromFolderSourceFindingName(folderSourceFindingName: string) {
    return this.pathTemplates.folderSourceFindingPathTemplate.match(
      folderSourceFindingName
    ).source;
  }

  /**
   * Parse the finding from FolderSourceFinding resource.
   *
   * @param {string} folderSourceFindingName
   *   A fully-qualified path representing folder_source_finding resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromFolderSourceFindingName(folderSourceFindingName: string) {
    return this.pathTemplates.folderSourceFindingPathTemplate.match(
      folderSourceFindingName
    ).finding;
  }

  /**
   * Return a fully-qualified folderSourceFindingExternalsystem resource name string.
   *
   * @param {string} folder
   * @param {string} source
   * @param {string} finding
   * @param {string} externalsystem
   * @returns {string} Resource name string.
   */
  folderSourceFindingExternalsystemPath(
    folder: string,
    source: string,
    finding: string,
    externalsystem: string
  ) {
    return this.pathTemplates.folderSourceFindingExternalsystemPathTemplate.render(
      {
        folder: folder,
        source: source,
        finding: finding,
        externalsystem: externalsystem,
      }
    );
  }

  /**
   * Parse the folder from FolderSourceFindingExternalsystem resource.
   *
   * @param {string} folderSourceFindingExternalsystemName
   *   A fully-qualified path representing folder_source_finding_externalsystem resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderSourceFindingExternalsystemName(
    folderSourceFindingExternalsystemName: string
  ) {
    return this.pathTemplates.folderSourceFindingExternalsystemPathTemplate.match(
      folderSourceFindingExternalsystemName
    ).folder;
  }

  /**
   * Parse the source from FolderSourceFindingExternalsystem resource.
   *
   * @param {string} folderSourceFindingExternalsystemName
   *   A fully-qualified path representing folder_source_finding_externalsystem resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromFolderSourceFindingExternalsystemName(
    folderSourceFindingExternalsystemName: string
  ) {
    return this.pathTemplates.folderSourceFindingExternalsystemPathTemplate.match(
      folderSourceFindingExternalsystemName
    ).source;
  }

  /**
   * Parse the finding from FolderSourceFindingExternalsystem resource.
   *
   * @param {string} folderSourceFindingExternalsystemName
   *   A fully-qualified path representing folder_source_finding_externalsystem resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromFolderSourceFindingExternalsystemName(
    folderSourceFindingExternalsystemName: string
  ) {
    return this.pathTemplates.folderSourceFindingExternalsystemPathTemplate.match(
      folderSourceFindingExternalsystemName
    ).finding;
  }

  /**
   * Parse the externalsystem from FolderSourceFindingExternalsystem resource.
   *
   * @param {string} folderSourceFindingExternalsystemName
   *   A fully-qualified path representing folder_source_finding_externalsystem resource.
   * @returns {string} A string representing the externalsystem.
   */
  matchExternalsystemFromFolderSourceFindingExternalsystemName(
    folderSourceFindingExternalsystemName: string
  ) {
    return this.pathTemplates.folderSourceFindingExternalsystemPathTemplate.match(
      folderSourceFindingExternalsystemName
    ).externalsystem;
  }

  /**
   * Return a fully-qualified folderSourceFindingSecurityMarks resource name string.
   *
   * @param {string} folder
   * @param {string} source
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  folderSourceFindingSecurityMarksPath(
    folder: string,
    source: string,
    finding: string
  ) {
    return this.pathTemplates.folderSourceFindingSecurityMarksPathTemplate.render(
      {
        folder: folder,
        source: source,
        finding: finding,
      }
    );
  }

  /**
   * Parse the folder from FolderSourceFindingSecurityMarks resource.
   *
   * @param {string} folderSourceFindingSecurityMarksName
   *   A fully-qualified path representing folder_source_finding_securityMarks resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderSourceFindingSecurityMarksName(
    folderSourceFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.folderSourceFindingSecurityMarksPathTemplate.match(
      folderSourceFindingSecurityMarksName
    ).folder;
  }

  /**
   * Parse the source from FolderSourceFindingSecurityMarks resource.
   *
   * @param {string} folderSourceFindingSecurityMarksName
   *   A fully-qualified path representing folder_source_finding_securityMarks resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromFolderSourceFindingSecurityMarksName(
    folderSourceFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.folderSourceFindingSecurityMarksPathTemplate.match(
      folderSourceFindingSecurityMarksName
    ).source;
  }

  /**
   * Parse the finding from FolderSourceFindingSecurityMarks resource.
   *
   * @param {string} folderSourceFindingSecurityMarksName
   *   A fully-qualified path representing folder_source_finding_securityMarks resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromFolderSourceFindingSecurityMarksName(
    folderSourceFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.folderSourceFindingSecurityMarksPathTemplate.match(
      folderSourceFindingSecurityMarksName
    ).finding;
  }

  /**
   * Return a fully-qualified folderSourceLocationFinding resource name string.
   *
   * @param {string} folder
   * @param {string} source
   * @param {string} location
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  folderSourceLocationFindingPath(
    folder: string,
    source: string,
    location: string,
    finding: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingPathTemplate.render({
      folder: folder,
      source: source,
      location: location,
      finding: finding,
    });
  }

  /**
   * Parse the folder from FolderSourceLocationFinding resource.
   *
   * @param {string} folderSourceLocationFindingName
   *   A fully-qualified path representing folder_source_location_finding resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderSourceLocationFindingName(
    folderSourceLocationFindingName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingPathTemplate.match(
      folderSourceLocationFindingName
    ).folder;
  }

  /**
   * Parse the source from FolderSourceLocationFinding resource.
   *
   * @param {string} folderSourceLocationFindingName
   *   A fully-qualified path representing folder_source_location_finding resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromFolderSourceLocationFindingName(
    folderSourceLocationFindingName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingPathTemplate.match(
      folderSourceLocationFindingName
    ).source;
  }

  /**
   * Parse the location from FolderSourceLocationFinding resource.
   *
   * @param {string} folderSourceLocationFindingName
   *   A fully-qualified path representing folder_source_location_finding resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFolderSourceLocationFindingName(
    folderSourceLocationFindingName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingPathTemplate.match(
      folderSourceLocationFindingName
    ).location;
  }

  /**
   * Parse the finding from FolderSourceLocationFinding resource.
   *
   * @param {string} folderSourceLocationFindingName
   *   A fully-qualified path representing folder_source_location_finding resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromFolderSourceLocationFindingName(
    folderSourceLocationFindingName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingPathTemplate.match(
      folderSourceLocationFindingName
    ).finding;
  }

  /**
   * Return a fully-qualified folderSourceLocationFindingExternalsystem resource name string.
   *
   * @param {string} folder
   * @param {string} source
   * @param {string} location
   * @param {string} finding
   * @param {string} externalsystem
   * @returns {string} Resource name string.
   */
  folderSourceLocationFindingExternalsystemPath(
    folder: string,
    source: string,
    location: string,
    finding: string,
    externalsystem: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingExternalsystemPathTemplate.render(
      {
        folder: folder,
        source: source,
        location: location,
        finding: finding,
        externalsystem: externalsystem,
      }
    );
  }

  /**
   * Parse the folder from FolderSourceLocationFindingExternalsystem resource.
   *
   * @param {string} folderSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing folder_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderSourceLocationFindingExternalsystemName(
    folderSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingExternalsystemPathTemplate.match(
      folderSourceLocationFindingExternalsystemName
    ).folder;
  }

  /**
   * Parse the source from FolderSourceLocationFindingExternalsystem resource.
   *
   * @param {string} folderSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing folder_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromFolderSourceLocationFindingExternalsystemName(
    folderSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingExternalsystemPathTemplate.match(
      folderSourceLocationFindingExternalsystemName
    ).source;
  }

  /**
   * Parse the location from FolderSourceLocationFindingExternalsystem resource.
   *
   * @param {string} folderSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing folder_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFolderSourceLocationFindingExternalsystemName(
    folderSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingExternalsystemPathTemplate.match(
      folderSourceLocationFindingExternalsystemName
    ).location;
  }

  /**
   * Parse the finding from FolderSourceLocationFindingExternalsystem resource.
   *
   * @param {string} folderSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing folder_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromFolderSourceLocationFindingExternalsystemName(
    folderSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingExternalsystemPathTemplate.match(
      folderSourceLocationFindingExternalsystemName
    ).finding;
  }

  /**
   * Parse the externalsystem from FolderSourceLocationFindingExternalsystem resource.
   *
   * @param {string} folderSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing folder_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the externalsystem.
   */
  matchExternalsystemFromFolderSourceLocationFindingExternalsystemName(
    folderSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingExternalsystemPathTemplate.match(
      folderSourceLocationFindingExternalsystemName
    ).externalsystem;
  }

  /**
   * Return a fully-qualified folderSourceLocationFindingSecurityMarks resource name string.
   *
   * @param {string} folder
   * @param {string} source
   * @param {string} location
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  folderSourceLocationFindingSecurityMarksPath(
    folder: string,
    source: string,
    location: string,
    finding: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingSecurityMarksPathTemplate.render(
      {
        folder: folder,
        source: source,
        location: location,
        finding: finding,
      }
    );
  }

  /**
   * Parse the folder from FolderSourceLocationFindingSecurityMarks resource.
   *
   * @param {string} folderSourceLocationFindingSecurityMarksName
   *   A fully-qualified path representing folder_source_location_finding_securityMarks resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderSourceLocationFindingSecurityMarksName(
    folderSourceLocationFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingSecurityMarksPathTemplate.match(
      folderSourceLocationFindingSecurityMarksName
    ).folder;
  }

  /**
   * Parse the source from FolderSourceLocationFindingSecurityMarks resource.
   *
   * @param {string} folderSourceLocationFindingSecurityMarksName
   *   A fully-qualified path representing folder_source_location_finding_securityMarks resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromFolderSourceLocationFindingSecurityMarksName(
    folderSourceLocationFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingSecurityMarksPathTemplate.match(
      folderSourceLocationFindingSecurityMarksName
    ).source;
  }

  /**
   * Parse the location from FolderSourceLocationFindingSecurityMarks resource.
   *
   * @param {string} folderSourceLocationFindingSecurityMarksName
   *   A fully-qualified path representing folder_source_location_finding_securityMarks resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromFolderSourceLocationFindingSecurityMarksName(
    folderSourceLocationFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingSecurityMarksPathTemplate.match(
      folderSourceLocationFindingSecurityMarksName
    ).location;
  }

  /**
   * Parse the finding from FolderSourceLocationFindingSecurityMarks resource.
   *
   * @param {string} folderSourceLocationFindingSecurityMarksName
   *   A fully-qualified path representing folder_source_location_finding_securityMarks resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromFolderSourceLocationFindingSecurityMarksName(
    folderSourceLocationFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.folderSourceLocationFindingSecurityMarksPathTemplate.match(
      folderSourceLocationFindingSecurityMarksName
    ).finding;
  }

  /**
   * Return a fully-qualified organization resource name string.
   *
   * @param {string} organization
   * @returns {string} Resource name string.
   */
  organizationPath(organization: string) {
    return this.pathTemplates.organizationPathTemplate.render({
      organization: organization,
    });
  }

  /**
   * Parse the organization from Organization resource.
   *
   * @param {string} organizationName
   *   A fully-qualified path representing Organization resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationName(organizationName: string) {
    return this.pathTemplates.organizationPathTemplate.match(organizationName)
      .organization;
  }

  /**
   * Return a fully-qualified organizationAssetSecurityMarks resource name string.
   *
   * @param {string} organization
   * @param {string} asset
   * @returns {string} Resource name string.
   */
  organizationAssetSecurityMarksPath(organization: string, asset: string) {
    return this.pathTemplates.organizationAssetSecurityMarksPathTemplate.render(
      {
        organization: organization,
        asset: asset,
      }
    );
  }

  /**
   * Parse the organization from OrganizationAssetSecurityMarks resource.
   *
   * @param {string} organizationAssetSecurityMarksName
   *   A fully-qualified path representing organization_asset_securityMarks resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationAssetSecurityMarksName(
    organizationAssetSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationAssetSecurityMarksPathTemplate.match(
      organizationAssetSecurityMarksName
    ).organization;
  }

  /**
   * Parse the asset from OrganizationAssetSecurityMarks resource.
   *
   * @param {string} organizationAssetSecurityMarksName
   *   A fully-qualified path representing organization_asset_securityMarks resource.
   * @returns {string} A string representing the asset.
   */
  matchAssetFromOrganizationAssetSecurityMarksName(
    organizationAssetSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationAssetSecurityMarksPathTemplate.match(
      organizationAssetSecurityMarksName
    ).asset;
  }

  /**
   * Return a fully-qualified organizationConstraintName resource name string.
   *
   * @param {string} organization
   * @param {string} constraint_name
   * @returns {string} Resource name string.
   */
  organizationConstraintNamePath(organization: string, constraintName: string) {
    return this.pathTemplates.organizationConstraintNamePathTemplate.render({
      organization: organization,
      constraint_name: constraintName,
    });
  }

  /**
   * Parse the organization from OrganizationConstraintName resource.
   *
   * @param {string} organizationConstraintNameName
   *   A fully-qualified path representing organization_constraint_name resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationConstraintNameName(
    organizationConstraintNameName: string
  ) {
    return this.pathTemplates.organizationConstraintNamePathTemplate.match(
      organizationConstraintNameName
    ).organization;
  }

  /**
   * Parse the constraint_name from OrganizationConstraintName resource.
   *
   * @param {string} organizationConstraintNameName
   *   A fully-qualified path representing organization_constraint_name resource.
   * @returns {string} A string representing the constraint_name.
   */
  matchConstraintNameFromOrganizationConstraintNameName(
    organizationConstraintNameName: string
  ) {
    return this.pathTemplates.organizationConstraintNamePathTemplate.match(
      organizationConstraintNameName
    ).constraint_name;
  }

  /**
   * Return a fully-qualified organizationLocation resource name string.
   *
   * @param {string} organization
   * @param {string} location
   * @returns {string} Resource name string.
   */
  organizationLocationPath(organization: string, location: string) {
    return this.pathTemplates.organizationLocationPathTemplate.render({
      organization: organization,
      location: location,
    });
  }

  /**
   * Parse the organization from OrganizationLocation resource.
   *
   * @param {string} organizationLocationName
   *   A fully-qualified path representing OrganizationLocation resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationLocationName(
    organizationLocationName: string
  ) {
    return this.pathTemplates.organizationLocationPathTemplate.match(
      organizationLocationName
    ).organization;
  }

  /**
   * Parse the location from OrganizationLocation resource.
   *
   * @param {string} organizationLocationName
   *   A fully-qualified path representing OrganizationLocation resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationLocationName(organizationLocationName: string) {
    return this.pathTemplates.organizationLocationPathTemplate.match(
      organizationLocationName
    ).location;
  }

  /**
   * Return a fully-qualified organizationLocationExport resource name string.
   *
   * @param {string} organization
   * @param {string} location
   * @param {string} exportParam
   * @returns {string} Resource name string.
   */
  organizationLocationExportPath(
    organization: string,
    location: string,
    exportParam: string
  ) {
    return this.pathTemplates.organizationLocationExportPathTemplate.render({
      organization: organization,
      location: location,
      export: exportParam,
    });
  }

  /**
   * Parse the organization from OrganizationLocationExport resource.
   *
   * @param {string} organizationLocationExportName
   *   A fully-qualified path representing organization_location_export resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationLocationExportName(
    organizationLocationExportName: string
  ) {
    return this.pathTemplates.organizationLocationExportPathTemplate.match(
      organizationLocationExportName
    ).organization;
  }

  /**
   * Parse the location from OrganizationLocationExport resource.
   *
   * @param {string} organizationLocationExportName
   *   A fully-qualified path representing organization_location_export resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationLocationExportName(
    organizationLocationExportName: string
  ) {
    return this.pathTemplates.organizationLocationExportPathTemplate.match(
      organizationLocationExportName
    ).location;
  }

  /**
   * Parse the export from OrganizationLocationExport resource.
   *
   * @param {string} organizationLocationExportName
   *   A fully-qualified path representing organization_location_export resource.
   * @returns {string} A string representing the export.
   */
  matchExportFromOrganizationLocationExportName(
    organizationLocationExportName: string
  ) {
    return this.pathTemplates.organizationLocationExportPathTemplate.match(
      organizationLocationExportName
    ).export;
  }

  /**
   * Return a fully-qualified organizationLocationMuteConfig resource name string.
   *
   * @param {string} organization
   * @param {string} location
   * @param {string} mute_config
   * @returns {string} Resource name string.
   */
  organizationLocationMuteConfigPath(
    organization: string,
    location: string,
    muteConfig: string
  ) {
    return this.pathTemplates.organizationLocationMuteConfigPathTemplate.render(
      {
        organization: organization,
        location: location,
        mute_config: muteConfig,
      }
    );
  }

  /**
   * Parse the organization from OrganizationLocationMuteConfig resource.
   *
   * @param {string} organizationLocationMuteConfigName
   *   A fully-qualified path representing organization_location_mute_config resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationLocationMuteConfigName(
    organizationLocationMuteConfigName: string
  ) {
    return this.pathTemplates.organizationLocationMuteConfigPathTemplate.match(
      organizationLocationMuteConfigName
    ).organization;
  }

  /**
   * Parse the location from OrganizationLocationMuteConfig resource.
   *
   * @param {string} organizationLocationMuteConfigName
   *   A fully-qualified path representing organization_location_mute_config resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationLocationMuteConfigName(
    organizationLocationMuteConfigName: string
  ) {
    return this.pathTemplates.organizationLocationMuteConfigPathTemplate.match(
      organizationLocationMuteConfigName
    ).location;
  }

  /**
   * Parse the mute_config from OrganizationLocationMuteConfig resource.
   *
   * @param {string} organizationLocationMuteConfigName
   *   A fully-qualified path representing organization_location_mute_config resource.
   * @returns {string} A string representing the mute_config.
   */
  matchMuteConfigFromOrganizationLocationMuteConfigName(
    organizationLocationMuteConfigName: string
  ) {
    return this.pathTemplates.organizationLocationMuteConfigPathTemplate.match(
      organizationLocationMuteConfigName
    ).mute_config;
  }

  /**
   * Return a fully-qualified organizationLocationNotificationConfig resource name string.
   *
   * @param {string} organization
   * @param {string} location
   * @param {string} notification_config
   * @returns {string} Resource name string.
   */
  organizationLocationNotificationConfigPath(
    organization: string,
    location: string,
    notificationConfig: string
  ) {
    return this.pathTemplates.organizationLocationNotificationConfigPathTemplate.render(
      {
        organization: organization,
        location: location,
        notification_config: notificationConfig,
      }
    );
  }

  /**
   * Parse the organization from OrganizationLocationNotificationConfig resource.
   *
   * @param {string} organizationLocationNotificationConfigName
   *   A fully-qualified path representing organization_location_notification_config resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationLocationNotificationConfigName(
    organizationLocationNotificationConfigName: string
  ) {
    return this.pathTemplates.organizationLocationNotificationConfigPathTemplate.match(
      organizationLocationNotificationConfigName
    ).organization;
  }

  /**
   * Parse the location from OrganizationLocationNotificationConfig resource.
   *
   * @param {string} organizationLocationNotificationConfigName
   *   A fully-qualified path representing organization_location_notification_config resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationLocationNotificationConfigName(
    organizationLocationNotificationConfigName: string
  ) {
    return this.pathTemplates.organizationLocationNotificationConfigPathTemplate.match(
      organizationLocationNotificationConfigName
    ).location;
  }

  /**
   * Parse the notification_config from OrganizationLocationNotificationConfig resource.
   *
   * @param {string} organizationLocationNotificationConfigName
   *   A fully-qualified path representing organization_location_notification_config resource.
   * @returns {string} A string representing the notification_config.
   */
  matchNotificationConfigFromOrganizationLocationNotificationConfigName(
    organizationLocationNotificationConfigName: string
  ) {
    return this.pathTemplates.organizationLocationNotificationConfigPathTemplate.match(
      organizationLocationNotificationConfigName
    ).notification_config;
  }

  /**
   * Return a fully-qualified organizationMuteConfig resource name string.
   *
   * @param {string} organization
   * @param {string} mute_config
   * @returns {string} Resource name string.
   */
  organizationMuteConfigPath(organization: string, muteConfig: string) {
    return this.pathTemplates.organizationMuteConfigPathTemplate.render({
      organization: organization,
      mute_config: muteConfig,
    });
  }

  /**
   * Parse the organization from OrganizationMuteConfig resource.
   *
   * @param {string} organizationMuteConfigName
   *   A fully-qualified path representing organization_mute_config resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationMuteConfigName(
    organizationMuteConfigName: string
  ) {
    return this.pathTemplates.organizationMuteConfigPathTemplate.match(
      organizationMuteConfigName
    ).organization;
  }

  /**
   * Parse the mute_config from OrganizationMuteConfig resource.
   *
   * @param {string} organizationMuteConfigName
   *   A fully-qualified path representing organization_mute_config resource.
   * @returns {string} A string representing the mute_config.
   */
  matchMuteConfigFromOrganizationMuteConfigName(
    organizationMuteConfigName: string
  ) {
    return this.pathTemplates.organizationMuteConfigPathTemplate.match(
      organizationMuteConfigName
    ).mute_config;
  }

  /**
   * Return a fully-qualified organizationSource resource name string.
   *
   * @param {string} organization
   * @param {string} source
   * @returns {string} Resource name string.
   */
  organizationSourcePath(organization: string, source: string) {
    return this.pathTemplates.organizationSourcePathTemplate.render({
      organization: organization,
      source: source,
    });
  }

  /**
   * Parse the organization from OrganizationSource resource.
   *
   * @param {string} organizationSourceName
   *   A fully-qualified path representing organization_source resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationSourceName(organizationSourceName: string) {
    return this.pathTemplates.organizationSourcePathTemplate.match(
      organizationSourceName
    ).organization;
  }

  /**
   * Parse the source from OrganizationSource resource.
   *
   * @param {string} organizationSourceName
   *   A fully-qualified path representing organization_source resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromOrganizationSourceName(organizationSourceName: string) {
    return this.pathTemplates.organizationSourcePathTemplate.match(
      organizationSourceName
    ).source;
  }

  /**
   * Return a fully-qualified organizationSourceFinding resource name string.
   *
   * @param {string} organization
   * @param {string} source
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  organizationSourceFindingPath(
    organization: string,
    source: string,
    finding: string
  ) {
    return this.pathTemplates.organizationSourceFindingPathTemplate.render({
      organization: organization,
      source: source,
      finding: finding,
    });
  }

  /**
   * Parse the organization from OrganizationSourceFinding resource.
   *
   * @param {string} organizationSourceFindingName
   *   A fully-qualified path representing organization_source_finding resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationSourceFindingName(
    organizationSourceFindingName: string
  ) {
    return this.pathTemplates.organizationSourceFindingPathTemplate.match(
      organizationSourceFindingName
    ).organization;
  }

  /**
   * Parse the source from OrganizationSourceFinding resource.
   *
   * @param {string} organizationSourceFindingName
   *   A fully-qualified path representing organization_source_finding resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromOrganizationSourceFindingName(
    organizationSourceFindingName: string
  ) {
    return this.pathTemplates.organizationSourceFindingPathTemplate.match(
      organizationSourceFindingName
    ).source;
  }

  /**
   * Parse the finding from OrganizationSourceFinding resource.
   *
   * @param {string} organizationSourceFindingName
   *   A fully-qualified path representing organization_source_finding resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromOrganizationSourceFindingName(
    organizationSourceFindingName: string
  ) {
    return this.pathTemplates.organizationSourceFindingPathTemplate.match(
      organizationSourceFindingName
    ).finding;
  }

  /**
   * Return a fully-qualified organizationSourceFindingExternalsystem resource name string.
   *
   * @param {string} organization
   * @param {string} source
   * @param {string} finding
   * @param {string} externalsystem
   * @returns {string} Resource name string.
   */
  organizationSourceFindingExternalsystemPath(
    organization: string,
    source: string,
    finding: string,
    externalsystem: string
  ) {
    return this.pathTemplates.organizationSourceFindingExternalsystemPathTemplate.render(
      {
        organization: organization,
        source: source,
        finding: finding,
        externalsystem: externalsystem,
      }
    );
  }

  /**
   * Parse the organization from OrganizationSourceFindingExternalsystem resource.
   *
   * @param {string} organizationSourceFindingExternalsystemName
   *   A fully-qualified path representing organization_source_finding_externalsystem resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationSourceFindingExternalsystemName(
    organizationSourceFindingExternalsystemName: string
  ) {
    return this.pathTemplates.organizationSourceFindingExternalsystemPathTemplate.match(
      organizationSourceFindingExternalsystemName
    ).organization;
  }

  /**
   * Parse the source from OrganizationSourceFindingExternalsystem resource.
   *
   * @param {string} organizationSourceFindingExternalsystemName
   *   A fully-qualified path representing organization_source_finding_externalsystem resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromOrganizationSourceFindingExternalsystemName(
    organizationSourceFindingExternalsystemName: string
  ) {
    return this.pathTemplates.organizationSourceFindingExternalsystemPathTemplate.match(
      organizationSourceFindingExternalsystemName
    ).source;
  }

  /**
   * Parse the finding from OrganizationSourceFindingExternalsystem resource.
   *
   * @param {string} organizationSourceFindingExternalsystemName
   *   A fully-qualified path representing organization_source_finding_externalsystem resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromOrganizationSourceFindingExternalsystemName(
    organizationSourceFindingExternalsystemName: string
  ) {
    return this.pathTemplates.organizationSourceFindingExternalsystemPathTemplate.match(
      organizationSourceFindingExternalsystemName
    ).finding;
  }

  /**
   * Parse the externalsystem from OrganizationSourceFindingExternalsystem resource.
   *
   * @param {string} organizationSourceFindingExternalsystemName
   *   A fully-qualified path representing organization_source_finding_externalsystem resource.
   * @returns {string} A string representing the externalsystem.
   */
  matchExternalsystemFromOrganizationSourceFindingExternalsystemName(
    organizationSourceFindingExternalsystemName: string
  ) {
    return this.pathTemplates.organizationSourceFindingExternalsystemPathTemplate.match(
      organizationSourceFindingExternalsystemName
    ).externalsystem;
  }

  /**
   * Return a fully-qualified organizationSourceFindingSecurityMarks resource name string.
   *
   * @param {string} organization
   * @param {string} source
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  organizationSourceFindingSecurityMarksPath(
    organization: string,
    source: string,
    finding: string
  ) {
    return this.pathTemplates.organizationSourceFindingSecurityMarksPathTemplate.render(
      {
        organization: organization,
        source: source,
        finding: finding,
      }
    );
  }

  /**
   * Parse the organization from OrganizationSourceFindingSecurityMarks resource.
   *
   * @param {string} organizationSourceFindingSecurityMarksName
   *   A fully-qualified path representing organization_source_finding_securityMarks resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationSourceFindingSecurityMarksName(
    organizationSourceFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationSourceFindingSecurityMarksPathTemplate.match(
      organizationSourceFindingSecurityMarksName
    ).organization;
  }

  /**
   * Parse the source from OrganizationSourceFindingSecurityMarks resource.
   *
   * @param {string} organizationSourceFindingSecurityMarksName
   *   A fully-qualified path representing organization_source_finding_securityMarks resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromOrganizationSourceFindingSecurityMarksName(
    organizationSourceFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationSourceFindingSecurityMarksPathTemplate.match(
      organizationSourceFindingSecurityMarksName
    ).source;
  }

  /**
   * Parse the finding from OrganizationSourceFindingSecurityMarks resource.
   *
   * @param {string} organizationSourceFindingSecurityMarksName
   *   A fully-qualified path representing organization_source_finding_securityMarks resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromOrganizationSourceFindingSecurityMarksName(
    organizationSourceFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationSourceFindingSecurityMarksPathTemplate.match(
      organizationSourceFindingSecurityMarksName
    ).finding;
  }

  /**
   * Return a fully-qualified organizationSourceLocationFinding resource name string.
   *
   * @param {string} organization
   * @param {string} source
   * @param {string} location
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  organizationSourceLocationFindingPath(
    organization: string,
    source: string,
    location: string,
    finding: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingPathTemplate.render(
      {
        organization: organization,
        source: source,
        location: location,
        finding: finding,
      }
    );
  }

  /**
   * Parse the organization from OrganizationSourceLocationFinding resource.
   *
   * @param {string} organizationSourceLocationFindingName
   *   A fully-qualified path representing organization_source_location_finding resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationSourceLocationFindingName(
    organizationSourceLocationFindingName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingPathTemplate.match(
      organizationSourceLocationFindingName
    ).organization;
  }

  /**
   * Parse the source from OrganizationSourceLocationFinding resource.
   *
   * @param {string} organizationSourceLocationFindingName
   *   A fully-qualified path representing organization_source_location_finding resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromOrganizationSourceLocationFindingName(
    organizationSourceLocationFindingName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingPathTemplate.match(
      organizationSourceLocationFindingName
    ).source;
  }

  /**
   * Parse the location from OrganizationSourceLocationFinding resource.
   *
   * @param {string} organizationSourceLocationFindingName
   *   A fully-qualified path representing organization_source_location_finding resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationSourceLocationFindingName(
    organizationSourceLocationFindingName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingPathTemplate.match(
      organizationSourceLocationFindingName
    ).location;
  }

  /**
   * Parse the finding from OrganizationSourceLocationFinding resource.
   *
   * @param {string} organizationSourceLocationFindingName
   *   A fully-qualified path representing organization_source_location_finding resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromOrganizationSourceLocationFindingName(
    organizationSourceLocationFindingName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingPathTemplate.match(
      organizationSourceLocationFindingName
    ).finding;
  }

  /**
   * Return a fully-qualified organizationSourceLocationFindingExternalsystem resource name string.
   *
   * @param {string} organization
   * @param {string} source
   * @param {string} location
   * @param {string} finding
   * @param {string} externalsystem
   * @returns {string} Resource name string.
   */
  organizationSourceLocationFindingExternalsystemPath(
    organization: string,
    source: string,
    location: string,
    finding: string,
    externalsystem: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingExternalsystemPathTemplate.render(
      {
        organization: organization,
        source: source,
        location: location,
        finding: finding,
        externalsystem: externalsystem,
      }
    );
  }

  /**
   * Parse the organization from OrganizationSourceLocationFindingExternalsystem resource.
   *
   * @param {string} organizationSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing organization_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationSourceLocationFindingExternalsystemName(
    organizationSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingExternalsystemPathTemplate.match(
      organizationSourceLocationFindingExternalsystemName
    ).organization;
  }

  /**
   * Parse the source from OrganizationSourceLocationFindingExternalsystem resource.
   *
   * @param {string} organizationSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing organization_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromOrganizationSourceLocationFindingExternalsystemName(
    organizationSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingExternalsystemPathTemplate.match(
      organizationSourceLocationFindingExternalsystemName
    ).source;
  }

  /**
   * Parse the location from OrganizationSourceLocationFindingExternalsystem resource.
   *
   * @param {string} organizationSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing organization_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationSourceLocationFindingExternalsystemName(
    organizationSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingExternalsystemPathTemplate.match(
      organizationSourceLocationFindingExternalsystemName
    ).location;
  }

  /**
   * Parse the finding from OrganizationSourceLocationFindingExternalsystem resource.
   *
   * @param {string} organizationSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing organization_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromOrganizationSourceLocationFindingExternalsystemName(
    organizationSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingExternalsystemPathTemplate.match(
      organizationSourceLocationFindingExternalsystemName
    ).finding;
  }

  /**
   * Parse the externalsystem from OrganizationSourceLocationFindingExternalsystem resource.
   *
   * @param {string} organizationSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing organization_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the externalsystem.
   */
  matchExternalsystemFromOrganizationSourceLocationFindingExternalsystemName(
    organizationSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingExternalsystemPathTemplate.match(
      organizationSourceLocationFindingExternalsystemName
    ).externalsystem;
  }

  /**
   * Return a fully-qualified organizationSourceLocationFindingSecurityMarks resource name string.
   *
   * @param {string} organization
   * @param {string} source
   * @param {string} location
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  organizationSourceLocationFindingSecurityMarksPath(
    organization: string,
    source: string,
    location: string,
    finding: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingSecurityMarksPathTemplate.render(
      {
        organization: organization,
        source: source,
        location: location,
        finding: finding,
      }
    );
  }

  /**
   * Parse the organization from OrganizationSourceLocationFindingSecurityMarks resource.
   *
   * @param {string} organizationSourceLocationFindingSecurityMarksName
   *   A fully-qualified path representing organization_source_location_finding_securityMarks resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationSourceLocationFindingSecurityMarksName(
    organizationSourceLocationFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingSecurityMarksPathTemplate.match(
      organizationSourceLocationFindingSecurityMarksName
    ).organization;
  }

  /**
   * Parse the source from OrganizationSourceLocationFindingSecurityMarks resource.
   *
   * @param {string} organizationSourceLocationFindingSecurityMarksName
   *   A fully-qualified path representing organization_source_location_finding_securityMarks resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromOrganizationSourceLocationFindingSecurityMarksName(
    organizationSourceLocationFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingSecurityMarksPathTemplate.match(
      organizationSourceLocationFindingSecurityMarksName
    ).source;
  }

  /**
   * Parse the location from OrganizationSourceLocationFindingSecurityMarks resource.
   *
   * @param {string} organizationSourceLocationFindingSecurityMarksName
   *   A fully-qualified path representing organization_source_location_finding_securityMarks resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromOrganizationSourceLocationFindingSecurityMarksName(
    organizationSourceLocationFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingSecurityMarksPathTemplate.match(
      organizationSourceLocationFindingSecurityMarksName
    ).location;
  }

  /**
   * Parse the finding from OrganizationSourceLocationFindingSecurityMarks resource.
   *
   * @param {string} organizationSourceLocationFindingSecurityMarksName
   *   A fully-qualified path representing organization_source_location_finding_securityMarks resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromOrganizationSourceLocationFindingSecurityMarksName(
    organizationSourceLocationFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationSourceLocationFindingSecurityMarksPathTemplate.match(
      organizationSourceLocationFindingSecurityMarksName
    ).finding;
  }

  /**
   * Return a fully-qualified projectAssetSecurityMarks resource name string.
   *
   * @param {string} project
   * @param {string} asset
   * @returns {string} Resource name string.
   */
  projectAssetSecurityMarksPath(project: string, asset: string) {
    return this.pathTemplates.projectAssetSecurityMarksPathTemplate.render({
      project: project,
      asset: asset,
    });
  }

  /**
   * Parse the project from ProjectAssetSecurityMarks resource.
   *
   * @param {string} projectAssetSecurityMarksName
   *   A fully-qualified path representing project_asset_securityMarks resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectAssetSecurityMarksName(
    projectAssetSecurityMarksName: string
  ) {
    return this.pathTemplates.projectAssetSecurityMarksPathTemplate.match(
      projectAssetSecurityMarksName
    ).project;
  }

  /**
   * Parse the asset from ProjectAssetSecurityMarks resource.
   *
   * @param {string} projectAssetSecurityMarksName
   *   A fully-qualified path representing project_asset_securityMarks resource.
   * @returns {string} A string representing the asset.
   */
  matchAssetFromProjectAssetSecurityMarksName(
    projectAssetSecurityMarksName: string
  ) {
    return this.pathTemplates.projectAssetSecurityMarksPathTemplate.match(
      projectAssetSecurityMarksName
    ).asset;
  }

  /**
   * Return a fully-qualified projectConstraintName resource name string.
   *
   * @param {string} project
   * @param {string} constraint_name
   * @returns {string} Resource name string.
   */
  projectConstraintNamePath(project: string, constraintName: string) {
    return this.pathTemplates.projectConstraintNamePathTemplate.render({
      project: project,
      constraint_name: constraintName,
    });
  }

  /**
   * Parse the project from ProjectConstraintName resource.
   *
   * @param {string} projectConstraintNameName
   *   A fully-qualified path representing project_constraint_name resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectConstraintNameName(projectConstraintNameName: string) {
    return this.pathTemplates.projectConstraintNamePathTemplate.match(
      projectConstraintNameName
    ).project;
  }

  /**
   * Parse the constraint_name from ProjectConstraintName resource.
   *
   * @param {string} projectConstraintNameName
   *   A fully-qualified path representing project_constraint_name resource.
   * @returns {string} A string representing the constraint_name.
   */
  matchConstraintNameFromProjectConstraintNameName(
    projectConstraintNameName: string
  ) {
    return this.pathTemplates.projectConstraintNamePathTemplate.match(
      projectConstraintNameName
    ).constraint_name;
  }

  /**
   * Return a fully-qualified projectLocationExport resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} exportParam
   * @returns {string} Resource name string.
   */
  projectLocationExportPath(
    project: string,
    location: string,
    exportParam: string
  ) {
    return this.pathTemplates.projectLocationExportPathTemplate.render({
      project: project,
      location: location,
      export: exportParam,
    });
  }

  /**
   * Parse the project from ProjectLocationExport resource.
   *
   * @param {string} projectLocationExportName
   *   A fully-qualified path representing project_location_export resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationExportName(projectLocationExportName: string) {
    return this.pathTemplates.projectLocationExportPathTemplate.match(
      projectLocationExportName
    ).project;
  }

  /**
   * Parse the location from ProjectLocationExport resource.
   *
   * @param {string} projectLocationExportName
   *   A fully-qualified path representing project_location_export resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationExportName(
    projectLocationExportName: string
  ) {
    return this.pathTemplates.projectLocationExportPathTemplate.match(
      projectLocationExportName
    ).location;
  }

  /**
   * Parse the export from ProjectLocationExport resource.
   *
   * @param {string} projectLocationExportName
   *   A fully-qualified path representing project_location_export resource.
   * @returns {string} A string representing the export.
   */
  matchExportFromProjectLocationExportName(projectLocationExportName: string) {
    return this.pathTemplates.projectLocationExportPathTemplate.match(
      projectLocationExportName
    ).export;
  }

  /**
   * Return a fully-qualified projectLocationMuteConfig resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} mute_config
   * @returns {string} Resource name string.
   */
  projectLocationMuteConfigPath(
    project: string,
    location: string,
    muteConfig: string
  ) {
    return this.pathTemplates.projectLocationMuteConfigPathTemplate.render({
      project: project,
      location: location,
      mute_config: muteConfig,
    });
  }

  /**
   * Parse the project from ProjectLocationMuteConfig resource.
   *
   * @param {string} projectLocationMuteConfigName
   *   A fully-qualified path representing project_location_mute_config resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationMuteConfigName(
    projectLocationMuteConfigName: string
  ) {
    return this.pathTemplates.projectLocationMuteConfigPathTemplate.match(
      projectLocationMuteConfigName
    ).project;
  }

  /**
   * Parse the location from ProjectLocationMuteConfig resource.
   *
   * @param {string} projectLocationMuteConfigName
   *   A fully-qualified path representing project_location_mute_config resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationMuteConfigName(
    projectLocationMuteConfigName: string
  ) {
    return this.pathTemplates.projectLocationMuteConfigPathTemplate.match(
      projectLocationMuteConfigName
    ).location;
  }

  /**
   * Parse the mute_config from ProjectLocationMuteConfig resource.
   *
   * @param {string} projectLocationMuteConfigName
   *   A fully-qualified path representing project_location_mute_config resource.
   * @returns {string} A string representing the mute_config.
   */
  matchMuteConfigFromProjectLocationMuteConfigName(
    projectLocationMuteConfigName: string
  ) {
    return this.pathTemplates.projectLocationMuteConfigPathTemplate.match(
      projectLocationMuteConfigName
    ).mute_config;
  }

  /**
   * Return a fully-qualified projectLocationNotificationConfig resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} notification_config
   * @returns {string} Resource name string.
   */
  projectLocationNotificationConfigPath(
    project: string,
    location: string,
    notificationConfig: string
  ) {
    return this.pathTemplates.projectLocationNotificationConfigPathTemplate.render(
      {
        project: project,
        location: location,
        notification_config: notificationConfig,
      }
    );
  }

  /**
   * Parse the project from ProjectLocationNotificationConfig resource.
   *
   * @param {string} projectLocationNotificationConfigName
   *   A fully-qualified path representing project_location_notification_config resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationNotificationConfigName(
    projectLocationNotificationConfigName: string
  ) {
    return this.pathTemplates.projectLocationNotificationConfigPathTemplate.match(
      projectLocationNotificationConfigName
    ).project;
  }

  /**
   * Parse the location from ProjectLocationNotificationConfig resource.
   *
   * @param {string} projectLocationNotificationConfigName
   *   A fully-qualified path representing project_location_notification_config resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationNotificationConfigName(
    projectLocationNotificationConfigName: string
  ) {
    return this.pathTemplates.projectLocationNotificationConfigPathTemplate.match(
      projectLocationNotificationConfigName
    ).location;
  }

  /**
   * Parse the notification_config from ProjectLocationNotificationConfig resource.
   *
   * @param {string} projectLocationNotificationConfigName
   *   A fully-qualified path representing project_location_notification_config resource.
   * @returns {string} A string representing the notification_config.
   */
  matchNotificationConfigFromProjectLocationNotificationConfigName(
    projectLocationNotificationConfigName: string
  ) {
    return this.pathTemplates.projectLocationNotificationConfigPathTemplate.match(
      projectLocationNotificationConfigName
    ).notification_config;
  }

  /**
   * Return a fully-qualified projectMuteConfig resource name string.
   *
   * @param {string} project
   * @param {string} mute_config
   * @returns {string} Resource name string.
   */
  projectMuteConfigPath(project: string, muteConfig: string) {
    return this.pathTemplates.projectMuteConfigPathTemplate.render({
      project: project,
      mute_config: muteConfig,
    });
  }

  /**
   * Parse the project from ProjectMuteConfig resource.
   *
   * @param {string} projectMuteConfigName
   *   A fully-qualified path representing project_mute_config resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectMuteConfigName(projectMuteConfigName: string) {
    return this.pathTemplates.projectMuteConfigPathTemplate.match(
      projectMuteConfigName
    ).project;
  }

  /**
   * Parse the mute_config from ProjectMuteConfig resource.
   *
   * @param {string} projectMuteConfigName
   *   A fully-qualified path representing project_mute_config resource.
   * @returns {string} A string representing the mute_config.
   */
  matchMuteConfigFromProjectMuteConfigName(projectMuteConfigName: string) {
    return this.pathTemplates.projectMuteConfigPathTemplate.match(
      projectMuteConfigName
    ).mute_config;
  }

  /**
   * Return a fully-qualified projectSource resource name string.
   *
   * @param {string} project
   * @param {string} source
   * @returns {string} Resource name string.
   */
  projectSourcePath(project: string, source: string) {
    return this.pathTemplates.projectSourcePathTemplate.render({
      project: project,
      source: source,
    });
  }

  /**
   * Parse the project from ProjectSource resource.
   *
   * @param {string} projectSourceName
   *   A fully-qualified path representing project_source resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectSourceName(projectSourceName: string) {
    return this.pathTemplates.projectSourcePathTemplate.match(projectSourceName)
      .project;
  }

  /**
   * Parse the source from ProjectSource resource.
   *
   * @param {string} projectSourceName
   *   A fully-qualified path representing project_source resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromProjectSourceName(projectSourceName: string) {
    return this.pathTemplates.projectSourcePathTemplate.match(projectSourceName)
      .source;
  }

  /**
   * Return a fully-qualified projectSourceFinding resource name string.
   *
   * @param {string} project
   * @param {string} source
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  projectSourceFindingPath(project: string, source: string, finding: string) {
    return this.pathTemplates.projectSourceFindingPathTemplate.render({
      project: project,
      source: source,
      finding: finding,
    });
  }

  /**
   * Parse the project from ProjectSourceFinding resource.
   *
   * @param {string} projectSourceFindingName
   *   A fully-qualified path representing project_source_finding resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectSourceFindingName(projectSourceFindingName: string) {
    return this.pathTemplates.projectSourceFindingPathTemplate.match(
      projectSourceFindingName
    ).project;
  }

  /**
   * Parse the source from ProjectSourceFinding resource.
   *
   * @param {string} projectSourceFindingName
   *   A fully-qualified path representing project_source_finding resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromProjectSourceFindingName(projectSourceFindingName: string) {
    return this.pathTemplates.projectSourceFindingPathTemplate.match(
      projectSourceFindingName
    ).source;
  }

  /**
   * Parse the finding from ProjectSourceFinding resource.
   *
   * @param {string} projectSourceFindingName
   *   A fully-qualified path representing project_source_finding resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromProjectSourceFindingName(projectSourceFindingName: string) {
    return this.pathTemplates.projectSourceFindingPathTemplate.match(
      projectSourceFindingName
    ).finding;
  }

  /**
   * Return a fully-qualified projectSourceFindingExternalsystem resource name string.
   *
   * @param {string} project
   * @param {string} source
   * @param {string} finding
   * @param {string} externalsystem
   * @returns {string} Resource name string.
   */
  projectSourceFindingExternalsystemPath(
    project: string,
    source: string,
    finding: string,
    externalsystem: string
  ) {
    return this.pathTemplates.projectSourceFindingExternalsystemPathTemplate.render(
      {
        project: project,
        source: source,
        finding: finding,
        externalsystem: externalsystem,
      }
    );
  }

  /**
   * Parse the project from ProjectSourceFindingExternalsystem resource.
   *
   * @param {string} projectSourceFindingExternalsystemName
   *   A fully-qualified path representing project_source_finding_externalsystem resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectSourceFindingExternalsystemName(
    projectSourceFindingExternalsystemName: string
  ) {
    return this.pathTemplates.projectSourceFindingExternalsystemPathTemplate.match(
      projectSourceFindingExternalsystemName
    ).project;
  }

  /**
   * Parse the source from ProjectSourceFindingExternalsystem resource.
   *
   * @param {string} projectSourceFindingExternalsystemName
   *   A fully-qualified path representing project_source_finding_externalsystem resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromProjectSourceFindingExternalsystemName(
    projectSourceFindingExternalsystemName: string
  ) {
    return this.pathTemplates.projectSourceFindingExternalsystemPathTemplate.match(
      projectSourceFindingExternalsystemName
    ).source;
  }

  /**
   * Parse the finding from ProjectSourceFindingExternalsystem resource.
   *
   * @param {string} projectSourceFindingExternalsystemName
   *   A fully-qualified path representing project_source_finding_externalsystem resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromProjectSourceFindingExternalsystemName(
    projectSourceFindingExternalsystemName: string
  ) {
    return this.pathTemplates.projectSourceFindingExternalsystemPathTemplate.match(
      projectSourceFindingExternalsystemName
    ).finding;
  }

  /**
   * Parse the externalsystem from ProjectSourceFindingExternalsystem resource.
   *
   * @param {string} projectSourceFindingExternalsystemName
   *   A fully-qualified path representing project_source_finding_externalsystem resource.
   * @returns {string} A string representing the externalsystem.
   */
  matchExternalsystemFromProjectSourceFindingExternalsystemName(
    projectSourceFindingExternalsystemName: string
  ) {
    return this.pathTemplates.projectSourceFindingExternalsystemPathTemplate.match(
      projectSourceFindingExternalsystemName
    ).externalsystem;
  }

  /**
   * Return a fully-qualified projectSourceFindingSecurityMarks resource name string.
   *
   * @param {string} project
   * @param {string} source
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  projectSourceFindingSecurityMarksPath(
    project: string,
    source: string,
    finding: string
  ) {
    return this.pathTemplates.projectSourceFindingSecurityMarksPathTemplate.render(
      {
        project: project,
        source: source,
        finding: finding,
      }
    );
  }

  /**
   * Parse the project from ProjectSourceFindingSecurityMarks resource.
   *
   * @param {string} projectSourceFindingSecurityMarksName
   *   A fully-qualified path representing project_source_finding_securityMarks resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectSourceFindingSecurityMarksName(
    projectSourceFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.projectSourceFindingSecurityMarksPathTemplate.match(
      projectSourceFindingSecurityMarksName
    ).project;
  }

  /**
   * Parse the source from ProjectSourceFindingSecurityMarks resource.
   *
   * @param {string} projectSourceFindingSecurityMarksName
   *   A fully-qualified path representing project_source_finding_securityMarks resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromProjectSourceFindingSecurityMarksName(
    projectSourceFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.projectSourceFindingSecurityMarksPathTemplate.match(
      projectSourceFindingSecurityMarksName
    ).source;
  }

  /**
   * Parse the finding from ProjectSourceFindingSecurityMarks resource.
   *
   * @param {string} projectSourceFindingSecurityMarksName
   *   A fully-qualified path representing project_source_finding_securityMarks resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromProjectSourceFindingSecurityMarksName(
    projectSourceFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.projectSourceFindingSecurityMarksPathTemplate.match(
      projectSourceFindingSecurityMarksName
    ).finding;
  }

  /**
   * Return a fully-qualified projectSourceLocationFinding resource name string.
   *
   * @param {string} project
   * @param {string} source
   * @param {string} location
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  projectSourceLocationFindingPath(
    project: string,
    source: string,
    location: string,
    finding: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingPathTemplate.render({
      project: project,
      source: source,
      location: location,
      finding: finding,
    });
  }

  /**
   * Parse the project from ProjectSourceLocationFinding resource.
   *
   * @param {string} projectSourceLocationFindingName
   *   A fully-qualified path representing project_source_location_finding resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectSourceLocationFindingName(
    projectSourceLocationFindingName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingPathTemplate.match(
      projectSourceLocationFindingName
    ).project;
  }

  /**
   * Parse the source from ProjectSourceLocationFinding resource.
   *
   * @param {string} projectSourceLocationFindingName
   *   A fully-qualified path representing project_source_location_finding resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromProjectSourceLocationFindingName(
    projectSourceLocationFindingName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingPathTemplate.match(
      projectSourceLocationFindingName
    ).source;
  }

  /**
   * Parse the location from ProjectSourceLocationFinding resource.
   *
   * @param {string} projectSourceLocationFindingName
   *   A fully-qualified path representing project_source_location_finding resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectSourceLocationFindingName(
    projectSourceLocationFindingName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingPathTemplate.match(
      projectSourceLocationFindingName
    ).location;
  }

  /**
   * Parse the finding from ProjectSourceLocationFinding resource.
   *
   * @param {string} projectSourceLocationFindingName
   *   A fully-qualified path representing project_source_location_finding resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromProjectSourceLocationFindingName(
    projectSourceLocationFindingName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingPathTemplate.match(
      projectSourceLocationFindingName
    ).finding;
  }

  /**
   * Return a fully-qualified projectSourceLocationFindingExternalsystem resource name string.
   *
   * @param {string} project
   * @param {string} source
   * @param {string} location
   * @param {string} finding
   * @param {string} externalsystem
   * @returns {string} Resource name string.
   */
  projectSourceLocationFindingExternalsystemPath(
    project: string,
    source: string,
    location: string,
    finding: string,
    externalsystem: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingExternalsystemPathTemplate.render(
      {
        project: project,
        source: source,
        location: location,
        finding: finding,
        externalsystem: externalsystem,
      }
    );
  }

  /**
   * Parse the project from ProjectSourceLocationFindingExternalsystem resource.
   *
   * @param {string} projectSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing project_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectSourceLocationFindingExternalsystemName(
    projectSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingExternalsystemPathTemplate.match(
      projectSourceLocationFindingExternalsystemName
    ).project;
  }

  /**
   * Parse the source from ProjectSourceLocationFindingExternalsystem resource.
   *
   * @param {string} projectSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing project_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromProjectSourceLocationFindingExternalsystemName(
    projectSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingExternalsystemPathTemplate.match(
      projectSourceLocationFindingExternalsystemName
    ).source;
  }

  /**
   * Parse the location from ProjectSourceLocationFindingExternalsystem resource.
   *
   * @param {string} projectSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing project_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectSourceLocationFindingExternalsystemName(
    projectSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingExternalsystemPathTemplate.match(
      projectSourceLocationFindingExternalsystemName
    ).location;
  }

  /**
   * Parse the finding from ProjectSourceLocationFindingExternalsystem resource.
   *
   * @param {string} projectSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing project_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromProjectSourceLocationFindingExternalsystemName(
    projectSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingExternalsystemPathTemplate.match(
      projectSourceLocationFindingExternalsystemName
    ).finding;
  }

  /**
   * Parse the externalsystem from ProjectSourceLocationFindingExternalsystem resource.
   *
   * @param {string} projectSourceLocationFindingExternalsystemName
   *   A fully-qualified path representing project_source_location_finding_externalsystem resource.
   * @returns {string} A string representing the externalsystem.
   */
  matchExternalsystemFromProjectSourceLocationFindingExternalsystemName(
    projectSourceLocationFindingExternalsystemName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingExternalsystemPathTemplate.match(
      projectSourceLocationFindingExternalsystemName
    ).externalsystem;
  }

  /**
   * Return a fully-qualified projectSourceLocationFindingSecurityMarks resource name string.
   *
   * @param {string} project
   * @param {string} source
   * @param {string} location
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  projectSourceLocationFindingSecurityMarksPath(
    project: string,
    source: string,
    location: string,
    finding: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingSecurityMarksPathTemplate.render(
      {
        project: project,
        source: source,
        location: location,
        finding: finding,
      }
    );
  }

  /**
   * Parse the project from ProjectSourceLocationFindingSecurityMarks resource.
   *
   * @param {string} projectSourceLocationFindingSecurityMarksName
   *   A fully-qualified path representing project_source_location_finding_securityMarks resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectSourceLocationFindingSecurityMarksName(
    projectSourceLocationFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingSecurityMarksPathTemplate.match(
      projectSourceLocationFindingSecurityMarksName
    ).project;
  }

  /**
   * Parse the source from ProjectSourceLocationFindingSecurityMarks resource.
   *
   * @param {string} projectSourceLocationFindingSecurityMarksName
   *   A fully-qualified path representing project_source_location_finding_securityMarks resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromProjectSourceLocationFindingSecurityMarksName(
    projectSourceLocationFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingSecurityMarksPathTemplate.match(
      projectSourceLocationFindingSecurityMarksName
    ).source;
  }

  /**
   * Parse the location from ProjectSourceLocationFindingSecurityMarks resource.
   *
   * @param {string} projectSourceLocationFindingSecurityMarksName
   *   A fully-qualified path representing project_source_location_finding_securityMarks resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectSourceLocationFindingSecurityMarksName(
    projectSourceLocationFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingSecurityMarksPathTemplate.match(
      projectSourceLocationFindingSecurityMarksName
    ).location;
  }

  /**
   * Parse the finding from ProjectSourceLocationFindingSecurityMarks resource.
   *
   * @param {string} projectSourceLocationFindingSecurityMarksName
   *   A fully-qualified path representing project_source_location_finding_securityMarks resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromProjectSourceLocationFindingSecurityMarksName(
    projectSourceLocationFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.projectSourceLocationFindingSecurityMarksPathTemplate.match(
      projectSourceLocationFindingSecurityMarksName
    ).finding;
  }

  /**
   * Return a fully-qualified resourceValueConfig resource name string.
   *
   * @param {string} organization
   * @param {string} resource_value_config
   * @returns {string} Resource name string.
   */
  resourceValueConfigPath(organization: string, resourceValueConfig: string) {
    return this.pathTemplates.resourceValueConfigPathTemplate.render({
      organization: organization,
      resource_value_config: resourceValueConfig,
    });
  }

  /**
   * Parse the organization from ResourceValueConfig resource.
   *
   * @param {string} resourceValueConfigName
   *   A fully-qualified path representing ResourceValueConfig resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromResourceValueConfigName(
    resourceValueConfigName: string
  ) {
    return this.pathTemplates.resourceValueConfigPathTemplate.match(
      resourceValueConfigName
    ).organization;
  }

  /**
   * Parse the resource_value_config from ResourceValueConfig resource.
   *
   * @param {string} resourceValueConfigName
   *   A fully-qualified path representing ResourceValueConfig resource.
   * @returns {string} A string representing the resource_value_config.
   */
  matchResourceValueConfigFromResourceValueConfigName(
    resourceValueConfigName: string
  ) {
    return this.pathTemplates.resourceValueConfigPathTemplate.match(
      resourceValueConfigName
    ).resource_value_config;
  }

  /**
   * Return a fully-qualified simulation resource name string.
   *
   * @param {string} organization
   * @param {string} simulation
   * @returns {string} Resource name string.
   */
  simulationPath(organization: string, simulation: string) {
    return this.pathTemplates.simulationPathTemplate.render({
      organization: organization,
      simulation: simulation,
    });
  }

  /**
   * Parse the organization from Simulation resource.
   *
   * @param {string} simulationName
   *   A fully-qualified path representing Simulation resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromSimulationName(simulationName: string) {
    return this.pathTemplates.simulationPathTemplate.match(simulationName)
      .organization;
  }

  /**
   * Parse the simulation from Simulation resource.
   *
   * @param {string} simulationName
   *   A fully-qualified path representing Simulation resource.
   * @returns {string} A string representing the simulation.
   */
  matchSimulationFromSimulationName(simulationName: string) {
    return this.pathTemplates.simulationPathTemplate.match(simulationName)
      .simulation;
  }

  /**
   * Return a fully-qualified valuedResource resource name string.
   *
   * @param {string} organization
   * @param {string} simulation
   * @param {string} valued_resource
   * @returns {string} Resource name string.
   */
  valuedResourcePath(
    organization: string,
    simulation: string,
    valuedResource: string
  ) {
    return this.pathTemplates.valuedResourcePathTemplate.render({
      organization: organization,
      simulation: simulation,
      valued_resource: valuedResource,
    });
  }

  /**
   * Parse the organization from ValuedResource resource.
   *
   * @param {string} valuedResourceName
   *   A fully-qualified path representing ValuedResource resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromValuedResourceName(valuedResourceName: string) {
    return this.pathTemplates.valuedResourcePathTemplate.match(
      valuedResourceName
    ).organization;
  }

  /**
   * Parse the simulation from ValuedResource resource.
   *
   * @param {string} valuedResourceName
   *   A fully-qualified path representing ValuedResource resource.
   * @returns {string} A string representing the simulation.
   */
  matchSimulationFromValuedResourceName(valuedResourceName: string) {
    return this.pathTemplates.valuedResourcePathTemplate.match(
      valuedResourceName
    ).simulation;
  }

  /**
   * Parse the valued_resource from ValuedResource resource.
   *
   * @param {string} valuedResourceName
   *   A fully-qualified path representing ValuedResource resource.
   * @returns {string} A string representing the valued_resource.
   */
  matchValuedResourceFromValuedResourceName(valuedResourceName: string) {
    return this.pathTemplates.valuedResourcePathTemplate.match(
      valuedResourceName
    ).valued_resource;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.securityCenterStub && !this._terminated) {
      return this.securityCenterStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.operationsClient.close();
      });
    }
    return Promise.resolve();
  }
}
