// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {
  Callback,
  CallOptions,
  Descriptors,
  ClientOptions,
  GrpcClientOptions,
  LROperation,
  PaginationCallback,
  GaxCall,
} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1beta1/security_center_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './security_center_client_config.json';
const version = require('../../../package.json').version;

/**
 *  V1 Beta APIs for Security Center service.
 * @class
 * @memberof v1beta1
 */
export class SecurityCenterClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  securityCenterStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of SecurityCenterClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new SecurityCenterClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(
    opts?: ClientOptions,
    gaxInstance?: typeof gax | typeof gax.fallback
  ) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof SecurityCenterClient;
    const servicePath =
      opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(
      opts?.servicePath || opts?.apiEndpoint
    );
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback =
      opts?.fallback ??
      (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = this._gaxGrpc.auth as gax.GoogleAuth;

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest') {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      assetPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/assets/{asset}'
      ),
      findingPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/sources/{source}/findings/{finding}'
      ),
      organizationPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}'
      ),
      organizationAssetSecurityMarksPathTemplate:
        new this._gaxModule.PathTemplate(
          'organizations/{organization}/assets/{asset}/securityMarks'
        ),
      organizationSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/organizationSettings'
      ),
      organizationSourceFindingSecurityMarksPathTemplate:
        new this._gaxModule.PathTemplate(
          'organizations/{organization}/sources/{source}/findings/{finding}/securityMarks'
        ),
      sourcePathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/sources/{source}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      groupAssets: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'groupByResults'
      ),
      groupFindings: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'groupByResults'
      ),
      listAssets: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'listAssetsResults'
      ),
      listFindings: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'findings'
      ),
      listSources: new this._gaxModule.PageDescriptor(
        'pageToken',
        'nextPageToken',
        'sources'
      ),
    };

    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);
    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const lroOptions: GrpcClientOptions = {
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,
    };
    if (opts.fallback === 'rest') {
      lroOptions.protoJson = protoFilesRoot;
      lroOptions.httpRules = [
        {
          selector: 'google.longrunning.Operations.CancelOperation',
          post: '/v1beta1/{name=organizations/*/operations/*}:cancel',
          body: '*',
        },
        {
          selector: 'google.longrunning.Operations.DeleteOperation',
          delete: '/v1beta1/{name=organizations/*/operations/*}',
        },
        {
          selector: 'google.longrunning.Operations.GetOperation',
          get: '/v1beta1/{name=organizations/*/operations/*}',
        },
        {
          selector: 'google.longrunning.Operations.ListOperations',
          get: '/v1beta1/{name=organizations/*/operations}',
        },
      ];
    }
    this.operationsClient = this._gaxModule
      .lro(lroOptions)
      .operationsClient(opts);
    const runAssetDiscoveryResponse = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;
    const runAssetDiscoveryMetadata = protoFilesRoot.lookup(
      '.google.protobuf.Empty'
    ) as gax.protobuf.Type;

    this.descriptors.longrunning = {
      runAssetDiscovery: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        runAssetDiscoveryResponse.decode.bind(runAssetDiscoveryResponse),
        runAssetDiscoveryMetadata.decode.bind(runAssetDiscoveryMetadata)
      ),
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
      'google.cloud.securitycenter.v1beta1.SecurityCenter',
      gapicConfig as gax.ClientConfig,
      opts.clientConfig || {},
      {'x-goog-api-client': clientHeader.join(' ')}
    );

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.securityCenterStub) {
      return this.securityCenterStub;
    }

    // Put together the "service stub" for
    // google.cloud.securitycenter.v1beta1.SecurityCenter.
    this.securityCenterStub = this._gaxGrpc.createStub(
      this._opts.fallback
        ? (this._protos as protobuf.Root).lookupService(
            'google.cloud.securitycenter.v1beta1.SecurityCenter'
          )
        : // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.securitycenter.v1beta1
            .SecurityCenter,
      this._opts,
      this._providedCustomServicePath
    ) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const securityCenterStubMethods = [
      'createSource',
      'createFinding',
      'getIamPolicy',
      'getOrganizationSettings',
      'getSource',
      'groupAssets',
      'groupFindings',
      'listAssets',
      'listFindings',
      'listSources',
      'runAssetDiscovery',
      'setFindingState',
      'setIamPolicy',
      'testIamPermissions',
      'updateFinding',
      'updateOrganizationSettings',
      'updateSource',
      'updateSecurityMarks',
    ];
    for (const methodName of securityCenterStubMethods) {
      const callPromise = this.securityCenterStub.then(
        stub =>
          (...args: Array<{}>) => {
            if (this._terminated) {
              return Promise.reject('The client has already been closed.');
            }
            const func = stub[methodName];
            return func.apply(stub, args);
          },
        (err: Error | null | undefined) => () => {
          throw err;
        }
      );

      const descriptor =
        this.descriptors.page[methodName] ||
        this.descriptors.longrunning[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.securityCenterStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'securitycenter.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'securitycenter.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return ['https://www.googleapis.com/auth/cloud-platform'];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(
    callback?: Callback<string, undefined, undefined>
  ): Promise<string> | void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
  /**
   * Creates a source.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the new source's parent. Its format should be
   *   "organizations/[organization_id]".
   * @param {google.cloud.securitycenter.v1beta1.Source} request.source
   *   Required. The Source being created, only the display_name and description will be
   *   used. All other fields will be ignored.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Source]{@link google.cloud.securitycenter.v1beta1.Source}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.create_source.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_CreateSource_async
   */
  createSource(
    request?: protos.google.cloud.securitycenter.v1beta1.ICreateSourceRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.ISource,
      (
        | protos.google.cloud.securitycenter.v1beta1.ICreateSourceRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createSource(
    request: protos.google.cloud.securitycenter.v1beta1.ICreateSourceRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.ISource,
      | protos.google.cloud.securitycenter.v1beta1.ICreateSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createSource(
    request: protos.google.cloud.securitycenter.v1beta1.ICreateSourceRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.ISource,
      | protos.google.cloud.securitycenter.v1beta1.ICreateSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createSource(
    request?: protos.google.cloud.securitycenter.v1beta1.ICreateSourceRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v1beta1.ISource,
          | protos.google.cloud.securitycenter.v1beta1.ICreateSourceRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v1beta1.ISource,
      | protos.google.cloud.securitycenter.v1beta1.ICreateSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.ISource,
      (
        | protos.google.cloud.securitycenter.v1beta1.ICreateSourceRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createSource(request, options, callback);
  }
  /**
   * Creates a finding. The corresponding source must exist for finding creation
   * to succeed.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the new finding's parent. Its format should be
   *   "organizations/[organization_id]/sources/[source_id]".
   * @param {string} request.findingId
   *   Required. Unique identifier provided by the client within the parent scope.
   *   It must be alphanumeric and less than or equal to 32 characters and
   *   greater than 0 characters in length.
   * @param {google.cloud.securitycenter.v1beta1.Finding} request.finding
   *   Required. The Finding being created. The name and security_marks will be ignored as
   *   they are both output only fields on this resource.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Finding]{@link google.cloud.securitycenter.v1beta1.Finding}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.create_finding.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_CreateFinding_async
   */
  createFinding(
    request?: protos.google.cloud.securitycenter.v1beta1.ICreateFindingRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      (
        | protos.google.cloud.securitycenter.v1beta1.ICreateFindingRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  createFinding(
    request: protos.google.cloud.securitycenter.v1beta1.ICreateFindingRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      | protos.google.cloud.securitycenter.v1beta1.ICreateFindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createFinding(
    request: protos.google.cloud.securitycenter.v1beta1.ICreateFindingRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      | protos.google.cloud.securitycenter.v1beta1.ICreateFindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  createFinding(
    request?: protos.google.cloud.securitycenter.v1beta1.ICreateFindingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v1beta1.IFinding,
          | protos.google.cloud.securitycenter.v1beta1.ICreateFindingRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      | protos.google.cloud.securitycenter.v1beta1.ICreateFindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      (
        | protos.google.cloud.securitycenter.v1beta1.ICreateFindingRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.createFinding(request, options, callback);
  }
  /**
   * Gets the access control policy on the specified Source.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {google.iam.v1.GetPolicyOptions} request.options
   *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
   *   `GetIamPolicy`.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.get_iam_policy.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_GetIamPolicy_async
   */
  getIamPolicy(
    request?: protos.google.iam.v1.IGetIamPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | undefined,
      {} | undefined
    ]
  >;
  getIamPolicy(
    request: protos.google.iam.v1.IGetIamPolicyRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getIamPolicy(
    request: protos.google.iam.v1.IGetIamPolicyRequest,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  getIamPolicy(
    request?: protos.google.iam.v1.IGetIamPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.IGetIamPolicyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getIamPolicy(request, options, callback);
  }
  /**
   * Gets the settings for an organization.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Name of the organization to get organization settings for. Its format is
   *   "organizations/[organization_id]/organizationSettings".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [OrganizationSettings]{@link google.cloud.securitycenter.v1beta1.OrganizationSettings}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.get_organization_settings.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_GetOrganizationSettings_async
   */
  getOrganizationSettings(
    request?: protos.google.cloud.securitycenter.v1beta1.IGetOrganizationSettingsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IOrganizationSettings,
      (
        | protos.google.cloud.securitycenter.v1beta1.IGetOrganizationSettingsRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  getOrganizationSettings(
    request: protos.google.cloud.securitycenter.v1beta1.IGetOrganizationSettingsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.IOrganizationSettings,
      | protos.google.cloud.securitycenter.v1beta1.IGetOrganizationSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getOrganizationSettings(
    request: protos.google.cloud.securitycenter.v1beta1.IGetOrganizationSettingsRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.IOrganizationSettings,
      | protos.google.cloud.securitycenter.v1beta1.IGetOrganizationSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getOrganizationSettings(
    request?: protos.google.cloud.securitycenter.v1beta1.IGetOrganizationSettingsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v1beta1.IOrganizationSettings,
          | protos.google.cloud.securitycenter.v1beta1.IGetOrganizationSettingsRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v1beta1.IOrganizationSettings,
      | protos.google.cloud.securitycenter.v1beta1.IGetOrganizationSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IOrganizationSettings,
      (
        | protos.google.cloud.securitycenter.v1beta1.IGetOrganizationSettingsRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getOrganizationSettings(
      request,
      options,
      callback
    );
  }
  /**
   * Gets a source.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. Relative resource name of the source. Its format is
   *   "organizations/[organization_id]/source/[source_id]".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Source]{@link google.cloud.securitycenter.v1beta1.Source}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.get_source.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_GetSource_async
   */
  getSource(
    request?: protos.google.cloud.securitycenter.v1beta1.IGetSourceRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.ISource,
      protos.google.cloud.securitycenter.v1beta1.IGetSourceRequest | undefined,
      {} | undefined
    ]
  >;
  getSource(
    request: protos.google.cloud.securitycenter.v1beta1.IGetSourceRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.ISource,
      | protos.google.cloud.securitycenter.v1beta1.IGetSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getSource(
    request: protos.google.cloud.securitycenter.v1beta1.IGetSourceRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.ISource,
      | protos.google.cloud.securitycenter.v1beta1.IGetSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  getSource(
    request?: protos.google.cloud.securitycenter.v1beta1.IGetSourceRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v1beta1.ISource,
          | protos.google.cloud.securitycenter.v1beta1.IGetSourceRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v1beta1.ISource,
      | protos.google.cloud.securitycenter.v1beta1.IGetSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.ISource,
      protos.google.cloud.securitycenter.v1beta1.IGetSourceRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.getSource(request, options, callback);
  }
  /**
   * Updates the state of a finding.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Required. The relative resource name of the finding. See:
   *   https://cloud.google.com/apis/design/resource_names#relative_resource_name
   *   Example:
   *   "organizations/{organization_id}/sources/{source_id}/finding/{finding_id}".
   * @param {google.cloud.securitycenter.v1beta1.Finding.State} request.state
   *   Required. The desired State of the finding.
   * @param {google.protobuf.Timestamp} request.startTime
   *   Required. The time at which the updated state takes effect.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Finding]{@link google.cloud.securitycenter.v1beta1.Finding}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.set_finding_state.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_SetFindingState_async
   */
  setFindingState(
    request?: protos.google.cloud.securitycenter.v1beta1.ISetFindingStateRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      (
        | protos.google.cloud.securitycenter.v1beta1.ISetFindingStateRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  setFindingState(
    request: protos.google.cloud.securitycenter.v1beta1.ISetFindingStateRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      | protos.google.cloud.securitycenter.v1beta1.ISetFindingStateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  setFindingState(
    request: protos.google.cloud.securitycenter.v1beta1.ISetFindingStateRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      | protos.google.cloud.securitycenter.v1beta1.ISetFindingStateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  setFindingState(
    request?: protos.google.cloud.securitycenter.v1beta1.ISetFindingStateRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v1beta1.IFinding,
          | protos.google.cloud.securitycenter.v1beta1.ISetFindingStateRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      | protos.google.cloud.securitycenter.v1beta1.ISetFindingStateRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      (
        | protos.google.cloud.securitycenter.v1beta1.ISetFindingStateRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        name: request.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.setFindingState(request, options, callback);
  }
  /**
   * Sets the access control policy on the specified Source.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy is being specified.
   *   See the operation documentation for the appropriate value for this field.
   * @param {google.iam.v1.Policy} request.policy
   *   REQUIRED: The complete policy to be applied to the `resource`. The size of
   *   the policy is limited to a few 10s of KB. An empty policy is a
   *   valid policy but certain Cloud Platform services (such as Projects)
   *   might reject them.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
   *   the fields in the mask will be modified. If no mask is provided, the
   *   following default mask is used:
   *
   *   `paths: "bindings, etag"`
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.set_iam_policy.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_SetIamPolicy_async
   */
  setIamPolicy(
    request?: protos.google.iam.v1.ISetIamPolicyRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | undefined,
      {} | undefined
    ]
  >;
  setIamPolicy(
    request: protos.google.iam.v1.ISetIamPolicyRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  setIamPolicy(
    request: protos.google.iam.v1.ISetIamPolicyRequest,
    callback: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  setIamPolicy(
    request?: protos.google.iam.v1.ISetIamPolicyRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.IPolicy,
          protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.IPolicy,
      protos.google.iam.v1.ISetIamPolicyRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.setIamPolicy(request, options, callback);
  }
  /**
   * Returns the permissions that a caller has on the specified source.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.resource
   *   REQUIRED: The resource for which the policy detail is being requested.
   *   See the operation documentation for the appropriate value for this field.
   * @param {string[]} request.permissions
   *   The set of permissions to check for the `resource`. Permissions with
   *   wildcards (such as '*' or 'storage.*') are not allowed. For more
   *   information see
   *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.test_iam_permissions.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_TestIamPermissions_async
   */
  testIamPermissions(
    request?: protos.google.iam.v1.ITestIamPermissionsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | undefined,
      {} | undefined
    ]
  >;
  testIamPermissions(
    request: protos.google.iam.v1.ITestIamPermissionsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  testIamPermissions(
    request: protos.google.iam.v1.ITestIamPermissionsRequest,
    callback: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): void;
  testIamPermissions(
    request?: protos.google.iam.v1.ITestIamPermissionsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.iam.v1.ITestIamPermissionsResponse,
          protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.iam.v1.ITestIamPermissionsResponse,
      protos.google.iam.v1.ITestIamPermissionsRequest | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        resource: request.resource ?? '',
      });
    this.initialize();
    return this.innerApiCalls.testIamPermissions(request, options, callback);
  }
  /**
   * Creates or updates a finding. The corresponding source must exist for a
   * finding creation to succeed.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.securitycenter.v1beta1.Finding} request.finding
   *   Required. The finding resource to update or create if it does not already exist.
   *   parent, security_marks, and update_time will be ignored.
   *
   *   In the case of creation, the finding id portion of the name must
   *   alphanumeric and less than or equal to 32 characters and greater than 0
   *   characters in length.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The FieldMask to use when updating the finding resource. This field should
   *   not be specified when creating a finding.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Finding]{@link google.cloud.securitycenter.v1beta1.Finding}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.update_finding.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_UpdateFinding_async
   */
  updateFinding(
    request?: protos.google.cloud.securitycenter.v1beta1.IUpdateFindingRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      (
        | protos.google.cloud.securitycenter.v1beta1.IUpdateFindingRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateFinding(
    request: protos.google.cloud.securitycenter.v1beta1.IUpdateFindingRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      | protos.google.cloud.securitycenter.v1beta1.IUpdateFindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateFinding(
    request: protos.google.cloud.securitycenter.v1beta1.IUpdateFindingRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      | protos.google.cloud.securitycenter.v1beta1.IUpdateFindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateFinding(
    request?: protos.google.cloud.securitycenter.v1beta1.IUpdateFindingRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v1beta1.IFinding,
          | protos.google.cloud.securitycenter.v1beta1.IUpdateFindingRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      | protos.google.cloud.securitycenter.v1beta1.IUpdateFindingRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IFinding,
      (
        | protos.google.cloud.securitycenter.v1beta1.IUpdateFindingRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'finding.name': request.finding!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateFinding(request, options, callback);
  }
  /**
   * Updates an organization's settings.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.securitycenter.v1beta1.OrganizationSettings} request.organizationSettings
   *   Required. The organization settings resource to update.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The FieldMask to use when updating the settings resource.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [OrganizationSettings]{@link google.cloud.securitycenter.v1beta1.OrganizationSettings}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.update_organization_settings.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_UpdateOrganizationSettings_async
   */
  updateOrganizationSettings(
    request?: protos.google.cloud.securitycenter.v1beta1.IUpdateOrganizationSettingsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IOrganizationSettings,
      (
        | protos.google.cloud.securitycenter.v1beta1.IUpdateOrganizationSettingsRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateOrganizationSettings(
    request: protos.google.cloud.securitycenter.v1beta1.IUpdateOrganizationSettingsRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.IOrganizationSettings,
      | protos.google.cloud.securitycenter.v1beta1.IUpdateOrganizationSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateOrganizationSettings(
    request: protos.google.cloud.securitycenter.v1beta1.IUpdateOrganizationSettingsRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.IOrganizationSettings,
      | protos.google.cloud.securitycenter.v1beta1.IUpdateOrganizationSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateOrganizationSettings(
    request?: protos.google.cloud.securitycenter.v1beta1.IUpdateOrganizationSettingsRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v1beta1.IOrganizationSettings,
          | protos.google.cloud.securitycenter.v1beta1.IUpdateOrganizationSettingsRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v1beta1.IOrganizationSettings,
      | protos.google.cloud.securitycenter.v1beta1.IUpdateOrganizationSettingsRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IOrganizationSettings,
      (
        | protos.google.cloud.securitycenter.v1beta1.IUpdateOrganizationSettingsRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'organization_settings.name': request.organizationSettings!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateOrganizationSettings(
      request,
      options,
      callback
    );
  }
  /**
   * Updates a source.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.securitycenter.v1beta1.Source} request.source
   *   Required. The source resource to update.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The FieldMask to use when updating the source resource.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Source]{@link google.cloud.securitycenter.v1beta1.Source}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.update_source.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_UpdateSource_async
   */
  updateSource(
    request?: protos.google.cloud.securitycenter.v1beta1.IUpdateSourceRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.ISource,
      (
        | protos.google.cloud.securitycenter.v1beta1.IUpdateSourceRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateSource(
    request: protos.google.cloud.securitycenter.v1beta1.IUpdateSourceRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.ISource,
      | protos.google.cloud.securitycenter.v1beta1.IUpdateSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateSource(
    request: protos.google.cloud.securitycenter.v1beta1.IUpdateSourceRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.ISource,
      | protos.google.cloud.securitycenter.v1beta1.IUpdateSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateSource(
    request?: protos.google.cloud.securitycenter.v1beta1.IUpdateSourceRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v1beta1.ISource,
          | protos.google.cloud.securitycenter.v1beta1.IUpdateSourceRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v1beta1.ISource,
      | protos.google.cloud.securitycenter.v1beta1.IUpdateSourceRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.ISource,
      (
        | protos.google.cloud.securitycenter.v1beta1.IUpdateSourceRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'source.name': request.source!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateSource(request, options, callback);
  }
  /**
   * Updates security marks.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {google.cloud.securitycenter.v1beta1.SecurityMarks} request.securityMarks
   *   Required. The security marks resource to update.
   * @param {google.protobuf.FieldMask} request.updateMask
   *   The FieldMask to use when updating the security marks resource.
   * @param {google.protobuf.Timestamp} request.startTime
   *   The time at which the updated SecurityMarks take effect.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [SecurityMarks]{@link google.cloud.securitycenter.v1beta1.SecurityMarks}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.update_security_marks.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_UpdateSecurityMarks_async
   */
  updateSecurityMarks(
    request?: protos.google.cloud.securitycenter.v1beta1.IUpdateSecurityMarksRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.ISecurityMarks,
      (
        | protos.google.cloud.securitycenter.v1beta1.IUpdateSecurityMarksRequest
        | undefined
      ),
      {} | undefined
    ]
  >;
  updateSecurityMarks(
    request: protos.google.cloud.securitycenter.v1beta1.IUpdateSecurityMarksRequest,
    options: CallOptions,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.ISecurityMarks,
      | protos.google.cloud.securitycenter.v1beta1.IUpdateSecurityMarksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateSecurityMarks(
    request: protos.google.cloud.securitycenter.v1beta1.IUpdateSecurityMarksRequest,
    callback: Callback<
      protos.google.cloud.securitycenter.v1beta1.ISecurityMarks,
      | protos.google.cloud.securitycenter.v1beta1.IUpdateSecurityMarksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): void;
  updateSecurityMarks(
    request?: protos.google.cloud.securitycenter.v1beta1.IUpdateSecurityMarksRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          protos.google.cloud.securitycenter.v1beta1.ISecurityMarks,
          | protos.google.cloud.securitycenter.v1beta1.IUpdateSecurityMarksRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.cloud.securitycenter.v1beta1.ISecurityMarks,
      | protos.google.cloud.securitycenter.v1beta1.IUpdateSecurityMarksRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.ISecurityMarks,
      (
        | protos.google.cloud.securitycenter.v1beta1.IUpdateSecurityMarksRequest
        | undefined
      ),
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        'security_marks.name': request.securityMarks!.name ?? '',
      });
    this.initialize();
    return this.innerApiCalls.updateSecurityMarks(request, options, callback);
  }

  /**
   * Runs asset discovery. The discovery is tracked with a long-running
   * operation.
   *
   * This API can only be called with limited frequency for an organization. If
   * it is called too frequently the caller will receive a TOO_MANY_REQUESTS
   * error.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the organization to run asset discovery for. Its format is
   *   "organizations/[organization_id]".
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   *   a long running operation. Its `promise()` method returns a promise
   *   you can `await` for.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.run_asset_discovery.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_RunAssetDiscovery_async
   */
  runAssetDiscovery(
    request?: protos.google.cloud.securitycenter.v1beta1.IRunAssetDiscoveryRequest,
    options?: CallOptions
  ): Promise<
    [
      LROperation<protos.google.protobuf.IEmpty, protos.google.protobuf.IEmpty>,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  >;
  runAssetDiscovery(
    request: protos.google.cloud.securitycenter.v1beta1.IRunAssetDiscoveryRequest,
    options: CallOptions,
    callback: Callback<
      LROperation<protos.google.protobuf.IEmpty, protos.google.protobuf.IEmpty>,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  runAssetDiscovery(
    request: protos.google.cloud.securitycenter.v1beta1.IRunAssetDiscoveryRequest,
    callback: Callback<
      LROperation<protos.google.protobuf.IEmpty, protos.google.protobuf.IEmpty>,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): void;
  runAssetDiscovery(
    request?: protos.google.cloud.securitycenter.v1beta1.IRunAssetDiscoveryRequest,
    optionsOrCallback?:
      | CallOptions
      | Callback<
          LROperation<
            protos.google.protobuf.IEmpty,
            protos.google.protobuf.IEmpty
          >,
          protos.google.longrunning.IOperation | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LROperation<protos.google.protobuf.IEmpty, protos.google.protobuf.IEmpty>,
      protos.google.longrunning.IOperation | null | undefined,
      {} | null | undefined
    >
  ): Promise<
    [
      LROperation<protos.google.protobuf.IEmpty, protos.google.protobuf.IEmpty>,
      protos.google.longrunning.IOperation | undefined,
      {} | undefined
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.runAssetDiscovery(request, options, callback);
  }
  /**
   * Check the status of the long running operation returned by `runAssetDiscovery()`.
   * @param {String} name
   *   The operation name that will be passed.
   * @returns {Promise} - The promise which resolves to an object.
   *   The decoded operation object has result and metadata field to get information from.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.run_asset_discovery.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_RunAssetDiscovery_async
   */
  async checkRunAssetDiscoveryProgress(
    name: string
  ): Promise<
    LROperation<protos.google.protobuf.Empty, protos.google.protobuf.Empty>
  > {
    const request =
      new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest(
        {name}
      );
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(
      operation,
      this.descriptors.longrunning.runAssetDiscovery,
      this._gaxModule.createDefaultBackoffSettings()
    );
    return decodeOperation as LROperation<
      protos.google.protobuf.Empty,
      protos.google.protobuf.Empty
    >;
  }
  /**
   * Filters an organization's assets and  groups them by their specified
   * properties.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the organization to groupBy. Its format is
   *   "organizations/[organization_id]".
   * @param {string} request.filter
   *   Expression that defines the filter to apply across assets.
   *   The expression is a list of zero or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are not supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. The fields map to those
   *   defined in the Asset resource. Examples include:
   *
   *   * name
   *   * security_center_properties.resource_name
   *   * resource_properties.a_property
   *   * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   For example, `resource_properties.size = 100` is a valid filter string.
   * @param {string} request.groupBy
   *   Required. Expression that defines what assets fields to use for grouping. The string
   *   value should follow SQL syntax: comma separated list of fields. For
   *   example:
   *   "security_center_properties.resource_project,security_center_properties.project".
   *
   *   The following fields are supported when compare_duration is not set:
   *
   *   * security_center_properties.resource_project
   *   * security_center_properties.resource_type
   *   * security_center_properties.resource_parent
   *
   *   The following fields are supported when compare_duration is set:
   *
   *   * security_center_properties.resource_type
   * @param {google.protobuf.Duration} request.compareDuration
   *   When compare_duration is set, the Asset's "state" property is updated to
   *   indicate whether the asset was added, removed, or remained present during
   *   the compare_duration period of time that precedes the read_time. This is
   *   the time between (read_time - compare_duration) and read_time.
   *
   *   The state value is derived based on the presence of the asset at the two
   *   points in time. Intermediate state changes between the two times don't
   *   affect the result. For example, the results aren't affected if the asset is
   *   removed and re-created again.
   *
   *   Possible "state" values when compare_duration is specified:
   *
   *   * "ADDED": indicates that the asset was not present before
   *                compare_duration, but present at reference_time.
   *   * "REMOVED": indicates that the asset was present at the start of
   *                compare_duration, but not present at reference_time.
   *   * "ACTIVE": indicates that the asset was present at both the
   *                start and the end of the time period defined by
   *                compare_duration and reference_time.
   *
   *   This field is ignored if `state` is not a field in `group_by`.
   * @param {google.protobuf.Timestamp} request.readTime
   *   Time used as a reference point when filtering assets. The filter is limited
   *   to assets existing at the supplied time and their values are those at that
   *   specific time. Absence of this field will default to the API's version of
   *   NOW.
   * @param {string} request.pageToken
   *   The value returned by the last `GroupAssetsResponse`; indicates
   *   that this is a continuation of a prior `GroupAssets` call, and that the
   *   system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [GroupResult]{@link google.cloud.securitycenter.v1beta1.GroupResult}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `groupAssetsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  groupAssets(
    request?: protos.google.cloud.securitycenter.v1beta1.IGroupAssetsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IGroupResult[],
      protos.google.cloud.securitycenter.v1beta1.IGroupAssetsRequest | null,
      protos.google.cloud.securitycenter.v1beta1.IGroupAssetsResponse
    ]
  >;
  groupAssets(
    request: protos.google.cloud.securitycenter.v1beta1.IGroupAssetsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IGroupAssetsRequest,
      | protos.google.cloud.securitycenter.v1beta1.IGroupAssetsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.IGroupResult
    >
  ): void;
  groupAssets(
    request: protos.google.cloud.securitycenter.v1beta1.IGroupAssetsRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IGroupAssetsRequest,
      | protos.google.cloud.securitycenter.v1beta1.IGroupAssetsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.IGroupResult
    >
  ): void;
  groupAssets(
    request?: protos.google.cloud.securitycenter.v1beta1.IGroupAssetsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v1beta1.IGroupAssetsRequest,
          | protos.google.cloud.securitycenter.v1beta1.IGroupAssetsResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v1beta1.IGroupResult
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IGroupAssetsRequest,
      | protos.google.cloud.securitycenter.v1beta1.IGroupAssetsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.IGroupResult
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IGroupResult[],
      protos.google.cloud.securitycenter.v1beta1.IGroupAssetsRequest | null,
      protos.google.cloud.securitycenter.v1beta1.IGroupAssetsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.groupAssets(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the organization to groupBy. Its format is
   *   "organizations/[organization_id]".
   * @param {string} request.filter
   *   Expression that defines the filter to apply across assets.
   *   The expression is a list of zero or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are not supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. The fields map to those
   *   defined in the Asset resource. Examples include:
   *
   *   * name
   *   * security_center_properties.resource_name
   *   * resource_properties.a_property
   *   * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   For example, `resource_properties.size = 100` is a valid filter string.
   * @param {string} request.groupBy
   *   Required. Expression that defines what assets fields to use for grouping. The string
   *   value should follow SQL syntax: comma separated list of fields. For
   *   example:
   *   "security_center_properties.resource_project,security_center_properties.project".
   *
   *   The following fields are supported when compare_duration is not set:
   *
   *   * security_center_properties.resource_project
   *   * security_center_properties.resource_type
   *   * security_center_properties.resource_parent
   *
   *   The following fields are supported when compare_duration is set:
   *
   *   * security_center_properties.resource_type
   * @param {google.protobuf.Duration} request.compareDuration
   *   When compare_duration is set, the Asset's "state" property is updated to
   *   indicate whether the asset was added, removed, or remained present during
   *   the compare_duration period of time that precedes the read_time. This is
   *   the time between (read_time - compare_duration) and read_time.
   *
   *   The state value is derived based on the presence of the asset at the two
   *   points in time. Intermediate state changes between the two times don't
   *   affect the result. For example, the results aren't affected if the asset is
   *   removed and re-created again.
   *
   *   Possible "state" values when compare_duration is specified:
   *
   *   * "ADDED": indicates that the asset was not present before
   *                compare_duration, but present at reference_time.
   *   * "REMOVED": indicates that the asset was present at the start of
   *                compare_duration, but not present at reference_time.
   *   * "ACTIVE": indicates that the asset was present at both the
   *                start and the end of the time period defined by
   *                compare_duration and reference_time.
   *
   *   This field is ignored if `state` is not a field in `group_by`.
   * @param {google.protobuf.Timestamp} request.readTime
   *   Time used as a reference point when filtering assets. The filter is limited
   *   to assets existing at the supplied time and their values are those at that
   *   specific time. Absence of this field will default to the API's version of
   *   NOW.
   * @param {string} request.pageToken
   *   The value returned by the last `GroupAssetsResponse`; indicates
   *   that this is a continuation of a prior `GroupAssets` call, and that the
   *   system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [GroupResult]{@link google.cloud.securitycenter.v1beta1.GroupResult} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `groupAssetsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  groupAssetsStream(
    request?: protos.google.cloud.securitycenter.v1beta1.IGroupAssetsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['groupAssets'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.groupAssets.createStream(
      this.innerApiCalls.groupAssets as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `groupAssets`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the organization to groupBy. Its format is
   *   "organizations/[organization_id]".
   * @param {string} request.filter
   *   Expression that defines the filter to apply across assets.
   *   The expression is a list of zero or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are not supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. The fields map to those
   *   defined in the Asset resource. Examples include:
   *
   *   * name
   *   * security_center_properties.resource_name
   *   * resource_properties.a_property
   *   * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   For example, `resource_properties.size = 100` is a valid filter string.
   * @param {string} request.groupBy
   *   Required. Expression that defines what assets fields to use for grouping. The string
   *   value should follow SQL syntax: comma separated list of fields. For
   *   example:
   *   "security_center_properties.resource_project,security_center_properties.project".
   *
   *   The following fields are supported when compare_duration is not set:
   *
   *   * security_center_properties.resource_project
   *   * security_center_properties.resource_type
   *   * security_center_properties.resource_parent
   *
   *   The following fields are supported when compare_duration is set:
   *
   *   * security_center_properties.resource_type
   * @param {google.protobuf.Duration} request.compareDuration
   *   When compare_duration is set, the Asset's "state" property is updated to
   *   indicate whether the asset was added, removed, or remained present during
   *   the compare_duration period of time that precedes the read_time. This is
   *   the time between (read_time - compare_duration) and read_time.
   *
   *   The state value is derived based on the presence of the asset at the two
   *   points in time. Intermediate state changes between the two times don't
   *   affect the result. For example, the results aren't affected if the asset is
   *   removed and re-created again.
   *
   *   Possible "state" values when compare_duration is specified:
   *
   *   * "ADDED": indicates that the asset was not present before
   *                compare_duration, but present at reference_time.
   *   * "REMOVED": indicates that the asset was present at the start of
   *                compare_duration, but not present at reference_time.
   *   * "ACTIVE": indicates that the asset was present at both the
   *                start and the end of the time period defined by
   *                compare_duration and reference_time.
   *
   *   This field is ignored if `state` is not a field in `group_by`.
   * @param {google.protobuf.Timestamp} request.readTime
   *   Time used as a reference point when filtering assets. The filter is limited
   *   to assets existing at the supplied time and their values are those at that
   *   specific time. Absence of this field will default to the API's version of
   *   NOW.
   * @param {string} request.pageToken
   *   The value returned by the last `GroupAssetsResponse`; indicates
   *   that this is a continuation of a prior `GroupAssets` call, and that the
   *   system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [GroupResult]{@link google.cloud.securitycenter.v1beta1.GroupResult}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.group_assets.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_GroupAssets_async
   */
  groupAssetsAsync(
    request?: protos.google.cloud.securitycenter.v1beta1.IGroupAssetsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v1beta1.IGroupResult> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['groupAssets'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.groupAssets.asyncIterate(
      this.innerApiCalls['groupAssets'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v1beta1.IGroupResult>;
  }
  /**
   * Filters an organization or source's findings and  groups them by their
   * specified properties.
   *
   * To group across all sources provide a `-` as the source id.
   * Example: /v1beta1/organizations/{organization_id}/sources/-/findings
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the source to groupBy. Its format is
   *   "organizations/[organization_id]/sources/[source_id]". To groupBy across
   *   all sources provide a source_id of `-`. For example:
   *   organizations/{organization_id}/sources/-
   * @param {string} request.filter
   *   Expression that defines the filter to apply across findings.
   *   The expression is a list of one or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are not supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. Examples include:
   *
   *    * name
   *    * source_properties.a_property
   *    * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   For example, `source_properties.size = 100` is a valid filter string.
   * @param {string} request.groupBy
   *   Required. Expression that defines what assets fields to use for grouping (including
   *   `state`). The string value should follow SQL syntax: comma separated list
   *   of fields. For example:
   *   "parent,resource_name".
   *
   *   The following fields are supported:
   *
   *   * resource_name
   *   * category
   *   * state
   *   * parent
   * @param {google.protobuf.Timestamp} request.readTime
   *   Time used as a reference point when filtering findings. The filter is
   *   limited to findings existing at the supplied time and their values are
   *   those at that specific time. Absence of this field will default to the
   *   API's version of NOW.
   * @param {string} request.pageToken
   *   The value returned by the last `GroupFindingsResponse`; indicates
   *   that this is a continuation of a prior `GroupFindings` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [GroupResult]{@link google.cloud.securitycenter.v1beta1.GroupResult}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `groupFindingsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  groupFindings(
    request?: protos.google.cloud.securitycenter.v1beta1.IGroupFindingsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IGroupResult[],
      protos.google.cloud.securitycenter.v1beta1.IGroupFindingsRequest | null,
      protos.google.cloud.securitycenter.v1beta1.IGroupFindingsResponse
    ]
  >;
  groupFindings(
    request: protos.google.cloud.securitycenter.v1beta1.IGroupFindingsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IGroupFindingsRequest,
      | protos.google.cloud.securitycenter.v1beta1.IGroupFindingsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.IGroupResult
    >
  ): void;
  groupFindings(
    request: protos.google.cloud.securitycenter.v1beta1.IGroupFindingsRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IGroupFindingsRequest,
      | protos.google.cloud.securitycenter.v1beta1.IGroupFindingsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.IGroupResult
    >
  ): void;
  groupFindings(
    request?: protos.google.cloud.securitycenter.v1beta1.IGroupFindingsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v1beta1.IGroupFindingsRequest,
          | protos.google.cloud.securitycenter.v1beta1.IGroupFindingsResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v1beta1.IGroupResult
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IGroupFindingsRequest,
      | protos.google.cloud.securitycenter.v1beta1.IGroupFindingsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.IGroupResult
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IGroupResult[],
      protos.google.cloud.securitycenter.v1beta1.IGroupFindingsRequest | null,
      protos.google.cloud.securitycenter.v1beta1.IGroupFindingsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.groupFindings(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the source to groupBy. Its format is
   *   "organizations/[organization_id]/sources/[source_id]". To groupBy across
   *   all sources provide a source_id of `-`. For example:
   *   organizations/{organization_id}/sources/-
   * @param {string} request.filter
   *   Expression that defines the filter to apply across findings.
   *   The expression is a list of one or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are not supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. Examples include:
   *
   *    * name
   *    * source_properties.a_property
   *    * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   For example, `source_properties.size = 100` is a valid filter string.
   * @param {string} request.groupBy
   *   Required. Expression that defines what assets fields to use for grouping (including
   *   `state`). The string value should follow SQL syntax: comma separated list
   *   of fields. For example:
   *   "parent,resource_name".
   *
   *   The following fields are supported:
   *
   *   * resource_name
   *   * category
   *   * state
   *   * parent
   * @param {google.protobuf.Timestamp} request.readTime
   *   Time used as a reference point when filtering findings. The filter is
   *   limited to findings existing at the supplied time and their values are
   *   those at that specific time. Absence of this field will default to the
   *   API's version of NOW.
   * @param {string} request.pageToken
   *   The value returned by the last `GroupFindingsResponse`; indicates
   *   that this is a continuation of a prior `GroupFindings` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [GroupResult]{@link google.cloud.securitycenter.v1beta1.GroupResult} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `groupFindingsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  groupFindingsStream(
    request?: protos.google.cloud.securitycenter.v1beta1.IGroupFindingsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['groupFindings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.groupFindings.createStream(
      this.innerApiCalls.groupFindings as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `groupFindings`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the source to groupBy. Its format is
   *   "organizations/[organization_id]/sources/[source_id]". To groupBy across
   *   all sources provide a source_id of `-`. For example:
   *   organizations/{organization_id}/sources/-
   * @param {string} request.filter
   *   Expression that defines the filter to apply across findings.
   *   The expression is a list of one or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are not supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. Examples include:
   *
   *    * name
   *    * source_properties.a_property
   *    * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   For example, `source_properties.size = 100` is a valid filter string.
   * @param {string} request.groupBy
   *   Required. Expression that defines what assets fields to use for grouping (including
   *   `state`). The string value should follow SQL syntax: comma separated list
   *   of fields. For example:
   *   "parent,resource_name".
   *
   *   The following fields are supported:
   *
   *   * resource_name
   *   * category
   *   * state
   *   * parent
   * @param {google.protobuf.Timestamp} request.readTime
   *   Time used as a reference point when filtering findings. The filter is
   *   limited to findings existing at the supplied time and their values are
   *   those at that specific time. Absence of this field will default to the
   *   API's version of NOW.
   * @param {string} request.pageToken
   *   The value returned by the last `GroupFindingsResponse`; indicates
   *   that this is a continuation of a prior `GroupFindings` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [GroupResult]{@link google.cloud.securitycenter.v1beta1.GroupResult}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.group_findings.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_GroupFindings_async
   */
  groupFindingsAsync(
    request?: protos.google.cloud.securitycenter.v1beta1.IGroupFindingsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v1beta1.IGroupResult> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['groupFindings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.groupFindings.asyncIterate(
      this.innerApiCalls['groupFindings'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v1beta1.IGroupResult>;
  }
  /**
   * Lists an organization's assets.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the organization assets should belong to. Its format is
   *   "organizations/[organization_id]".
   * @param {string} request.filter
   *   Expression that defines the filter to apply across assets.
   *   The expression is a list of zero or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are not supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. The fields map to those
   *   defined in the Asset resource. Examples include:
   *
   *   * name
   *   * security_center_properties.resource_name
   *   * resource_properties.a_property
   *   * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   For example, `resource_properties.size = 100` is a valid filter string.
   * @param {string} request.orderBy
   *   Expression that defines what fields and order to use for sorting. The
   *   string value should follow SQL syntax: comma separated list of fields. For
   *   example: "name,resource_properties.a_property". The default sorting order
   *   is ascending. To specify descending order for a field, a suffix " desc"
   *   should be appended to the field name. For example: "name
   *   desc,resource_properties.a_property". Redundant space characters in the
   *   syntax are insignificant. "name desc,resource_properties.a_property" and "
   *   name     desc  ,   resource_properties.a_property  " are equivalent.
   * @param {google.protobuf.Timestamp} request.readTime
   *   Time used as a reference point when filtering assets. The filter is limited
   *   to assets existing at the supplied time and their values are those at that
   *   specific time. Absence of this field will default to the API's version of
   *   NOW.
   * @param {google.protobuf.Duration} request.compareDuration
   *   When compare_duration is set, the ListAssetResult's "state" attribute is
   *   updated to indicate whether the asset was added, removed, or remained
   *   present during the compare_duration period of time that precedes the
   *   read_time. This is the time between (read_time -
   *   compare_duration) and read_time.
   *
   *   The state value is derived based on the presence of the asset at the two
   *   points in time. Intermediate state changes between the two times don't
   *   affect the result. For example, the results aren't affected if the asset is
   *   removed and re-created again.
   *
   *   Possible "state" values when compare_duration is specified:
   *
   *   * "ADDED": indicates that the asset was not present before
   *                compare_duration, but present at read_time.
   *   * "REMOVED": indicates that the asset was present at the start of
   *                compare_duration, but not present at read_time.
   *   * "ACTIVE": indicates that the asset was present at both the
   *                start and the end of the time period defined by
   *                compare_duration and read_time.
   *
   *   If compare_duration is not specified, then the only possible state is
   *   "UNUSED", which indicates that the asset is present at read_time.
   * @param {google.protobuf.FieldMask} [request.fieldMask]
   *   Optional. A field mask to specify the ListAssetsResult fields to be listed in the
   *   response.
   *   An empty field mask will list all fields.
   * @param {string} request.pageToken
   *   The value returned by the last `ListAssetsResponse`; indicates
   *   that this is a continuation of a prior `ListAssets` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [ListAssetsResult]{@link google.cloud.securitycenter.v1beta1.ListAssetsResponse.ListAssetsResult}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listAssetsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listAssets(
    request?: protos.google.cloud.securitycenter.v1beta1.IListAssetsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.ListAssetsResponse.IListAssetsResult[],
      protos.google.cloud.securitycenter.v1beta1.IListAssetsRequest | null,
      protos.google.cloud.securitycenter.v1beta1.IListAssetsResponse
    ]
  >;
  listAssets(
    request: protos.google.cloud.securitycenter.v1beta1.IListAssetsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IListAssetsRequest,
      | protos.google.cloud.securitycenter.v1beta1.IListAssetsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.ListAssetsResponse.IListAssetsResult
    >
  ): void;
  listAssets(
    request: protos.google.cloud.securitycenter.v1beta1.IListAssetsRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IListAssetsRequest,
      | protos.google.cloud.securitycenter.v1beta1.IListAssetsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.ListAssetsResponse.IListAssetsResult
    >
  ): void;
  listAssets(
    request?: protos.google.cloud.securitycenter.v1beta1.IListAssetsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v1beta1.IListAssetsRequest,
          | protos.google.cloud.securitycenter.v1beta1.IListAssetsResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v1beta1.ListAssetsResponse.IListAssetsResult
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IListAssetsRequest,
      | protos.google.cloud.securitycenter.v1beta1.IListAssetsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.ListAssetsResponse.IListAssetsResult
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.ListAssetsResponse.IListAssetsResult[],
      protos.google.cloud.securitycenter.v1beta1.IListAssetsRequest | null,
      protos.google.cloud.securitycenter.v1beta1.IListAssetsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listAssets(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the organization assets should belong to. Its format is
   *   "organizations/[organization_id]".
   * @param {string} request.filter
   *   Expression that defines the filter to apply across assets.
   *   The expression is a list of zero or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are not supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. The fields map to those
   *   defined in the Asset resource. Examples include:
   *
   *   * name
   *   * security_center_properties.resource_name
   *   * resource_properties.a_property
   *   * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   For example, `resource_properties.size = 100` is a valid filter string.
   * @param {string} request.orderBy
   *   Expression that defines what fields and order to use for sorting. The
   *   string value should follow SQL syntax: comma separated list of fields. For
   *   example: "name,resource_properties.a_property". The default sorting order
   *   is ascending. To specify descending order for a field, a suffix " desc"
   *   should be appended to the field name. For example: "name
   *   desc,resource_properties.a_property". Redundant space characters in the
   *   syntax are insignificant. "name desc,resource_properties.a_property" and "
   *   name     desc  ,   resource_properties.a_property  " are equivalent.
   * @param {google.protobuf.Timestamp} request.readTime
   *   Time used as a reference point when filtering assets. The filter is limited
   *   to assets existing at the supplied time and their values are those at that
   *   specific time. Absence of this field will default to the API's version of
   *   NOW.
   * @param {google.protobuf.Duration} request.compareDuration
   *   When compare_duration is set, the ListAssetResult's "state" attribute is
   *   updated to indicate whether the asset was added, removed, or remained
   *   present during the compare_duration period of time that precedes the
   *   read_time. This is the time between (read_time -
   *   compare_duration) and read_time.
   *
   *   The state value is derived based on the presence of the asset at the two
   *   points in time. Intermediate state changes between the two times don't
   *   affect the result. For example, the results aren't affected if the asset is
   *   removed and re-created again.
   *
   *   Possible "state" values when compare_duration is specified:
   *
   *   * "ADDED": indicates that the asset was not present before
   *                compare_duration, but present at read_time.
   *   * "REMOVED": indicates that the asset was present at the start of
   *                compare_duration, but not present at read_time.
   *   * "ACTIVE": indicates that the asset was present at both the
   *                start and the end of the time period defined by
   *                compare_duration and read_time.
   *
   *   If compare_duration is not specified, then the only possible state is
   *   "UNUSED", which indicates that the asset is present at read_time.
   * @param {google.protobuf.FieldMask} [request.fieldMask]
   *   Optional. A field mask to specify the ListAssetsResult fields to be listed in the
   *   response.
   *   An empty field mask will list all fields.
   * @param {string} request.pageToken
   *   The value returned by the last `ListAssetsResponse`; indicates
   *   that this is a continuation of a prior `ListAssets` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [ListAssetsResult]{@link google.cloud.securitycenter.v1beta1.ListAssetsResponse.ListAssetsResult} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listAssetsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listAssetsStream(
    request?: protos.google.cloud.securitycenter.v1beta1.IListAssetsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listAssets'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listAssets.createStream(
      this.innerApiCalls.listAssets as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listAssets`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the organization assets should belong to. Its format is
   *   "organizations/[organization_id]".
   * @param {string} request.filter
   *   Expression that defines the filter to apply across assets.
   *   The expression is a list of zero or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are not supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. The fields map to those
   *   defined in the Asset resource. Examples include:
   *
   *   * name
   *   * security_center_properties.resource_name
   *   * resource_properties.a_property
   *   * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   For example, `resource_properties.size = 100` is a valid filter string.
   * @param {string} request.orderBy
   *   Expression that defines what fields and order to use for sorting. The
   *   string value should follow SQL syntax: comma separated list of fields. For
   *   example: "name,resource_properties.a_property". The default sorting order
   *   is ascending. To specify descending order for a field, a suffix " desc"
   *   should be appended to the field name. For example: "name
   *   desc,resource_properties.a_property". Redundant space characters in the
   *   syntax are insignificant. "name desc,resource_properties.a_property" and "
   *   name     desc  ,   resource_properties.a_property  " are equivalent.
   * @param {google.protobuf.Timestamp} request.readTime
   *   Time used as a reference point when filtering assets. The filter is limited
   *   to assets existing at the supplied time and their values are those at that
   *   specific time. Absence of this field will default to the API's version of
   *   NOW.
   * @param {google.protobuf.Duration} request.compareDuration
   *   When compare_duration is set, the ListAssetResult's "state" attribute is
   *   updated to indicate whether the asset was added, removed, or remained
   *   present during the compare_duration period of time that precedes the
   *   read_time. This is the time between (read_time -
   *   compare_duration) and read_time.
   *
   *   The state value is derived based on the presence of the asset at the two
   *   points in time. Intermediate state changes between the two times don't
   *   affect the result. For example, the results aren't affected if the asset is
   *   removed and re-created again.
   *
   *   Possible "state" values when compare_duration is specified:
   *
   *   * "ADDED": indicates that the asset was not present before
   *                compare_duration, but present at read_time.
   *   * "REMOVED": indicates that the asset was present at the start of
   *                compare_duration, but not present at read_time.
   *   * "ACTIVE": indicates that the asset was present at both the
   *                start and the end of the time period defined by
   *                compare_duration and read_time.
   *
   *   If compare_duration is not specified, then the only possible state is
   *   "UNUSED", which indicates that the asset is present at read_time.
   * @param {google.protobuf.FieldMask} [request.fieldMask]
   *   Optional. A field mask to specify the ListAssetsResult fields to be listed in the
   *   response.
   *   An empty field mask will list all fields.
   * @param {string} request.pageToken
   *   The value returned by the last `ListAssetsResponse`; indicates
   *   that this is a continuation of a prior `ListAssets` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [ListAssetsResult]{@link google.cloud.securitycenter.v1beta1.ListAssetsResponse.ListAssetsResult}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.list_assets.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_ListAssets_async
   */
  listAssetsAsync(
    request?: protos.google.cloud.securitycenter.v1beta1.IListAssetsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v1beta1.ListAssetsResponse.IListAssetsResult> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listAssets'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listAssets.asyncIterate(
      this.innerApiCalls['listAssets'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v1beta1.ListAssetsResponse.IListAssetsResult>;
  }
  /**
   * Lists an organization or source's findings.
   *
   * To list across all sources provide a `-` as the source id.
   * Example: /v1beta1/organizations/{organization_id}/sources/-/findings
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the source the findings belong to. Its format is
   *   "organizations/[organization_id]/sources/[source_id]". To list across all
   *   sources provide a source_id of `-`. For example:
   *   organizations/{organization_id}/sources/-
   * @param {string} request.filter
   *   Expression that defines the filter to apply across findings.
   *   The expression is a list of one or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are not supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. Examples include:
   *
   *    * name
   *    * source_properties.a_property
   *    * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   For example, `source_properties.size = 100` is a valid filter string.
   * @param {string} request.orderBy
   *   Expression that defines what fields and order to use for sorting. The
   *   string value should follow SQL syntax: comma separated list of fields. For
   *   example: "name,resource_properties.a_property". The default sorting order
   *   is ascending. To specify descending order for a field, a suffix " desc"
   *   should be appended to the field name. For example: "name
   *   desc,source_properties.a_property". Redundant space characters in the
   *   syntax are insignificant. "name desc,source_properties.a_property" and "
   *   name     desc  ,   source_properties.a_property  " are equivalent.
   * @param {google.protobuf.Timestamp} request.readTime
   *   Time used as a reference point when filtering findings. The filter is
   *   limited to findings existing at the supplied time and their values are
   *   those at that specific time. Absence of this field will default to the
   *   API's version of NOW.
   * @param {google.protobuf.FieldMask} [request.fieldMask]
   *   Optional. A field mask to specify the Finding fields to be listed in the response.
   *   An empty field mask will list all fields.
   * @param {string} request.pageToken
   *   The value returned by the last `ListFindingsResponse`; indicates
   *   that this is a continuation of a prior `ListFindings` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Finding]{@link google.cloud.securitycenter.v1beta1.Finding}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listFindingsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listFindings(
    request?: protos.google.cloud.securitycenter.v1beta1.IListFindingsRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IFinding[],
      protos.google.cloud.securitycenter.v1beta1.IListFindingsRequest | null,
      protos.google.cloud.securitycenter.v1beta1.IListFindingsResponse
    ]
  >;
  listFindings(
    request: protos.google.cloud.securitycenter.v1beta1.IListFindingsRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IListFindingsRequest,
      | protos.google.cloud.securitycenter.v1beta1.IListFindingsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.IFinding
    >
  ): void;
  listFindings(
    request: protos.google.cloud.securitycenter.v1beta1.IListFindingsRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IListFindingsRequest,
      | protos.google.cloud.securitycenter.v1beta1.IListFindingsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.IFinding
    >
  ): void;
  listFindings(
    request?: protos.google.cloud.securitycenter.v1beta1.IListFindingsRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v1beta1.IListFindingsRequest,
          | protos.google.cloud.securitycenter.v1beta1.IListFindingsResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v1beta1.IFinding
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IListFindingsRequest,
      | protos.google.cloud.securitycenter.v1beta1.IListFindingsResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.IFinding
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.IFinding[],
      protos.google.cloud.securitycenter.v1beta1.IListFindingsRequest | null,
      protos.google.cloud.securitycenter.v1beta1.IListFindingsResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listFindings(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the source the findings belong to. Its format is
   *   "organizations/[organization_id]/sources/[source_id]". To list across all
   *   sources provide a source_id of `-`. For example:
   *   organizations/{organization_id}/sources/-
   * @param {string} request.filter
   *   Expression that defines the filter to apply across findings.
   *   The expression is a list of one or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are not supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. Examples include:
   *
   *    * name
   *    * source_properties.a_property
   *    * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   For example, `source_properties.size = 100` is a valid filter string.
   * @param {string} request.orderBy
   *   Expression that defines what fields and order to use for sorting. The
   *   string value should follow SQL syntax: comma separated list of fields. For
   *   example: "name,resource_properties.a_property". The default sorting order
   *   is ascending. To specify descending order for a field, a suffix " desc"
   *   should be appended to the field name. For example: "name
   *   desc,source_properties.a_property". Redundant space characters in the
   *   syntax are insignificant. "name desc,source_properties.a_property" and "
   *   name     desc  ,   source_properties.a_property  " are equivalent.
   * @param {google.protobuf.Timestamp} request.readTime
   *   Time used as a reference point when filtering findings. The filter is
   *   limited to findings existing at the supplied time and their values are
   *   those at that specific time. Absence of this field will default to the
   *   API's version of NOW.
   * @param {google.protobuf.FieldMask} [request.fieldMask]
   *   Optional. A field mask to specify the Finding fields to be listed in the response.
   *   An empty field mask will list all fields.
   * @param {string} request.pageToken
   *   The value returned by the last `ListFindingsResponse`; indicates
   *   that this is a continuation of a prior `ListFindings` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Finding]{@link google.cloud.securitycenter.v1beta1.Finding} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listFindingsAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listFindingsStream(
    request?: protos.google.cloud.securitycenter.v1beta1.IListFindingsRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listFindings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listFindings.createStream(
      this.innerApiCalls.listFindings as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listFindings`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Name of the source the findings belong to. Its format is
   *   "organizations/[organization_id]/sources/[source_id]". To list across all
   *   sources provide a source_id of `-`. For example:
   *   organizations/{organization_id}/sources/-
   * @param {string} request.filter
   *   Expression that defines the filter to apply across findings.
   *   The expression is a list of one or more restrictions combined via logical
   *   operators `AND` and `OR`.
   *   Parentheses are not supported, and `OR` has higher precedence than `AND`.
   *
   *   Restrictions have the form `<field> <operator> <value>` and may have a `-`
   *   character in front of them to indicate negation. Examples include:
   *
   *    * name
   *    * source_properties.a_property
   *    * security_marks.marks.marka
   *
   *   The supported operators are:
   *
   *   * `=` for all value types.
   *   * `>`, `<`, `>=`, `<=` for integer values.
   *   * `:`, meaning substring matching, for strings.
   *
   *   The supported value types are:
   *
   *   * string literals in quotes.
   *   * integer literals without quotes.
   *   * boolean literals `true` and `false` without quotes.
   *
   *   For example, `source_properties.size = 100` is a valid filter string.
   * @param {string} request.orderBy
   *   Expression that defines what fields and order to use for sorting. The
   *   string value should follow SQL syntax: comma separated list of fields. For
   *   example: "name,resource_properties.a_property". The default sorting order
   *   is ascending. To specify descending order for a field, a suffix " desc"
   *   should be appended to the field name. For example: "name
   *   desc,source_properties.a_property". Redundant space characters in the
   *   syntax are insignificant. "name desc,source_properties.a_property" and "
   *   name     desc  ,   source_properties.a_property  " are equivalent.
   * @param {google.protobuf.Timestamp} request.readTime
   *   Time used as a reference point when filtering findings. The filter is
   *   limited to findings existing at the supplied time and their values are
   *   those at that specific time. Absence of this field will default to the
   *   API's version of NOW.
   * @param {google.protobuf.FieldMask} [request.fieldMask]
   *   Optional. A field mask to specify the Finding fields to be listed in the response.
   *   An empty field mask will list all fields.
   * @param {string} request.pageToken
   *   The value returned by the last `ListFindingsResponse`; indicates
   *   that this is a continuation of a prior `ListFindings` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Finding]{@link google.cloud.securitycenter.v1beta1.Finding}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.list_findings.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_ListFindings_async
   */
  listFindingsAsync(
    request?: protos.google.cloud.securitycenter.v1beta1.IListFindingsRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v1beta1.IFinding> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listFindings'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listFindings.asyncIterate(
      this.innerApiCalls['listFindings'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v1beta1.IFinding>;
  }
  /**
   * Lists all sources belonging to an organization.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the parent of sources to list. Its format should be
   *   "organizations/[organization_id]".
   * @param {string} request.pageToken
   *   The value returned by the last `ListSourcesResponse`; indicates
   *   that this is a continuation of a prior `ListSources` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is Array of [Source]{@link google.cloud.securitycenter.v1beta1.Source}.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed and will merge results from all the pages into this array.
   *   Note that it can affect your quota.
   *   We recommend using `listSourcesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listSources(
    request?: protos.google.cloud.securitycenter.v1beta1.IListSourcesRequest,
    options?: CallOptions
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.ISource[],
      protos.google.cloud.securitycenter.v1beta1.IListSourcesRequest | null,
      protos.google.cloud.securitycenter.v1beta1.IListSourcesResponse
    ]
  >;
  listSources(
    request: protos.google.cloud.securitycenter.v1beta1.IListSourcesRequest,
    options: CallOptions,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IListSourcesRequest,
      | protos.google.cloud.securitycenter.v1beta1.IListSourcesResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.ISource
    >
  ): void;
  listSources(
    request: protos.google.cloud.securitycenter.v1beta1.IListSourcesRequest,
    callback: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IListSourcesRequest,
      | protos.google.cloud.securitycenter.v1beta1.IListSourcesResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.ISource
    >
  ): void;
  listSources(
    request?: protos.google.cloud.securitycenter.v1beta1.IListSourcesRequest,
    optionsOrCallback?:
      | CallOptions
      | PaginationCallback<
          protos.google.cloud.securitycenter.v1beta1.IListSourcesRequest,
          | protos.google.cloud.securitycenter.v1beta1.IListSourcesResponse
          | null
          | undefined,
          protos.google.cloud.securitycenter.v1beta1.ISource
        >,
    callback?: PaginationCallback<
      protos.google.cloud.securitycenter.v1beta1.IListSourcesRequest,
      | protos.google.cloud.securitycenter.v1beta1.IListSourcesResponse
      | null
      | undefined,
      protos.google.cloud.securitycenter.v1beta1.ISource
    >
  ): Promise<
    [
      protos.google.cloud.securitycenter.v1beta1.ISource[],
      protos.google.cloud.securitycenter.v1beta1.IListSourcesRequest | null,
      protos.google.cloud.securitycenter.v1beta1.IListSourcesResponse
    ]
  > | void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    } else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    this.initialize();
    return this.innerApiCalls.listSources(request, options, callback);
  }

  /**
   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the parent of sources to list. Its format should be
   *   "organizations/[organization_id]".
   * @param {string} request.pageToken
   *   The value returned by the last `ListSourcesResponse`; indicates
   *   that this is a continuation of a prior `ListSources` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Stream}
   *   An object stream which emits an object representing [Source]{@link google.cloud.securitycenter.v1beta1.Source} on 'data' event.
   *   The client library will perform auto-pagination by default: it will call the API as many
   *   times as needed. Note that it can affect your quota.
   *   We recommend using `listSourcesAsync()`
   *   method described below for async iteration which you can stop as needed.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   */
  listSourcesStream(
    request?: protos.google.cloud.securitycenter.v1beta1.IListSourcesRequest,
    options?: CallOptions
  ): Transform {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listSources'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listSources.createStream(
      this.innerApiCalls.listSources as GaxCall,
      request,
      callSettings
    );
  }

  /**
   * Equivalent to `listSources`, but returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.parent
   *   Required. Resource name of the parent of sources to list. Its format should be
   *   "organizations/[organization_id]".
   * @param {string} request.pageToken
   *   The value returned by the last `ListSourcesResponse`; indicates
   *   that this is a continuation of a prior `ListSources` call, and
   *   that the system should return the next page of data.
   * @param {number} request.pageSize
   *   The maximum number of results to return in a single response. Default is
   *   10, minimum is 1, maximum is 1000.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Source]{@link google.cloud.securitycenter.v1beta1.Source}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example <caption>include:samples/generated/v1beta1/security_center.list_sources.js</caption>
   * region_tag:securitycenter_v1beta1_generated_SecurityCenter_ListSources_async
   */
  listSourcesAsync(
    request?: protos.google.cloud.securitycenter.v1beta1.IListSourcesRequest,
    options?: CallOptions
  ): AsyncIterable<protos.google.cloud.securitycenter.v1beta1.ISource> {
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers['x-goog-request-params'] =
      this._gaxModule.routingHeader.fromParams({
        parent: request.parent ?? '',
      });
    const defaultCallSettings = this._defaults['listSources'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listSources.asyncIterate(
      this.innerApiCalls['listSources'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.v1beta1.ISource>;
  }
  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified asset resource name string.
   *
   * @param {string} organization
   * @param {string} asset
   * @returns {string} Resource name string.
   */
  assetPath(organization: string, asset: string) {
    return this.pathTemplates.assetPathTemplate.render({
      organization: organization,
      asset: asset,
    });
  }

  /**
   * Parse the organization from Asset resource.
   *
   * @param {string} assetName
   *   A fully-qualified path representing Asset resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromAssetName(assetName: string) {
    return this.pathTemplates.assetPathTemplate.match(assetName).organization;
  }

  /**
   * Parse the asset from Asset resource.
   *
   * @param {string} assetName
   *   A fully-qualified path representing Asset resource.
   * @returns {string} A string representing the asset.
   */
  matchAssetFromAssetName(assetName: string) {
    return this.pathTemplates.assetPathTemplate.match(assetName).asset;
  }

  /**
   * Return a fully-qualified finding resource name string.
   *
   * @param {string} organization
   * @param {string} source
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  findingPath(organization: string, source: string, finding: string) {
    return this.pathTemplates.findingPathTemplate.render({
      organization: organization,
      source: source,
      finding: finding,
    });
  }

  /**
   * Parse the organization from Finding resource.
   *
   * @param {string} findingName
   *   A fully-qualified path representing Finding resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromFindingName(findingName: string) {
    return this.pathTemplates.findingPathTemplate.match(findingName)
      .organization;
  }

  /**
   * Parse the source from Finding resource.
   *
   * @param {string} findingName
   *   A fully-qualified path representing Finding resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromFindingName(findingName: string) {
    return this.pathTemplates.findingPathTemplate.match(findingName).source;
  }

  /**
   * Parse the finding from Finding resource.
   *
   * @param {string} findingName
   *   A fully-qualified path representing Finding resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromFindingName(findingName: string) {
    return this.pathTemplates.findingPathTemplate.match(findingName).finding;
  }

  /**
   * Return a fully-qualified organization resource name string.
   *
   * @param {string} organization
   * @returns {string} Resource name string.
   */
  organizationPath(organization: string) {
    return this.pathTemplates.organizationPathTemplate.render({
      organization: organization,
    });
  }

  /**
   * Parse the organization from Organization resource.
   *
   * @param {string} organizationName
   *   A fully-qualified path representing Organization resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationName(organizationName: string) {
    return this.pathTemplates.organizationPathTemplate.match(organizationName)
      .organization;
  }

  /**
   * Return a fully-qualified organizationAssetSecurityMarks resource name string.
   *
   * @param {string} organization
   * @param {string} asset
   * @returns {string} Resource name string.
   */
  organizationAssetSecurityMarksPath(organization: string, asset: string) {
    return this.pathTemplates.organizationAssetSecurityMarksPathTemplate.render(
      {
        organization: organization,
        asset: asset,
      }
    );
  }

  /**
   * Parse the organization from OrganizationAssetSecurityMarks resource.
   *
   * @param {string} organizationAssetSecurityMarksName
   *   A fully-qualified path representing organization_asset_securityMarks resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationAssetSecurityMarksName(
    organizationAssetSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationAssetSecurityMarksPathTemplate.match(
      organizationAssetSecurityMarksName
    ).organization;
  }

  /**
   * Parse the asset from OrganizationAssetSecurityMarks resource.
   *
   * @param {string} organizationAssetSecurityMarksName
   *   A fully-qualified path representing organization_asset_securityMarks resource.
   * @returns {string} A string representing the asset.
   */
  matchAssetFromOrganizationAssetSecurityMarksName(
    organizationAssetSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationAssetSecurityMarksPathTemplate.match(
      organizationAssetSecurityMarksName
    ).asset;
  }

  /**
   * Return a fully-qualified organizationSettings resource name string.
   *
   * @param {string} organization
   * @returns {string} Resource name string.
   */
  organizationSettingsPath(organization: string) {
    return this.pathTemplates.organizationSettingsPathTemplate.render({
      organization: organization,
    });
  }

  /**
   * Parse the organization from OrganizationSettings resource.
   *
   * @param {string} organizationSettingsName
   *   A fully-qualified path representing OrganizationSettings resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationSettingsName(
    organizationSettingsName: string
  ) {
    return this.pathTemplates.organizationSettingsPathTemplate.match(
      organizationSettingsName
    ).organization;
  }

  /**
   * Return a fully-qualified organizationSourceFindingSecurityMarks resource name string.
   *
   * @param {string} organization
   * @param {string} source
   * @param {string} finding
   * @returns {string} Resource name string.
   */
  organizationSourceFindingSecurityMarksPath(
    organization: string,
    source: string,
    finding: string
  ) {
    return this.pathTemplates.organizationSourceFindingSecurityMarksPathTemplate.render(
      {
        organization: organization,
        source: source,
        finding: finding,
      }
    );
  }

  /**
   * Parse the organization from OrganizationSourceFindingSecurityMarks resource.
   *
   * @param {string} organizationSourceFindingSecurityMarksName
   *   A fully-qualified path representing organization_source_finding_securityMarks resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationSourceFindingSecurityMarksName(
    organizationSourceFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationSourceFindingSecurityMarksPathTemplate.match(
      organizationSourceFindingSecurityMarksName
    ).organization;
  }

  /**
   * Parse the source from OrganizationSourceFindingSecurityMarks resource.
   *
   * @param {string} organizationSourceFindingSecurityMarksName
   *   A fully-qualified path representing organization_source_finding_securityMarks resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromOrganizationSourceFindingSecurityMarksName(
    organizationSourceFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationSourceFindingSecurityMarksPathTemplate.match(
      organizationSourceFindingSecurityMarksName
    ).source;
  }

  /**
   * Parse the finding from OrganizationSourceFindingSecurityMarks resource.
   *
   * @param {string} organizationSourceFindingSecurityMarksName
   *   A fully-qualified path representing organization_source_finding_securityMarks resource.
   * @returns {string} A string representing the finding.
   */
  matchFindingFromOrganizationSourceFindingSecurityMarksName(
    organizationSourceFindingSecurityMarksName: string
  ) {
    return this.pathTemplates.organizationSourceFindingSecurityMarksPathTemplate.match(
      organizationSourceFindingSecurityMarksName
    ).finding;
  }

  /**
   * Return a fully-qualified source resource name string.
   *
   * @param {string} organization
   * @param {string} source
   * @returns {string} Resource name string.
   */
  sourcePath(organization: string, source: string) {
    return this.pathTemplates.sourcePathTemplate.render({
      organization: organization,
      source: source,
    });
  }

  /**
   * Parse the organization from Source resource.
   *
   * @param {string} sourceName
   *   A fully-qualified path representing Source resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromSourceName(sourceName: string) {
    return this.pathTemplates.sourcePathTemplate.match(sourceName).organization;
  }

  /**
   * Parse the source from Source resource.
   *
   * @param {string} sourceName
   *   A fully-qualified path representing Source resource.
   * @returns {string} A string representing the source.
   */
  matchSourceFromSourceName(sourceName: string) {
    return this.pathTemplates.sourcePathTemplate.match(sourceName).source;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.securityCenterStub && !this._terminated) {
      return this.securityCenterStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.operationsClient.close();
      });
    }
    return Promise.resolve();
  }
}
