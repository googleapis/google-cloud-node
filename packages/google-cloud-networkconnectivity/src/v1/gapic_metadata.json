{
  "schema": "1.0",
  "comment": "This file maps proto services/RPCs to the corresponding library clients/methods",
  "language": "typescript",
  "protoPackage": "google.cloud.networkconnectivity.v1",
  "libraryPackage": "@google-cloud/network-connectivity",
  "services": {
    "HubService": {
      "clients": {
        "grpc": {
          "libraryClient": "HubServiceClient",
          "rpcs": {
            "GetHub": {
              "methods": [
                "getHub"
              ]
            },
            "GetSpoke": {
              "methods": [
                "getSpoke"
              ]
            },
            "CreateHub": {
              "methods": [
                "createHub"
              ]
            },
            "UpdateHub": {
              "methods": [
                "updateHub"
              ]
            },
            "DeleteHub": {
              "methods": [
                "deleteHub"
              ]
            },
            "CreateSpoke": {
              "methods": [
                "createSpoke"
              ]
            },
            "UpdateSpoke": {
              "methods": [
                "updateSpoke"
              ]
            },
            "DeleteSpoke": {
              "methods": [
                "deleteSpoke"
              ]
            },
            "ListHubs": {
              "methods": [
                "listHubs",
                "listHubsStream",
                "listHubsAsync"
              ]
            },
            "ListSpokes": {
              "methods": [
                "listSpokes",
                "listSpokesStream",
                "listSpokesAsync"
              ]
            }
          }
        },
        "grpc-fallback": {
          "libraryClient": "HubServiceClient",
          "rpcs": {
            "GetHub": {
              "methods": [
                "getHub"
              ]
            },
            "GetSpoke": {
              "methods": [
                "getSpoke"
              ]
            },
            "CreateHub": {
              "methods": [
                "createHub"
              ]
            },
            "UpdateHub": {
              "methods": [
                "updateHub"
              ]
            },
            "DeleteHub": {
              "methods": [
                "deleteHub"
              ]
            },
            "CreateSpoke": {
              "methods": [
                "createSpoke"
              ]
            },
            "UpdateSpoke": {
              "methods": [
                "updateSpoke"
              ]
            },
            "DeleteSpoke": {
              "methods": [
                "deleteSpoke"
              ]
            },
            "ListHubs": {
              "methods": [
                "listHubs",
                "listHubsStream",
                "listHubsAsync"
              ]
            },
            "ListSpokes": {
              "methods": [
                "listSpokes",
                "listSpokesStream",
                "listSpokesAsync"
              ]
            }
          }
        }
      }
    },
    "PolicyBasedRoutingService": {
      "clients": {
        "grpc": {
          "libraryClient": "PolicyBasedRoutingServiceClient",
          "rpcs": {
            "GetPolicyBasedRoute": {
              "methods": [
                "getPolicyBasedRoute"
              ]
            },
            "CreatePolicyBasedRoute": {
              "methods": [
                "createPolicyBasedRoute"
              ]
            },
            "DeletePolicyBasedRoute": {
              "methods": [
                "deletePolicyBasedRoute"
              ]
            },
            "ListPolicyBasedRoutes": {
              "methods": [
                "listPolicyBasedRoutes",
                "listPolicyBasedRoutesStream",
                "listPolicyBasedRoutesAsync"
              ]
            }
          }
        },
        "grpc-fallback": {
          "libraryClient": "PolicyBasedRoutingServiceClient",
          "rpcs": {
            "GetPolicyBasedRoute": {
              "methods": [
                "getPolicyBasedRoute"
              ]
            },
            "CreatePolicyBasedRoute": {
              "methods": [
                "createPolicyBasedRoute"
              ]
            },
            "DeletePolicyBasedRoute": {
              "methods": [
                "deletePolicyBasedRoute"
              ]
            },
            "ListPolicyBasedRoutes": {
              "methods": [
                "listPolicyBasedRoutes",
                "listPolicyBasedRoutesStream",
                "listPolicyBasedRoutesAsync"
              ]
            }
          }
        }
      }
    }
  }
}
