// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main() {
  // [START cloudfunctions_v1_generated_CloudFunctionsService_GenerateUploadUrl_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  The project and location in which the Google Cloud Storage signed URL
   *  should be generated, specified in the format `projects/* /locations/*`.
   */
  // const parent = 'abc123'
  /**
   *  Resource name of a KMS crypto key (managed by the user) used to
   *  encrypt/decrypt function source code objects in staging Cloud Storage
   *  buckets. When you generate an upload url and upload your source code, it
   *  gets copied to a staging Cloud Storage bucket in an internal regional
   *  project. The source code is then copied to a versioned directory in the
   *  sources bucket in the consumer project during the function deployment.
   *  It must match the pattern
   *  `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.
   *  The Google Cloud Functions service account
   *  (service-{project_number}@gcf-admin-robot.iam.gserviceaccount.com) must be
   *  granted the role 'Cloud KMS CryptoKey Encrypter/Decrypter
   *  (roles/cloudkms.cryptoKeyEncrypterDecrypter)' on the
   *  Key/KeyRing/Project/Organization (least access preferred). GCF will
   *  delegate access to the Google Storage service account in the internal
   *  project.
   */
  // const kmsKeyName = 'abc123'

  // Imports the Functions library
  const {CloudFunctionsServiceClient} = require('@google-cloud/functions').v1;

  // Instantiates a client
  const functionsClient = new CloudFunctionsServiceClient();

  async function callGenerateUploadUrl() {
    // Construct request
    const request = {
    };

    // Run request
    const response = await functionsClient.generateUploadUrl(request);
    console.log(response);
  }

  callGenerateUploadUrl();
  // [END cloudfunctions_v1_generated_CloudFunctionsService_GenerateUploadUrl_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
