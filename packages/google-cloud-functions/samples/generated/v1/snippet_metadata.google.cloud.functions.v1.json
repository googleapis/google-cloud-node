{
    "clientLibrary": {
        "name": "nodejs-functions",
        "version": "2.2.3",
        "language": "TYPESCRIPT",
        "apis": [
            {
                "id": "google.cloud.functions.v1",
                "version": "v1"
            }
        ]
    },
    "snippets": [
        {
            "regionTag": "cloudfunctions_v1_generated_CloudFunctionsService_ListFunctions_async",
            "title": "CloudFunctionsService listFunctions Sample",
            "origin": "API_DEFINITION",
            "description": " Returns a list of functions that belong to the requested project.",
            "canonical": true,
            "file": "cloud_functions_service.list_functions.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 70,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "ListFunctions",
                "fullName": "google.cloud.functions.v1.CloudFunctionsService.ListFunctions",
                "async": true,
                "parameters": [
                    {
                        "name": "parent",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "page_size",
                        "type": "TYPE_INT32"
                    },
                    {
                        "name": "page_token",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.cloud.functions.v1.ListFunctionsResponse",
                "client": {
                    "shortName": "CloudFunctionsServiceClient",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsServiceClient"
                },
                "method": {
                    "shortName": "ListFunctions",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsService.ListFunctions",
                    "service": {
                        "shortName": "CloudFunctionsService",
                        "fullName": "google.cloud.functions.v1.CloudFunctionsService"
                    }
                }
            }
        },
        {
            "regionTag": "cloudfunctions_v1_generated_CloudFunctionsService_GetFunction_async",
            "title": "CloudFunctionsService getFunction Sample",
            "origin": "API_DEFINITION",
            "description": " Returns a function with the given name from the requested project.",
            "canonical": true,
            "file": "cloud_functions_service.get_function.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 53,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "GetFunction",
                "fullName": "google.cloud.functions.v1.CloudFunctionsService.GetFunction",
                "async": true,
                "parameters": [
                    {
                        "name": "name",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.cloud.functions.v1.CloudFunction",
                "client": {
                    "shortName": "CloudFunctionsServiceClient",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsServiceClient"
                },
                "method": {
                    "shortName": "GetFunction",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsService.GetFunction",
                    "service": {
                        "shortName": "CloudFunctionsService",
                        "fullName": "google.cloud.functions.v1.CloudFunctionsService"
                    }
                }
            }
        },
        {
            "regionTag": "cloudfunctions_v1_generated_CloudFunctionsService_CreateFunction_async",
            "title": "CloudFunctionsService createFunction Sample",
            "origin": "API_DEFINITION",
            "description": " Creates a new function. If a function with the given name already exists in the specified project, the long running operation will return `ALREADY_EXISTS` error.",
            "canonical": true,
            "file": "cloud_functions_service.create_function.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 60,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "CreateFunction",
                "fullName": "google.cloud.functions.v1.CloudFunctionsService.CreateFunction",
                "async": true,
                "parameters": [
                    {
                        "name": "location",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "function",
                        "type": ".google.cloud.functions.v1.CloudFunction"
                    }
                ],
                "resultType": ".google.longrunning.Operation",
                "client": {
                    "shortName": "CloudFunctionsServiceClient",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsServiceClient"
                },
                "method": {
                    "shortName": "CreateFunction",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsService.CreateFunction",
                    "service": {
                        "shortName": "CloudFunctionsService",
                        "fullName": "google.cloud.functions.v1.CloudFunctionsService"
                    }
                }
            }
        },
        {
            "regionTag": "cloudfunctions_v1_generated_CloudFunctionsService_UpdateFunction_async",
            "title": "CloudFunctionsService updateFunction Sample",
            "origin": "API_DEFINITION",
            "description": " Updates existing function.",
            "canonical": true,
            "file": "cloud_functions_service.update_function.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 58,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "UpdateFunction",
                "fullName": "google.cloud.functions.v1.CloudFunctionsService.UpdateFunction",
                "async": true,
                "parameters": [
                    {
                        "name": "function",
                        "type": ".google.cloud.functions.v1.CloudFunction"
                    },
                    {
                        "name": "update_mask",
                        "type": ".google.protobuf.FieldMask"
                    }
                ],
                "resultType": ".google.longrunning.Operation",
                "client": {
                    "shortName": "CloudFunctionsServiceClient",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsServiceClient"
                },
                "method": {
                    "shortName": "UpdateFunction",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsService.UpdateFunction",
                    "service": {
                        "shortName": "CloudFunctionsService",
                        "fullName": "google.cloud.functions.v1.CloudFunctionsService"
                    }
                }
            }
        },
        {
            "regionTag": "cloudfunctions_v1_generated_CloudFunctionsService_DeleteFunction_async",
            "title": "CloudFunctionsService deleteFunction Sample",
            "origin": "API_DEFINITION",
            "description": " Deletes a function with the given name from the specified project. If the given function is used by some trigger, the trigger will be updated to remove this function.",
            "canonical": true,
            "file": "cloud_functions_service.delete_function.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 54,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "DeleteFunction",
                "fullName": "google.cloud.functions.v1.CloudFunctionsService.DeleteFunction",
                "async": true,
                "parameters": [
                    {
                        "name": "name",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.longrunning.Operation",
                "client": {
                    "shortName": "CloudFunctionsServiceClient",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsServiceClient"
                },
                "method": {
                    "shortName": "DeleteFunction",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsService.DeleteFunction",
                    "service": {
                        "shortName": "CloudFunctionsService",
                        "fullName": "google.cloud.functions.v1.CloudFunctionsService"
                    }
                }
            }
        },
        {
            "regionTag": "cloudfunctions_v1_generated_CloudFunctionsService_CallFunction_async",
            "title": "CloudFunctionsService callFunction Sample",
            "origin": "API_DEFINITION",
            "description": " Synchronously invokes a deployed Cloud Function. To be used for testing purposes as very limited traffic is allowed. For more information on the actual limits, refer to [Rate Limits](https://cloud.google.com/functions/quotas#rate_limits).",
            "canonical": true,
            "file": "cloud_functions_service.call_function.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 58,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "CallFunction",
                "fullName": "google.cloud.functions.v1.CloudFunctionsService.CallFunction",
                "async": true,
                "parameters": [
                    {
                        "name": "name",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "data",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.cloud.functions.v1.CallFunctionResponse",
                "client": {
                    "shortName": "CloudFunctionsServiceClient",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsServiceClient"
                },
                "method": {
                    "shortName": "CallFunction",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsService.CallFunction",
                    "service": {
                        "shortName": "CloudFunctionsService",
                        "fullName": "google.cloud.functions.v1.CloudFunctionsService"
                    }
                }
            }
        },
        {
            "regionTag": "cloudfunctions_v1_generated_CloudFunctionsService_GenerateUploadUrl_async",
            "title": "CloudFunctionsService generateUploadUrl Sample",
            "origin": "API_DEFINITION",
            "description": " Returns a signed URL for uploading a function source code. For more information about the signed URL usage see: https://cloud.google.com/storage/docs/access-control/signed-urls. Once the function source code upload is complete, the used signed URL should be provided in CreateFunction or UpdateFunction request as a reference to the function source code. When uploading source code to the generated signed URL, please follow these restrictions: * Source file type should be a zip file. * Source file size should not exceed 100MB limit. * No credentials should be attached - the signed URLs provide access to the   target bucket using internal service identity; if credentials were   attached, the identity from the credentials would be used, but that   identity does not have permissions to upload files to the URL. When making a HTTP PUT request, these two headers need to be specified: * `content-type: application/zip` * `x-goog-content-length-range: 0,104857600` And this header SHOULD NOT be specified: * `Authorization: Bearer YOUR_TOKEN`",
            "canonical": true,
            "file": "cloud_functions_service.generate_upload_url.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 71,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "GenerateUploadUrl",
                "fullName": "google.cloud.functions.v1.CloudFunctionsService.GenerateUploadUrl",
                "async": true,
                "parameters": [
                    {
                        "name": "parent",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "kms_key_name",
                        "type": "TYPE_STRING"
                    }
                ],
                "resultType": ".google.cloud.functions.v1.GenerateUploadUrlResponse",
                "client": {
                    "shortName": "CloudFunctionsServiceClient",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsServiceClient"
                },
                "method": {
                    "shortName": "GenerateUploadUrl",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsService.GenerateUploadUrl",
                    "service": {
                        "shortName": "CloudFunctionsService",
                        "fullName": "google.cloud.functions.v1.CloudFunctionsService"
                    }
                }
            }
        },
        {
            "regionTag": "cloudfunctions_v1_generated_CloudFunctionsService_GenerateDownloadUrl_async",
            "title": "CloudFunctionsService generateDownloadUrl Sample",
            "origin": "API_DEFINITION",
            "description": " Returns a signed URL for downloading deployed function source code. The URL is only valid for a limited period and should be used within minutes after generation. For more information about the signed URL usage see: https://cloud.google.com/storage/docs/access-control/signed-urls",
            "canonical": true,
            "file": "cloud_functions_service.generate_download_url.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 58,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "GenerateDownloadUrl",
                "fullName": "google.cloud.functions.v1.CloudFunctionsService.GenerateDownloadUrl",
                "async": true,
                "parameters": [
                    {
                        "name": "name",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "version_id",
                        "type": "TYPE_UINT64"
                    }
                ],
                "resultType": ".google.cloud.functions.v1.GenerateDownloadUrlResponse",
                "client": {
                    "shortName": "CloudFunctionsServiceClient",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsServiceClient"
                },
                "method": {
                    "shortName": "GenerateDownloadUrl",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsService.GenerateDownloadUrl",
                    "service": {
                        "shortName": "CloudFunctionsService",
                        "fullName": "google.cloud.functions.v1.CloudFunctionsService"
                    }
                }
            }
        },
        {
            "regionTag": "cloudfunctions_v1_generated_CloudFunctionsService_SetIamPolicy_async",
            "title": "CloudFunctionsService setIamPolicy Sample",
            "origin": "API_DEFINITION",
            "description": " Sets the IAM access control policy on the specified function. Replaces any existing policy.",
            "canonical": true,
            "file": "cloud_functions_service.set_iam_policy.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 69,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "SetIamPolicy",
                "fullName": "google.cloud.functions.v1.CloudFunctionsService.SetIamPolicy",
                "async": true,
                "parameters": [
                    {
                        "name": "resource",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "policy",
                        "type": ".google.iam.v1.Policy"
                    },
                    {
                        "name": "update_mask",
                        "type": ".google.protobuf.FieldMask"
                    }
                ],
                "resultType": ".google.iam.v1.Policy",
                "client": {
                    "shortName": "CloudFunctionsServiceClient",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsServiceClient"
                },
                "method": {
                    "shortName": "SetIamPolicy",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsService.SetIamPolicy",
                    "service": {
                        "shortName": "CloudFunctionsService",
                        "fullName": "google.cloud.functions.v1.CloudFunctionsService"
                    }
                }
            }
        },
        {
            "regionTag": "cloudfunctions_v1_generated_CloudFunctionsService_GetIamPolicy_async",
            "title": "CloudFunctionsService getIamPolicy Sample",
            "origin": "API_DEFINITION",
            "description": " Gets the IAM access control policy for a function. Returns an empty policy if the function exists and does not have a policy set.",
            "canonical": true,
            "file": "cloud_functions_service.get_iam_policy.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 59,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "GetIamPolicy",
                "fullName": "google.cloud.functions.v1.CloudFunctionsService.GetIamPolicy",
                "async": true,
                "parameters": [
                    {
                        "name": "resource",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "options",
                        "type": ".google.iam.v1.GetPolicyOptions"
                    }
                ],
                "resultType": ".google.iam.v1.Policy",
                "client": {
                    "shortName": "CloudFunctionsServiceClient",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsServiceClient"
                },
                "method": {
                    "shortName": "GetIamPolicy",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsService.GetIamPolicy",
                    "service": {
                        "shortName": "CloudFunctionsService",
                        "fullName": "google.cloud.functions.v1.CloudFunctionsService"
                    }
                }
            }
        },
        {
            "regionTag": "cloudfunctions_v1_generated_CloudFunctionsService_TestIamPermissions_async",
            "title": "CloudFunctionsService testIamPermissions Sample",
            "origin": "API_DEFINITION",
            "description": " Tests the specified permissions against the IAM access control policy for a function. If the function does not exist, this will return an empty set of permissions, not a NOT_FOUND error.",
            "canonical": true,
            "file": "cloud_functions_service.test_iam_permissions.js",
            "language": "JAVASCRIPT",
            "segments": [
                {
                    "start": 25,
                    "end": 62,
                    "type": "FULL"
                }
            ],
            "clientMethod": {
                "shortName": "TestIamPermissions",
                "fullName": "google.cloud.functions.v1.CloudFunctionsService.TestIamPermissions",
                "async": true,
                "parameters": [
                    {
                        "name": "resource",
                        "type": "TYPE_STRING"
                    },
                    {
                        "name": "permissions",
                        "type": "TYPE_STRING[]"
                    }
                ],
                "resultType": ".google.iam.v1.TestIamPermissionsResponse",
                "client": {
                    "shortName": "CloudFunctionsServiceClient",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsServiceClient"
                },
                "method": {
                    "shortName": "TestIamPermissions",
                    "fullName": "google.cloud.functions.v1.CloudFunctionsService.TestIamPermissions",
                    "service": {
                        "shortName": "CloudFunctionsService",
                        "fullName": "google.cloud.functions.v1.CloudFunctionsService"
                    }
                }
            }
        }
    ]
}