// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_functions_protos || ($protobuf.roots._google_cloud_functions_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.functions = (function() {
    
                /**
                 * Namespace functions.
                 * @memberof google.cloud
                 * @namespace
                 */
                var functions = {};
    
                functions.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.functions
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.CloudFunctionsService = (function() {
    
                        /**
                         * Constructs a new CloudFunctionsService service.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a CloudFunctionsService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function CloudFunctionsService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (CloudFunctionsService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CloudFunctionsService;
    
                        /**
                         * Creates new CloudFunctionsService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {CloudFunctionsService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        CloudFunctionsService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v1.CloudFunctionsService|listFunctions}.
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @typedef ListFunctionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v1.ListFunctionsResponse} [response] ListFunctionsResponse
                         */
    
                        /**
                         * Calls ListFunctions.
                         * @function listFunctions
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.IListFunctionsRequest} request ListFunctionsRequest message or plain object
                         * @param {google.cloud.functions.v1.CloudFunctionsService.ListFunctionsCallback} callback Node-style callback called with the error, if any, and ListFunctionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudFunctionsService.prototype.listFunctions = function listFunctions(request, callback) {
                            return this.rpcCall(listFunctions, $root.google.cloud.functions.v1.ListFunctionsRequest, $root.google.cloud.functions.v1.ListFunctionsResponse, request, callback);
                        }, "name", { value: "ListFunctions" });
    
                        /**
                         * Calls ListFunctions.
                         * @function listFunctions
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.IListFunctionsRequest} request ListFunctionsRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v1.ListFunctionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v1.CloudFunctionsService|getFunction}.
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @typedef GetFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v1.CloudFunction} [response] CloudFunction
                         */
    
                        /**
                         * Calls GetFunction.
                         * @function getFunction
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.IGetFunctionRequest} request GetFunctionRequest message or plain object
                         * @param {google.cloud.functions.v1.CloudFunctionsService.GetFunctionCallback} callback Node-style callback called with the error, if any, and CloudFunction
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudFunctionsService.prototype.getFunction = function getFunction(request, callback) {
                            return this.rpcCall(getFunction, $root.google.cloud.functions.v1.GetFunctionRequest, $root.google.cloud.functions.v1.CloudFunction, request, callback);
                        }, "name", { value: "GetFunction" });
    
                        /**
                         * Calls GetFunction.
                         * @function getFunction
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.IGetFunctionRequest} request GetFunctionRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v1.CloudFunction>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v1.CloudFunctionsService|createFunction}.
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @typedef CreateFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateFunction.
                         * @function createFunction
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.ICreateFunctionRequest} request CreateFunctionRequest message or plain object
                         * @param {google.cloud.functions.v1.CloudFunctionsService.CreateFunctionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudFunctionsService.prototype.createFunction = function createFunction(request, callback) {
                            return this.rpcCall(createFunction, $root.google.cloud.functions.v1.CreateFunctionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateFunction" });
    
                        /**
                         * Calls CreateFunction.
                         * @function createFunction
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.ICreateFunctionRequest} request CreateFunctionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v1.CloudFunctionsService|updateFunction}.
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @typedef UpdateFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateFunction.
                         * @function updateFunction
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.IUpdateFunctionRequest} request UpdateFunctionRequest message or plain object
                         * @param {google.cloud.functions.v1.CloudFunctionsService.UpdateFunctionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudFunctionsService.prototype.updateFunction = function updateFunction(request, callback) {
                            return this.rpcCall(updateFunction, $root.google.cloud.functions.v1.UpdateFunctionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateFunction" });
    
                        /**
                         * Calls UpdateFunction.
                         * @function updateFunction
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.IUpdateFunctionRequest} request UpdateFunctionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v1.CloudFunctionsService|deleteFunction}.
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @typedef DeleteFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteFunction.
                         * @function deleteFunction
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.IDeleteFunctionRequest} request DeleteFunctionRequest message or plain object
                         * @param {google.cloud.functions.v1.CloudFunctionsService.DeleteFunctionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudFunctionsService.prototype.deleteFunction = function deleteFunction(request, callback) {
                            return this.rpcCall(deleteFunction, $root.google.cloud.functions.v1.DeleteFunctionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteFunction" });
    
                        /**
                         * Calls DeleteFunction.
                         * @function deleteFunction
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.IDeleteFunctionRequest} request DeleteFunctionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v1.CloudFunctionsService|callFunction}.
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @typedef CallFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v1.CallFunctionResponse} [response] CallFunctionResponse
                         */
    
                        /**
                         * Calls CallFunction.
                         * @function callFunction
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.ICallFunctionRequest} request CallFunctionRequest message or plain object
                         * @param {google.cloud.functions.v1.CloudFunctionsService.CallFunctionCallback} callback Node-style callback called with the error, if any, and CallFunctionResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudFunctionsService.prototype.callFunction = function callFunction(request, callback) {
                            return this.rpcCall(callFunction, $root.google.cloud.functions.v1.CallFunctionRequest, $root.google.cloud.functions.v1.CallFunctionResponse, request, callback);
                        }, "name", { value: "CallFunction" });
    
                        /**
                         * Calls CallFunction.
                         * @function callFunction
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.ICallFunctionRequest} request CallFunctionRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v1.CallFunctionResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v1.CloudFunctionsService|generateUploadUrl}.
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @typedef GenerateUploadUrlCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v1.GenerateUploadUrlResponse} [response] GenerateUploadUrlResponse
                         */
    
                        /**
                         * Calls GenerateUploadUrl.
                         * @function generateUploadUrl
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.IGenerateUploadUrlRequest} request GenerateUploadUrlRequest message or plain object
                         * @param {google.cloud.functions.v1.CloudFunctionsService.GenerateUploadUrlCallback} callback Node-style callback called with the error, if any, and GenerateUploadUrlResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudFunctionsService.prototype.generateUploadUrl = function generateUploadUrl(request, callback) {
                            return this.rpcCall(generateUploadUrl, $root.google.cloud.functions.v1.GenerateUploadUrlRequest, $root.google.cloud.functions.v1.GenerateUploadUrlResponse, request, callback);
                        }, "name", { value: "GenerateUploadUrl" });
    
                        /**
                         * Calls GenerateUploadUrl.
                         * @function generateUploadUrl
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.IGenerateUploadUrlRequest} request GenerateUploadUrlRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v1.GenerateUploadUrlResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v1.CloudFunctionsService|generateDownloadUrl}.
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @typedef GenerateDownloadUrlCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v1.GenerateDownloadUrlResponse} [response] GenerateDownloadUrlResponse
                         */
    
                        /**
                         * Calls GenerateDownloadUrl.
                         * @function generateDownloadUrl
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.IGenerateDownloadUrlRequest} request GenerateDownloadUrlRequest message or plain object
                         * @param {google.cloud.functions.v1.CloudFunctionsService.GenerateDownloadUrlCallback} callback Node-style callback called with the error, if any, and GenerateDownloadUrlResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudFunctionsService.prototype.generateDownloadUrl = function generateDownloadUrl(request, callback) {
                            return this.rpcCall(generateDownloadUrl, $root.google.cloud.functions.v1.GenerateDownloadUrlRequest, $root.google.cloud.functions.v1.GenerateDownloadUrlResponse, request, callback);
                        }, "name", { value: "GenerateDownloadUrl" });
    
                        /**
                         * Calls GenerateDownloadUrl.
                         * @function generateDownloadUrl
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.cloud.functions.v1.IGenerateDownloadUrlRequest} request GenerateDownloadUrlRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v1.GenerateDownloadUrlResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v1.CloudFunctionsService|setIamPolicy}.
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @typedef SetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @param {google.cloud.functions.v1.CloudFunctionsService.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudFunctionsService.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                            return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "SetIamPolicy" });
    
                        /**
                         * Calls SetIamPolicy.
                         * @function setIamPolicy
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v1.CloudFunctionsService|getIamPolicy}.
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @typedef GetIamPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.Policy} [response] Policy
                         */
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @param {google.cloud.functions.v1.CloudFunctionsService.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudFunctionsService.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                            return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                        }, "name", { value: "GetIamPolicy" });
    
                        /**
                         * Calls GetIamPolicy.
                         * @function getIamPolicy
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                         * @returns {Promise<google.iam.v1.Policy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v1.CloudFunctionsService|testIamPermissions}.
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @typedef TestIamPermissionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                         */
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @param {google.cloud.functions.v1.CloudFunctionsService.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(CloudFunctionsService.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                            return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                        }, "name", { value: "TestIamPermissions" });
    
                        /**
                         * Calls TestIamPermissions.
                         * @function testIamPermissions
                         * @memberof google.cloud.functions.v1.CloudFunctionsService
                         * @instance
                         * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                         * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                         * @variation 2
                         */
    
                        return CloudFunctionsService;
                    })();
    
                    v1.CloudFunction = (function() {
    
                        /**
                         * Properties of a CloudFunction.
                         * @memberof google.cloud.functions.v1
                         * @interface ICloudFunction
                         * @property {string|null} [name] CloudFunction name
                         * @property {string|null} [description] CloudFunction description
                         * @property {string|null} [sourceArchiveUrl] CloudFunction sourceArchiveUrl
                         * @property {google.cloud.functions.v1.ISourceRepository|null} [sourceRepository] CloudFunction sourceRepository
                         * @property {string|null} [sourceUploadUrl] CloudFunction sourceUploadUrl
                         * @property {google.cloud.functions.v1.IHttpsTrigger|null} [httpsTrigger] CloudFunction httpsTrigger
                         * @property {google.cloud.functions.v1.IEventTrigger|null} [eventTrigger] CloudFunction eventTrigger
                         * @property {google.cloud.functions.v1.CloudFunctionStatus|null} [status] CloudFunction status
                         * @property {string|null} [entryPoint] CloudFunction entryPoint
                         * @property {string|null} [runtime] CloudFunction runtime
                         * @property {google.protobuf.IDuration|null} [timeout] CloudFunction timeout
                         * @property {number|null} [availableMemoryMb] CloudFunction availableMemoryMb
                         * @property {string|null} [serviceAccountEmail] CloudFunction serviceAccountEmail
                         * @property {google.protobuf.ITimestamp|null} [updateTime] CloudFunction updateTime
                         * @property {number|Long|null} [versionId] CloudFunction versionId
                         * @property {Object.<string,string>|null} [labels] CloudFunction labels
                         * @property {Object.<string,string>|null} [environmentVariables] CloudFunction environmentVariables
                         * @property {Object.<string,string>|null} [buildEnvironmentVariables] CloudFunction buildEnvironmentVariables
                         * @property {string|null} [network] CloudFunction network
                         * @property {number|null} [maxInstances] CloudFunction maxInstances
                         * @property {number|null} [minInstances] CloudFunction minInstances
                         * @property {string|null} [vpcConnector] CloudFunction vpcConnector
                         * @property {google.cloud.functions.v1.CloudFunction.VpcConnectorEgressSettings|null} [vpcConnectorEgressSettings] CloudFunction vpcConnectorEgressSettings
                         * @property {google.cloud.functions.v1.CloudFunction.IngressSettings|null} [ingressSettings] CloudFunction ingressSettings
                         * @property {string|null} [kmsKeyName] CloudFunction kmsKeyName
                         * @property {string|null} [buildWorkerPool] CloudFunction buildWorkerPool
                         * @property {string|null} [buildId] CloudFunction buildId
                         * @property {string|null} [buildName] CloudFunction buildName
                         * @property {Array.<google.cloud.functions.v1.ISecretEnvVar>|null} [secretEnvironmentVariables] CloudFunction secretEnvironmentVariables
                         * @property {Array.<google.cloud.functions.v1.ISecretVolume>|null} [secretVolumes] CloudFunction secretVolumes
                         * @property {string|null} [sourceToken] CloudFunction sourceToken
                         * @property {string|null} [dockerRepository] CloudFunction dockerRepository
                         * @property {google.cloud.functions.v1.CloudFunction.DockerRegistry|null} [dockerRegistry] CloudFunction dockerRegistry
                         */
    
                        /**
                         * Constructs a new CloudFunction.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a CloudFunction.
                         * @implements ICloudFunction
                         * @constructor
                         * @param {google.cloud.functions.v1.ICloudFunction=} [properties] Properties to set
                         */
                        function CloudFunction(properties) {
                            this.labels = {};
                            this.environmentVariables = {};
                            this.buildEnvironmentVariables = {};
                            this.secretEnvironmentVariables = [];
                            this.secretVolumes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CloudFunction name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.name = "";
    
                        /**
                         * CloudFunction description.
                         * @member {string} description
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.description = "";
    
                        /**
                         * CloudFunction sourceArchiveUrl.
                         * @member {string|null|undefined} sourceArchiveUrl
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.sourceArchiveUrl = null;
    
                        /**
                         * CloudFunction sourceRepository.
                         * @member {google.cloud.functions.v1.ISourceRepository|null|undefined} sourceRepository
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.sourceRepository = null;
    
                        /**
                         * CloudFunction sourceUploadUrl.
                         * @member {string|null|undefined} sourceUploadUrl
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.sourceUploadUrl = null;
    
                        /**
                         * CloudFunction httpsTrigger.
                         * @member {google.cloud.functions.v1.IHttpsTrigger|null|undefined} httpsTrigger
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.httpsTrigger = null;
    
                        /**
                         * CloudFunction eventTrigger.
                         * @member {google.cloud.functions.v1.IEventTrigger|null|undefined} eventTrigger
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.eventTrigger = null;
    
                        /**
                         * CloudFunction status.
                         * @member {google.cloud.functions.v1.CloudFunctionStatus} status
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.status = 0;
    
                        /**
                         * CloudFunction entryPoint.
                         * @member {string} entryPoint
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.entryPoint = "";
    
                        /**
                         * CloudFunction runtime.
                         * @member {string} runtime
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.runtime = "";
    
                        /**
                         * CloudFunction timeout.
                         * @member {google.protobuf.IDuration|null|undefined} timeout
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.timeout = null;
    
                        /**
                         * CloudFunction availableMemoryMb.
                         * @member {number} availableMemoryMb
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.availableMemoryMb = 0;
    
                        /**
                         * CloudFunction serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.serviceAccountEmail = "";
    
                        /**
                         * CloudFunction updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.updateTime = null;
    
                        /**
                         * CloudFunction versionId.
                         * @member {number|Long} versionId
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.versionId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * CloudFunction labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.labels = $util.emptyObject;
    
                        /**
                         * CloudFunction environmentVariables.
                         * @member {Object.<string,string>} environmentVariables
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.environmentVariables = $util.emptyObject;
    
                        /**
                         * CloudFunction buildEnvironmentVariables.
                         * @member {Object.<string,string>} buildEnvironmentVariables
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.buildEnvironmentVariables = $util.emptyObject;
    
                        /**
                         * CloudFunction network.
                         * @member {string} network
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.network = "";
    
                        /**
                         * CloudFunction maxInstances.
                         * @member {number} maxInstances
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.maxInstances = 0;
    
                        /**
                         * CloudFunction minInstances.
                         * @member {number} minInstances
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.minInstances = 0;
    
                        /**
                         * CloudFunction vpcConnector.
                         * @member {string} vpcConnector
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.vpcConnector = "";
    
                        /**
                         * CloudFunction vpcConnectorEgressSettings.
                         * @member {google.cloud.functions.v1.CloudFunction.VpcConnectorEgressSettings} vpcConnectorEgressSettings
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.vpcConnectorEgressSettings = 0;
    
                        /**
                         * CloudFunction ingressSettings.
                         * @member {google.cloud.functions.v1.CloudFunction.IngressSettings} ingressSettings
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.ingressSettings = 0;
    
                        /**
                         * CloudFunction kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.kmsKeyName = "";
    
                        /**
                         * CloudFunction buildWorkerPool.
                         * @member {string} buildWorkerPool
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.buildWorkerPool = "";
    
                        /**
                         * CloudFunction buildId.
                         * @member {string} buildId
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.buildId = "";
    
                        /**
                         * CloudFunction buildName.
                         * @member {string} buildName
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.buildName = "";
    
                        /**
                         * CloudFunction secretEnvironmentVariables.
                         * @member {Array.<google.cloud.functions.v1.ISecretEnvVar>} secretEnvironmentVariables
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.secretEnvironmentVariables = $util.emptyArray;
    
                        /**
                         * CloudFunction secretVolumes.
                         * @member {Array.<google.cloud.functions.v1.ISecretVolume>} secretVolumes
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.secretVolumes = $util.emptyArray;
    
                        /**
                         * CloudFunction sourceToken.
                         * @member {string} sourceToken
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.sourceToken = "";
    
                        /**
                         * CloudFunction dockerRepository.
                         * @member {string} dockerRepository
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.dockerRepository = "";
    
                        /**
                         * CloudFunction dockerRegistry.
                         * @member {google.cloud.functions.v1.CloudFunction.DockerRegistry} dockerRegistry
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        CloudFunction.prototype.dockerRegistry = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CloudFunction sourceCode.
                         * @member {"sourceArchiveUrl"|"sourceRepository"|"sourceUploadUrl"|undefined} sourceCode
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        Object.defineProperty(CloudFunction.prototype, "sourceCode", {
                            get: $util.oneOfGetter($oneOfFields = ["sourceArchiveUrl", "sourceRepository", "sourceUploadUrl"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * CloudFunction trigger.
                         * @member {"httpsTrigger"|"eventTrigger"|undefined} trigger
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         */
                        Object.defineProperty(CloudFunction.prototype, "trigger", {
                            get: $util.oneOfGetter($oneOfFields = ["httpsTrigger", "eventTrigger"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CloudFunction instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @static
                         * @param {google.cloud.functions.v1.ICloudFunction=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.CloudFunction} CloudFunction instance
                         */
                        CloudFunction.create = function create(properties) {
                            return new CloudFunction(properties);
                        };
    
                        /**
                         * Encodes the specified CloudFunction message. Does not implicitly {@link google.cloud.functions.v1.CloudFunction.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @static
                         * @param {google.cloud.functions.v1.ICloudFunction} message CloudFunction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudFunction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.sourceArchiveUrl != null && Object.hasOwnProperty.call(message, "sourceArchiveUrl"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.sourceArchiveUrl);
                            if (message.sourceRepository != null && Object.hasOwnProperty.call(message, "sourceRepository"))
                                $root.google.cloud.functions.v1.SourceRepository.encode(message.sourceRepository, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.httpsTrigger != null && Object.hasOwnProperty.call(message, "httpsTrigger"))
                                $root.google.cloud.functions.v1.HttpsTrigger.encode(message.httpsTrigger, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.eventTrigger != null && Object.hasOwnProperty.call(message, "eventTrigger"))
                                $root.google.cloud.functions.v1.EventTrigger.encode(message.eventTrigger, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.status);
                            if (message.entryPoint != null && Object.hasOwnProperty.call(message, "entryPoint"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.entryPoint);
                            if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                                $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.availableMemoryMb != null && Object.hasOwnProperty.call(message, "availableMemoryMb"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.availableMemoryMb);
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.serviceAccountEmail);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.versionId != null && Object.hasOwnProperty.call(message, "versionId"))
                                writer.uint32(/* id 14, wireType 0 =*/112).int64(message.versionId);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 15, wireType 2 =*/122).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.sourceUploadUrl != null && Object.hasOwnProperty.call(message, "sourceUploadUrl"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.sourceUploadUrl);
                            if (message.environmentVariables != null && Object.hasOwnProperty.call(message, "environmentVariables"))
                                for (var keys = Object.keys(message.environmentVariables), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 17, wireType 2 =*/138).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.environmentVariables[keys[i]]).ldelim();
                            if (message.network != null && Object.hasOwnProperty.call(message, "network"))
                                writer.uint32(/* id 18, wireType 2 =*/146).string(message.network);
                            if (message.runtime != null && Object.hasOwnProperty.call(message, "runtime"))
                                writer.uint32(/* id 19, wireType 2 =*/154).string(message.runtime);
                            if (message.maxInstances != null && Object.hasOwnProperty.call(message, "maxInstances"))
                                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.maxInstances);
                            if (message.vpcConnector != null && Object.hasOwnProperty.call(message, "vpcConnector"))
                                writer.uint32(/* id 22, wireType 2 =*/178).string(message.vpcConnector);
                            if (message.vpcConnectorEgressSettings != null && Object.hasOwnProperty.call(message, "vpcConnectorEgressSettings"))
                                writer.uint32(/* id 23, wireType 0 =*/184).int32(message.vpcConnectorEgressSettings);
                            if (message.ingressSettings != null && Object.hasOwnProperty.call(message, "ingressSettings"))
                                writer.uint32(/* id 24, wireType 0 =*/192).int32(message.ingressSettings);
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 25, wireType 2 =*/202).string(message.kmsKeyName);
                            if (message.buildWorkerPool != null && Object.hasOwnProperty.call(message, "buildWorkerPool"))
                                writer.uint32(/* id 26, wireType 2 =*/210).string(message.buildWorkerPool);
                            if (message.buildId != null && Object.hasOwnProperty.call(message, "buildId"))
                                writer.uint32(/* id 27, wireType 2 =*/218).string(message.buildId);
                            if (message.buildEnvironmentVariables != null && Object.hasOwnProperty.call(message, "buildEnvironmentVariables"))
                                for (var keys = Object.keys(message.buildEnvironmentVariables), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 28, wireType 2 =*/226).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.buildEnvironmentVariables[keys[i]]).ldelim();
                            if (message.secretEnvironmentVariables != null && message.secretEnvironmentVariables.length)
                                for (var i = 0; i < message.secretEnvironmentVariables.length; ++i)
                                    $root.google.cloud.functions.v1.SecretEnvVar.encode(message.secretEnvironmentVariables[i], writer.uint32(/* id 29, wireType 2 =*/234).fork()).ldelim();
                            if (message.secretVolumes != null && message.secretVolumes.length)
                                for (var i = 0; i < message.secretVolumes.length; ++i)
                                    $root.google.cloud.functions.v1.SecretVolume.encode(message.secretVolumes[i], writer.uint32(/* id 30, wireType 2 =*/242).fork()).ldelim();
                            if (message.sourceToken != null && Object.hasOwnProperty.call(message, "sourceToken"))
                                writer.uint32(/* id 31, wireType 2 =*/250).string(message.sourceToken);
                            if (message.minInstances != null && Object.hasOwnProperty.call(message, "minInstances"))
                                writer.uint32(/* id 32, wireType 0 =*/256).int32(message.minInstances);
                            if (message.buildName != null && Object.hasOwnProperty.call(message, "buildName"))
                                writer.uint32(/* id 33, wireType 2 =*/266).string(message.buildName);
                            if (message.dockerRepository != null && Object.hasOwnProperty.call(message, "dockerRepository"))
                                writer.uint32(/* id 34, wireType 2 =*/274).string(message.dockerRepository);
                            if (message.dockerRegistry != null && Object.hasOwnProperty.call(message, "dockerRegistry"))
                                writer.uint32(/* id 35, wireType 0 =*/280).int32(message.dockerRegistry);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CloudFunction message, length delimited. Does not implicitly {@link google.cloud.functions.v1.CloudFunction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @static
                         * @param {google.cloud.functions.v1.ICloudFunction} message CloudFunction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloudFunction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CloudFunction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.CloudFunction} CloudFunction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudFunction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.CloudFunction(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.sourceArchiveUrl = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.sourceRepository = $root.google.cloud.functions.v1.SourceRepository.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.sourceUploadUrl = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.httpsTrigger = $root.google.cloud.functions.v1.HttpsTrigger.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.eventTrigger = $root.google.cloud.functions.v1.EventTrigger.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.status = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.entryPoint = reader.string();
                                        break;
                                    }
                                case 19: {
                                        message.runtime = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.availableMemoryMb = reader.int32();
                                        break;
                                    }
                                case 11: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.versionId = reader.int64();
                                        break;
                                    }
                                case 15: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 17: {
                                        if (message.environmentVariables === $util.emptyObject)
                                            message.environmentVariables = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.environmentVariables[key] = value;
                                        break;
                                    }
                                case 28: {
                                        if (message.buildEnvironmentVariables === $util.emptyObject)
                                            message.buildEnvironmentVariables = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.buildEnvironmentVariables[key] = value;
                                        break;
                                    }
                                case 18: {
                                        message.network = reader.string();
                                        break;
                                    }
                                case 20: {
                                        message.maxInstances = reader.int32();
                                        break;
                                    }
                                case 32: {
                                        message.minInstances = reader.int32();
                                        break;
                                    }
                                case 22: {
                                        message.vpcConnector = reader.string();
                                        break;
                                    }
                                case 23: {
                                        message.vpcConnectorEgressSettings = reader.int32();
                                        break;
                                    }
                                case 24: {
                                        message.ingressSettings = reader.int32();
                                        break;
                                    }
                                case 25: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                case 26: {
                                        message.buildWorkerPool = reader.string();
                                        break;
                                    }
                                case 27: {
                                        message.buildId = reader.string();
                                        break;
                                    }
                                case 33: {
                                        message.buildName = reader.string();
                                        break;
                                    }
                                case 29: {
                                        if (!(message.secretEnvironmentVariables && message.secretEnvironmentVariables.length))
                                            message.secretEnvironmentVariables = [];
                                        message.secretEnvironmentVariables.push($root.google.cloud.functions.v1.SecretEnvVar.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 30: {
                                        if (!(message.secretVolumes && message.secretVolumes.length))
                                            message.secretVolumes = [];
                                        message.secretVolumes.push($root.google.cloud.functions.v1.SecretVolume.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 31: {
                                        message.sourceToken = reader.string();
                                        break;
                                    }
                                case 34: {
                                        message.dockerRepository = reader.string();
                                        break;
                                    }
                                case 35: {
                                        message.dockerRegistry = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CloudFunction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.CloudFunction} CloudFunction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloudFunction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CloudFunction message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CloudFunction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.sourceArchiveUrl != null && message.hasOwnProperty("sourceArchiveUrl")) {
                                properties.sourceCode = 1;
                                if (!$util.isString(message.sourceArchiveUrl))
                                    return "sourceArchiveUrl: string expected";
                            }
                            if (message.sourceRepository != null && message.hasOwnProperty("sourceRepository")) {
                                if (properties.sourceCode === 1)
                                    return "sourceCode: multiple values";
                                properties.sourceCode = 1;
                                {
                                    var error = $root.google.cloud.functions.v1.SourceRepository.verify(message.sourceRepository);
                                    if (error)
                                        return "sourceRepository." + error;
                                }
                            }
                            if (message.sourceUploadUrl != null && message.hasOwnProperty("sourceUploadUrl")) {
                                if (properties.sourceCode === 1)
                                    return "sourceCode: multiple values";
                                properties.sourceCode = 1;
                                if (!$util.isString(message.sourceUploadUrl))
                                    return "sourceUploadUrl: string expected";
                            }
                            if (message.httpsTrigger != null && message.hasOwnProperty("httpsTrigger")) {
                                properties.trigger = 1;
                                {
                                    var error = $root.google.cloud.functions.v1.HttpsTrigger.verify(message.httpsTrigger);
                                    if (error)
                                        return "httpsTrigger." + error;
                                }
                            }
                            if (message.eventTrigger != null && message.hasOwnProperty("eventTrigger")) {
                                if (properties.trigger === 1)
                                    return "trigger: multiple values";
                                properties.trigger = 1;
                                {
                                    var error = $root.google.cloud.functions.v1.EventTrigger.verify(message.eventTrigger);
                                    if (error)
                                        return "eventTrigger." + error;
                                }
                            }
                            if (message.status != null && message.hasOwnProperty("status"))
                                switch (message.status) {
                                default:
                                    return "status: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.entryPoint != null && message.hasOwnProperty("entryPoint"))
                                if (!$util.isString(message.entryPoint))
                                    return "entryPoint: string expected";
                            if (message.runtime != null && message.hasOwnProperty("runtime"))
                                if (!$util.isString(message.runtime))
                                    return "runtime: string expected";
                            if (message.timeout != null && message.hasOwnProperty("timeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.timeout);
                                if (error)
                                    return "timeout." + error;
                            }
                            if (message.availableMemoryMb != null && message.hasOwnProperty("availableMemoryMb"))
                                if (!$util.isInteger(message.availableMemoryMb))
                                    return "availableMemoryMb: integer expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.versionId != null && message.hasOwnProperty("versionId"))
                                if (!$util.isInteger(message.versionId) && !(message.versionId && $util.isInteger(message.versionId.low) && $util.isInteger(message.versionId.high)))
                                    return "versionId: integer|Long expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.environmentVariables != null && message.hasOwnProperty("environmentVariables")) {
                                if (!$util.isObject(message.environmentVariables))
                                    return "environmentVariables: object expected";
                                var key = Object.keys(message.environmentVariables);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.environmentVariables[key[i]]))
                                        return "environmentVariables: string{k:string} expected";
                            }
                            if (message.buildEnvironmentVariables != null && message.hasOwnProperty("buildEnvironmentVariables")) {
                                if (!$util.isObject(message.buildEnvironmentVariables))
                                    return "buildEnvironmentVariables: object expected";
                                var key = Object.keys(message.buildEnvironmentVariables);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.buildEnvironmentVariables[key[i]]))
                                        return "buildEnvironmentVariables: string{k:string} expected";
                            }
                            if (message.network != null && message.hasOwnProperty("network"))
                                if (!$util.isString(message.network))
                                    return "network: string expected";
                            if (message.maxInstances != null && message.hasOwnProperty("maxInstances"))
                                if (!$util.isInteger(message.maxInstances))
                                    return "maxInstances: integer expected";
                            if (message.minInstances != null && message.hasOwnProperty("minInstances"))
                                if (!$util.isInteger(message.minInstances))
                                    return "minInstances: integer expected";
                            if (message.vpcConnector != null && message.hasOwnProperty("vpcConnector"))
                                if (!$util.isString(message.vpcConnector))
                                    return "vpcConnector: string expected";
                            if (message.vpcConnectorEgressSettings != null && message.hasOwnProperty("vpcConnectorEgressSettings"))
                                switch (message.vpcConnectorEgressSettings) {
                                default:
                                    return "vpcConnectorEgressSettings: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.ingressSettings != null && message.hasOwnProperty("ingressSettings"))
                                switch (message.ingressSettings) {
                                default:
                                    return "ingressSettings: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            if (message.buildWorkerPool != null && message.hasOwnProperty("buildWorkerPool"))
                                if (!$util.isString(message.buildWorkerPool))
                                    return "buildWorkerPool: string expected";
                            if (message.buildId != null && message.hasOwnProperty("buildId"))
                                if (!$util.isString(message.buildId))
                                    return "buildId: string expected";
                            if (message.buildName != null && message.hasOwnProperty("buildName"))
                                if (!$util.isString(message.buildName))
                                    return "buildName: string expected";
                            if (message.secretEnvironmentVariables != null && message.hasOwnProperty("secretEnvironmentVariables")) {
                                if (!Array.isArray(message.secretEnvironmentVariables))
                                    return "secretEnvironmentVariables: array expected";
                                for (var i = 0; i < message.secretEnvironmentVariables.length; ++i) {
                                    var error = $root.google.cloud.functions.v1.SecretEnvVar.verify(message.secretEnvironmentVariables[i]);
                                    if (error)
                                        return "secretEnvironmentVariables." + error;
                                }
                            }
                            if (message.secretVolumes != null && message.hasOwnProperty("secretVolumes")) {
                                if (!Array.isArray(message.secretVolumes))
                                    return "secretVolumes: array expected";
                                for (var i = 0; i < message.secretVolumes.length; ++i) {
                                    var error = $root.google.cloud.functions.v1.SecretVolume.verify(message.secretVolumes[i]);
                                    if (error)
                                        return "secretVolumes." + error;
                                }
                            }
                            if (message.sourceToken != null && message.hasOwnProperty("sourceToken"))
                                if (!$util.isString(message.sourceToken))
                                    return "sourceToken: string expected";
                            if (message.dockerRepository != null && message.hasOwnProperty("dockerRepository"))
                                if (!$util.isString(message.dockerRepository))
                                    return "dockerRepository: string expected";
                            if (message.dockerRegistry != null && message.hasOwnProperty("dockerRegistry"))
                                switch (message.dockerRegistry) {
                                default:
                                    return "dockerRegistry: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CloudFunction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.CloudFunction} CloudFunction
                         */
                        CloudFunction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.CloudFunction)
                                return object;
                            var message = new $root.google.cloud.functions.v1.CloudFunction();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.sourceArchiveUrl != null)
                                message.sourceArchiveUrl = String(object.sourceArchiveUrl);
                            if (object.sourceRepository != null) {
                                if (typeof object.sourceRepository !== "object")
                                    throw TypeError(".google.cloud.functions.v1.CloudFunction.sourceRepository: object expected");
                                message.sourceRepository = $root.google.cloud.functions.v1.SourceRepository.fromObject(object.sourceRepository);
                            }
                            if (object.sourceUploadUrl != null)
                                message.sourceUploadUrl = String(object.sourceUploadUrl);
                            if (object.httpsTrigger != null) {
                                if (typeof object.httpsTrigger !== "object")
                                    throw TypeError(".google.cloud.functions.v1.CloudFunction.httpsTrigger: object expected");
                                message.httpsTrigger = $root.google.cloud.functions.v1.HttpsTrigger.fromObject(object.httpsTrigger);
                            }
                            if (object.eventTrigger != null) {
                                if (typeof object.eventTrigger !== "object")
                                    throw TypeError(".google.cloud.functions.v1.CloudFunction.eventTrigger: object expected");
                                message.eventTrigger = $root.google.cloud.functions.v1.EventTrigger.fromObject(object.eventTrigger);
                            }
                            switch (object.status) {
                            default:
                                if (typeof object.status === "number") {
                                    message.status = object.status;
                                    break;
                                }
                                break;
                            case "CLOUD_FUNCTION_STATUS_UNSPECIFIED":
                            case 0:
                                message.status = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.status = 1;
                                break;
                            case "OFFLINE":
                            case 2:
                                message.status = 2;
                                break;
                            case "DEPLOY_IN_PROGRESS":
                            case 3:
                                message.status = 3;
                                break;
                            case "DELETE_IN_PROGRESS":
                            case 4:
                                message.status = 4;
                                break;
                            case "UNKNOWN":
                            case 5:
                                message.status = 5;
                                break;
                            }
                            if (object.entryPoint != null)
                                message.entryPoint = String(object.entryPoint);
                            if (object.runtime != null)
                                message.runtime = String(object.runtime);
                            if (object.timeout != null) {
                                if (typeof object.timeout !== "object")
                                    throw TypeError(".google.cloud.functions.v1.CloudFunction.timeout: object expected");
                                message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                            }
                            if (object.availableMemoryMb != null)
                                message.availableMemoryMb = object.availableMemoryMb | 0;
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.functions.v1.CloudFunction.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.versionId != null)
                                if ($util.Long)
                                    (message.versionId = $util.Long.fromValue(object.versionId)).unsigned = false;
                                else if (typeof object.versionId === "string")
                                    message.versionId = parseInt(object.versionId, 10);
                                else if (typeof object.versionId === "number")
                                    message.versionId = object.versionId;
                                else if (typeof object.versionId === "object")
                                    message.versionId = new $util.LongBits(object.versionId.low >>> 0, object.versionId.high >>> 0).toNumber();
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.functions.v1.CloudFunction.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.environmentVariables) {
                                if (typeof object.environmentVariables !== "object")
                                    throw TypeError(".google.cloud.functions.v1.CloudFunction.environmentVariables: object expected");
                                message.environmentVariables = {};
                                for (var keys = Object.keys(object.environmentVariables), i = 0; i < keys.length; ++i)
                                    message.environmentVariables[keys[i]] = String(object.environmentVariables[keys[i]]);
                            }
                            if (object.buildEnvironmentVariables) {
                                if (typeof object.buildEnvironmentVariables !== "object")
                                    throw TypeError(".google.cloud.functions.v1.CloudFunction.buildEnvironmentVariables: object expected");
                                message.buildEnvironmentVariables = {};
                                for (var keys = Object.keys(object.buildEnvironmentVariables), i = 0; i < keys.length; ++i)
                                    message.buildEnvironmentVariables[keys[i]] = String(object.buildEnvironmentVariables[keys[i]]);
                            }
                            if (object.network != null)
                                message.network = String(object.network);
                            if (object.maxInstances != null)
                                message.maxInstances = object.maxInstances | 0;
                            if (object.minInstances != null)
                                message.minInstances = object.minInstances | 0;
                            if (object.vpcConnector != null)
                                message.vpcConnector = String(object.vpcConnector);
                            switch (object.vpcConnectorEgressSettings) {
                            default:
                                if (typeof object.vpcConnectorEgressSettings === "number") {
                                    message.vpcConnectorEgressSettings = object.vpcConnectorEgressSettings;
                                    break;
                                }
                                break;
                            case "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED":
                            case 0:
                                message.vpcConnectorEgressSettings = 0;
                                break;
                            case "PRIVATE_RANGES_ONLY":
                            case 1:
                                message.vpcConnectorEgressSettings = 1;
                                break;
                            case "ALL_TRAFFIC":
                            case 2:
                                message.vpcConnectorEgressSettings = 2;
                                break;
                            }
                            switch (object.ingressSettings) {
                            default:
                                if (typeof object.ingressSettings === "number") {
                                    message.ingressSettings = object.ingressSettings;
                                    break;
                                }
                                break;
                            case "INGRESS_SETTINGS_UNSPECIFIED":
                            case 0:
                                message.ingressSettings = 0;
                                break;
                            case "ALLOW_ALL":
                            case 1:
                                message.ingressSettings = 1;
                                break;
                            case "ALLOW_INTERNAL_ONLY":
                            case 2:
                                message.ingressSettings = 2;
                                break;
                            case "ALLOW_INTERNAL_AND_GCLB":
                            case 3:
                                message.ingressSettings = 3;
                                break;
                            }
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            if (object.buildWorkerPool != null)
                                message.buildWorkerPool = String(object.buildWorkerPool);
                            if (object.buildId != null)
                                message.buildId = String(object.buildId);
                            if (object.buildName != null)
                                message.buildName = String(object.buildName);
                            if (object.secretEnvironmentVariables) {
                                if (!Array.isArray(object.secretEnvironmentVariables))
                                    throw TypeError(".google.cloud.functions.v1.CloudFunction.secretEnvironmentVariables: array expected");
                                message.secretEnvironmentVariables = [];
                                for (var i = 0; i < object.secretEnvironmentVariables.length; ++i) {
                                    if (typeof object.secretEnvironmentVariables[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v1.CloudFunction.secretEnvironmentVariables: object expected");
                                    message.secretEnvironmentVariables[i] = $root.google.cloud.functions.v1.SecretEnvVar.fromObject(object.secretEnvironmentVariables[i]);
                                }
                            }
                            if (object.secretVolumes) {
                                if (!Array.isArray(object.secretVolumes))
                                    throw TypeError(".google.cloud.functions.v1.CloudFunction.secretVolumes: array expected");
                                message.secretVolumes = [];
                                for (var i = 0; i < object.secretVolumes.length; ++i) {
                                    if (typeof object.secretVolumes[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v1.CloudFunction.secretVolumes: object expected");
                                    message.secretVolumes[i] = $root.google.cloud.functions.v1.SecretVolume.fromObject(object.secretVolumes[i]);
                                }
                            }
                            if (object.sourceToken != null)
                                message.sourceToken = String(object.sourceToken);
                            if (object.dockerRepository != null)
                                message.dockerRepository = String(object.dockerRepository);
                            switch (object.dockerRegistry) {
                            default:
                                if (typeof object.dockerRegistry === "number") {
                                    message.dockerRegistry = object.dockerRegistry;
                                    break;
                                }
                                break;
                            case "DOCKER_REGISTRY_UNSPECIFIED":
                            case 0:
                                message.dockerRegistry = 0;
                                break;
                            case "CONTAINER_REGISTRY":
                            case 1:
                                message.dockerRegistry = 1;
                                break;
                            case "ARTIFACT_REGISTRY":
                            case 2:
                                message.dockerRegistry = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CloudFunction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @static
                         * @param {google.cloud.functions.v1.CloudFunction} message CloudFunction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CloudFunction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.secretEnvironmentVariables = [];
                                object.secretVolumes = [];
                            }
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.environmentVariables = {};
                                object.buildEnvironmentVariables = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.status = options.enums === String ? "CLOUD_FUNCTION_STATUS_UNSPECIFIED" : 0;
                                object.entryPoint = "";
                                object.timeout = null;
                                object.availableMemoryMb = 0;
                                object.serviceAccountEmail = "";
                                object.updateTime = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.versionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.versionId = options.longs === String ? "0" : 0;
                                object.network = "";
                                object.runtime = "";
                                object.maxInstances = 0;
                                object.vpcConnector = "";
                                object.vpcConnectorEgressSettings = options.enums === String ? "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED" : 0;
                                object.ingressSettings = options.enums === String ? "INGRESS_SETTINGS_UNSPECIFIED" : 0;
                                object.kmsKeyName = "";
                                object.buildWorkerPool = "";
                                object.buildId = "";
                                object.sourceToken = "";
                                object.minInstances = 0;
                                object.buildName = "";
                                object.dockerRepository = "";
                                object.dockerRegistry = options.enums === String ? "DOCKER_REGISTRY_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.sourceArchiveUrl != null && message.hasOwnProperty("sourceArchiveUrl")) {
                                object.sourceArchiveUrl = message.sourceArchiveUrl;
                                if (options.oneofs)
                                    object.sourceCode = "sourceArchiveUrl";
                            }
                            if (message.sourceRepository != null && message.hasOwnProperty("sourceRepository")) {
                                object.sourceRepository = $root.google.cloud.functions.v1.SourceRepository.toObject(message.sourceRepository, options);
                                if (options.oneofs)
                                    object.sourceCode = "sourceRepository";
                            }
                            if (message.httpsTrigger != null && message.hasOwnProperty("httpsTrigger")) {
                                object.httpsTrigger = $root.google.cloud.functions.v1.HttpsTrigger.toObject(message.httpsTrigger, options);
                                if (options.oneofs)
                                    object.trigger = "httpsTrigger";
                            }
                            if (message.eventTrigger != null && message.hasOwnProperty("eventTrigger")) {
                                object.eventTrigger = $root.google.cloud.functions.v1.EventTrigger.toObject(message.eventTrigger, options);
                                if (options.oneofs)
                                    object.trigger = "eventTrigger";
                            }
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = options.enums === String ? $root.google.cloud.functions.v1.CloudFunctionStatus[message.status] === undefined ? message.status : $root.google.cloud.functions.v1.CloudFunctionStatus[message.status] : message.status;
                            if (message.entryPoint != null && message.hasOwnProperty("entryPoint"))
                                object.entryPoint = message.entryPoint;
                            if (message.timeout != null && message.hasOwnProperty("timeout"))
                                object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                            if (message.availableMemoryMb != null && message.hasOwnProperty("availableMemoryMb"))
                                object.availableMemoryMb = message.availableMemoryMb;
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.versionId != null && message.hasOwnProperty("versionId"))
                                if (typeof message.versionId === "number")
                                    object.versionId = options.longs === String ? String(message.versionId) : message.versionId;
                                else
                                    object.versionId = options.longs === String ? $util.Long.prototype.toString.call(message.versionId) : options.longs === Number ? new $util.LongBits(message.versionId.low >>> 0, message.versionId.high >>> 0).toNumber() : message.versionId;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.sourceUploadUrl != null && message.hasOwnProperty("sourceUploadUrl")) {
                                object.sourceUploadUrl = message.sourceUploadUrl;
                                if (options.oneofs)
                                    object.sourceCode = "sourceUploadUrl";
                            }
                            if (message.environmentVariables && (keys2 = Object.keys(message.environmentVariables)).length) {
                                object.environmentVariables = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.environmentVariables[keys2[j]] = message.environmentVariables[keys2[j]];
                            }
                            if (message.network != null && message.hasOwnProperty("network"))
                                object.network = message.network;
                            if (message.runtime != null && message.hasOwnProperty("runtime"))
                                object.runtime = message.runtime;
                            if (message.maxInstances != null && message.hasOwnProperty("maxInstances"))
                                object.maxInstances = message.maxInstances;
                            if (message.vpcConnector != null && message.hasOwnProperty("vpcConnector"))
                                object.vpcConnector = message.vpcConnector;
                            if (message.vpcConnectorEgressSettings != null && message.hasOwnProperty("vpcConnectorEgressSettings"))
                                object.vpcConnectorEgressSettings = options.enums === String ? $root.google.cloud.functions.v1.CloudFunction.VpcConnectorEgressSettings[message.vpcConnectorEgressSettings] === undefined ? message.vpcConnectorEgressSettings : $root.google.cloud.functions.v1.CloudFunction.VpcConnectorEgressSettings[message.vpcConnectorEgressSettings] : message.vpcConnectorEgressSettings;
                            if (message.ingressSettings != null && message.hasOwnProperty("ingressSettings"))
                                object.ingressSettings = options.enums === String ? $root.google.cloud.functions.v1.CloudFunction.IngressSettings[message.ingressSettings] === undefined ? message.ingressSettings : $root.google.cloud.functions.v1.CloudFunction.IngressSettings[message.ingressSettings] : message.ingressSettings;
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            if (message.buildWorkerPool != null && message.hasOwnProperty("buildWorkerPool"))
                                object.buildWorkerPool = message.buildWorkerPool;
                            if (message.buildId != null && message.hasOwnProperty("buildId"))
                                object.buildId = message.buildId;
                            if (message.buildEnvironmentVariables && (keys2 = Object.keys(message.buildEnvironmentVariables)).length) {
                                object.buildEnvironmentVariables = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.buildEnvironmentVariables[keys2[j]] = message.buildEnvironmentVariables[keys2[j]];
                            }
                            if (message.secretEnvironmentVariables && message.secretEnvironmentVariables.length) {
                                object.secretEnvironmentVariables = [];
                                for (var j = 0; j < message.secretEnvironmentVariables.length; ++j)
                                    object.secretEnvironmentVariables[j] = $root.google.cloud.functions.v1.SecretEnvVar.toObject(message.secretEnvironmentVariables[j], options);
                            }
                            if (message.secretVolumes && message.secretVolumes.length) {
                                object.secretVolumes = [];
                                for (var j = 0; j < message.secretVolumes.length; ++j)
                                    object.secretVolumes[j] = $root.google.cloud.functions.v1.SecretVolume.toObject(message.secretVolumes[j], options);
                            }
                            if (message.sourceToken != null && message.hasOwnProperty("sourceToken"))
                                object.sourceToken = message.sourceToken;
                            if (message.minInstances != null && message.hasOwnProperty("minInstances"))
                                object.minInstances = message.minInstances;
                            if (message.buildName != null && message.hasOwnProperty("buildName"))
                                object.buildName = message.buildName;
                            if (message.dockerRepository != null && message.hasOwnProperty("dockerRepository"))
                                object.dockerRepository = message.dockerRepository;
                            if (message.dockerRegistry != null && message.hasOwnProperty("dockerRegistry"))
                                object.dockerRegistry = options.enums === String ? $root.google.cloud.functions.v1.CloudFunction.DockerRegistry[message.dockerRegistry] === undefined ? message.dockerRegistry : $root.google.cloud.functions.v1.CloudFunction.DockerRegistry[message.dockerRegistry] : message.dockerRegistry;
                            return object;
                        };
    
                        /**
                         * Converts this CloudFunction to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CloudFunction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CloudFunction
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.CloudFunction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CloudFunction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.CloudFunction";
                        };
    
                        /**
                         * VpcConnectorEgressSettings enum.
                         * @name google.cloud.functions.v1.CloudFunction.VpcConnectorEgressSettings
                         * @enum {number}
                         * @property {number} VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED=0 VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED value
                         * @property {number} PRIVATE_RANGES_ONLY=1 PRIVATE_RANGES_ONLY value
                         * @property {number} ALL_TRAFFIC=2 ALL_TRAFFIC value
                         */
                        CloudFunction.VpcConnectorEgressSettings = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PRIVATE_RANGES_ONLY"] = 1;
                            values[valuesById[2] = "ALL_TRAFFIC"] = 2;
                            return values;
                        })();
    
                        /**
                         * IngressSettings enum.
                         * @name google.cloud.functions.v1.CloudFunction.IngressSettings
                         * @enum {number}
                         * @property {number} INGRESS_SETTINGS_UNSPECIFIED=0 INGRESS_SETTINGS_UNSPECIFIED value
                         * @property {number} ALLOW_ALL=1 ALLOW_ALL value
                         * @property {number} ALLOW_INTERNAL_ONLY=2 ALLOW_INTERNAL_ONLY value
                         * @property {number} ALLOW_INTERNAL_AND_GCLB=3 ALLOW_INTERNAL_AND_GCLB value
                         */
                        CloudFunction.IngressSettings = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "INGRESS_SETTINGS_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ALLOW_ALL"] = 1;
                            values[valuesById[2] = "ALLOW_INTERNAL_ONLY"] = 2;
                            values[valuesById[3] = "ALLOW_INTERNAL_AND_GCLB"] = 3;
                            return values;
                        })();
    
                        /**
                         * DockerRegistry enum.
                         * @name google.cloud.functions.v1.CloudFunction.DockerRegistry
                         * @enum {number}
                         * @property {number} DOCKER_REGISTRY_UNSPECIFIED=0 DOCKER_REGISTRY_UNSPECIFIED value
                         * @property {number} CONTAINER_REGISTRY=1 CONTAINER_REGISTRY value
                         * @property {number} ARTIFACT_REGISTRY=2 ARTIFACT_REGISTRY value
                         */
                        CloudFunction.DockerRegistry = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DOCKER_REGISTRY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CONTAINER_REGISTRY"] = 1;
                            values[valuesById[2] = "ARTIFACT_REGISTRY"] = 2;
                            return values;
                        })();
    
                        return CloudFunction;
                    })();
    
                    v1.SourceRepository = (function() {
    
                        /**
                         * Properties of a SourceRepository.
                         * @memberof google.cloud.functions.v1
                         * @interface ISourceRepository
                         * @property {string|null} [url] SourceRepository url
                         * @property {string|null} [deployedUrl] SourceRepository deployedUrl
                         */
    
                        /**
                         * Constructs a new SourceRepository.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a SourceRepository.
                         * @implements ISourceRepository
                         * @constructor
                         * @param {google.cloud.functions.v1.ISourceRepository=} [properties] Properties to set
                         */
                        function SourceRepository(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SourceRepository url.
                         * @member {string} url
                         * @memberof google.cloud.functions.v1.SourceRepository
                         * @instance
                         */
                        SourceRepository.prototype.url = "";
    
                        /**
                         * SourceRepository deployedUrl.
                         * @member {string} deployedUrl
                         * @memberof google.cloud.functions.v1.SourceRepository
                         * @instance
                         */
                        SourceRepository.prototype.deployedUrl = "";
    
                        /**
                         * Creates a new SourceRepository instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.SourceRepository
                         * @static
                         * @param {google.cloud.functions.v1.ISourceRepository=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.SourceRepository} SourceRepository instance
                         */
                        SourceRepository.create = function create(properties) {
                            return new SourceRepository(properties);
                        };
    
                        /**
                         * Encodes the specified SourceRepository message. Does not implicitly {@link google.cloud.functions.v1.SourceRepository.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.SourceRepository
                         * @static
                         * @param {google.cloud.functions.v1.ISourceRepository} message SourceRepository message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceRepository.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.url);
                            if (message.deployedUrl != null && Object.hasOwnProperty.call(message, "deployedUrl"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.deployedUrl);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SourceRepository message, length delimited. Does not implicitly {@link google.cloud.functions.v1.SourceRepository.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.SourceRepository
                         * @static
                         * @param {google.cloud.functions.v1.ISourceRepository} message SourceRepository message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceRepository.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SourceRepository message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.SourceRepository
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.SourceRepository} SourceRepository
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceRepository.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.SourceRepository();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.url = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.deployedUrl = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SourceRepository message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.SourceRepository
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.SourceRepository} SourceRepository
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceRepository.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SourceRepository message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.SourceRepository
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SourceRepository.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            if (message.deployedUrl != null && message.hasOwnProperty("deployedUrl"))
                                if (!$util.isString(message.deployedUrl))
                                    return "deployedUrl: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SourceRepository message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.SourceRepository
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.SourceRepository} SourceRepository
                         */
                        SourceRepository.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.SourceRepository)
                                return object;
                            var message = new $root.google.cloud.functions.v1.SourceRepository();
                            if (object.url != null)
                                message.url = String(object.url);
                            if (object.deployedUrl != null)
                                message.deployedUrl = String(object.deployedUrl);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SourceRepository message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.SourceRepository
                         * @static
                         * @param {google.cloud.functions.v1.SourceRepository} message SourceRepository
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SourceRepository.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.url = "";
                                object.deployedUrl = "";
                            }
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            if (message.deployedUrl != null && message.hasOwnProperty("deployedUrl"))
                                object.deployedUrl = message.deployedUrl;
                            return object;
                        };
    
                        /**
                         * Converts this SourceRepository to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.SourceRepository
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SourceRepository.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SourceRepository
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.SourceRepository
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SourceRepository.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.SourceRepository";
                        };
    
                        return SourceRepository;
                    })();
    
                    v1.HttpsTrigger = (function() {
    
                        /**
                         * Properties of a HttpsTrigger.
                         * @memberof google.cloud.functions.v1
                         * @interface IHttpsTrigger
                         * @property {string|null} [url] HttpsTrigger url
                         * @property {google.cloud.functions.v1.HttpsTrigger.SecurityLevel|null} [securityLevel] HttpsTrigger securityLevel
                         */
    
                        /**
                         * Constructs a new HttpsTrigger.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a HttpsTrigger.
                         * @implements IHttpsTrigger
                         * @constructor
                         * @param {google.cloud.functions.v1.IHttpsTrigger=} [properties] Properties to set
                         */
                        function HttpsTrigger(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HttpsTrigger url.
                         * @member {string} url
                         * @memberof google.cloud.functions.v1.HttpsTrigger
                         * @instance
                         */
                        HttpsTrigger.prototype.url = "";
    
                        /**
                         * HttpsTrigger securityLevel.
                         * @member {google.cloud.functions.v1.HttpsTrigger.SecurityLevel} securityLevel
                         * @memberof google.cloud.functions.v1.HttpsTrigger
                         * @instance
                         */
                        HttpsTrigger.prototype.securityLevel = 0;
    
                        /**
                         * Creates a new HttpsTrigger instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.HttpsTrigger
                         * @static
                         * @param {google.cloud.functions.v1.IHttpsTrigger=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.HttpsTrigger} HttpsTrigger instance
                         */
                        HttpsTrigger.create = function create(properties) {
                            return new HttpsTrigger(properties);
                        };
    
                        /**
                         * Encodes the specified HttpsTrigger message. Does not implicitly {@link google.cloud.functions.v1.HttpsTrigger.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.HttpsTrigger
                         * @static
                         * @param {google.cloud.functions.v1.IHttpsTrigger} message HttpsTrigger message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpsTrigger.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.url);
                            if (message.securityLevel != null && Object.hasOwnProperty.call(message, "securityLevel"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.securityLevel);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HttpsTrigger message, length delimited. Does not implicitly {@link google.cloud.functions.v1.HttpsTrigger.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.HttpsTrigger
                         * @static
                         * @param {google.cloud.functions.v1.IHttpsTrigger} message HttpsTrigger message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HttpsTrigger.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HttpsTrigger message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.HttpsTrigger
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.HttpsTrigger} HttpsTrigger
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpsTrigger.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.HttpsTrigger();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.url = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.securityLevel = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HttpsTrigger message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.HttpsTrigger
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.HttpsTrigger} HttpsTrigger
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HttpsTrigger.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HttpsTrigger message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.HttpsTrigger
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HttpsTrigger.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            if (message.securityLevel != null && message.hasOwnProperty("securityLevel"))
                                switch (message.securityLevel) {
                                default:
                                    return "securityLevel: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a HttpsTrigger message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.HttpsTrigger
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.HttpsTrigger} HttpsTrigger
                         */
                        HttpsTrigger.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.HttpsTrigger)
                                return object;
                            var message = new $root.google.cloud.functions.v1.HttpsTrigger();
                            if (object.url != null)
                                message.url = String(object.url);
                            switch (object.securityLevel) {
                            default:
                                if (typeof object.securityLevel === "number") {
                                    message.securityLevel = object.securityLevel;
                                    break;
                                }
                                break;
                            case "SECURITY_LEVEL_UNSPECIFIED":
                            case 0:
                                message.securityLevel = 0;
                                break;
                            case "SECURE_ALWAYS":
                            case 1:
                                message.securityLevel = 1;
                                break;
                            case "SECURE_OPTIONAL":
                            case 2:
                                message.securityLevel = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HttpsTrigger message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.HttpsTrigger
                         * @static
                         * @param {google.cloud.functions.v1.HttpsTrigger} message HttpsTrigger
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HttpsTrigger.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.url = "";
                                object.securityLevel = options.enums === String ? "SECURITY_LEVEL_UNSPECIFIED" : 0;
                            }
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            if (message.securityLevel != null && message.hasOwnProperty("securityLevel"))
                                object.securityLevel = options.enums === String ? $root.google.cloud.functions.v1.HttpsTrigger.SecurityLevel[message.securityLevel] === undefined ? message.securityLevel : $root.google.cloud.functions.v1.HttpsTrigger.SecurityLevel[message.securityLevel] : message.securityLevel;
                            return object;
                        };
    
                        /**
                         * Converts this HttpsTrigger to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.HttpsTrigger
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HttpsTrigger.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HttpsTrigger
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.HttpsTrigger
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HttpsTrigger.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.HttpsTrigger";
                        };
    
                        /**
                         * SecurityLevel enum.
                         * @name google.cloud.functions.v1.HttpsTrigger.SecurityLevel
                         * @enum {number}
                         * @property {number} SECURITY_LEVEL_UNSPECIFIED=0 SECURITY_LEVEL_UNSPECIFIED value
                         * @property {number} SECURE_ALWAYS=1 SECURE_ALWAYS value
                         * @property {number} SECURE_OPTIONAL=2 SECURE_OPTIONAL value
                         */
                        HttpsTrigger.SecurityLevel = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SECURITY_LEVEL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SECURE_ALWAYS"] = 1;
                            values[valuesById[2] = "SECURE_OPTIONAL"] = 2;
                            return values;
                        })();
    
                        return HttpsTrigger;
                    })();
    
                    v1.EventTrigger = (function() {
    
                        /**
                         * Properties of an EventTrigger.
                         * @memberof google.cloud.functions.v1
                         * @interface IEventTrigger
                         * @property {string|null} [eventType] EventTrigger eventType
                         * @property {string|null} [resource] EventTrigger resource
                         * @property {string|null} [service] EventTrigger service
                         * @property {google.cloud.functions.v1.IFailurePolicy|null} [failurePolicy] EventTrigger failurePolicy
                         */
    
                        /**
                         * Constructs a new EventTrigger.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents an EventTrigger.
                         * @implements IEventTrigger
                         * @constructor
                         * @param {google.cloud.functions.v1.IEventTrigger=} [properties] Properties to set
                         */
                        function EventTrigger(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EventTrigger eventType.
                         * @member {string} eventType
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.eventType = "";
    
                        /**
                         * EventTrigger resource.
                         * @member {string} resource
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.resource = "";
    
                        /**
                         * EventTrigger service.
                         * @member {string} service
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.service = "";
    
                        /**
                         * EventTrigger failurePolicy.
                         * @member {google.cloud.functions.v1.IFailurePolicy|null|undefined} failurePolicy
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.failurePolicy = null;
    
                        /**
                         * Creates a new EventTrigger instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v1.IEventTrigger=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.EventTrigger} EventTrigger instance
                         */
                        EventTrigger.create = function create(properties) {
                            return new EventTrigger(properties);
                        };
    
                        /**
                         * Encodes the specified EventTrigger message. Does not implicitly {@link google.cloud.functions.v1.EventTrigger.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v1.IEventTrigger} message EventTrigger message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventTrigger.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.eventType != null && Object.hasOwnProperty.call(message, "eventType"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.eventType);
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.resource);
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.service);
                            if (message.failurePolicy != null && Object.hasOwnProperty.call(message, "failurePolicy"))
                                $root.google.cloud.functions.v1.FailurePolicy.encode(message.failurePolicy, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EventTrigger message, length delimited. Does not implicitly {@link google.cloud.functions.v1.EventTrigger.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v1.IEventTrigger} message EventTrigger message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventTrigger.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EventTrigger message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.EventTrigger} EventTrigger
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventTrigger.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.EventTrigger();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.eventType = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.resource = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.failurePolicy = $root.google.cloud.functions.v1.FailurePolicy.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EventTrigger message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.EventTrigger} EventTrigger
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventTrigger.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EventTrigger message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EventTrigger.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                if (!$util.isString(message.eventType))
                                    return "eventType: string expected";
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                if (!$util.isString(message.resource))
                                    return "resource: string expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.failurePolicy != null && message.hasOwnProperty("failurePolicy")) {
                                var error = $root.google.cloud.functions.v1.FailurePolicy.verify(message.failurePolicy);
                                if (error)
                                    return "failurePolicy." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EventTrigger message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.EventTrigger} EventTrigger
                         */
                        EventTrigger.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.EventTrigger)
                                return object;
                            var message = new $root.google.cloud.functions.v1.EventTrigger();
                            if (object.eventType != null)
                                message.eventType = String(object.eventType);
                            if (object.resource != null)
                                message.resource = String(object.resource);
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.failurePolicy != null) {
                                if (typeof object.failurePolicy !== "object")
                                    throw TypeError(".google.cloud.functions.v1.EventTrigger.failurePolicy: object expected");
                                message.failurePolicy = $root.google.cloud.functions.v1.FailurePolicy.fromObject(object.failurePolicy);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EventTrigger message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v1.EventTrigger} message EventTrigger
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EventTrigger.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.eventType = "";
                                object.resource = "";
                                object.service = "";
                                object.failurePolicy = null;
                            }
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                object.eventType = message.eventType;
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = message.resource;
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.failurePolicy != null && message.hasOwnProperty("failurePolicy"))
                                object.failurePolicy = $root.google.cloud.functions.v1.FailurePolicy.toObject(message.failurePolicy, options);
                            return object;
                        };
    
                        /**
                         * Converts this EventTrigger to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EventTrigger.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EventTrigger
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.EventTrigger
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EventTrigger.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.EventTrigger";
                        };
    
                        return EventTrigger;
                    })();
    
                    v1.FailurePolicy = (function() {
    
                        /**
                         * Properties of a FailurePolicy.
                         * @memberof google.cloud.functions.v1
                         * @interface IFailurePolicy
                         * @property {google.cloud.functions.v1.FailurePolicy.IRetry|null} [retry] FailurePolicy retry
                         */
    
                        /**
                         * Constructs a new FailurePolicy.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a FailurePolicy.
                         * @implements IFailurePolicy
                         * @constructor
                         * @param {google.cloud.functions.v1.IFailurePolicy=} [properties] Properties to set
                         */
                        function FailurePolicy(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FailurePolicy retry.
                         * @member {google.cloud.functions.v1.FailurePolicy.IRetry|null|undefined} retry
                         * @memberof google.cloud.functions.v1.FailurePolicy
                         * @instance
                         */
                        FailurePolicy.prototype.retry = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * FailurePolicy action.
                         * @member {"retry"|undefined} action
                         * @memberof google.cloud.functions.v1.FailurePolicy
                         * @instance
                         */
                        Object.defineProperty(FailurePolicy.prototype, "action", {
                            get: $util.oneOfGetter($oneOfFields = ["retry"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new FailurePolicy instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.FailurePolicy
                         * @static
                         * @param {google.cloud.functions.v1.IFailurePolicy=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.FailurePolicy} FailurePolicy instance
                         */
                        FailurePolicy.create = function create(properties) {
                            return new FailurePolicy(properties);
                        };
    
                        /**
                         * Encodes the specified FailurePolicy message. Does not implicitly {@link google.cloud.functions.v1.FailurePolicy.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.FailurePolicy
                         * @static
                         * @param {google.cloud.functions.v1.IFailurePolicy} message FailurePolicy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FailurePolicy.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.retry != null && Object.hasOwnProperty.call(message, "retry"))
                                $root.google.cloud.functions.v1.FailurePolicy.Retry.encode(message.retry, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FailurePolicy message, length delimited. Does not implicitly {@link google.cloud.functions.v1.FailurePolicy.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.FailurePolicy
                         * @static
                         * @param {google.cloud.functions.v1.IFailurePolicy} message FailurePolicy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FailurePolicy.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FailurePolicy message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.FailurePolicy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.FailurePolicy} FailurePolicy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FailurePolicy.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.FailurePolicy();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.retry = $root.google.cloud.functions.v1.FailurePolicy.Retry.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FailurePolicy message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.FailurePolicy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.FailurePolicy} FailurePolicy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FailurePolicy.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FailurePolicy message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.FailurePolicy
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FailurePolicy.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.retry != null && message.hasOwnProperty("retry")) {
                                properties.action = 1;
                                {
                                    var error = $root.google.cloud.functions.v1.FailurePolicy.Retry.verify(message.retry);
                                    if (error)
                                        return "retry." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FailurePolicy message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.FailurePolicy
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.FailurePolicy} FailurePolicy
                         */
                        FailurePolicy.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.FailurePolicy)
                                return object;
                            var message = new $root.google.cloud.functions.v1.FailurePolicy();
                            if (object.retry != null) {
                                if (typeof object.retry !== "object")
                                    throw TypeError(".google.cloud.functions.v1.FailurePolicy.retry: object expected");
                                message.retry = $root.google.cloud.functions.v1.FailurePolicy.Retry.fromObject(object.retry);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FailurePolicy message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.FailurePolicy
                         * @static
                         * @param {google.cloud.functions.v1.FailurePolicy} message FailurePolicy
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FailurePolicy.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.retry != null && message.hasOwnProperty("retry")) {
                                object.retry = $root.google.cloud.functions.v1.FailurePolicy.Retry.toObject(message.retry, options);
                                if (options.oneofs)
                                    object.action = "retry";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FailurePolicy to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.FailurePolicy
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FailurePolicy.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for FailurePolicy
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.FailurePolicy
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FailurePolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.FailurePolicy";
                        };
    
                        FailurePolicy.Retry = (function() {
    
                            /**
                             * Properties of a Retry.
                             * @memberof google.cloud.functions.v1.FailurePolicy
                             * @interface IRetry
                             */
    
                            /**
                             * Constructs a new Retry.
                             * @memberof google.cloud.functions.v1.FailurePolicy
                             * @classdesc Represents a Retry.
                             * @implements IRetry
                             * @constructor
                             * @param {google.cloud.functions.v1.FailurePolicy.IRetry=} [properties] Properties to set
                             */
                            function Retry(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Creates a new Retry instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.functions.v1.FailurePolicy.Retry
                             * @static
                             * @param {google.cloud.functions.v1.FailurePolicy.IRetry=} [properties] Properties to set
                             * @returns {google.cloud.functions.v1.FailurePolicy.Retry} Retry instance
                             */
                            Retry.create = function create(properties) {
                                return new Retry(properties);
                            };
    
                            /**
                             * Encodes the specified Retry message. Does not implicitly {@link google.cloud.functions.v1.FailurePolicy.Retry.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.functions.v1.FailurePolicy.Retry
                             * @static
                             * @param {google.cloud.functions.v1.FailurePolicy.IRetry} message Retry message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Retry.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Retry message, length delimited. Does not implicitly {@link google.cloud.functions.v1.FailurePolicy.Retry.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.functions.v1.FailurePolicy.Retry
                             * @static
                             * @param {google.cloud.functions.v1.FailurePolicy.IRetry} message Retry message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Retry.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Retry message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.functions.v1.FailurePolicy.Retry
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.functions.v1.FailurePolicy.Retry} Retry
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Retry.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.FailurePolicy.Retry();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Retry message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.functions.v1.FailurePolicy.Retry
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.functions.v1.FailurePolicy.Retry} Retry
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Retry.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Retry message.
                             * @function verify
                             * @memberof google.cloud.functions.v1.FailurePolicy.Retry
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Retry.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                return null;
                            };
    
                            /**
                             * Creates a Retry message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.functions.v1.FailurePolicy.Retry
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.functions.v1.FailurePolicy.Retry} Retry
                             */
                            Retry.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.functions.v1.FailurePolicy.Retry)
                                    return object;
                                return new $root.google.cloud.functions.v1.FailurePolicy.Retry();
                            };
    
                            /**
                             * Creates a plain object from a Retry message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.functions.v1.FailurePolicy.Retry
                             * @static
                             * @param {google.cloud.functions.v1.FailurePolicy.Retry} message Retry
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Retry.toObject = function toObject() {
                                return {};
                            };
    
                            /**
                             * Converts this Retry to JSON.
                             * @function toJSON
                             * @memberof google.cloud.functions.v1.FailurePolicy.Retry
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Retry.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Retry
                             * @function getTypeUrl
                             * @memberof google.cloud.functions.v1.FailurePolicy.Retry
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Retry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.functions.v1.FailurePolicy.Retry";
                            };
    
                            return Retry;
                        })();
    
                        return FailurePolicy;
                    })();
    
                    /**
                     * CloudFunctionStatus enum.
                     * @name google.cloud.functions.v1.CloudFunctionStatus
                     * @enum {number}
                     * @property {number} CLOUD_FUNCTION_STATUS_UNSPECIFIED=0 CLOUD_FUNCTION_STATUS_UNSPECIFIED value
                     * @property {number} ACTIVE=1 ACTIVE value
                     * @property {number} OFFLINE=2 OFFLINE value
                     * @property {number} DEPLOY_IN_PROGRESS=3 DEPLOY_IN_PROGRESS value
                     * @property {number} DELETE_IN_PROGRESS=4 DELETE_IN_PROGRESS value
                     * @property {number} UNKNOWN=5 UNKNOWN value
                     */
                    v1.CloudFunctionStatus = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "CLOUD_FUNCTION_STATUS_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ACTIVE"] = 1;
                        values[valuesById[2] = "OFFLINE"] = 2;
                        values[valuesById[3] = "DEPLOY_IN_PROGRESS"] = 3;
                        values[valuesById[4] = "DELETE_IN_PROGRESS"] = 4;
                        values[valuesById[5] = "UNKNOWN"] = 5;
                        return values;
                    })();
    
                    v1.SecretEnvVar = (function() {
    
                        /**
                         * Properties of a SecretEnvVar.
                         * @memberof google.cloud.functions.v1
                         * @interface ISecretEnvVar
                         * @property {string|null} [key] SecretEnvVar key
                         * @property {string|null} [projectId] SecretEnvVar projectId
                         * @property {string|null} [secret] SecretEnvVar secret
                         * @property {string|null} [version] SecretEnvVar version
                         */
    
                        /**
                         * Constructs a new SecretEnvVar.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a SecretEnvVar.
                         * @implements ISecretEnvVar
                         * @constructor
                         * @param {google.cloud.functions.v1.ISecretEnvVar=} [properties] Properties to set
                         */
                        function SecretEnvVar(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SecretEnvVar key.
                         * @member {string} key
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.key = "";
    
                        /**
                         * SecretEnvVar projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.projectId = "";
    
                        /**
                         * SecretEnvVar secret.
                         * @member {string} secret
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.secret = "";
    
                        /**
                         * SecretEnvVar version.
                         * @member {string} version
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.version = "";
    
                        /**
                         * Creates a new SecretEnvVar instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v1.ISecretEnvVar=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.SecretEnvVar} SecretEnvVar instance
                         */
                        SecretEnvVar.create = function create(properties) {
                            return new SecretEnvVar(properties);
                        };
    
                        /**
                         * Encodes the specified SecretEnvVar message. Does not implicitly {@link google.cloud.functions.v1.SecretEnvVar.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v1.ISecretEnvVar} message SecretEnvVar message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretEnvVar.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.projectId);
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.secret);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.version);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SecretEnvVar message, length delimited. Does not implicitly {@link google.cloud.functions.v1.SecretEnvVar.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v1.ISecretEnvVar} message SecretEnvVar message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretEnvVar.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SecretEnvVar message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.SecretEnvVar} SecretEnvVar
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretEnvVar.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.SecretEnvVar();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.key = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.secret = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.version = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SecretEnvVar message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.SecretEnvVar} SecretEnvVar
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretEnvVar.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SecretEnvVar message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SecretEnvVar.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.key != null && message.hasOwnProperty("key"))
                                if (!$util.isString(message.key))
                                    return "key: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                if (!$util.isString(message.secret))
                                    return "secret: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SecretEnvVar message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.SecretEnvVar} SecretEnvVar
                         */
                        SecretEnvVar.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.SecretEnvVar)
                                return object;
                            var message = new $root.google.cloud.functions.v1.SecretEnvVar();
                            if (object.key != null)
                                message.key = String(object.key);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.secret != null)
                                message.secret = String(object.secret);
                            if (object.version != null)
                                message.version = String(object.version);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SecretEnvVar message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v1.SecretEnvVar} message SecretEnvVar
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SecretEnvVar.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.key = "";
                                object.projectId = "";
                                object.secret = "";
                                object.version = "";
                            }
                            if (message.key != null && message.hasOwnProperty("key"))
                                object.key = message.key;
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                object.secret = message.secret;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            return object;
                        };
    
                        /**
                         * Converts this SecretEnvVar to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SecretEnvVar.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SecretEnvVar
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.SecretEnvVar
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SecretEnvVar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.SecretEnvVar";
                        };
    
                        return SecretEnvVar;
                    })();
    
                    v1.SecretVolume = (function() {
    
                        /**
                         * Properties of a SecretVolume.
                         * @memberof google.cloud.functions.v1
                         * @interface ISecretVolume
                         * @property {string|null} [mountPath] SecretVolume mountPath
                         * @property {string|null} [projectId] SecretVolume projectId
                         * @property {string|null} [secret] SecretVolume secret
                         * @property {Array.<google.cloud.functions.v1.SecretVolume.ISecretVersion>|null} [versions] SecretVolume versions
                         */
    
                        /**
                         * Constructs a new SecretVolume.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a SecretVolume.
                         * @implements ISecretVolume
                         * @constructor
                         * @param {google.cloud.functions.v1.ISecretVolume=} [properties] Properties to set
                         */
                        function SecretVolume(properties) {
                            this.versions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SecretVolume mountPath.
                         * @member {string} mountPath
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.mountPath = "";
    
                        /**
                         * SecretVolume projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.projectId = "";
    
                        /**
                         * SecretVolume secret.
                         * @member {string} secret
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.secret = "";
    
                        /**
                         * SecretVolume versions.
                         * @member {Array.<google.cloud.functions.v1.SecretVolume.ISecretVersion>} versions
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.versions = $util.emptyArray;
    
                        /**
                         * Creates a new SecretVolume instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v1.ISecretVolume=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.SecretVolume} SecretVolume instance
                         */
                        SecretVolume.create = function create(properties) {
                            return new SecretVolume(properties);
                        };
    
                        /**
                         * Encodes the specified SecretVolume message. Does not implicitly {@link google.cloud.functions.v1.SecretVolume.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v1.ISecretVolume} message SecretVolume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretVolume.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mountPath != null && Object.hasOwnProperty.call(message, "mountPath"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mountPath);
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.projectId);
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.secret);
                            if (message.versions != null && message.versions.length)
                                for (var i = 0; i < message.versions.length; ++i)
                                    $root.google.cloud.functions.v1.SecretVolume.SecretVersion.encode(message.versions[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SecretVolume message, length delimited. Does not implicitly {@link google.cloud.functions.v1.SecretVolume.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v1.ISecretVolume} message SecretVolume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretVolume.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SecretVolume message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.SecretVolume} SecretVolume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretVolume.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.SecretVolume();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mountPath = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.secret = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.versions && message.versions.length))
                                            message.versions = [];
                                        message.versions.push($root.google.cloud.functions.v1.SecretVolume.SecretVersion.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SecretVolume message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.SecretVolume} SecretVolume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretVolume.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SecretVolume message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SecretVolume.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mountPath != null && message.hasOwnProperty("mountPath"))
                                if (!$util.isString(message.mountPath))
                                    return "mountPath: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                if (!$util.isString(message.secret))
                                    return "secret: string expected";
                            if (message.versions != null && message.hasOwnProperty("versions")) {
                                if (!Array.isArray(message.versions))
                                    return "versions: array expected";
                                for (var i = 0; i < message.versions.length; ++i) {
                                    var error = $root.google.cloud.functions.v1.SecretVolume.SecretVersion.verify(message.versions[i]);
                                    if (error)
                                        return "versions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SecretVolume message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.SecretVolume} SecretVolume
                         */
                        SecretVolume.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.SecretVolume)
                                return object;
                            var message = new $root.google.cloud.functions.v1.SecretVolume();
                            if (object.mountPath != null)
                                message.mountPath = String(object.mountPath);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.secret != null)
                                message.secret = String(object.secret);
                            if (object.versions) {
                                if (!Array.isArray(object.versions))
                                    throw TypeError(".google.cloud.functions.v1.SecretVolume.versions: array expected");
                                message.versions = [];
                                for (var i = 0; i < object.versions.length; ++i) {
                                    if (typeof object.versions[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v1.SecretVolume.versions: object expected");
                                    message.versions[i] = $root.google.cloud.functions.v1.SecretVolume.SecretVersion.fromObject(object.versions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SecretVolume message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v1.SecretVolume} message SecretVolume
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SecretVolume.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.versions = [];
                            if (options.defaults) {
                                object.mountPath = "";
                                object.projectId = "";
                                object.secret = "";
                            }
                            if (message.mountPath != null && message.hasOwnProperty("mountPath"))
                                object.mountPath = message.mountPath;
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                object.secret = message.secret;
                            if (message.versions && message.versions.length) {
                                object.versions = [];
                                for (var j = 0; j < message.versions.length; ++j)
                                    object.versions[j] = $root.google.cloud.functions.v1.SecretVolume.SecretVersion.toObject(message.versions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SecretVolume to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SecretVolume.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SecretVolume
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.SecretVolume
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SecretVolume.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.SecretVolume";
                        };
    
                        SecretVolume.SecretVersion = (function() {
    
                            /**
                             * Properties of a SecretVersion.
                             * @memberof google.cloud.functions.v1.SecretVolume
                             * @interface ISecretVersion
                             * @property {string|null} [version] SecretVersion version
                             * @property {string|null} [path] SecretVersion path
                             */
    
                            /**
                             * Constructs a new SecretVersion.
                             * @memberof google.cloud.functions.v1.SecretVolume
                             * @classdesc Represents a SecretVersion.
                             * @implements ISecretVersion
                             * @constructor
                             * @param {google.cloud.functions.v1.SecretVolume.ISecretVersion=} [properties] Properties to set
                             */
                            function SecretVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SecretVersion version.
                             * @member {string} version
                             * @memberof google.cloud.functions.v1.SecretVolume.SecretVersion
                             * @instance
                             */
                            SecretVersion.prototype.version = "";
    
                            /**
                             * SecretVersion path.
                             * @member {string} path
                             * @memberof google.cloud.functions.v1.SecretVolume.SecretVersion
                             * @instance
                             */
                            SecretVersion.prototype.path = "";
    
                            /**
                             * Creates a new SecretVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.functions.v1.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v1.SecretVolume.ISecretVersion=} [properties] Properties to set
                             * @returns {google.cloud.functions.v1.SecretVolume.SecretVersion} SecretVersion instance
                             */
                            SecretVersion.create = function create(properties) {
                                return new SecretVersion(properties);
                            };
    
                            /**
                             * Encodes the specified SecretVersion message. Does not implicitly {@link google.cloud.functions.v1.SecretVolume.SecretVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.functions.v1.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v1.SecretVolume.ISecretVersion} message SecretVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SecretVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SecretVersion message, length delimited. Does not implicitly {@link google.cloud.functions.v1.SecretVolume.SecretVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.functions.v1.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v1.SecretVolume.ISecretVersion} message SecretVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SecretVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SecretVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.functions.v1.SecretVolume.SecretVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.functions.v1.SecretVolume.SecretVersion} SecretVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SecretVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.SecretVolume.SecretVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.version = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.path = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SecretVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.functions.v1.SecretVolume.SecretVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.functions.v1.SecretVolume.SecretVersion} SecretVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SecretVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SecretVersion message.
                             * @function verify
                             * @memberof google.cloud.functions.v1.SecretVolume.SecretVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SecretVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.path != null && message.hasOwnProperty("path"))
                                    if (!$util.isString(message.path))
                                        return "path: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a SecretVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.functions.v1.SecretVolume.SecretVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.functions.v1.SecretVolume.SecretVersion} SecretVersion
                             */
                            SecretVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.functions.v1.SecretVolume.SecretVersion)
                                    return object;
                                var message = new $root.google.cloud.functions.v1.SecretVolume.SecretVersion();
                                if (object.version != null)
                                    message.version = String(object.version);
                                if (object.path != null)
                                    message.path = String(object.path);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SecretVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.functions.v1.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v1.SecretVolume.SecretVersion} message SecretVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SecretVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = "";
                                    object.path = "";
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.path != null && message.hasOwnProperty("path"))
                                    object.path = message.path;
                                return object;
                            };
    
                            /**
                             * Converts this SecretVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.functions.v1.SecretVolume.SecretVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SecretVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SecretVersion
                             * @function getTypeUrl
                             * @memberof google.cloud.functions.v1.SecretVolume.SecretVersion
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SecretVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.functions.v1.SecretVolume.SecretVersion";
                            };
    
                            return SecretVersion;
                        })();
    
                        return SecretVolume;
                    })();
    
                    v1.CreateFunctionRequest = (function() {
    
                        /**
                         * Properties of a CreateFunctionRequest.
                         * @memberof google.cloud.functions.v1
                         * @interface ICreateFunctionRequest
                         * @property {string|null} [location] CreateFunctionRequest location
                         * @property {google.cloud.functions.v1.ICloudFunction|null} ["function"] CreateFunctionRequest function
                         */
    
                        /**
                         * Constructs a new CreateFunctionRequest.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a CreateFunctionRequest.
                         * @implements ICreateFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v1.ICreateFunctionRequest=} [properties] Properties to set
                         */
                        function CreateFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateFunctionRequest location.
                         * @member {string} location
                         * @memberof google.cloud.functions.v1.CreateFunctionRequest
                         * @instance
                         */
                        CreateFunctionRequest.prototype.location = "";
    
                        /**
                         * CreateFunctionRequest function.
                         * @member {google.cloud.functions.v1.ICloudFunction|null|undefined} function
                         * @memberof google.cloud.functions.v1.CreateFunctionRequest
                         * @instance
                         */
                        CreateFunctionRequest.prototype["function"] = null;
    
                        /**
                         * Creates a new CreateFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.ICreateFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.CreateFunctionRequest} CreateFunctionRequest instance
                         */
                        CreateFunctionRequest.create = function create(properties) {
                            return new CreateFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateFunctionRequest message. Does not implicitly {@link google.cloud.functions.v1.CreateFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.ICreateFunctionRequest} message CreateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.location);
                            if (message["function"] != null && Object.hasOwnProperty.call(message, "function"))
                                $root.google.cloud.functions.v1.CloudFunction.encode(message["function"], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v1.CreateFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.ICreateFunctionRequest} message CreateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.CreateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.CreateFunctionRequest} CreateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.CreateFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.location = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message["function"] = $root.google.cloud.functions.v1.CloudFunction.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.CreateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.CreateFunctionRequest} CreateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.CreateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            if (message["function"] != null && message.hasOwnProperty("function")) {
                                var error = $root.google.cloud.functions.v1.CloudFunction.verify(message["function"]);
                                if (error)
                                    return "function." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.CreateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.CreateFunctionRequest} CreateFunctionRequest
                         */
                        CreateFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.CreateFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v1.CreateFunctionRequest();
                            if (object.location != null)
                                message.location = String(object.location);
                            if (object["function"] != null) {
                                if (typeof object["function"] !== "object")
                                    throw TypeError(".google.cloud.functions.v1.CreateFunctionRequest.function: object expected");
                                message["function"] = $root.google.cloud.functions.v1.CloudFunction.fromObject(object["function"]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.CreateFunctionRequest} message CreateFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.location = "";
                                object["function"] = null;
                            }
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            if (message["function"] != null && message.hasOwnProperty("function"))
                                object["function"] = $root.google.cloud.functions.v1.CloudFunction.toObject(message["function"], options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.CreateFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.CreateFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.CreateFunctionRequest";
                        };
    
                        return CreateFunctionRequest;
                    })();
    
                    v1.UpdateFunctionRequest = (function() {
    
                        /**
                         * Properties of an UpdateFunctionRequest.
                         * @memberof google.cloud.functions.v1
                         * @interface IUpdateFunctionRequest
                         * @property {google.cloud.functions.v1.ICloudFunction|null} ["function"] UpdateFunctionRequest function
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateFunctionRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateFunctionRequest.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents an UpdateFunctionRequest.
                         * @implements IUpdateFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v1.IUpdateFunctionRequest=} [properties] Properties to set
                         */
                        function UpdateFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateFunctionRequest function.
                         * @member {google.cloud.functions.v1.ICloudFunction|null|undefined} function
                         * @memberof google.cloud.functions.v1.UpdateFunctionRequest
                         * @instance
                         */
                        UpdateFunctionRequest.prototype["function"] = null;
    
                        /**
                         * UpdateFunctionRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.functions.v1.UpdateFunctionRequest
                         * @instance
                         */
                        UpdateFunctionRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.IUpdateFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.UpdateFunctionRequest} UpdateFunctionRequest instance
                         */
                        UpdateFunctionRequest.create = function create(properties) {
                            return new UpdateFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateFunctionRequest message. Does not implicitly {@link google.cloud.functions.v1.UpdateFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.IUpdateFunctionRequest} message UpdateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message["function"] != null && Object.hasOwnProperty.call(message, "function"))
                                $root.google.cloud.functions.v1.CloudFunction.encode(message["function"], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v1.UpdateFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.IUpdateFunctionRequest} message UpdateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.UpdateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.UpdateFunctionRequest} UpdateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.UpdateFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message["function"] = $root.google.cloud.functions.v1.CloudFunction.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.UpdateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.UpdateFunctionRequest} UpdateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.UpdateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message["function"] != null && message.hasOwnProperty("function")) {
                                var error = $root.google.cloud.functions.v1.CloudFunction.verify(message["function"]);
                                if (error)
                                    return "function." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.UpdateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.UpdateFunctionRequest} UpdateFunctionRequest
                         */
                        UpdateFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.UpdateFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v1.UpdateFunctionRequest();
                            if (object["function"] != null) {
                                if (typeof object["function"] !== "object")
                                    throw TypeError(".google.cloud.functions.v1.UpdateFunctionRequest.function: object expected");
                                message["function"] = $root.google.cloud.functions.v1.CloudFunction.fromObject(object["function"]);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.functions.v1.UpdateFunctionRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.UpdateFunctionRequest} message UpdateFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object["function"] = null;
                                object.updateMask = null;
                            }
                            if (message["function"] != null && message.hasOwnProperty("function"))
                                object["function"] = $root.google.cloud.functions.v1.CloudFunction.toObject(message["function"], options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.UpdateFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.UpdateFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.UpdateFunctionRequest";
                        };
    
                        return UpdateFunctionRequest;
                    })();
    
                    v1.GetFunctionRequest = (function() {
    
                        /**
                         * Properties of a GetFunctionRequest.
                         * @memberof google.cloud.functions.v1
                         * @interface IGetFunctionRequest
                         * @property {string|null} [name] GetFunctionRequest name
                         */
    
                        /**
                         * Constructs a new GetFunctionRequest.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a GetFunctionRequest.
                         * @implements IGetFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v1.IGetFunctionRequest=} [properties] Properties to set
                         */
                        function GetFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetFunctionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v1.GetFunctionRequest
                         * @instance
                         */
                        GetFunctionRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.IGetFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.GetFunctionRequest} GetFunctionRequest instance
                         */
                        GetFunctionRequest.create = function create(properties) {
                            return new GetFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetFunctionRequest message. Does not implicitly {@link google.cloud.functions.v1.GetFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.IGetFunctionRequest} message GetFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v1.GetFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.IGetFunctionRequest} message GetFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.GetFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.GetFunctionRequest} GetFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.GetFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.GetFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.GetFunctionRequest} GetFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.GetFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.GetFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.GetFunctionRequest} GetFunctionRequest
                         */
                        GetFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.GetFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v1.GetFunctionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.GetFunctionRequest} message GetFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.GetFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.GetFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.GetFunctionRequest";
                        };
    
                        return GetFunctionRequest;
                    })();
    
                    v1.ListFunctionsRequest = (function() {
    
                        /**
                         * Properties of a ListFunctionsRequest.
                         * @memberof google.cloud.functions.v1
                         * @interface IListFunctionsRequest
                         * @property {string|null} [parent] ListFunctionsRequest parent
                         * @property {number|null} [pageSize] ListFunctionsRequest pageSize
                         * @property {string|null} [pageToken] ListFunctionsRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListFunctionsRequest.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a ListFunctionsRequest.
                         * @implements IListFunctionsRequest
                         * @constructor
                         * @param {google.cloud.functions.v1.IListFunctionsRequest=} [properties] Properties to set
                         */
                        function ListFunctionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFunctionsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.parent = "";
    
                        /**
                         * ListFunctionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListFunctionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListFunctionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v1.IListFunctionsRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.ListFunctionsRequest} ListFunctionsRequest instance
                         */
                        ListFunctionsRequest.create = function create(properties) {
                            return new ListFunctionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListFunctionsRequest message. Does not implicitly {@link google.cloud.functions.v1.ListFunctionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v1.IListFunctionsRequest} message ListFunctionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFunctionsRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v1.ListFunctionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v1.IListFunctionsRequest} message ListFunctionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFunctionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.ListFunctionsRequest} ListFunctionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.ListFunctionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFunctionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.ListFunctionsRequest} ListFunctionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFunctionsRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFunctionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFunctionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.ListFunctionsRequest} ListFunctionsRequest
                         */
                        ListFunctionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.ListFunctionsRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v1.ListFunctionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFunctionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v1.ListFunctionsRequest} message ListFunctionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFunctionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListFunctionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFunctionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFunctionsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.ListFunctionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFunctionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.ListFunctionsRequest";
                        };
    
                        return ListFunctionsRequest;
                    })();
    
                    v1.ListFunctionsResponse = (function() {
    
                        /**
                         * Properties of a ListFunctionsResponse.
                         * @memberof google.cloud.functions.v1
                         * @interface IListFunctionsResponse
                         * @property {Array.<google.cloud.functions.v1.ICloudFunction>|null} [functions] ListFunctionsResponse functions
                         * @property {string|null} [nextPageToken] ListFunctionsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListFunctionsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListFunctionsResponse.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a ListFunctionsResponse.
                         * @implements IListFunctionsResponse
                         * @constructor
                         * @param {google.cloud.functions.v1.IListFunctionsResponse=} [properties] Properties to set
                         */
                        function ListFunctionsResponse(properties) {
                            this.functions = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFunctionsResponse functions.
                         * @member {Array.<google.cloud.functions.v1.ICloudFunction>} functions
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @instance
                         */
                        ListFunctionsResponse.prototype.functions = $util.emptyArray;
    
                        /**
                         * ListFunctionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @instance
                         */
                        ListFunctionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListFunctionsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @instance
                         */
                        ListFunctionsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListFunctionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v1.IListFunctionsResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.ListFunctionsResponse} ListFunctionsResponse instance
                         */
                        ListFunctionsResponse.create = function create(properties) {
                            return new ListFunctionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListFunctionsResponse message. Does not implicitly {@link google.cloud.functions.v1.ListFunctionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v1.IListFunctionsResponse} message ListFunctionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.functions != null && message.functions.length)
                                for (var i = 0; i < message.functions.length; ++i)
                                    $root.google.cloud.functions.v1.CloudFunction.encode(message.functions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFunctionsResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v1.ListFunctionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v1.IListFunctionsResponse} message ListFunctionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFunctionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.ListFunctionsResponse} ListFunctionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.ListFunctionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.functions && message.functions.length))
                                            message.functions = [];
                                        message.functions.push($root.google.cloud.functions.v1.CloudFunction.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFunctionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.ListFunctionsResponse} ListFunctionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFunctionsResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFunctionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.functions != null && message.hasOwnProperty("functions")) {
                                if (!Array.isArray(message.functions))
                                    return "functions: array expected";
                                for (var i = 0; i < message.functions.length; ++i) {
                                    var error = $root.google.cloud.functions.v1.CloudFunction.verify(message.functions[i]);
                                    if (error)
                                        return "functions." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListFunctionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.ListFunctionsResponse} ListFunctionsResponse
                         */
                        ListFunctionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.ListFunctionsResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v1.ListFunctionsResponse();
                            if (object.functions) {
                                if (!Array.isArray(object.functions))
                                    throw TypeError(".google.cloud.functions.v1.ListFunctionsResponse.functions: array expected");
                                message.functions = [];
                                for (var i = 0; i < object.functions.length; ++i) {
                                    if (typeof object.functions[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v1.ListFunctionsResponse.functions: object expected");
                                    message.functions[i] = $root.google.cloud.functions.v1.CloudFunction.fromObject(object.functions[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.functions.v1.ListFunctionsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFunctionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v1.ListFunctionsResponse} message ListFunctionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFunctionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.functions = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.functions && message.functions.length) {
                                object.functions = [];
                                for (var j = 0; j < message.functions.length; ++j)
                                    object.functions[j] = $root.google.cloud.functions.v1.CloudFunction.toObject(message.functions[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListFunctionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFunctionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFunctionsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.ListFunctionsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFunctionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.ListFunctionsResponse";
                        };
    
                        return ListFunctionsResponse;
                    })();
    
                    v1.DeleteFunctionRequest = (function() {
    
                        /**
                         * Properties of a DeleteFunctionRequest.
                         * @memberof google.cloud.functions.v1
                         * @interface IDeleteFunctionRequest
                         * @property {string|null} [name] DeleteFunctionRequest name
                         */
    
                        /**
                         * Constructs a new DeleteFunctionRequest.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a DeleteFunctionRequest.
                         * @implements IDeleteFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v1.IDeleteFunctionRequest=} [properties] Properties to set
                         */
                        function DeleteFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteFunctionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v1.DeleteFunctionRequest
                         * @instance
                         */
                        DeleteFunctionRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.IDeleteFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.DeleteFunctionRequest} DeleteFunctionRequest instance
                         */
                        DeleteFunctionRequest.create = function create(properties) {
                            return new DeleteFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteFunctionRequest message. Does not implicitly {@link google.cloud.functions.v1.DeleteFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.IDeleteFunctionRequest} message DeleteFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v1.DeleteFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.IDeleteFunctionRequest} message DeleteFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.DeleteFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.DeleteFunctionRequest} DeleteFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.DeleteFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.DeleteFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.DeleteFunctionRequest} DeleteFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.DeleteFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.DeleteFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.DeleteFunctionRequest} DeleteFunctionRequest
                         */
                        DeleteFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.DeleteFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v1.DeleteFunctionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.DeleteFunctionRequest} message DeleteFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.DeleteFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.DeleteFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.DeleteFunctionRequest";
                        };
    
                        return DeleteFunctionRequest;
                    })();
    
                    v1.CallFunctionRequest = (function() {
    
                        /**
                         * Properties of a CallFunctionRequest.
                         * @memberof google.cloud.functions.v1
                         * @interface ICallFunctionRequest
                         * @property {string|null} [name] CallFunctionRequest name
                         * @property {string|null} [data] CallFunctionRequest data
                         */
    
                        /**
                         * Constructs a new CallFunctionRequest.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a CallFunctionRequest.
                         * @implements ICallFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v1.ICallFunctionRequest=} [properties] Properties to set
                         */
                        function CallFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CallFunctionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v1.CallFunctionRequest
                         * @instance
                         */
                        CallFunctionRequest.prototype.name = "";
    
                        /**
                         * CallFunctionRequest data.
                         * @member {string} data
                         * @memberof google.cloud.functions.v1.CallFunctionRequest
                         * @instance
                         */
                        CallFunctionRequest.prototype.data = "";
    
                        /**
                         * Creates a new CallFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.CallFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.ICallFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.CallFunctionRequest} CallFunctionRequest instance
                         */
                        CallFunctionRequest.create = function create(properties) {
                            return new CallFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CallFunctionRequest message. Does not implicitly {@link google.cloud.functions.v1.CallFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.CallFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.ICallFunctionRequest} message CallFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CallFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.data != null && Object.hasOwnProperty.call(message, "data"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.data);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CallFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v1.CallFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.CallFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.ICallFunctionRequest} message CallFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CallFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CallFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.CallFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.CallFunctionRequest} CallFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CallFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.CallFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.data = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CallFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.CallFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.CallFunctionRequest} CallFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CallFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CallFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.CallFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CallFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.data != null && message.hasOwnProperty("data"))
                                if (!$util.isString(message.data))
                                    return "data: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CallFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.CallFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.CallFunctionRequest} CallFunctionRequest
                         */
                        CallFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.CallFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v1.CallFunctionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.data != null)
                                message.data = String(object.data);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CallFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.CallFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v1.CallFunctionRequest} message CallFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CallFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.data = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.data != null && message.hasOwnProperty("data"))
                                object.data = message.data;
                            return object;
                        };
    
                        /**
                         * Converts this CallFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.CallFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CallFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CallFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.CallFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CallFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.CallFunctionRequest";
                        };
    
                        return CallFunctionRequest;
                    })();
    
                    v1.CallFunctionResponse = (function() {
    
                        /**
                         * Properties of a CallFunctionResponse.
                         * @memberof google.cloud.functions.v1
                         * @interface ICallFunctionResponse
                         * @property {string|null} [executionId] CallFunctionResponse executionId
                         * @property {string|null} [result] CallFunctionResponse result
                         * @property {string|null} [error] CallFunctionResponse error
                         */
    
                        /**
                         * Constructs a new CallFunctionResponse.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a CallFunctionResponse.
                         * @implements ICallFunctionResponse
                         * @constructor
                         * @param {google.cloud.functions.v1.ICallFunctionResponse=} [properties] Properties to set
                         */
                        function CallFunctionResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CallFunctionResponse executionId.
                         * @member {string} executionId
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @instance
                         */
                        CallFunctionResponse.prototype.executionId = "";
    
                        /**
                         * CallFunctionResponse result.
                         * @member {string} result
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @instance
                         */
                        CallFunctionResponse.prototype.result = "";
    
                        /**
                         * CallFunctionResponse error.
                         * @member {string} error
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @instance
                         */
                        CallFunctionResponse.prototype.error = "";
    
                        /**
                         * Creates a new CallFunctionResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @static
                         * @param {google.cloud.functions.v1.ICallFunctionResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.CallFunctionResponse} CallFunctionResponse instance
                         */
                        CallFunctionResponse.create = function create(properties) {
                            return new CallFunctionResponse(properties);
                        };
    
                        /**
                         * Encodes the specified CallFunctionResponse message. Does not implicitly {@link google.cloud.functions.v1.CallFunctionResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @static
                         * @param {google.cloud.functions.v1.ICallFunctionResponse} message CallFunctionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CallFunctionResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.executionId != null && Object.hasOwnProperty.call(message, "executionId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.executionId);
                            if (message.result != null && Object.hasOwnProperty.call(message, "result"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.result);
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.error);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CallFunctionResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v1.CallFunctionResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @static
                         * @param {google.cloud.functions.v1.ICallFunctionResponse} message CallFunctionResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CallFunctionResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CallFunctionResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.CallFunctionResponse} CallFunctionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CallFunctionResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.CallFunctionResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.executionId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.result = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.error = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CallFunctionResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.CallFunctionResponse} CallFunctionResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CallFunctionResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CallFunctionResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CallFunctionResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.executionId != null && message.hasOwnProperty("executionId"))
                                if (!$util.isString(message.executionId))
                                    return "executionId: string expected";
                            if (message.result != null && message.hasOwnProperty("result"))
                                if (!$util.isString(message.result))
                                    return "result: string expected";
                            if (message.error != null && message.hasOwnProperty("error"))
                                if (!$util.isString(message.error))
                                    return "error: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CallFunctionResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.CallFunctionResponse} CallFunctionResponse
                         */
                        CallFunctionResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.CallFunctionResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v1.CallFunctionResponse();
                            if (object.executionId != null)
                                message.executionId = String(object.executionId);
                            if (object.result != null)
                                message.result = String(object.result);
                            if (object.error != null)
                                message.error = String(object.error);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CallFunctionResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @static
                         * @param {google.cloud.functions.v1.CallFunctionResponse} message CallFunctionResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CallFunctionResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.executionId = "";
                                object.result = "";
                                object.error = "";
                            }
                            if (message.executionId != null && message.hasOwnProperty("executionId"))
                                object.executionId = message.executionId;
                            if (message.result != null && message.hasOwnProperty("result"))
                                object.result = message.result;
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = message.error;
                            return object;
                        };
    
                        /**
                         * Converts this CallFunctionResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CallFunctionResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CallFunctionResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.CallFunctionResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CallFunctionResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.CallFunctionResponse";
                        };
    
                        return CallFunctionResponse;
                    })();
    
                    v1.GenerateUploadUrlRequest = (function() {
    
                        /**
                         * Properties of a GenerateUploadUrlRequest.
                         * @memberof google.cloud.functions.v1
                         * @interface IGenerateUploadUrlRequest
                         * @property {string|null} [parent] GenerateUploadUrlRequest parent
                         * @property {string|null} [kmsKeyName] GenerateUploadUrlRequest kmsKeyName
                         */
    
                        /**
                         * Constructs a new GenerateUploadUrlRequest.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a GenerateUploadUrlRequest.
                         * @implements IGenerateUploadUrlRequest
                         * @constructor
                         * @param {google.cloud.functions.v1.IGenerateUploadUrlRequest=} [properties] Properties to set
                         */
                        function GenerateUploadUrlRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateUploadUrlRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlRequest
                         * @instance
                         */
                        GenerateUploadUrlRequest.prototype.parent = "";
    
                        /**
                         * GenerateUploadUrlRequest kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlRequest
                         * @instance
                         */
                        GenerateUploadUrlRequest.prototype.kmsKeyName = "";
    
                        /**
                         * Creates a new GenerateUploadUrlRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v1.IGenerateUploadUrlRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.GenerateUploadUrlRequest} GenerateUploadUrlRequest instance
                         */
                        GenerateUploadUrlRequest.create = function create(properties) {
                            return new GenerateUploadUrlRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlRequest message. Does not implicitly {@link google.cloud.functions.v1.GenerateUploadUrlRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v1.IGenerateUploadUrlRequest} message GenerateUploadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.kmsKeyName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v1.GenerateUploadUrlRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v1.IGenerateUploadUrlRequest} message GenerateUploadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.GenerateUploadUrlRequest} GenerateUploadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.GenerateUploadUrlRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.GenerateUploadUrlRequest} GenerateUploadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateUploadUrlRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateUploadUrlRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateUploadUrlRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.GenerateUploadUrlRequest} GenerateUploadUrlRequest
                         */
                        GenerateUploadUrlRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.GenerateUploadUrlRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v1.GenerateUploadUrlRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateUploadUrlRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v1.GenerateUploadUrlRequest} message GenerateUploadUrlRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateUploadUrlRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.kmsKeyName = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateUploadUrlRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateUploadUrlRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateUploadUrlRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateUploadUrlRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.GenerateUploadUrlRequest";
                        };
    
                        return GenerateUploadUrlRequest;
                    })();
    
                    v1.GenerateUploadUrlResponse = (function() {
    
                        /**
                         * Properties of a GenerateUploadUrlResponse.
                         * @memberof google.cloud.functions.v1
                         * @interface IGenerateUploadUrlResponse
                         * @property {string|null} [uploadUrl] GenerateUploadUrlResponse uploadUrl
                         */
    
                        /**
                         * Constructs a new GenerateUploadUrlResponse.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a GenerateUploadUrlResponse.
                         * @implements IGenerateUploadUrlResponse
                         * @constructor
                         * @param {google.cloud.functions.v1.IGenerateUploadUrlResponse=} [properties] Properties to set
                         */
                        function GenerateUploadUrlResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateUploadUrlResponse uploadUrl.
                         * @member {string} uploadUrl
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlResponse
                         * @instance
                         */
                        GenerateUploadUrlResponse.prototype.uploadUrl = "";
    
                        /**
                         * Creates a new GenerateUploadUrlResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v1.IGenerateUploadUrlResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.GenerateUploadUrlResponse} GenerateUploadUrlResponse instance
                         */
                        GenerateUploadUrlResponse.create = function create(properties) {
                            return new GenerateUploadUrlResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlResponse message. Does not implicitly {@link google.cloud.functions.v1.GenerateUploadUrlResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v1.IGenerateUploadUrlResponse} message GenerateUploadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uploadUrl != null && Object.hasOwnProperty.call(message, "uploadUrl"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uploadUrl);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v1.GenerateUploadUrlResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v1.IGenerateUploadUrlResponse} message GenerateUploadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.GenerateUploadUrlResponse} GenerateUploadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.GenerateUploadUrlResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uploadUrl = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.GenerateUploadUrlResponse} GenerateUploadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateUploadUrlResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateUploadUrlResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uploadUrl != null && message.hasOwnProperty("uploadUrl"))
                                if (!$util.isString(message.uploadUrl))
                                    return "uploadUrl: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateUploadUrlResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.GenerateUploadUrlResponse} GenerateUploadUrlResponse
                         */
                        GenerateUploadUrlResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.GenerateUploadUrlResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v1.GenerateUploadUrlResponse();
                            if (object.uploadUrl != null)
                                message.uploadUrl = String(object.uploadUrl);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateUploadUrlResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v1.GenerateUploadUrlResponse} message GenerateUploadUrlResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateUploadUrlResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.uploadUrl = "";
                            if (message.uploadUrl != null && message.hasOwnProperty("uploadUrl"))
                                object.uploadUrl = message.uploadUrl;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateUploadUrlResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateUploadUrlResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateUploadUrlResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.GenerateUploadUrlResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateUploadUrlResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.GenerateUploadUrlResponse";
                        };
    
                        return GenerateUploadUrlResponse;
                    })();
    
                    v1.GenerateDownloadUrlRequest = (function() {
    
                        /**
                         * Properties of a GenerateDownloadUrlRequest.
                         * @memberof google.cloud.functions.v1
                         * @interface IGenerateDownloadUrlRequest
                         * @property {string|null} [name] GenerateDownloadUrlRequest name
                         * @property {number|Long|null} [versionId] GenerateDownloadUrlRequest versionId
                         */
    
                        /**
                         * Constructs a new GenerateDownloadUrlRequest.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a GenerateDownloadUrlRequest.
                         * @implements IGenerateDownloadUrlRequest
                         * @constructor
                         * @param {google.cloud.functions.v1.IGenerateDownloadUrlRequest=} [properties] Properties to set
                         */
                        function GenerateDownloadUrlRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateDownloadUrlRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlRequest
                         * @instance
                         */
                        GenerateDownloadUrlRequest.prototype.name = "";
    
                        /**
                         * GenerateDownloadUrlRequest versionId.
                         * @member {number|Long} versionId
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlRequest
                         * @instance
                         */
                        GenerateDownloadUrlRequest.prototype.versionId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                        /**
                         * Creates a new GenerateDownloadUrlRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v1.IGenerateDownloadUrlRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest instance
                         */
                        GenerateDownloadUrlRequest.create = function create(properties) {
                            return new GenerateDownloadUrlRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlRequest message. Does not implicitly {@link google.cloud.functions.v1.GenerateDownloadUrlRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v1.IGenerateDownloadUrlRequest} message GenerateDownloadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.versionId != null && Object.hasOwnProperty.call(message, "versionId"))
                                writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.versionId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v1.GenerateDownloadUrlRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v1.IGenerateDownloadUrlRequest} message GenerateDownloadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.GenerateDownloadUrlRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.versionId = reader.uint64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateDownloadUrlRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateDownloadUrlRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.versionId != null && message.hasOwnProperty("versionId"))
                                if (!$util.isInteger(message.versionId) && !(message.versionId && $util.isInteger(message.versionId.low) && $util.isInteger(message.versionId.high)))
                                    return "versionId: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateDownloadUrlRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest
                         */
                        GenerateDownloadUrlRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.GenerateDownloadUrlRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v1.GenerateDownloadUrlRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.versionId != null)
                                if ($util.Long)
                                    (message.versionId = $util.Long.fromValue(object.versionId)).unsigned = true;
                                else if (typeof object.versionId === "string")
                                    message.versionId = parseInt(object.versionId, 10);
                                else if (typeof object.versionId === "number")
                                    message.versionId = object.versionId;
                                else if (typeof object.versionId === "object")
                                    message.versionId = new $util.LongBits(object.versionId.low >>> 0, object.versionId.high >>> 0).toNumber(true);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateDownloadUrlRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v1.GenerateDownloadUrlRequest} message GenerateDownloadUrlRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateDownloadUrlRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, true);
                                    object.versionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.versionId = options.longs === String ? "0" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.versionId != null && message.hasOwnProperty("versionId"))
                                if (typeof message.versionId === "number")
                                    object.versionId = options.longs === String ? String(message.versionId) : message.versionId;
                                else
                                    object.versionId = options.longs === String ? $util.Long.prototype.toString.call(message.versionId) : options.longs === Number ? new $util.LongBits(message.versionId.low >>> 0, message.versionId.high >>> 0).toNumber(true) : message.versionId;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateDownloadUrlRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateDownloadUrlRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateDownloadUrlRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateDownloadUrlRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.GenerateDownloadUrlRequest";
                        };
    
                        return GenerateDownloadUrlRequest;
                    })();
    
                    v1.GenerateDownloadUrlResponse = (function() {
    
                        /**
                         * Properties of a GenerateDownloadUrlResponse.
                         * @memberof google.cloud.functions.v1
                         * @interface IGenerateDownloadUrlResponse
                         * @property {string|null} [downloadUrl] GenerateDownloadUrlResponse downloadUrl
                         */
    
                        /**
                         * Constructs a new GenerateDownloadUrlResponse.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents a GenerateDownloadUrlResponse.
                         * @implements IGenerateDownloadUrlResponse
                         * @constructor
                         * @param {google.cloud.functions.v1.IGenerateDownloadUrlResponse=} [properties] Properties to set
                         */
                        function GenerateDownloadUrlResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateDownloadUrlResponse downloadUrl.
                         * @member {string} downloadUrl
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlResponse
                         * @instance
                         */
                        GenerateDownloadUrlResponse.prototype.downloadUrl = "";
    
                        /**
                         * Creates a new GenerateDownloadUrlResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v1.IGenerateDownloadUrlResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse instance
                         */
                        GenerateDownloadUrlResponse.create = function create(properties) {
                            return new GenerateDownloadUrlResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlResponse message. Does not implicitly {@link google.cloud.functions.v1.GenerateDownloadUrlResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v1.IGenerateDownloadUrlResponse} message GenerateDownloadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.downloadUrl != null && Object.hasOwnProperty.call(message, "downloadUrl"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.downloadUrl);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v1.GenerateDownloadUrlResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v1.IGenerateDownloadUrlResponse} message GenerateDownloadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.GenerateDownloadUrlResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.downloadUrl = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateDownloadUrlResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateDownloadUrlResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.downloadUrl != null && message.hasOwnProperty("downloadUrl"))
                                if (!$util.isString(message.downloadUrl))
                                    return "downloadUrl: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateDownloadUrlResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse
                         */
                        GenerateDownloadUrlResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.GenerateDownloadUrlResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v1.GenerateDownloadUrlResponse();
                            if (object.downloadUrl != null)
                                message.downloadUrl = String(object.downloadUrl);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateDownloadUrlResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v1.GenerateDownloadUrlResponse} message GenerateDownloadUrlResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateDownloadUrlResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.downloadUrl = "";
                            if (message.downloadUrl != null && message.hasOwnProperty("downloadUrl"))
                                object.downloadUrl = message.downloadUrl;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateDownloadUrlResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateDownloadUrlResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateDownloadUrlResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.GenerateDownloadUrlResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateDownloadUrlResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.GenerateDownloadUrlResponse";
                        };
    
                        return GenerateDownloadUrlResponse;
                    })();
    
                    /**
                     * OperationType enum.
                     * @name google.cloud.functions.v1.OperationType
                     * @enum {number}
                     * @property {number} OPERATION_UNSPECIFIED=0 OPERATION_UNSPECIFIED value
                     * @property {number} CREATE_FUNCTION=1 CREATE_FUNCTION value
                     * @property {number} UPDATE_FUNCTION=2 UPDATE_FUNCTION value
                     * @property {number} DELETE_FUNCTION=3 DELETE_FUNCTION value
                     */
                    v1.OperationType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "OPERATION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "CREATE_FUNCTION"] = 1;
                        values[valuesById[2] = "UPDATE_FUNCTION"] = 2;
                        values[valuesById[3] = "DELETE_FUNCTION"] = 3;
                        return values;
                    })();
    
                    v1.OperationMetadataV1 = (function() {
    
                        /**
                         * Properties of an OperationMetadataV1.
                         * @memberof google.cloud.functions.v1
                         * @interface IOperationMetadataV1
                         * @property {string|null} [target] OperationMetadataV1 target
                         * @property {google.cloud.functions.v1.OperationType|null} [type] OperationMetadataV1 type
                         * @property {google.protobuf.IAny|null} [request] OperationMetadataV1 request
                         * @property {number|Long|null} [versionId] OperationMetadataV1 versionId
                         * @property {google.protobuf.ITimestamp|null} [updateTime] OperationMetadataV1 updateTime
                         * @property {string|null} [buildId] OperationMetadataV1 buildId
                         * @property {string|null} [sourceToken] OperationMetadataV1 sourceToken
                         * @property {string|null} [buildName] OperationMetadataV1 buildName
                         */
    
                        /**
                         * Constructs a new OperationMetadataV1.
                         * @memberof google.cloud.functions.v1
                         * @classdesc Represents an OperationMetadataV1.
                         * @implements IOperationMetadataV1
                         * @constructor
                         * @param {google.cloud.functions.v1.IOperationMetadataV1=} [properties] Properties to set
                         */
                        function OperationMetadataV1(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadataV1 target.
                         * @member {string} target
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @instance
                         */
                        OperationMetadataV1.prototype.target = "";
    
                        /**
                         * OperationMetadataV1 type.
                         * @member {google.cloud.functions.v1.OperationType} type
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @instance
                         */
                        OperationMetadataV1.prototype.type = 0;
    
                        /**
                         * OperationMetadataV1 request.
                         * @member {google.protobuf.IAny|null|undefined} request
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @instance
                         */
                        OperationMetadataV1.prototype.request = null;
    
                        /**
                         * OperationMetadataV1 versionId.
                         * @member {number|Long} versionId
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @instance
                         */
                        OperationMetadataV1.prototype.versionId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * OperationMetadataV1 updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @instance
                         */
                        OperationMetadataV1.prototype.updateTime = null;
    
                        /**
                         * OperationMetadataV1 buildId.
                         * @member {string} buildId
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @instance
                         */
                        OperationMetadataV1.prototype.buildId = "";
    
                        /**
                         * OperationMetadataV1 sourceToken.
                         * @member {string} sourceToken
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @instance
                         */
                        OperationMetadataV1.prototype.sourceToken = "";
    
                        /**
                         * OperationMetadataV1 buildName.
                         * @member {string} buildName
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @instance
                         */
                        OperationMetadataV1.prototype.buildName = "";
    
                        /**
                         * Creates a new OperationMetadataV1 instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @static
                         * @param {google.cloud.functions.v1.IOperationMetadataV1=} [properties] Properties to set
                         * @returns {google.cloud.functions.v1.OperationMetadataV1} OperationMetadataV1 instance
                         */
                        OperationMetadataV1.create = function create(properties) {
                            return new OperationMetadataV1(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadataV1 message. Does not implicitly {@link google.cloud.functions.v1.OperationMetadataV1.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @static
                         * @param {google.cloud.functions.v1.IOperationMetadataV1} message OperationMetadataV1 message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadataV1.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.target);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            if (message.request != null && Object.hasOwnProperty.call(message, "request"))
                                $root.google.protobuf.Any.encode(message.request, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.versionId != null && Object.hasOwnProperty.call(message, "versionId"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.versionId);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.buildId != null && Object.hasOwnProperty.call(message, "buildId"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.buildId);
                            if (message.sourceToken != null && Object.hasOwnProperty.call(message, "sourceToken"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.sourceToken);
                            if (message.buildName != null && Object.hasOwnProperty.call(message, "buildName"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.buildName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadataV1 message, length delimited. Does not implicitly {@link google.cloud.functions.v1.OperationMetadataV1.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @static
                         * @param {google.cloud.functions.v1.IOperationMetadataV1} message OperationMetadataV1 message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadataV1.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadataV1 message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v1.OperationMetadataV1} OperationMetadataV1
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadataV1.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v1.OperationMetadataV1();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.request = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.versionId = reader.int64();
                                        break;
                                    }
                                case 5: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.buildId = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.sourceToken = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.buildName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadataV1 message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v1.OperationMetadataV1} OperationMetadataV1
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadataV1.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadataV1 message.
                         * @function verify
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadataV1.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.request != null && message.hasOwnProperty("request")) {
                                var error = $root.google.protobuf.Any.verify(message.request);
                                if (error)
                                    return "request." + error;
                            }
                            if (message.versionId != null && message.hasOwnProperty("versionId"))
                                if (!$util.isInteger(message.versionId) && !(message.versionId && $util.isInteger(message.versionId.low) && $util.isInteger(message.versionId.high)))
                                    return "versionId: integer|Long expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.buildId != null && message.hasOwnProperty("buildId"))
                                if (!$util.isString(message.buildId))
                                    return "buildId: string expected";
                            if (message.sourceToken != null && message.hasOwnProperty("sourceToken"))
                                if (!$util.isString(message.sourceToken))
                                    return "sourceToken: string expected";
                            if (message.buildName != null && message.hasOwnProperty("buildName"))
                                if (!$util.isString(message.buildName))
                                    return "buildName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadataV1 message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v1.OperationMetadataV1} OperationMetadataV1
                         */
                        OperationMetadataV1.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v1.OperationMetadataV1)
                                return object;
                            var message = new $root.google.cloud.functions.v1.OperationMetadataV1();
                            if (object.target != null)
                                message.target = String(object.target);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "OPERATION_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "CREATE_FUNCTION":
                            case 1:
                                message.type = 1;
                                break;
                            case "UPDATE_FUNCTION":
                            case 2:
                                message.type = 2;
                                break;
                            case "DELETE_FUNCTION":
                            case 3:
                                message.type = 3;
                                break;
                            }
                            if (object.request != null) {
                                if (typeof object.request !== "object")
                                    throw TypeError(".google.cloud.functions.v1.OperationMetadataV1.request: object expected");
                                message.request = $root.google.protobuf.Any.fromObject(object.request);
                            }
                            if (object.versionId != null)
                                if ($util.Long)
                                    (message.versionId = $util.Long.fromValue(object.versionId)).unsigned = false;
                                else if (typeof object.versionId === "string")
                                    message.versionId = parseInt(object.versionId, 10);
                                else if (typeof object.versionId === "number")
                                    message.versionId = object.versionId;
                                else if (typeof object.versionId === "object")
                                    message.versionId = new $util.LongBits(object.versionId.low >>> 0, object.versionId.high >>> 0).toNumber();
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.functions.v1.OperationMetadataV1.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.buildId != null)
                                message.buildId = String(object.buildId);
                            if (object.sourceToken != null)
                                message.sourceToken = String(object.sourceToken);
                            if (object.buildName != null)
                                message.buildName = String(object.buildName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadataV1 message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @static
                         * @param {google.cloud.functions.v1.OperationMetadataV1} message OperationMetadataV1
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadataV1.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.target = "";
                                object.type = options.enums === String ? "OPERATION_UNSPECIFIED" : 0;
                                object.request = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.versionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.versionId = options.longs === String ? "0" : 0;
                                object.updateTime = null;
                                object.buildId = "";
                                object.sourceToken = "";
                                object.buildName = "";
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.functions.v1.OperationType[message.type] === undefined ? message.type : $root.google.cloud.functions.v1.OperationType[message.type] : message.type;
                            if (message.request != null && message.hasOwnProperty("request"))
                                object.request = $root.google.protobuf.Any.toObject(message.request, options);
                            if (message.versionId != null && message.hasOwnProperty("versionId"))
                                if (typeof message.versionId === "number")
                                    object.versionId = options.longs === String ? String(message.versionId) : message.versionId;
                                else
                                    object.versionId = options.longs === String ? $util.Long.prototype.toString.call(message.versionId) : options.longs === Number ? new $util.LongBits(message.versionId.low >>> 0, message.versionId.high >>> 0).toNumber() : message.versionId;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.buildId != null && message.hasOwnProperty("buildId"))
                                object.buildId = message.buildId;
                            if (message.sourceToken != null && message.hasOwnProperty("sourceToken"))
                                object.sourceToken = message.sourceToken;
                            if (message.buildName != null && message.hasOwnProperty("buildName"))
                                object.buildName = message.buildName;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadataV1 to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadataV1.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadataV1
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v1.OperationMetadataV1
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadataV1.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v1.OperationMetadataV1";
                        };
    
                        return OperationMetadataV1;
                    })();
    
                    return v1;
                })();
    
                functions.v2 = (function() {
    
                    /**
                     * Namespace v2.
                     * @memberof google.cloud.functions
                     * @namespace
                     */
                    var v2 = {};
    
                    v2.FunctionService = (function() {
    
                        /**
                         * Constructs a new FunctionService service.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a FunctionService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function FunctionService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (FunctionService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = FunctionService;
    
                        /**
                         * Creates new FunctionService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {FunctionService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        FunctionService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2.FunctionService|getFunction}.
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @typedef GetFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2.Function} [response] Function
                         */
    
                        /**
                         * Calls GetFunction.
                         * @function getFunction
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IGetFunctionRequest} request GetFunctionRequest message or plain object
                         * @param {google.cloud.functions.v2.FunctionService.GetFunctionCallback} callback Node-style callback called with the error, if any, and Function
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.getFunction = function getFunction(request, callback) {
                            return this.rpcCall(getFunction, $root.google.cloud.functions.v2.GetFunctionRequest, $root.google.cloud.functions.v2.Function, request, callback);
                        }, "name", { value: "GetFunction" });
    
                        /**
                         * Calls GetFunction.
                         * @function getFunction
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IGetFunctionRequest} request GetFunctionRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2.Function>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2.FunctionService|listFunctions}.
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @typedef ListFunctionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2.ListFunctionsResponse} [response] ListFunctionsResponse
                         */
    
                        /**
                         * Calls ListFunctions.
                         * @function listFunctions
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IListFunctionsRequest} request ListFunctionsRequest message or plain object
                         * @param {google.cloud.functions.v2.FunctionService.ListFunctionsCallback} callback Node-style callback called with the error, if any, and ListFunctionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.listFunctions = function listFunctions(request, callback) {
                            return this.rpcCall(listFunctions, $root.google.cloud.functions.v2.ListFunctionsRequest, $root.google.cloud.functions.v2.ListFunctionsResponse, request, callback);
                        }, "name", { value: "ListFunctions" });
    
                        /**
                         * Calls ListFunctions.
                         * @function listFunctions
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IListFunctionsRequest} request ListFunctionsRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2.ListFunctionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2.FunctionService|createFunction}.
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @typedef CreateFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateFunction.
                         * @function createFunction
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.ICreateFunctionRequest} request CreateFunctionRequest message or plain object
                         * @param {google.cloud.functions.v2.FunctionService.CreateFunctionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.createFunction = function createFunction(request, callback) {
                            return this.rpcCall(createFunction, $root.google.cloud.functions.v2.CreateFunctionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateFunction" });
    
                        /**
                         * Calls CreateFunction.
                         * @function createFunction
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.ICreateFunctionRequest} request CreateFunctionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2.FunctionService|updateFunction}.
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @typedef UpdateFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateFunction.
                         * @function updateFunction
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IUpdateFunctionRequest} request UpdateFunctionRequest message or plain object
                         * @param {google.cloud.functions.v2.FunctionService.UpdateFunctionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.updateFunction = function updateFunction(request, callback) {
                            return this.rpcCall(updateFunction, $root.google.cloud.functions.v2.UpdateFunctionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateFunction" });
    
                        /**
                         * Calls UpdateFunction.
                         * @function updateFunction
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IUpdateFunctionRequest} request UpdateFunctionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2.FunctionService|deleteFunction}.
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @typedef DeleteFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteFunction.
                         * @function deleteFunction
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IDeleteFunctionRequest} request DeleteFunctionRequest message or plain object
                         * @param {google.cloud.functions.v2.FunctionService.DeleteFunctionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.deleteFunction = function deleteFunction(request, callback) {
                            return this.rpcCall(deleteFunction, $root.google.cloud.functions.v2.DeleteFunctionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteFunction" });
    
                        /**
                         * Calls DeleteFunction.
                         * @function deleteFunction
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IDeleteFunctionRequest} request DeleteFunctionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2.FunctionService|generateUploadUrl}.
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @typedef GenerateUploadUrlCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2.GenerateUploadUrlResponse} [response] GenerateUploadUrlResponse
                         */
    
                        /**
                         * Calls GenerateUploadUrl.
                         * @function generateUploadUrl
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IGenerateUploadUrlRequest} request GenerateUploadUrlRequest message or plain object
                         * @param {google.cloud.functions.v2.FunctionService.GenerateUploadUrlCallback} callback Node-style callback called with the error, if any, and GenerateUploadUrlResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.generateUploadUrl = function generateUploadUrl(request, callback) {
                            return this.rpcCall(generateUploadUrl, $root.google.cloud.functions.v2.GenerateUploadUrlRequest, $root.google.cloud.functions.v2.GenerateUploadUrlResponse, request, callback);
                        }, "name", { value: "GenerateUploadUrl" });
    
                        /**
                         * Calls GenerateUploadUrl.
                         * @function generateUploadUrl
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IGenerateUploadUrlRequest} request GenerateUploadUrlRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2.GenerateUploadUrlResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2.FunctionService|generateDownloadUrl}.
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @typedef GenerateDownloadUrlCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2.GenerateDownloadUrlResponse} [response] GenerateDownloadUrlResponse
                         */
    
                        /**
                         * Calls GenerateDownloadUrl.
                         * @function generateDownloadUrl
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IGenerateDownloadUrlRequest} request GenerateDownloadUrlRequest message or plain object
                         * @param {google.cloud.functions.v2.FunctionService.GenerateDownloadUrlCallback} callback Node-style callback called with the error, if any, and GenerateDownloadUrlResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.generateDownloadUrl = function generateDownloadUrl(request, callback) {
                            return this.rpcCall(generateDownloadUrl, $root.google.cloud.functions.v2.GenerateDownloadUrlRequest, $root.google.cloud.functions.v2.GenerateDownloadUrlResponse, request, callback);
                        }, "name", { value: "GenerateDownloadUrl" });
    
                        /**
                         * Calls GenerateDownloadUrl.
                         * @function generateDownloadUrl
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IGenerateDownloadUrlRequest} request GenerateDownloadUrlRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2.GenerateDownloadUrlResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2.FunctionService|listRuntimes}.
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @typedef ListRuntimesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2.ListRuntimesResponse} [response] ListRuntimesResponse
                         */
    
                        /**
                         * Calls ListRuntimes.
                         * @function listRuntimes
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IListRuntimesRequest} request ListRuntimesRequest message or plain object
                         * @param {google.cloud.functions.v2.FunctionService.ListRuntimesCallback} callback Node-style callback called with the error, if any, and ListRuntimesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.listRuntimes = function listRuntimes(request, callback) {
                            return this.rpcCall(listRuntimes, $root.google.cloud.functions.v2.ListRuntimesRequest, $root.google.cloud.functions.v2.ListRuntimesResponse, request, callback);
                        }, "name", { value: "ListRuntimes" });
    
                        /**
                         * Calls ListRuntimes.
                         * @function listRuntimes
                         * @memberof google.cloud.functions.v2.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2.IListRuntimesRequest} request ListRuntimesRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2.ListRuntimesResponse>} Promise
                         * @variation 2
                         */
    
                        return FunctionService;
                    })();
    
                    /**
                     * Environment enum.
                     * @name google.cloud.functions.v2.Environment
                     * @enum {number}
                     * @property {number} ENVIRONMENT_UNSPECIFIED=0 ENVIRONMENT_UNSPECIFIED value
                     * @property {number} GEN_1=1 GEN_1 value
                     * @property {number} GEN_2=2 GEN_2 value
                     */
                    v2.Environment = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ENVIRONMENT_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "GEN_1"] = 1;
                        values[valuesById[2] = "GEN_2"] = 2;
                        return values;
                    })();
    
                    v2.Function = (function() {
    
                        /**
                         * Properties of a Function.
                         * @memberof google.cloud.functions.v2
                         * @interface IFunction
                         * @property {string|null} [name] Function name
                         * @property {string|null} [description] Function description
                         * @property {google.cloud.functions.v2.IBuildConfig|null} [buildConfig] Function buildConfig
                         * @property {google.cloud.functions.v2.IServiceConfig|null} [serviceConfig] Function serviceConfig
                         * @property {google.cloud.functions.v2.IEventTrigger|null} [eventTrigger] Function eventTrigger
                         * @property {google.cloud.functions.v2.Function.State|null} [state] Function state
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Function updateTime
                         * @property {Object.<string,string>|null} [labels] Function labels
                         * @property {Array.<google.cloud.functions.v2.IStateMessage>|null} [stateMessages] Function stateMessages
                         * @property {google.cloud.functions.v2.Environment|null} [environment] Function environment
                         * @property {string|null} [url] Function url
                         * @property {string|null} [kmsKeyName] Function kmsKeyName
                         */
    
                        /**
                         * Constructs a new Function.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a Function.
                         * @implements IFunction
                         * @constructor
                         * @param {google.cloud.functions.v2.IFunction=} [properties] Properties to set
                         */
                        function Function(properties) {
                            this.labels = {};
                            this.stateMessages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Function name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         */
                        Function.prototype.name = "";
    
                        /**
                         * Function description.
                         * @member {string} description
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         */
                        Function.prototype.description = "";
    
                        /**
                         * Function buildConfig.
                         * @member {google.cloud.functions.v2.IBuildConfig|null|undefined} buildConfig
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         */
                        Function.prototype.buildConfig = null;
    
                        /**
                         * Function serviceConfig.
                         * @member {google.cloud.functions.v2.IServiceConfig|null|undefined} serviceConfig
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         */
                        Function.prototype.serviceConfig = null;
    
                        /**
                         * Function eventTrigger.
                         * @member {google.cloud.functions.v2.IEventTrigger|null|undefined} eventTrigger
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         */
                        Function.prototype.eventTrigger = null;
    
                        /**
                         * Function state.
                         * @member {google.cloud.functions.v2.Function.State} state
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         */
                        Function.prototype.state = 0;
    
                        /**
                         * Function updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         */
                        Function.prototype.updateTime = null;
    
                        /**
                         * Function labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         */
                        Function.prototype.labels = $util.emptyObject;
    
                        /**
                         * Function stateMessages.
                         * @member {Array.<google.cloud.functions.v2.IStateMessage>} stateMessages
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         */
                        Function.prototype.stateMessages = $util.emptyArray;
    
                        /**
                         * Function environment.
                         * @member {google.cloud.functions.v2.Environment} environment
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         */
                        Function.prototype.environment = 0;
    
                        /**
                         * Function url.
                         * @member {string} url
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         */
                        Function.prototype.url = "";
    
                        /**
                         * Function kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         */
                        Function.prototype.kmsKeyName = "";
    
                        /**
                         * Creates a new Function instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.Function
                         * @static
                         * @param {google.cloud.functions.v2.IFunction=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.Function} Function instance
                         */
                        Function.create = function create(properties) {
                            return new Function(properties);
                        };
    
                        /**
                         * Encodes the specified Function message. Does not implicitly {@link google.cloud.functions.v2.Function.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.Function
                         * @static
                         * @param {google.cloud.functions.v2.IFunction} message Function message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Function.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.buildConfig != null && Object.hasOwnProperty.call(message, "buildConfig"))
                                $root.google.cloud.functions.v2.BuildConfig.encode(message.buildConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.serviceConfig != null && Object.hasOwnProperty.call(message, "serviceConfig"))
                                $root.google.cloud.functions.v2.ServiceConfig.encode(message.serviceConfig, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.eventTrigger != null && Object.hasOwnProperty.call(message, "eventTrigger"))
                                $root.google.cloud.functions.v2.EventTrigger.encode(message.eventTrigger, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.stateMessages != null && message.stateMessages.length)
                                for (var i = 0; i < message.stateMessages.length; ++i)
                                    $root.google.cloud.functions.v2.StateMessage.encode(message.stateMessages[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.environment != null && Object.hasOwnProperty.call(message, "environment"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.environment);
                            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.url);
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 25, wireType 2 =*/202).string(message.kmsKeyName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Function message, length delimited. Does not implicitly {@link google.cloud.functions.v2.Function.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.Function
                         * @static
                         * @param {google.cloud.functions.v2.IFunction} message Function message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Function.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Function message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.Function
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.Function} Function
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Function.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.Function(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.buildConfig = $root.google.cloud.functions.v2.BuildConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.serviceConfig = $root.google.cloud.functions.v2.ServiceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.eventTrigger = $root.google.cloud.functions.v2.EventTrigger.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 9: {
                                        if (!(message.stateMessages && message.stateMessages.length))
                                            message.stateMessages = [];
                                        message.stateMessages.push($root.google.cloud.functions.v2.StateMessage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 10: {
                                        message.environment = reader.int32();
                                        break;
                                    }
                                case 14: {
                                        message.url = reader.string();
                                        break;
                                    }
                                case 25: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Function message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.Function
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.Function} Function
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Function.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Function message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.Function
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Function.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.buildConfig != null && message.hasOwnProperty("buildConfig")) {
                                var error = $root.google.cloud.functions.v2.BuildConfig.verify(message.buildConfig);
                                if (error)
                                    return "buildConfig." + error;
                            }
                            if (message.serviceConfig != null && message.hasOwnProperty("serviceConfig")) {
                                var error = $root.google.cloud.functions.v2.ServiceConfig.verify(message.serviceConfig);
                                if (error)
                                    return "serviceConfig." + error;
                            }
                            if (message.eventTrigger != null && message.hasOwnProperty("eventTrigger")) {
                                var error = $root.google.cloud.functions.v2.EventTrigger.verify(message.eventTrigger);
                                if (error)
                                    return "eventTrigger." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.stateMessages != null && message.hasOwnProperty("stateMessages")) {
                                if (!Array.isArray(message.stateMessages))
                                    return "stateMessages: array expected";
                                for (var i = 0; i < message.stateMessages.length; ++i) {
                                    var error = $root.google.cloud.functions.v2.StateMessage.verify(message.stateMessages[i]);
                                    if (error)
                                        return "stateMessages." + error;
                                }
                            }
                            if (message.environment != null && message.hasOwnProperty("environment"))
                                switch (message.environment) {
                                default:
                                    return "environment: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Function message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.Function
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.Function} Function
                         */
                        Function.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.Function)
                                return object;
                            var message = new $root.google.cloud.functions.v2.Function();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.buildConfig != null) {
                                if (typeof object.buildConfig !== "object")
                                    throw TypeError(".google.cloud.functions.v2.Function.buildConfig: object expected");
                                message.buildConfig = $root.google.cloud.functions.v2.BuildConfig.fromObject(object.buildConfig);
                            }
                            if (object.serviceConfig != null) {
                                if (typeof object.serviceConfig !== "object")
                                    throw TypeError(".google.cloud.functions.v2.Function.serviceConfig: object expected");
                                message.serviceConfig = $root.google.cloud.functions.v2.ServiceConfig.fromObject(object.serviceConfig);
                            }
                            if (object.eventTrigger != null) {
                                if (typeof object.eventTrigger !== "object")
                                    throw TypeError(".google.cloud.functions.v2.Function.eventTrigger: object expected");
                                message.eventTrigger = $root.google.cloud.functions.v2.EventTrigger.fromObject(object.eventTrigger);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.state = 1;
                                break;
                            case "FAILED":
                            case 2:
                                message.state = 2;
                                break;
                            case "DEPLOYING":
                            case 3:
                                message.state = 3;
                                break;
                            case "DELETING":
                            case 4:
                                message.state = 4;
                                break;
                            case "UNKNOWN":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.functions.v2.Function.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.functions.v2.Function.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.stateMessages) {
                                if (!Array.isArray(object.stateMessages))
                                    throw TypeError(".google.cloud.functions.v2.Function.stateMessages: array expected");
                                message.stateMessages = [];
                                for (var i = 0; i < object.stateMessages.length; ++i) {
                                    if (typeof object.stateMessages[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2.Function.stateMessages: object expected");
                                    message.stateMessages[i] = $root.google.cloud.functions.v2.StateMessage.fromObject(object.stateMessages[i]);
                                }
                            }
                            switch (object.environment) {
                            default:
                                if (typeof object.environment === "number") {
                                    message.environment = object.environment;
                                    break;
                                }
                                break;
                            case "ENVIRONMENT_UNSPECIFIED":
                            case 0:
                                message.environment = 0;
                                break;
                            case "GEN_1":
                            case 1:
                                message.environment = 1;
                                break;
                            case "GEN_2":
                            case 2:
                                message.environment = 2;
                                break;
                            }
                            if (object.url != null)
                                message.url = String(object.url);
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Function message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.Function
                         * @static
                         * @param {google.cloud.functions.v2.Function} message Function
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Function.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.stateMessages = [];
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.buildConfig = null;
                                object.serviceConfig = null;
                                object.eventTrigger = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.updateTime = null;
                                object.environment = options.enums === String ? "ENVIRONMENT_UNSPECIFIED" : 0;
                                object.url = "";
                                object.kmsKeyName = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.buildConfig != null && message.hasOwnProperty("buildConfig"))
                                object.buildConfig = $root.google.cloud.functions.v2.BuildConfig.toObject(message.buildConfig, options);
                            if (message.serviceConfig != null && message.hasOwnProperty("serviceConfig"))
                                object.serviceConfig = $root.google.cloud.functions.v2.ServiceConfig.toObject(message.serviceConfig, options);
                            if (message.eventTrigger != null && message.hasOwnProperty("eventTrigger"))
                                object.eventTrigger = $root.google.cloud.functions.v2.EventTrigger.toObject(message.eventTrigger, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.functions.v2.Function.State[message.state] === undefined ? message.state : $root.google.cloud.functions.v2.Function.State[message.state] : message.state;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.stateMessages && message.stateMessages.length) {
                                object.stateMessages = [];
                                for (var j = 0; j < message.stateMessages.length; ++j)
                                    object.stateMessages[j] = $root.google.cloud.functions.v2.StateMessage.toObject(message.stateMessages[j], options);
                            }
                            if (message.environment != null && message.hasOwnProperty("environment"))
                                object.environment = options.enums === String ? $root.google.cloud.functions.v2.Environment[message.environment] === undefined ? message.environment : $root.google.cloud.functions.v2.Environment[message.environment] : message.environment;
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            return object;
                        };
    
                        /**
                         * Converts this Function to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.Function
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Function.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Function
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.Function
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Function.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.Function";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.functions.v2.Function.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=1 ACTIVE value
                         * @property {number} FAILED=2 FAILED value
                         * @property {number} DEPLOYING=3 DEPLOYING value
                         * @property {number} DELETING=4 DELETING value
                         * @property {number} UNKNOWN=5 UNKNOWN value
                         */
                        Function.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ACTIVE"] = 1;
                            values[valuesById[2] = "FAILED"] = 2;
                            values[valuesById[3] = "DEPLOYING"] = 3;
                            values[valuesById[4] = "DELETING"] = 4;
                            values[valuesById[5] = "UNKNOWN"] = 5;
                            return values;
                        })();
    
                        return Function;
                    })();
    
                    v2.StateMessage = (function() {
    
                        /**
                         * Properties of a StateMessage.
                         * @memberof google.cloud.functions.v2
                         * @interface IStateMessage
                         * @property {google.cloud.functions.v2.StateMessage.Severity|null} [severity] StateMessage severity
                         * @property {string|null} [type] StateMessage type
                         * @property {string|null} [message] StateMessage message
                         */
    
                        /**
                         * Constructs a new StateMessage.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a StateMessage.
                         * @implements IStateMessage
                         * @constructor
                         * @param {google.cloud.functions.v2.IStateMessage=} [properties] Properties to set
                         */
                        function StateMessage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StateMessage severity.
                         * @member {google.cloud.functions.v2.StateMessage.Severity} severity
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @instance
                         */
                        StateMessage.prototype.severity = 0;
    
                        /**
                         * StateMessage type.
                         * @member {string} type
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @instance
                         */
                        StateMessage.prototype.type = "";
    
                        /**
                         * StateMessage message.
                         * @member {string} message
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @instance
                         */
                        StateMessage.prototype.message = "";
    
                        /**
                         * Creates a new StateMessage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @static
                         * @param {google.cloud.functions.v2.IStateMessage=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.StateMessage} StateMessage instance
                         */
                        StateMessage.create = function create(properties) {
                            return new StateMessage(properties);
                        };
    
                        /**
                         * Encodes the specified StateMessage message. Does not implicitly {@link google.cloud.functions.v2.StateMessage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @static
                         * @param {google.cloud.functions.v2.IStateMessage} message StateMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StateMessage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.severity != null && Object.hasOwnProperty.call(message, "severity"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.severity);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.message);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StateMessage message, length delimited. Does not implicitly {@link google.cloud.functions.v2.StateMessage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @static
                         * @param {google.cloud.functions.v2.IStateMessage} message StateMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StateMessage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StateMessage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.StateMessage} StateMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StateMessage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.StateMessage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.severity = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.message = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StateMessage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.StateMessage} StateMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StateMessage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StateMessage message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StateMessage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.severity != null && message.hasOwnProperty("severity"))
                                switch (message.severity) {
                                default:
                                    return "severity: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.type != null && message.hasOwnProperty("type"))
                                if (!$util.isString(message.type))
                                    return "type: string expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StateMessage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.StateMessage} StateMessage
                         */
                        StateMessage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.StateMessage)
                                return object;
                            var message = new $root.google.cloud.functions.v2.StateMessage();
                            switch (object.severity) {
                            default:
                                if (typeof object.severity === "number") {
                                    message.severity = object.severity;
                                    break;
                                }
                                break;
                            case "SEVERITY_UNSPECIFIED":
                            case 0:
                                message.severity = 0;
                                break;
                            case "ERROR":
                            case 1:
                                message.severity = 1;
                                break;
                            case "WARNING":
                            case 2:
                                message.severity = 2;
                                break;
                            case "INFO":
                            case 3:
                                message.severity = 3;
                                break;
                            }
                            if (object.type != null)
                                message.type = String(object.type);
                            if (object.message != null)
                                message.message = String(object.message);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StateMessage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @static
                         * @param {google.cloud.functions.v2.StateMessage} message StateMessage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StateMessage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.severity = options.enums === String ? "SEVERITY_UNSPECIFIED" : 0;
                                object.type = "";
                                object.message = "";
                            }
                            if (message.severity != null && message.hasOwnProperty("severity"))
                                object.severity = options.enums === String ? $root.google.cloud.functions.v2.StateMessage.Severity[message.severity] === undefined ? message.severity : $root.google.cloud.functions.v2.StateMessage.Severity[message.severity] : message.severity;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = message.type;
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            return object;
                        };
    
                        /**
                         * Converts this StateMessage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StateMessage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StateMessage
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.StateMessage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StateMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.StateMessage";
                        };
    
                        /**
                         * Severity enum.
                         * @name google.cloud.functions.v2.StateMessage.Severity
                         * @enum {number}
                         * @property {number} SEVERITY_UNSPECIFIED=0 SEVERITY_UNSPECIFIED value
                         * @property {number} ERROR=1 ERROR value
                         * @property {number} WARNING=2 WARNING value
                         * @property {number} INFO=3 INFO value
                         */
                        StateMessage.Severity = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SEVERITY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ERROR"] = 1;
                            values[valuesById[2] = "WARNING"] = 2;
                            values[valuesById[3] = "INFO"] = 3;
                            return values;
                        })();
    
                        return StateMessage;
                    })();
    
                    v2.StorageSource = (function() {
    
                        /**
                         * Properties of a StorageSource.
                         * @memberof google.cloud.functions.v2
                         * @interface IStorageSource
                         * @property {string|null} [bucket] StorageSource bucket
                         * @property {string|null} [object] StorageSource object
                         * @property {number|Long|null} [generation] StorageSource generation
                         */
    
                        /**
                         * Constructs a new StorageSource.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a StorageSource.
                         * @implements IStorageSource
                         * @constructor
                         * @param {google.cloud.functions.v2.IStorageSource=} [properties] Properties to set
                         */
                        function StorageSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StorageSource bucket.
                         * @member {string} bucket
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.bucket = "";
    
                        /**
                         * StorageSource object.
                         * @member {string} object
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.object = "";
    
                        /**
                         * StorageSource generation.
                         * @member {number|Long} generation
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.generation = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new StorageSource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @static
                         * @param {google.cloud.functions.v2.IStorageSource=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.StorageSource} StorageSource instance
                         */
                        StorageSource.create = function create(properties) {
                            return new StorageSource(properties);
                        };
    
                        /**
                         * Encodes the specified StorageSource message. Does not implicitly {@link google.cloud.functions.v2.StorageSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @static
                         * @param {google.cloud.functions.v2.IStorageSource} message StorageSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StorageSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.bucket != null && Object.hasOwnProperty.call(message, "bucket"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.bucket);
                            if (message.object != null && Object.hasOwnProperty.call(message, "object"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.object);
                            if (message.generation != null && Object.hasOwnProperty.call(message, "generation"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.generation);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StorageSource message, length delimited. Does not implicitly {@link google.cloud.functions.v2.StorageSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @static
                         * @param {google.cloud.functions.v2.IStorageSource} message StorageSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StorageSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StorageSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.StorageSource} StorageSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StorageSource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.StorageSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.bucket = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.object = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.generation = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StorageSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.StorageSource} StorageSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StorageSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StorageSource message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StorageSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.bucket != null && message.hasOwnProperty("bucket"))
                                if (!$util.isString(message.bucket))
                                    return "bucket: string expected";
                            if (message.object != null && message.hasOwnProperty("object"))
                                if (!$util.isString(message.object))
                                    return "object: string expected";
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (!$util.isInteger(message.generation) && !(message.generation && $util.isInteger(message.generation.low) && $util.isInteger(message.generation.high)))
                                    return "generation: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates a StorageSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.StorageSource} StorageSource
                         */
                        StorageSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.StorageSource)
                                return object;
                            var message = new $root.google.cloud.functions.v2.StorageSource();
                            if (object.bucket != null)
                                message.bucket = String(object.bucket);
                            if (object.object != null)
                                message.object = String(object.object);
                            if (object.generation != null)
                                if ($util.Long)
                                    (message.generation = $util.Long.fromValue(object.generation)).unsigned = false;
                                else if (typeof object.generation === "string")
                                    message.generation = parseInt(object.generation, 10);
                                else if (typeof object.generation === "number")
                                    message.generation = object.generation;
                                else if (typeof object.generation === "object")
                                    message.generation = new $util.LongBits(object.generation.low >>> 0, object.generation.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StorageSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @static
                         * @param {google.cloud.functions.v2.StorageSource} message StorageSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StorageSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.bucket = "";
                                object.object = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.generation = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.generation = options.longs === String ? "0" : 0;
                            }
                            if (message.bucket != null && message.hasOwnProperty("bucket"))
                                object.bucket = message.bucket;
                            if (message.object != null && message.hasOwnProperty("object"))
                                object.object = message.object;
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (typeof message.generation === "number")
                                    object.generation = options.longs === String ? String(message.generation) : message.generation;
                                else
                                    object.generation = options.longs === String ? $util.Long.prototype.toString.call(message.generation) : options.longs === Number ? new $util.LongBits(message.generation.low >>> 0, message.generation.high >>> 0).toNumber() : message.generation;
                            return object;
                        };
    
                        /**
                         * Converts this StorageSource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StorageSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StorageSource
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.StorageSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StorageSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.StorageSource";
                        };
    
                        return StorageSource;
                    })();
    
                    v2.RepoSource = (function() {
    
                        /**
                         * Properties of a RepoSource.
                         * @memberof google.cloud.functions.v2
                         * @interface IRepoSource
                         * @property {string|null} [branchName] RepoSource branchName
                         * @property {string|null} [tagName] RepoSource tagName
                         * @property {string|null} [commitSha] RepoSource commitSha
                         * @property {string|null} [projectId] RepoSource projectId
                         * @property {string|null} [repoName] RepoSource repoName
                         * @property {string|null} [dir] RepoSource dir
                         * @property {boolean|null} [invertRegex] RepoSource invertRegex
                         */
    
                        /**
                         * Constructs a new RepoSource.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a RepoSource.
                         * @implements IRepoSource
                         * @constructor
                         * @param {google.cloud.functions.v2.IRepoSource=} [properties] Properties to set
                         */
                        function RepoSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RepoSource branchName.
                         * @member {string|null|undefined} branchName
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.branchName = null;
    
                        /**
                         * RepoSource tagName.
                         * @member {string|null|undefined} tagName
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.tagName = null;
    
                        /**
                         * RepoSource commitSha.
                         * @member {string|null|undefined} commitSha
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.commitSha = null;
    
                        /**
                         * RepoSource projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.projectId = "";
    
                        /**
                         * RepoSource repoName.
                         * @member {string} repoName
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.repoName = "";
    
                        /**
                         * RepoSource dir.
                         * @member {string} dir
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.dir = "";
    
                        /**
                         * RepoSource invertRegex.
                         * @member {boolean} invertRegex
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.invertRegex = false;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RepoSource revision.
                         * @member {"branchName"|"tagName"|"commitSha"|undefined} revision
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @instance
                         */
                        Object.defineProperty(RepoSource.prototype, "revision", {
                            get: $util.oneOfGetter($oneOfFields = ["branchName", "tagName", "commitSha"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RepoSource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @static
                         * @param {google.cloud.functions.v2.IRepoSource=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.RepoSource} RepoSource instance
                         */
                        RepoSource.create = function create(properties) {
                            return new RepoSource(properties);
                        };
    
                        /**
                         * Encodes the specified RepoSource message. Does not implicitly {@link google.cloud.functions.v2.RepoSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @static
                         * @param {google.cloud.functions.v2.IRepoSource} message RepoSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepoSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.repoName != null && Object.hasOwnProperty.call(message, "repoName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.repoName);
                            if (message.branchName != null && Object.hasOwnProperty.call(message, "branchName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.branchName);
                            if (message.tagName != null && Object.hasOwnProperty.call(message, "tagName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.tagName);
                            if (message.commitSha != null && Object.hasOwnProperty.call(message, "commitSha"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.commitSha);
                            if (message.dir != null && Object.hasOwnProperty.call(message, "dir"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.dir);
                            if (message.invertRegex != null && Object.hasOwnProperty.call(message, "invertRegex"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.invertRegex);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RepoSource message, length delimited. Does not implicitly {@link google.cloud.functions.v2.RepoSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @static
                         * @param {google.cloud.functions.v2.IRepoSource} message RepoSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepoSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RepoSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.RepoSource} RepoSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepoSource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.RepoSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.branchName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.tagName = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.commitSha = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.repoName = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.dir = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.invertRegex = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RepoSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.RepoSource} RepoSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepoSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RepoSource message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RepoSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.branchName != null && message.hasOwnProperty("branchName")) {
                                properties.revision = 1;
                                if (!$util.isString(message.branchName))
                                    return "branchName: string expected";
                            }
                            if (message.tagName != null && message.hasOwnProperty("tagName")) {
                                if (properties.revision === 1)
                                    return "revision: multiple values";
                                properties.revision = 1;
                                if (!$util.isString(message.tagName))
                                    return "tagName: string expected";
                            }
                            if (message.commitSha != null && message.hasOwnProperty("commitSha")) {
                                if (properties.revision === 1)
                                    return "revision: multiple values";
                                properties.revision = 1;
                                if (!$util.isString(message.commitSha))
                                    return "commitSha: string expected";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.repoName != null && message.hasOwnProperty("repoName"))
                                if (!$util.isString(message.repoName))
                                    return "repoName: string expected";
                            if (message.dir != null && message.hasOwnProperty("dir"))
                                if (!$util.isString(message.dir))
                                    return "dir: string expected";
                            if (message.invertRegex != null && message.hasOwnProperty("invertRegex"))
                                if (typeof message.invertRegex !== "boolean")
                                    return "invertRegex: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RepoSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.RepoSource} RepoSource
                         */
                        RepoSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.RepoSource)
                                return object;
                            var message = new $root.google.cloud.functions.v2.RepoSource();
                            if (object.branchName != null)
                                message.branchName = String(object.branchName);
                            if (object.tagName != null)
                                message.tagName = String(object.tagName);
                            if (object.commitSha != null)
                                message.commitSha = String(object.commitSha);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.repoName != null)
                                message.repoName = String(object.repoName);
                            if (object.dir != null)
                                message.dir = String(object.dir);
                            if (object.invertRegex != null)
                                message.invertRegex = Boolean(object.invertRegex);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RepoSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @static
                         * @param {google.cloud.functions.v2.RepoSource} message RepoSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RepoSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.repoName = "";
                                object.dir = "";
                                object.invertRegex = false;
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.repoName != null && message.hasOwnProperty("repoName"))
                                object.repoName = message.repoName;
                            if (message.branchName != null && message.hasOwnProperty("branchName")) {
                                object.branchName = message.branchName;
                                if (options.oneofs)
                                    object.revision = "branchName";
                            }
                            if (message.tagName != null && message.hasOwnProperty("tagName")) {
                                object.tagName = message.tagName;
                                if (options.oneofs)
                                    object.revision = "tagName";
                            }
                            if (message.commitSha != null && message.hasOwnProperty("commitSha")) {
                                object.commitSha = message.commitSha;
                                if (options.oneofs)
                                    object.revision = "commitSha";
                            }
                            if (message.dir != null && message.hasOwnProperty("dir"))
                                object.dir = message.dir;
                            if (message.invertRegex != null && message.hasOwnProperty("invertRegex"))
                                object.invertRegex = message.invertRegex;
                            return object;
                        };
    
                        /**
                         * Converts this RepoSource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RepoSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RepoSource
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.RepoSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RepoSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.RepoSource";
                        };
    
                        return RepoSource;
                    })();
    
                    v2.Source = (function() {
    
                        /**
                         * Properties of a Source.
                         * @memberof google.cloud.functions.v2
                         * @interface ISource
                         * @property {google.cloud.functions.v2.IStorageSource|null} [storageSource] Source storageSource
                         * @property {google.cloud.functions.v2.IRepoSource|null} [repoSource] Source repoSource
                         */
    
                        /**
                         * Constructs a new Source.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a Source.
                         * @implements ISource
                         * @constructor
                         * @param {google.cloud.functions.v2.ISource=} [properties] Properties to set
                         */
                        function Source(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Source storageSource.
                         * @member {google.cloud.functions.v2.IStorageSource|null|undefined} storageSource
                         * @memberof google.cloud.functions.v2.Source
                         * @instance
                         */
                        Source.prototype.storageSource = null;
    
                        /**
                         * Source repoSource.
                         * @member {google.cloud.functions.v2.IRepoSource|null|undefined} repoSource
                         * @memberof google.cloud.functions.v2.Source
                         * @instance
                         */
                        Source.prototype.repoSource = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Source source.
                         * @member {"storageSource"|"repoSource"|undefined} source
                         * @memberof google.cloud.functions.v2.Source
                         * @instance
                         */
                        Object.defineProperty(Source.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["storageSource", "repoSource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Source instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.Source
                         * @static
                         * @param {google.cloud.functions.v2.ISource=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.Source} Source instance
                         */
                        Source.create = function create(properties) {
                            return new Source(properties);
                        };
    
                        /**
                         * Encodes the specified Source message. Does not implicitly {@link google.cloud.functions.v2.Source.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.Source
                         * @static
                         * @param {google.cloud.functions.v2.ISource} message Source message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Source.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.storageSource != null && Object.hasOwnProperty.call(message, "storageSource"))
                                $root.google.cloud.functions.v2.StorageSource.encode(message.storageSource, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.repoSource != null && Object.hasOwnProperty.call(message, "repoSource"))
                                $root.google.cloud.functions.v2.RepoSource.encode(message.repoSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Source message, length delimited. Does not implicitly {@link google.cloud.functions.v2.Source.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.Source
                         * @static
                         * @param {google.cloud.functions.v2.ISource} message Source message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Source.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Source message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.Source
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.Source} Source
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Source.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.Source();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.storageSource = $root.google.cloud.functions.v2.StorageSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.repoSource = $root.google.cloud.functions.v2.RepoSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Source message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.Source
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.Source} Source
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Source.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Source message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.Source
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Source.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.storageSource != null && message.hasOwnProperty("storageSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.functions.v2.StorageSource.verify(message.storageSource);
                                    if (error)
                                        return "storageSource." + error;
                                }
                            }
                            if (message.repoSource != null && message.hasOwnProperty("repoSource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.functions.v2.RepoSource.verify(message.repoSource);
                                    if (error)
                                        return "repoSource." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Source message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.Source
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.Source} Source
                         */
                        Source.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.Source)
                                return object;
                            var message = new $root.google.cloud.functions.v2.Source();
                            if (object.storageSource != null) {
                                if (typeof object.storageSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2.Source.storageSource: object expected");
                                message.storageSource = $root.google.cloud.functions.v2.StorageSource.fromObject(object.storageSource);
                            }
                            if (object.repoSource != null) {
                                if (typeof object.repoSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2.Source.repoSource: object expected");
                                message.repoSource = $root.google.cloud.functions.v2.RepoSource.fromObject(object.repoSource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Source message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.Source
                         * @static
                         * @param {google.cloud.functions.v2.Source} message Source
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Source.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.storageSource != null && message.hasOwnProperty("storageSource")) {
                                object.storageSource = $root.google.cloud.functions.v2.StorageSource.toObject(message.storageSource, options);
                                if (options.oneofs)
                                    object.source = "storageSource";
                            }
                            if (message.repoSource != null && message.hasOwnProperty("repoSource")) {
                                object.repoSource = $root.google.cloud.functions.v2.RepoSource.toObject(message.repoSource, options);
                                if (options.oneofs)
                                    object.source = "repoSource";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Source to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.Source
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Source.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Source
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.Source
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Source.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.Source";
                        };
    
                        return Source;
                    })();
    
                    v2.SourceProvenance = (function() {
    
                        /**
                         * Properties of a SourceProvenance.
                         * @memberof google.cloud.functions.v2
                         * @interface ISourceProvenance
                         * @property {google.cloud.functions.v2.IStorageSource|null} [resolvedStorageSource] SourceProvenance resolvedStorageSource
                         * @property {google.cloud.functions.v2.IRepoSource|null} [resolvedRepoSource] SourceProvenance resolvedRepoSource
                         */
    
                        /**
                         * Constructs a new SourceProvenance.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a SourceProvenance.
                         * @implements ISourceProvenance
                         * @constructor
                         * @param {google.cloud.functions.v2.ISourceProvenance=} [properties] Properties to set
                         */
                        function SourceProvenance(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SourceProvenance resolvedStorageSource.
                         * @member {google.cloud.functions.v2.IStorageSource|null|undefined} resolvedStorageSource
                         * @memberof google.cloud.functions.v2.SourceProvenance
                         * @instance
                         */
                        SourceProvenance.prototype.resolvedStorageSource = null;
    
                        /**
                         * SourceProvenance resolvedRepoSource.
                         * @member {google.cloud.functions.v2.IRepoSource|null|undefined} resolvedRepoSource
                         * @memberof google.cloud.functions.v2.SourceProvenance
                         * @instance
                         */
                        SourceProvenance.prototype.resolvedRepoSource = null;
    
                        /**
                         * Creates a new SourceProvenance instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.SourceProvenance
                         * @static
                         * @param {google.cloud.functions.v2.ISourceProvenance=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.SourceProvenance} SourceProvenance instance
                         */
                        SourceProvenance.create = function create(properties) {
                            return new SourceProvenance(properties);
                        };
    
                        /**
                         * Encodes the specified SourceProvenance message. Does not implicitly {@link google.cloud.functions.v2.SourceProvenance.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.SourceProvenance
                         * @static
                         * @param {google.cloud.functions.v2.ISourceProvenance} message SourceProvenance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceProvenance.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resolvedStorageSource != null && Object.hasOwnProperty.call(message, "resolvedStorageSource"))
                                $root.google.cloud.functions.v2.StorageSource.encode(message.resolvedStorageSource, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.resolvedRepoSource != null && Object.hasOwnProperty.call(message, "resolvedRepoSource"))
                                $root.google.cloud.functions.v2.RepoSource.encode(message.resolvedRepoSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SourceProvenance message, length delimited. Does not implicitly {@link google.cloud.functions.v2.SourceProvenance.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.SourceProvenance
                         * @static
                         * @param {google.cloud.functions.v2.ISourceProvenance} message SourceProvenance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceProvenance.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SourceProvenance message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.SourceProvenance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.SourceProvenance} SourceProvenance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceProvenance.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.SourceProvenance();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.resolvedStorageSource = $root.google.cloud.functions.v2.StorageSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.resolvedRepoSource = $root.google.cloud.functions.v2.RepoSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SourceProvenance message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.SourceProvenance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.SourceProvenance} SourceProvenance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceProvenance.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SourceProvenance message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.SourceProvenance
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SourceProvenance.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resolvedStorageSource != null && message.hasOwnProperty("resolvedStorageSource")) {
                                var error = $root.google.cloud.functions.v2.StorageSource.verify(message.resolvedStorageSource);
                                if (error)
                                    return "resolvedStorageSource." + error;
                            }
                            if (message.resolvedRepoSource != null && message.hasOwnProperty("resolvedRepoSource")) {
                                var error = $root.google.cloud.functions.v2.RepoSource.verify(message.resolvedRepoSource);
                                if (error)
                                    return "resolvedRepoSource." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SourceProvenance message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.SourceProvenance
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.SourceProvenance} SourceProvenance
                         */
                        SourceProvenance.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.SourceProvenance)
                                return object;
                            var message = new $root.google.cloud.functions.v2.SourceProvenance();
                            if (object.resolvedStorageSource != null) {
                                if (typeof object.resolvedStorageSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2.SourceProvenance.resolvedStorageSource: object expected");
                                message.resolvedStorageSource = $root.google.cloud.functions.v2.StorageSource.fromObject(object.resolvedStorageSource);
                            }
                            if (object.resolvedRepoSource != null) {
                                if (typeof object.resolvedRepoSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2.SourceProvenance.resolvedRepoSource: object expected");
                                message.resolvedRepoSource = $root.google.cloud.functions.v2.RepoSource.fromObject(object.resolvedRepoSource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SourceProvenance message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.SourceProvenance
                         * @static
                         * @param {google.cloud.functions.v2.SourceProvenance} message SourceProvenance
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SourceProvenance.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resolvedStorageSource = null;
                                object.resolvedRepoSource = null;
                            }
                            if (message.resolvedStorageSource != null && message.hasOwnProperty("resolvedStorageSource"))
                                object.resolvedStorageSource = $root.google.cloud.functions.v2.StorageSource.toObject(message.resolvedStorageSource, options);
                            if (message.resolvedRepoSource != null && message.hasOwnProperty("resolvedRepoSource"))
                                object.resolvedRepoSource = $root.google.cloud.functions.v2.RepoSource.toObject(message.resolvedRepoSource, options);
                            return object;
                        };
    
                        /**
                         * Converts this SourceProvenance to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.SourceProvenance
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SourceProvenance.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SourceProvenance
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.SourceProvenance
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SourceProvenance.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.SourceProvenance";
                        };
    
                        return SourceProvenance;
                    })();
    
                    v2.BuildConfig = (function() {
    
                        /**
                         * Properties of a BuildConfig.
                         * @memberof google.cloud.functions.v2
                         * @interface IBuildConfig
                         * @property {string|null} [build] BuildConfig build
                         * @property {string|null} [runtime] BuildConfig runtime
                         * @property {string|null} [entryPoint] BuildConfig entryPoint
                         * @property {google.cloud.functions.v2.ISource|null} [source] BuildConfig source
                         * @property {google.cloud.functions.v2.ISourceProvenance|null} [sourceProvenance] BuildConfig sourceProvenance
                         * @property {string|null} [workerPool] BuildConfig workerPool
                         * @property {Object.<string,string>|null} [environmentVariables] BuildConfig environmentVariables
                         * @property {google.cloud.functions.v2.BuildConfig.DockerRegistry|null} [dockerRegistry] BuildConfig dockerRegistry
                         * @property {string|null} [dockerRepository] BuildConfig dockerRepository
                         */
    
                        /**
                         * Constructs a new BuildConfig.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a BuildConfig.
                         * @implements IBuildConfig
                         * @constructor
                         * @param {google.cloud.functions.v2.IBuildConfig=} [properties] Properties to set
                         */
                        function BuildConfig(properties) {
                            this.environmentVariables = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BuildConfig build.
                         * @member {string} build
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.build = "";
    
                        /**
                         * BuildConfig runtime.
                         * @member {string} runtime
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.runtime = "";
    
                        /**
                         * BuildConfig entryPoint.
                         * @member {string} entryPoint
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.entryPoint = "";
    
                        /**
                         * BuildConfig source.
                         * @member {google.cloud.functions.v2.ISource|null|undefined} source
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.source = null;
    
                        /**
                         * BuildConfig sourceProvenance.
                         * @member {google.cloud.functions.v2.ISourceProvenance|null|undefined} sourceProvenance
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.sourceProvenance = null;
    
                        /**
                         * BuildConfig workerPool.
                         * @member {string} workerPool
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.workerPool = "";
    
                        /**
                         * BuildConfig environmentVariables.
                         * @member {Object.<string,string>} environmentVariables
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.environmentVariables = $util.emptyObject;
    
                        /**
                         * BuildConfig dockerRegistry.
                         * @member {google.cloud.functions.v2.BuildConfig.DockerRegistry} dockerRegistry
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.dockerRegistry = 0;
    
                        /**
                         * BuildConfig dockerRepository.
                         * @member {string} dockerRepository
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.dockerRepository = "";
    
                        /**
                         * Creates a new BuildConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @static
                         * @param {google.cloud.functions.v2.IBuildConfig=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.BuildConfig} BuildConfig instance
                         */
                        BuildConfig.create = function create(properties) {
                            return new BuildConfig(properties);
                        };
    
                        /**
                         * Encodes the specified BuildConfig message. Does not implicitly {@link google.cloud.functions.v2.BuildConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @static
                         * @param {google.cloud.functions.v2.IBuildConfig} message BuildConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.build != null && Object.hasOwnProperty.call(message, "build"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.build);
                            if (message.runtime != null && Object.hasOwnProperty.call(message, "runtime"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.runtime);
                            if (message.entryPoint != null && Object.hasOwnProperty.call(message, "entryPoint"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.entryPoint);
                            if (message.source != null && Object.hasOwnProperty.call(message, "source"))
                                $root.google.cloud.functions.v2.Source.encode(message.source, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.workerPool != null && Object.hasOwnProperty.call(message, "workerPool"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.workerPool);
                            if (message.environmentVariables != null && Object.hasOwnProperty.call(message, "environmentVariables"))
                                for (var keys = Object.keys(message.environmentVariables), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.environmentVariables[keys[i]]).ldelim();
                            if (message.dockerRepository != null && Object.hasOwnProperty.call(message, "dockerRepository"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.dockerRepository);
                            if (message.sourceProvenance != null && Object.hasOwnProperty.call(message, "sourceProvenance"))
                                $root.google.cloud.functions.v2.SourceProvenance.encode(message.sourceProvenance, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.dockerRegistry != null && Object.hasOwnProperty.call(message, "dockerRegistry"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.dockerRegistry);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BuildConfig message, length delimited. Does not implicitly {@link google.cloud.functions.v2.BuildConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @static
                         * @param {google.cloud.functions.v2.IBuildConfig} message BuildConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BuildConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.BuildConfig} BuildConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.BuildConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.build = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.runtime = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.entryPoint = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.source = $root.google.cloud.functions.v2.Source.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.sourceProvenance = $root.google.cloud.functions.v2.SourceProvenance.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.workerPool = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (message.environmentVariables === $util.emptyObject)
                                            message.environmentVariables = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.environmentVariables[key] = value;
                                        break;
                                    }
                                case 10: {
                                        message.dockerRegistry = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.dockerRepository = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BuildConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.BuildConfig} BuildConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BuildConfig message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BuildConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.build != null && message.hasOwnProperty("build"))
                                if (!$util.isString(message.build))
                                    return "build: string expected";
                            if (message.runtime != null && message.hasOwnProperty("runtime"))
                                if (!$util.isString(message.runtime))
                                    return "runtime: string expected";
                            if (message.entryPoint != null && message.hasOwnProperty("entryPoint"))
                                if (!$util.isString(message.entryPoint))
                                    return "entryPoint: string expected";
                            if (message.source != null && message.hasOwnProperty("source")) {
                                var error = $root.google.cloud.functions.v2.Source.verify(message.source);
                                if (error)
                                    return "source." + error;
                            }
                            if (message.sourceProvenance != null && message.hasOwnProperty("sourceProvenance")) {
                                var error = $root.google.cloud.functions.v2.SourceProvenance.verify(message.sourceProvenance);
                                if (error)
                                    return "sourceProvenance." + error;
                            }
                            if (message.workerPool != null && message.hasOwnProperty("workerPool"))
                                if (!$util.isString(message.workerPool))
                                    return "workerPool: string expected";
                            if (message.environmentVariables != null && message.hasOwnProperty("environmentVariables")) {
                                if (!$util.isObject(message.environmentVariables))
                                    return "environmentVariables: object expected";
                                var key = Object.keys(message.environmentVariables);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.environmentVariables[key[i]]))
                                        return "environmentVariables: string{k:string} expected";
                            }
                            if (message.dockerRegistry != null && message.hasOwnProperty("dockerRegistry"))
                                switch (message.dockerRegistry) {
                                default:
                                    return "dockerRegistry: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.dockerRepository != null && message.hasOwnProperty("dockerRepository"))
                                if (!$util.isString(message.dockerRepository))
                                    return "dockerRepository: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BuildConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.BuildConfig} BuildConfig
                         */
                        BuildConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.BuildConfig)
                                return object;
                            var message = new $root.google.cloud.functions.v2.BuildConfig();
                            if (object.build != null)
                                message.build = String(object.build);
                            if (object.runtime != null)
                                message.runtime = String(object.runtime);
                            if (object.entryPoint != null)
                                message.entryPoint = String(object.entryPoint);
                            if (object.source != null) {
                                if (typeof object.source !== "object")
                                    throw TypeError(".google.cloud.functions.v2.BuildConfig.source: object expected");
                                message.source = $root.google.cloud.functions.v2.Source.fromObject(object.source);
                            }
                            if (object.sourceProvenance != null) {
                                if (typeof object.sourceProvenance !== "object")
                                    throw TypeError(".google.cloud.functions.v2.BuildConfig.sourceProvenance: object expected");
                                message.sourceProvenance = $root.google.cloud.functions.v2.SourceProvenance.fromObject(object.sourceProvenance);
                            }
                            if (object.workerPool != null)
                                message.workerPool = String(object.workerPool);
                            if (object.environmentVariables) {
                                if (typeof object.environmentVariables !== "object")
                                    throw TypeError(".google.cloud.functions.v2.BuildConfig.environmentVariables: object expected");
                                message.environmentVariables = {};
                                for (var keys = Object.keys(object.environmentVariables), i = 0; i < keys.length; ++i)
                                    message.environmentVariables[keys[i]] = String(object.environmentVariables[keys[i]]);
                            }
                            switch (object.dockerRegistry) {
                            default:
                                if (typeof object.dockerRegistry === "number") {
                                    message.dockerRegistry = object.dockerRegistry;
                                    break;
                                }
                                break;
                            case "DOCKER_REGISTRY_UNSPECIFIED":
                            case 0:
                                message.dockerRegistry = 0;
                                break;
                            case "CONTAINER_REGISTRY":
                            case 1:
                                message.dockerRegistry = 1;
                                break;
                            case "ARTIFACT_REGISTRY":
                            case 2:
                                message.dockerRegistry = 2;
                                break;
                            }
                            if (object.dockerRepository != null)
                                message.dockerRepository = String(object.dockerRepository);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BuildConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @static
                         * @param {google.cloud.functions.v2.BuildConfig} message BuildConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BuildConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.environmentVariables = {};
                            if (options.defaults) {
                                object.build = "";
                                object.runtime = "";
                                object.entryPoint = "";
                                object.source = null;
                                object.workerPool = "";
                                object.dockerRepository = "";
                                object.sourceProvenance = null;
                                object.dockerRegistry = options.enums === String ? "DOCKER_REGISTRY_UNSPECIFIED" : 0;
                            }
                            if (message.build != null && message.hasOwnProperty("build"))
                                object.build = message.build;
                            if (message.runtime != null && message.hasOwnProperty("runtime"))
                                object.runtime = message.runtime;
                            if (message.entryPoint != null && message.hasOwnProperty("entryPoint"))
                                object.entryPoint = message.entryPoint;
                            if (message.source != null && message.hasOwnProperty("source"))
                                object.source = $root.google.cloud.functions.v2.Source.toObject(message.source, options);
                            if (message.workerPool != null && message.hasOwnProperty("workerPool"))
                                object.workerPool = message.workerPool;
                            var keys2;
                            if (message.environmentVariables && (keys2 = Object.keys(message.environmentVariables)).length) {
                                object.environmentVariables = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.environmentVariables[keys2[j]] = message.environmentVariables[keys2[j]];
                            }
                            if (message.dockerRepository != null && message.hasOwnProperty("dockerRepository"))
                                object.dockerRepository = message.dockerRepository;
                            if (message.sourceProvenance != null && message.hasOwnProperty("sourceProvenance"))
                                object.sourceProvenance = $root.google.cloud.functions.v2.SourceProvenance.toObject(message.sourceProvenance, options);
                            if (message.dockerRegistry != null && message.hasOwnProperty("dockerRegistry"))
                                object.dockerRegistry = options.enums === String ? $root.google.cloud.functions.v2.BuildConfig.DockerRegistry[message.dockerRegistry] === undefined ? message.dockerRegistry : $root.google.cloud.functions.v2.BuildConfig.DockerRegistry[message.dockerRegistry] : message.dockerRegistry;
                            return object;
                        };
    
                        /**
                         * Converts this BuildConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BuildConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BuildConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.BuildConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BuildConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.BuildConfig";
                        };
    
                        /**
                         * DockerRegistry enum.
                         * @name google.cloud.functions.v2.BuildConfig.DockerRegistry
                         * @enum {number}
                         * @property {number} DOCKER_REGISTRY_UNSPECIFIED=0 DOCKER_REGISTRY_UNSPECIFIED value
                         * @property {number} CONTAINER_REGISTRY=1 CONTAINER_REGISTRY value
                         * @property {number} ARTIFACT_REGISTRY=2 ARTIFACT_REGISTRY value
                         */
                        BuildConfig.DockerRegistry = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DOCKER_REGISTRY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CONTAINER_REGISTRY"] = 1;
                            values[valuesById[2] = "ARTIFACT_REGISTRY"] = 2;
                            return values;
                        })();
    
                        return BuildConfig;
                    })();
    
                    v2.ServiceConfig = (function() {
    
                        /**
                         * Properties of a ServiceConfig.
                         * @memberof google.cloud.functions.v2
                         * @interface IServiceConfig
                         * @property {string|null} [service] ServiceConfig service
                         * @property {number|null} [timeoutSeconds] ServiceConfig timeoutSeconds
                         * @property {string|null} [availableMemory] ServiceConfig availableMemory
                         * @property {string|null} [availableCpu] ServiceConfig availableCpu
                         * @property {Object.<string,string>|null} [environmentVariables] ServiceConfig environmentVariables
                         * @property {number|null} [maxInstanceCount] ServiceConfig maxInstanceCount
                         * @property {number|null} [minInstanceCount] ServiceConfig minInstanceCount
                         * @property {string|null} [vpcConnector] ServiceConfig vpcConnector
                         * @property {google.cloud.functions.v2.ServiceConfig.VpcConnectorEgressSettings|null} [vpcConnectorEgressSettings] ServiceConfig vpcConnectorEgressSettings
                         * @property {google.cloud.functions.v2.ServiceConfig.IngressSettings|null} [ingressSettings] ServiceConfig ingressSettings
                         * @property {string|null} [uri] ServiceConfig uri
                         * @property {string|null} [serviceAccountEmail] ServiceConfig serviceAccountEmail
                         * @property {boolean|null} [allTrafficOnLatestRevision] ServiceConfig allTrafficOnLatestRevision
                         * @property {Array.<google.cloud.functions.v2.ISecretEnvVar>|null} [secretEnvironmentVariables] ServiceConfig secretEnvironmentVariables
                         * @property {Array.<google.cloud.functions.v2.ISecretVolume>|null} [secretVolumes] ServiceConfig secretVolumes
                         * @property {string|null} [revision] ServiceConfig revision
                         * @property {number|null} [maxInstanceRequestConcurrency] ServiceConfig maxInstanceRequestConcurrency
                         * @property {google.cloud.functions.v2.ServiceConfig.SecurityLevel|null} [securityLevel] ServiceConfig securityLevel
                         */
    
                        /**
                         * Constructs a new ServiceConfig.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a ServiceConfig.
                         * @implements IServiceConfig
                         * @constructor
                         * @param {google.cloud.functions.v2.IServiceConfig=} [properties] Properties to set
                         */
                        function ServiceConfig(properties) {
                            this.environmentVariables = {};
                            this.secretEnvironmentVariables = [];
                            this.secretVolumes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ServiceConfig service.
                         * @member {string} service
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.service = "";
    
                        /**
                         * ServiceConfig timeoutSeconds.
                         * @member {number} timeoutSeconds
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.timeoutSeconds = 0;
    
                        /**
                         * ServiceConfig availableMemory.
                         * @member {string} availableMemory
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.availableMemory = "";
    
                        /**
                         * ServiceConfig availableCpu.
                         * @member {string} availableCpu
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.availableCpu = "";
    
                        /**
                         * ServiceConfig environmentVariables.
                         * @member {Object.<string,string>} environmentVariables
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.environmentVariables = $util.emptyObject;
    
                        /**
                         * ServiceConfig maxInstanceCount.
                         * @member {number} maxInstanceCount
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.maxInstanceCount = 0;
    
                        /**
                         * ServiceConfig minInstanceCount.
                         * @member {number} minInstanceCount
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.minInstanceCount = 0;
    
                        /**
                         * ServiceConfig vpcConnector.
                         * @member {string} vpcConnector
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.vpcConnector = "";
    
                        /**
                         * ServiceConfig vpcConnectorEgressSettings.
                         * @member {google.cloud.functions.v2.ServiceConfig.VpcConnectorEgressSettings} vpcConnectorEgressSettings
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.vpcConnectorEgressSettings = 0;
    
                        /**
                         * ServiceConfig ingressSettings.
                         * @member {google.cloud.functions.v2.ServiceConfig.IngressSettings} ingressSettings
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.ingressSettings = 0;
    
                        /**
                         * ServiceConfig uri.
                         * @member {string} uri
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.uri = "";
    
                        /**
                         * ServiceConfig serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.serviceAccountEmail = "";
    
                        /**
                         * ServiceConfig allTrafficOnLatestRevision.
                         * @member {boolean} allTrafficOnLatestRevision
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.allTrafficOnLatestRevision = false;
    
                        /**
                         * ServiceConfig secretEnvironmentVariables.
                         * @member {Array.<google.cloud.functions.v2.ISecretEnvVar>} secretEnvironmentVariables
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.secretEnvironmentVariables = $util.emptyArray;
    
                        /**
                         * ServiceConfig secretVolumes.
                         * @member {Array.<google.cloud.functions.v2.ISecretVolume>} secretVolumes
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.secretVolumes = $util.emptyArray;
    
                        /**
                         * ServiceConfig revision.
                         * @member {string} revision
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.revision = "";
    
                        /**
                         * ServiceConfig maxInstanceRequestConcurrency.
                         * @member {number} maxInstanceRequestConcurrency
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.maxInstanceRequestConcurrency = 0;
    
                        /**
                         * ServiceConfig securityLevel.
                         * @member {google.cloud.functions.v2.ServiceConfig.SecurityLevel} securityLevel
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.securityLevel = 0;
    
                        /**
                         * Creates a new ServiceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @static
                         * @param {google.cloud.functions.v2.IServiceConfig=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.ServiceConfig} ServiceConfig instance
                         */
                        ServiceConfig.create = function create(properties) {
                            return new ServiceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ServiceConfig message. Does not implicitly {@link google.cloud.functions.v2.ServiceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @static
                         * @param {google.cloud.functions.v2.IServiceConfig} message ServiceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ServiceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.timeoutSeconds != null && Object.hasOwnProperty.call(message, "timeoutSeconds"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.timeoutSeconds);
                            if (message.environmentVariables != null && Object.hasOwnProperty.call(message, "environmentVariables"))
                                for (var keys = Object.keys(message.environmentVariables), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.environmentVariables[keys[i]]).ldelim();
                            if (message.maxInstanceCount != null && Object.hasOwnProperty.call(message, "maxInstanceCount"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.maxInstanceCount);
                            if (message.vpcConnector != null && Object.hasOwnProperty.call(message, "vpcConnector"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.vpcConnector);
                            if (message.vpcConnectorEgressSettings != null && Object.hasOwnProperty.call(message, "vpcConnectorEgressSettings"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.vpcConnectorEgressSettings);
                            if (message.ingressSettings != null && Object.hasOwnProperty.call(message, "ingressSettings"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.ingressSettings);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.uri);
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.serviceAccountEmail);
                            if (message.minInstanceCount != null && Object.hasOwnProperty.call(message, "minInstanceCount"))
                                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.minInstanceCount);
                            if (message.availableMemory != null && Object.hasOwnProperty.call(message, "availableMemory"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.availableMemory);
                            if (message.allTrafficOnLatestRevision != null && Object.hasOwnProperty.call(message, "allTrafficOnLatestRevision"))
                                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.allTrafficOnLatestRevision);
                            if (message.secretEnvironmentVariables != null && message.secretEnvironmentVariables.length)
                                for (var i = 0; i < message.secretEnvironmentVariables.length; ++i)
                                    $root.google.cloud.functions.v2.SecretEnvVar.encode(message.secretEnvironmentVariables[i], writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                writer.uint32(/* id 18, wireType 2 =*/146).string(message.revision);
                            if (message.secretVolumes != null && message.secretVolumes.length)
                                for (var i = 0; i < message.secretVolumes.length; ++i)
                                    $root.google.cloud.functions.v2.SecretVolume.encode(message.secretVolumes[i], writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.maxInstanceRequestConcurrency != null && Object.hasOwnProperty.call(message, "maxInstanceRequestConcurrency"))
                                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.maxInstanceRequestConcurrency);
                            if (message.securityLevel != null && Object.hasOwnProperty.call(message, "securityLevel"))
                                writer.uint32(/* id 21, wireType 0 =*/168).int32(message.securityLevel);
                            if (message.availableCpu != null && Object.hasOwnProperty.call(message, "availableCpu"))
                                writer.uint32(/* id 22, wireType 2 =*/178).string(message.availableCpu);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ServiceConfig message, length delimited. Does not implicitly {@link google.cloud.functions.v2.ServiceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @static
                         * @param {google.cloud.functions.v2.IServiceConfig} message ServiceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ServiceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ServiceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.ServiceConfig} ServiceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ServiceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.ServiceConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.timeoutSeconds = reader.int32();
                                        break;
                                    }
                                case 13: {
                                        message.availableMemory = reader.string();
                                        break;
                                    }
                                case 22: {
                                        message.availableCpu = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.environmentVariables === $util.emptyObject)
                                            message.environmentVariables = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.environmentVariables[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.maxInstanceCount = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        message.minInstanceCount = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.vpcConnector = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.vpcConnectorEgressSettings = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.ingressSettings = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 16: {
                                        message.allTrafficOnLatestRevision = reader.bool();
                                        break;
                                    }
                                case 17: {
                                        if (!(message.secretEnvironmentVariables && message.secretEnvironmentVariables.length))
                                            message.secretEnvironmentVariables = [];
                                        message.secretEnvironmentVariables.push($root.google.cloud.functions.v2.SecretEnvVar.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 19: {
                                        if (!(message.secretVolumes && message.secretVolumes.length))
                                            message.secretVolumes = [];
                                        message.secretVolumes.push($root.google.cloud.functions.v2.SecretVolume.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 18: {
                                        message.revision = reader.string();
                                        break;
                                    }
                                case 20: {
                                        message.maxInstanceRequestConcurrency = reader.int32();
                                        break;
                                    }
                                case 21: {
                                        message.securityLevel = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ServiceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.ServiceConfig} ServiceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ServiceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ServiceConfig message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ServiceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.timeoutSeconds != null && message.hasOwnProperty("timeoutSeconds"))
                                if (!$util.isInteger(message.timeoutSeconds))
                                    return "timeoutSeconds: integer expected";
                            if (message.availableMemory != null && message.hasOwnProperty("availableMemory"))
                                if (!$util.isString(message.availableMemory))
                                    return "availableMemory: string expected";
                            if (message.availableCpu != null && message.hasOwnProperty("availableCpu"))
                                if (!$util.isString(message.availableCpu))
                                    return "availableCpu: string expected";
                            if (message.environmentVariables != null && message.hasOwnProperty("environmentVariables")) {
                                if (!$util.isObject(message.environmentVariables))
                                    return "environmentVariables: object expected";
                                var key = Object.keys(message.environmentVariables);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.environmentVariables[key[i]]))
                                        return "environmentVariables: string{k:string} expected";
                            }
                            if (message.maxInstanceCount != null && message.hasOwnProperty("maxInstanceCount"))
                                if (!$util.isInteger(message.maxInstanceCount))
                                    return "maxInstanceCount: integer expected";
                            if (message.minInstanceCount != null && message.hasOwnProperty("minInstanceCount"))
                                if (!$util.isInteger(message.minInstanceCount))
                                    return "minInstanceCount: integer expected";
                            if (message.vpcConnector != null && message.hasOwnProperty("vpcConnector"))
                                if (!$util.isString(message.vpcConnector))
                                    return "vpcConnector: string expected";
                            if (message.vpcConnectorEgressSettings != null && message.hasOwnProperty("vpcConnectorEgressSettings"))
                                switch (message.vpcConnectorEgressSettings) {
                                default:
                                    return "vpcConnectorEgressSettings: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.ingressSettings != null && message.hasOwnProperty("ingressSettings"))
                                switch (message.ingressSettings) {
                                default:
                                    return "ingressSettings: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.allTrafficOnLatestRevision != null && message.hasOwnProperty("allTrafficOnLatestRevision"))
                                if (typeof message.allTrafficOnLatestRevision !== "boolean")
                                    return "allTrafficOnLatestRevision: boolean expected";
                            if (message.secretEnvironmentVariables != null && message.hasOwnProperty("secretEnvironmentVariables")) {
                                if (!Array.isArray(message.secretEnvironmentVariables))
                                    return "secretEnvironmentVariables: array expected";
                                for (var i = 0; i < message.secretEnvironmentVariables.length; ++i) {
                                    var error = $root.google.cloud.functions.v2.SecretEnvVar.verify(message.secretEnvironmentVariables[i]);
                                    if (error)
                                        return "secretEnvironmentVariables." + error;
                                }
                            }
                            if (message.secretVolumes != null && message.hasOwnProperty("secretVolumes")) {
                                if (!Array.isArray(message.secretVolumes))
                                    return "secretVolumes: array expected";
                                for (var i = 0; i < message.secretVolumes.length; ++i) {
                                    var error = $root.google.cloud.functions.v2.SecretVolume.verify(message.secretVolumes[i]);
                                    if (error)
                                        return "secretVolumes." + error;
                                }
                            }
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                if (!$util.isString(message.revision))
                                    return "revision: string expected";
                            if (message.maxInstanceRequestConcurrency != null && message.hasOwnProperty("maxInstanceRequestConcurrency"))
                                if (!$util.isInteger(message.maxInstanceRequestConcurrency))
                                    return "maxInstanceRequestConcurrency: integer expected";
                            if (message.securityLevel != null && message.hasOwnProperty("securityLevel"))
                                switch (message.securityLevel) {
                                default:
                                    return "securityLevel: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ServiceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.ServiceConfig} ServiceConfig
                         */
                        ServiceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.ServiceConfig)
                                return object;
                            var message = new $root.google.cloud.functions.v2.ServiceConfig();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.timeoutSeconds != null)
                                message.timeoutSeconds = object.timeoutSeconds | 0;
                            if (object.availableMemory != null)
                                message.availableMemory = String(object.availableMemory);
                            if (object.availableCpu != null)
                                message.availableCpu = String(object.availableCpu);
                            if (object.environmentVariables) {
                                if (typeof object.environmentVariables !== "object")
                                    throw TypeError(".google.cloud.functions.v2.ServiceConfig.environmentVariables: object expected");
                                message.environmentVariables = {};
                                for (var keys = Object.keys(object.environmentVariables), i = 0; i < keys.length; ++i)
                                    message.environmentVariables[keys[i]] = String(object.environmentVariables[keys[i]]);
                            }
                            if (object.maxInstanceCount != null)
                                message.maxInstanceCount = object.maxInstanceCount | 0;
                            if (object.minInstanceCount != null)
                                message.minInstanceCount = object.minInstanceCount | 0;
                            if (object.vpcConnector != null)
                                message.vpcConnector = String(object.vpcConnector);
                            switch (object.vpcConnectorEgressSettings) {
                            default:
                                if (typeof object.vpcConnectorEgressSettings === "number") {
                                    message.vpcConnectorEgressSettings = object.vpcConnectorEgressSettings;
                                    break;
                                }
                                break;
                            case "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED":
                            case 0:
                                message.vpcConnectorEgressSettings = 0;
                                break;
                            case "PRIVATE_RANGES_ONLY":
                            case 1:
                                message.vpcConnectorEgressSettings = 1;
                                break;
                            case "ALL_TRAFFIC":
                            case 2:
                                message.vpcConnectorEgressSettings = 2;
                                break;
                            }
                            switch (object.ingressSettings) {
                            default:
                                if (typeof object.ingressSettings === "number") {
                                    message.ingressSettings = object.ingressSettings;
                                    break;
                                }
                                break;
                            case "INGRESS_SETTINGS_UNSPECIFIED":
                            case 0:
                                message.ingressSettings = 0;
                                break;
                            case "ALLOW_ALL":
                            case 1:
                                message.ingressSettings = 1;
                                break;
                            case "ALLOW_INTERNAL_ONLY":
                            case 2:
                                message.ingressSettings = 2;
                                break;
                            case "ALLOW_INTERNAL_AND_GCLB":
                            case 3:
                                message.ingressSettings = 3;
                                break;
                            }
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.allTrafficOnLatestRevision != null)
                                message.allTrafficOnLatestRevision = Boolean(object.allTrafficOnLatestRevision);
                            if (object.secretEnvironmentVariables) {
                                if (!Array.isArray(object.secretEnvironmentVariables))
                                    throw TypeError(".google.cloud.functions.v2.ServiceConfig.secretEnvironmentVariables: array expected");
                                message.secretEnvironmentVariables = [];
                                for (var i = 0; i < object.secretEnvironmentVariables.length; ++i) {
                                    if (typeof object.secretEnvironmentVariables[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2.ServiceConfig.secretEnvironmentVariables: object expected");
                                    message.secretEnvironmentVariables[i] = $root.google.cloud.functions.v2.SecretEnvVar.fromObject(object.secretEnvironmentVariables[i]);
                                }
                            }
                            if (object.secretVolumes) {
                                if (!Array.isArray(object.secretVolumes))
                                    throw TypeError(".google.cloud.functions.v2.ServiceConfig.secretVolumes: array expected");
                                message.secretVolumes = [];
                                for (var i = 0; i < object.secretVolumes.length; ++i) {
                                    if (typeof object.secretVolumes[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2.ServiceConfig.secretVolumes: object expected");
                                    message.secretVolumes[i] = $root.google.cloud.functions.v2.SecretVolume.fromObject(object.secretVolumes[i]);
                                }
                            }
                            if (object.revision != null)
                                message.revision = String(object.revision);
                            if (object.maxInstanceRequestConcurrency != null)
                                message.maxInstanceRequestConcurrency = object.maxInstanceRequestConcurrency | 0;
                            switch (object.securityLevel) {
                            default:
                                if (typeof object.securityLevel === "number") {
                                    message.securityLevel = object.securityLevel;
                                    break;
                                }
                                break;
                            case "SECURITY_LEVEL_UNSPECIFIED":
                            case 0:
                                message.securityLevel = 0;
                                break;
                            case "SECURE_ALWAYS":
                            case 1:
                                message.securityLevel = 1;
                                break;
                            case "SECURE_OPTIONAL":
                            case 2:
                                message.securityLevel = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ServiceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @static
                         * @param {google.cloud.functions.v2.ServiceConfig} message ServiceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ServiceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.secretEnvironmentVariables = [];
                                object.secretVolumes = [];
                            }
                            if (options.objects || options.defaults)
                                object.environmentVariables = {};
                            if (options.defaults) {
                                object.service = "";
                                object.timeoutSeconds = 0;
                                object.maxInstanceCount = 0;
                                object.vpcConnector = "";
                                object.vpcConnectorEgressSettings = options.enums === String ? "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED" : 0;
                                object.ingressSettings = options.enums === String ? "INGRESS_SETTINGS_UNSPECIFIED" : 0;
                                object.uri = "";
                                object.serviceAccountEmail = "";
                                object.minInstanceCount = 0;
                                object.availableMemory = "";
                                object.allTrafficOnLatestRevision = false;
                                object.revision = "";
                                object.maxInstanceRequestConcurrency = 0;
                                object.securityLevel = options.enums === String ? "SECURITY_LEVEL_UNSPECIFIED" : 0;
                                object.availableCpu = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.timeoutSeconds != null && message.hasOwnProperty("timeoutSeconds"))
                                object.timeoutSeconds = message.timeoutSeconds;
                            var keys2;
                            if (message.environmentVariables && (keys2 = Object.keys(message.environmentVariables)).length) {
                                object.environmentVariables = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.environmentVariables[keys2[j]] = message.environmentVariables[keys2[j]];
                            }
                            if (message.maxInstanceCount != null && message.hasOwnProperty("maxInstanceCount"))
                                object.maxInstanceCount = message.maxInstanceCount;
                            if (message.vpcConnector != null && message.hasOwnProperty("vpcConnector"))
                                object.vpcConnector = message.vpcConnector;
                            if (message.vpcConnectorEgressSettings != null && message.hasOwnProperty("vpcConnectorEgressSettings"))
                                object.vpcConnectorEgressSettings = options.enums === String ? $root.google.cloud.functions.v2.ServiceConfig.VpcConnectorEgressSettings[message.vpcConnectorEgressSettings] === undefined ? message.vpcConnectorEgressSettings : $root.google.cloud.functions.v2.ServiceConfig.VpcConnectorEgressSettings[message.vpcConnectorEgressSettings] : message.vpcConnectorEgressSettings;
                            if (message.ingressSettings != null && message.hasOwnProperty("ingressSettings"))
                                object.ingressSettings = options.enums === String ? $root.google.cloud.functions.v2.ServiceConfig.IngressSettings[message.ingressSettings] === undefined ? message.ingressSettings : $root.google.cloud.functions.v2.ServiceConfig.IngressSettings[message.ingressSettings] : message.ingressSettings;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.minInstanceCount != null && message.hasOwnProperty("minInstanceCount"))
                                object.minInstanceCount = message.minInstanceCount;
                            if (message.availableMemory != null && message.hasOwnProperty("availableMemory"))
                                object.availableMemory = message.availableMemory;
                            if (message.allTrafficOnLatestRevision != null && message.hasOwnProperty("allTrafficOnLatestRevision"))
                                object.allTrafficOnLatestRevision = message.allTrafficOnLatestRevision;
                            if (message.secretEnvironmentVariables && message.secretEnvironmentVariables.length) {
                                object.secretEnvironmentVariables = [];
                                for (var j = 0; j < message.secretEnvironmentVariables.length; ++j)
                                    object.secretEnvironmentVariables[j] = $root.google.cloud.functions.v2.SecretEnvVar.toObject(message.secretEnvironmentVariables[j], options);
                            }
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                object.revision = message.revision;
                            if (message.secretVolumes && message.secretVolumes.length) {
                                object.secretVolumes = [];
                                for (var j = 0; j < message.secretVolumes.length; ++j)
                                    object.secretVolumes[j] = $root.google.cloud.functions.v2.SecretVolume.toObject(message.secretVolumes[j], options);
                            }
                            if (message.maxInstanceRequestConcurrency != null && message.hasOwnProperty("maxInstanceRequestConcurrency"))
                                object.maxInstanceRequestConcurrency = message.maxInstanceRequestConcurrency;
                            if (message.securityLevel != null && message.hasOwnProperty("securityLevel"))
                                object.securityLevel = options.enums === String ? $root.google.cloud.functions.v2.ServiceConfig.SecurityLevel[message.securityLevel] === undefined ? message.securityLevel : $root.google.cloud.functions.v2.ServiceConfig.SecurityLevel[message.securityLevel] : message.securityLevel;
                            if (message.availableCpu != null && message.hasOwnProperty("availableCpu"))
                                object.availableCpu = message.availableCpu;
                            return object;
                        };
    
                        /**
                         * Converts this ServiceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ServiceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ServiceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.ServiceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ServiceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.ServiceConfig";
                        };
    
                        /**
                         * VpcConnectorEgressSettings enum.
                         * @name google.cloud.functions.v2.ServiceConfig.VpcConnectorEgressSettings
                         * @enum {number}
                         * @property {number} VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED=0 VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED value
                         * @property {number} PRIVATE_RANGES_ONLY=1 PRIVATE_RANGES_ONLY value
                         * @property {number} ALL_TRAFFIC=2 ALL_TRAFFIC value
                         */
                        ServiceConfig.VpcConnectorEgressSettings = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PRIVATE_RANGES_ONLY"] = 1;
                            values[valuesById[2] = "ALL_TRAFFIC"] = 2;
                            return values;
                        })();
    
                        /**
                         * IngressSettings enum.
                         * @name google.cloud.functions.v2.ServiceConfig.IngressSettings
                         * @enum {number}
                         * @property {number} INGRESS_SETTINGS_UNSPECIFIED=0 INGRESS_SETTINGS_UNSPECIFIED value
                         * @property {number} ALLOW_ALL=1 ALLOW_ALL value
                         * @property {number} ALLOW_INTERNAL_ONLY=2 ALLOW_INTERNAL_ONLY value
                         * @property {number} ALLOW_INTERNAL_AND_GCLB=3 ALLOW_INTERNAL_AND_GCLB value
                         */
                        ServiceConfig.IngressSettings = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "INGRESS_SETTINGS_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ALLOW_ALL"] = 1;
                            values[valuesById[2] = "ALLOW_INTERNAL_ONLY"] = 2;
                            values[valuesById[3] = "ALLOW_INTERNAL_AND_GCLB"] = 3;
                            return values;
                        })();
    
                        /**
                         * SecurityLevel enum.
                         * @name google.cloud.functions.v2.ServiceConfig.SecurityLevel
                         * @enum {number}
                         * @property {number} SECURITY_LEVEL_UNSPECIFIED=0 SECURITY_LEVEL_UNSPECIFIED value
                         * @property {number} SECURE_ALWAYS=1 SECURE_ALWAYS value
                         * @property {number} SECURE_OPTIONAL=2 SECURE_OPTIONAL value
                         */
                        ServiceConfig.SecurityLevel = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SECURITY_LEVEL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SECURE_ALWAYS"] = 1;
                            values[valuesById[2] = "SECURE_OPTIONAL"] = 2;
                            return values;
                        })();
    
                        return ServiceConfig;
                    })();
    
                    v2.SecretEnvVar = (function() {
    
                        /**
                         * Properties of a SecretEnvVar.
                         * @memberof google.cloud.functions.v2
                         * @interface ISecretEnvVar
                         * @property {string|null} [key] SecretEnvVar key
                         * @property {string|null} [projectId] SecretEnvVar projectId
                         * @property {string|null} [secret] SecretEnvVar secret
                         * @property {string|null} [version] SecretEnvVar version
                         */
    
                        /**
                         * Constructs a new SecretEnvVar.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a SecretEnvVar.
                         * @implements ISecretEnvVar
                         * @constructor
                         * @param {google.cloud.functions.v2.ISecretEnvVar=} [properties] Properties to set
                         */
                        function SecretEnvVar(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SecretEnvVar key.
                         * @member {string} key
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.key = "";
    
                        /**
                         * SecretEnvVar projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.projectId = "";
    
                        /**
                         * SecretEnvVar secret.
                         * @member {string} secret
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.secret = "";
    
                        /**
                         * SecretEnvVar version.
                         * @member {string} version
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.version = "";
    
                        /**
                         * Creates a new SecretEnvVar instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v2.ISecretEnvVar=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.SecretEnvVar} SecretEnvVar instance
                         */
                        SecretEnvVar.create = function create(properties) {
                            return new SecretEnvVar(properties);
                        };
    
                        /**
                         * Encodes the specified SecretEnvVar message. Does not implicitly {@link google.cloud.functions.v2.SecretEnvVar.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v2.ISecretEnvVar} message SecretEnvVar message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretEnvVar.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.projectId);
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.secret);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.version);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SecretEnvVar message, length delimited. Does not implicitly {@link google.cloud.functions.v2.SecretEnvVar.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v2.ISecretEnvVar} message SecretEnvVar message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretEnvVar.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SecretEnvVar message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.SecretEnvVar} SecretEnvVar
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretEnvVar.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.SecretEnvVar();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.key = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.secret = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.version = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SecretEnvVar message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.SecretEnvVar} SecretEnvVar
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretEnvVar.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SecretEnvVar message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SecretEnvVar.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.key != null && message.hasOwnProperty("key"))
                                if (!$util.isString(message.key))
                                    return "key: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                if (!$util.isString(message.secret))
                                    return "secret: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SecretEnvVar message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.SecretEnvVar} SecretEnvVar
                         */
                        SecretEnvVar.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.SecretEnvVar)
                                return object;
                            var message = new $root.google.cloud.functions.v2.SecretEnvVar();
                            if (object.key != null)
                                message.key = String(object.key);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.secret != null)
                                message.secret = String(object.secret);
                            if (object.version != null)
                                message.version = String(object.version);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SecretEnvVar message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v2.SecretEnvVar} message SecretEnvVar
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SecretEnvVar.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.key = "";
                                object.projectId = "";
                                object.secret = "";
                                object.version = "";
                            }
                            if (message.key != null && message.hasOwnProperty("key"))
                                object.key = message.key;
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                object.secret = message.secret;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            return object;
                        };
    
                        /**
                         * Converts this SecretEnvVar to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SecretEnvVar.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SecretEnvVar
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.SecretEnvVar
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SecretEnvVar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.SecretEnvVar";
                        };
    
                        return SecretEnvVar;
                    })();
    
                    v2.SecretVolume = (function() {
    
                        /**
                         * Properties of a SecretVolume.
                         * @memberof google.cloud.functions.v2
                         * @interface ISecretVolume
                         * @property {string|null} [mountPath] SecretVolume mountPath
                         * @property {string|null} [projectId] SecretVolume projectId
                         * @property {string|null} [secret] SecretVolume secret
                         * @property {Array.<google.cloud.functions.v2.SecretVolume.ISecretVersion>|null} [versions] SecretVolume versions
                         */
    
                        /**
                         * Constructs a new SecretVolume.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a SecretVolume.
                         * @implements ISecretVolume
                         * @constructor
                         * @param {google.cloud.functions.v2.ISecretVolume=} [properties] Properties to set
                         */
                        function SecretVolume(properties) {
                            this.versions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SecretVolume mountPath.
                         * @member {string} mountPath
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.mountPath = "";
    
                        /**
                         * SecretVolume projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.projectId = "";
    
                        /**
                         * SecretVolume secret.
                         * @member {string} secret
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.secret = "";
    
                        /**
                         * SecretVolume versions.
                         * @member {Array.<google.cloud.functions.v2.SecretVolume.ISecretVersion>} versions
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.versions = $util.emptyArray;
    
                        /**
                         * Creates a new SecretVolume instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v2.ISecretVolume=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.SecretVolume} SecretVolume instance
                         */
                        SecretVolume.create = function create(properties) {
                            return new SecretVolume(properties);
                        };
    
                        /**
                         * Encodes the specified SecretVolume message. Does not implicitly {@link google.cloud.functions.v2.SecretVolume.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v2.ISecretVolume} message SecretVolume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretVolume.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mountPath != null && Object.hasOwnProperty.call(message, "mountPath"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mountPath);
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.projectId);
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.secret);
                            if (message.versions != null && message.versions.length)
                                for (var i = 0; i < message.versions.length; ++i)
                                    $root.google.cloud.functions.v2.SecretVolume.SecretVersion.encode(message.versions[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SecretVolume message, length delimited. Does not implicitly {@link google.cloud.functions.v2.SecretVolume.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v2.ISecretVolume} message SecretVolume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretVolume.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SecretVolume message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.SecretVolume} SecretVolume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretVolume.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.SecretVolume();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mountPath = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.secret = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.versions && message.versions.length))
                                            message.versions = [];
                                        message.versions.push($root.google.cloud.functions.v2.SecretVolume.SecretVersion.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SecretVolume message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.SecretVolume} SecretVolume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretVolume.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SecretVolume message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SecretVolume.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mountPath != null && message.hasOwnProperty("mountPath"))
                                if (!$util.isString(message.mountPath))
                                    return "mountPath: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                if (!$util.isString(message.secret))
                                    return "secret: string expected";
                            if (message.versions != null && message.hasOwnProperty("versions")) {
                                if (!Array.isArray(message.versions))
                                    return "versions: array expected";
                                for (var i = 0; i < message.versions.length; ++i) {
                                    var error = $root.google.cloud.functions.v2.SecretVolume.SecretVersion.verify(message.versions[i]);
                                    if (error)
                                        return "versions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SecretVolume message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.SecretVolume} SecretVolume
                         */
                        SecretVolume.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.SecretVolume)
                                return object;
                            var message = new $root.google.cloud.functions.v2.SecretVolume();
                            if (object.mountPath != null)
                                message.mountPath = String(object.mountPath);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.secret != null)
                                message.secret = String(object.secret);
                            if (object.versions) {
                                if (!Array.isArray(object.versions))
                                    throw TypeError(".google.cloud.functions.v2.SecretVolume.versions: array expected");
                                message.versions = [];
                                for (var i = 0; i < object.versions.length; ++i) {
                                    if (typeof object.versions[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2.SecretVolume.versions: object expected");
                                    message.versions[i] = $root.google.cloud.functions.v2.SecretVolume.SecretVersion.fromObject(object.versions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SecretVolume message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v2.SecretVolume} message SecretVolume
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SecretVolume.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.versions = [];
                            if (options.defaults) {
                                object.mountPath = "";
                                object.projectId = "";
                                object.secret = "";
                            }
                            if (message.mountPath != null && message.hasOwnProperty("mountPath"))
                                object.mountPath = message.mountPath;
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                object.secret = message.secret;
                            if (message.versions && message.versions.length) {
                                object.versions = [];
                                for (var j = 0; j < message.versions.length; ++j)
                                    object.versions[j] = $root.google.cloud.functions.v2.SecretVolume.SecretVersion.toObject(message.versions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SecretVolume to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SecretVolume.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SecretVolume
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.SecretVolume
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SecretVolume.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.SecretVolume";
                        };
    
                        SecretVolume.SecretVersion = (function() {
    
                            /**
                             * Properties of a SecretVersion.
                             * @memberof google.cloud.functions.v2.SecretVolume
                             * @interface ISecretVersion
                             * @property {string|null} [version] SecretVersion version
                             * @property {string|null} [path] SecretVersion path
                             */
    
                            /**
                             * Constructs a new SecretVersion.
                             * @memberof google.cloud.functions.v2.SecretVolume
                             * @classdesc Represents a SecretVersion.
                             * @implements ISecretVersion
                             * @constructor
                             * @param {google.cloud.functions.v2.SecretVolume.ISecretVersion=} [properties] Properties to set
                             */
                            function SecretVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SecretVersion version.
                             * @member {string} version
                             * @memberof google.cloud.functions.v2.SecretVolume.SecretVersion
                             * @instance
                             */
                            SecretVersion.prototype.version = "";
    
                            /**
                             * SecretVersion path.
                             * @member {string} path
                             * @memberof google.cloud.functions.v2.SecretVolume.SecretVersion
                             * @instance
                             */
                            SecretVersion.prototype.path = "";
    
                            /**
                             * Creates a new SecretVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.functions.v2.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v2.SecretVolume.ISecretVersion=} [properties] Properties to set
                             * @returns {google.cloud.functions.v2.SecretVolume.SecretVersion} SecretVersion instance
                             */
                            SecretVersion.create = function create(properties) {
                                return new SecretVersion(properties);
                            };
    
                            /**
                             * Encodes the specified SecretVersion message. Does not implicitly {@link google.cloud.functions.v2.SecretVolume.SecretVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.functions.v2.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v2.SecretVolume.ISecretVersion} message SecretVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SecretVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SecretVersion message, length delimited. Does not implicitly {@link google.cloud.functions.v2.SecretVolume.SecretVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.functions.v2.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v2.SecretVolume.ISecretVersion} message SecretVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SecretVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SecretVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.functions.v2.SecretVolume.SecretVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.functions.v2.SecretVolume.SecretVersion} SecretVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SecretVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.SecretVolume.SecretVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.version = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.path = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SecretVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.functions.v2.SecretVolume.SecretVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.functions.v2.SecretVolume.SecretVersion} SecretVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SecretVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SecretVersion message.
                             * @function verify
                             * @memberof google.cloud.functions.v2.SecretVolume.SecretVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SecretVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.path != null && message.hasOwnProperty("path"))
                                    if (!$util.isString(message.path))
                                        return "path: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a SecretVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.functions.v2.SecretVolume.SecretVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.functions.v2.SecretVolume.SecretVersion} SecretVersion
                             */
                            SecretVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.functions.v2.SecretVolume.SecretVersion)
                                    return object;
                                var message = new $root.google.cloud.functions.v2.SecretVolume.SecretVersion();
                                if (object.version != null)
                                    message.version = String(object.version);
                                if (object.path != null)
                                    message.path = String(object.path);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SecretVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.functions.v2.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v2.SecretVolume.SecretVersion} message SecretVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SecretVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = "";
                                    object.path = "";
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.path != null && message.hasOwnProperty("path"))
                                    object.path = message.path;
                                return object;
                            };
    
                            /**
                             * Converts this SecretVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.functions.v2.SecretVolume.SecretVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SecretVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SecretVersion
                             * @function getTypeUrl
                             * @memberof google.cloud.functions.v2.SecretVolume.SecretVersion
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SecretVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.functions.v2.SecretVolume.SecretVersion";
                            };
    
                            return SecretVersion;
                        })();
    
                        return SecretVolume;
                    })();
    
                    v2.EventTrigger = (function() {
    
                        /**
                         * Properties of an EventTrigger.
                         * @memberof google.cloud.functions.v2
                         * @interface IEventTrigger
                         * @property {string|null} [trigger] EventTrigger trigger
                         * @property {string|null} [triggerRegion] EventTrigger triggerRegion
                         * @property {string|null} [eventType] EventTrigger eventType
                         * @property {Array.<google.cloud.functions.v2.IEventFilter>|null} [eventFilters] EventTrigger eventFilters
                         * @property {string|null} [pubsubTopic] EventTrigger pubsubTopic
                         * @property {string|null} [serviceAccountEmail] EventTrigger serviceAccountEmail
                         * @property {google.cloud.functions.v2.EventTrigger.RetryPolicy|null} [retryPolicy] EventTrigger retryPolicy
                         * @property {string|null} [channel] EventTrigger channel
                         */
    
                        /**
                         * Constructs a new EventTrigger.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents an EventTrigger.
                         * @implements IEventTrigger
                         * @constructor
                         * @param {google.cloud.functions.v2.IEventTrigger=} [properties] Properties to set
                         */
                        function EventTrigger(properties) {
                            this.eventFilters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EventTrigger trigger.
                         * @member {string} trigger
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.trigger = "";
    
                        /**
                         * EventTrigger triggerRegion.
                         * @member {string} triggerRegion
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.triggerRegion = "";
    
                        /**
                         * EventTrigger eventType.
                         * @member {string} eventType
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.eventType = "";
    
                        /**
                         * EventTrigger eventFilters.
                         * @member {Array.<google.cloud.functions.v2.IEventFilter>} eventFilters
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.eventFilters = $util.emptyArray;
    
                        /**
                         * EventTrigger pubsubTopic.
                         * @member {string} pubsubTopic
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.pubsubTopic = "";
    
                        /**
                         * EventTrigger serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.serviceAccountEmail = "";
    
                        /**
                         * EventTrigger retryPolicy.
                         * @member {google.cloud.functions.v2.EventTrigger.RetryPolicy} retryPolicy
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.retryPolicy = 0;
    
                        /**
                         * EventTrigger channel.
                         * @member {string} channel
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.channel = "";
    
                        /**
                         * Creates a new EventTrigger instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v2.IEventTrigger=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.EventTrigger} EventTrigger instance
                         */
                        EventTrigger.create = function create(properties) {
                            return new EventTrigger(properties);
                        };
    
                        /**
                         * Encodes the specified EventTrigger message. Does not implicitly {@link google.cloud.functions.v2.EventTrigger.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v2.IEventTrigger} message EventTrigger message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventTrigger.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.trigger != null && Object.hasOwnProperty.call(message, "trigger"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.trigger);
                            if (message.triggerRegion != null && Object.hasOwnProperty.call(message, "triggerRegion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.triggerRegion);
                            if (message.eventType != null && Object.hasOwnProperty.call(message, "eventType"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.eventType);
                            if (message.eventFilters != null && message.eventFilters.length)
                                for (var i = 0; i < message.eventFilters.length; ++i)
                                    $root.google.cloud.functions.v2.EventFilter.encode(message.eventFilters[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.pubsubTopic != null && Object.hasOwnProperty.call(message, "pubsubTopic"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.pubsubTopic);
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.serviceAccountEmail);
                            if (message.retryPolicy != null && Object.hasOwnProperty.call(message, "retryPolicy"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.retryPolicy);
                            if (message.channel != null && Object.hasOwnProperty.call(message, "channel"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.channel);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EventTrigger message, length delimited. Does not implicitly {@link google.cloud.functions.v2.EventTrigger.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v2.IEventTrigger} message EventTrigger message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventTrigger.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EventTrigger message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.EventTrigger} EventTrigger
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventTrigger.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.EventTrigger();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.trigger = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.triggerRegion = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.eventType = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.eventFilters && message.eventFilters.length))
                                            message.eventFilters = [];
                                        message.eventFilters.push($root.google.cloud.functions.v2.EventFilter.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        message.pubsubTopic = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.retryPolicy = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.channel = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EventTrigger message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.EventTrigger} EventTrigger
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventTrigger.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EventTrigger message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EventTrigger.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.trigger != null && message.hasOwnProperty("trigger"))
                                if (!$util.isString(message.trigger))
                                    return "trigger: string expected";
                            if (message.triggerRegion != null && message.hasOwnProperty("triggerRegion"))
                                if (!$util.isString(message.triggerRegion))
                                    return "triggerRegion: string expected";
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                if (!$util.isString(message.eventType))
                                    return "eventType: string expected";
                            if (message.eventFilters != null && message.hasOwnProperty("eventFilters")) {
                                if (!Array.isArray(message.eventFilters))
                                    return "eventFilters: array expected";
                                for (var i = 0; i < message.eventFilters.length; ++i) {
                                    var error = $root.google.cloud.functions.v2.EventFilter.verify(message.eventFilters[i]);
                                    if (error)
                                        return "eventFilters." + error;
                                }
                            }
                            if (message.pubsubTopic != null && message.hasOwnProperty("pubsubTopic"))
                                if (!$util.isString(message.pubsubTopic))
                                    return "pubsubTopic: string expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.retryPolicy != null && message.hasOwnProperty("retryPolicy"))
                                switch (message.retryPolicy) {
                                default:
                                    return "retryPolicy: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.channel != null && message.hasOwnProperty("channel"))
                                if (!$util.isString(message.channel))
                                    return "channel: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EventTrigger message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.EventTrigger} EventTrigger
                         */
                        EventTrigger.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.EventTrigger)
                                return object;
                            var message = new $root.google.cloud.functions.v2.EventTrigger();
                            if (object.trigger != null)
                                message.trigger = String(object.trigger);
                            if (object.triggerRegion != null)
                                message.triggerRegion = String(object.triggerRegion);
                            if (object.eventType != null)
                                message.eventType = String(object.eventType);
                            if (object.eventFilters) {
                                if (!Array.isArray(object.eventFilters))
                                    throw TypeError(".google.cloud.functions.v2.EventTrigger.eventFilters: array expected");
                                message.eventFilters = [];
                                for (var i = 0; i < object.eventFilters.length; ++i) {
                                    if (typeof object.eventFilters[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2.EventTrigger.eventFilters: object expected");
                                    message.eventFilters[i] = $root.google.cloud.functions.v2.EventFilter.fromObject(object.eventFilters[i]);
                                }
                            }
                            if (object.pubsubTopic != null)
                                message.pubsubTopic = String(object.pubsubTopic);
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            switch (object.retryPolicy) {
                            default:
                                if (typeof object.retryPolicy === "number") {
                                    message.retryPolicy = object.retryPolicy;
                                    break;
                                }
                                break;
                            case "RETRY_POLICY_UNSPECIFIED":
                            case 0:
                                message.retryPolicy = 0;
                                break;
                            case "RETRY_POLICY_DO_NOT_RETRY":
                            case 1:
                                message.retryPolicy = 1;
                                break;
                            case "RETRY_POLICY_RETRY":
                            case 2:
                                message.retryPolicy = 2;
                                break;
                            }
                            if (object.channel != null)
                                message.channel = String(object.channel);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EventTrigger message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v2.EventTrigger} message EventTrigger
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EventTrigger.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.eventFilters = [];
                            if (options.defaults) {
                                object.trigger = "";
                                object.triggerRegion = "";
                                object.eventType = "";
                                object.pubsubTopic = "";
                                object.serviceAccountEmail = "";
                                object.retryPolicy = options.enums === String ? "RETRY_POLICY_UNSPECIFIED" : 0;
                                object.channel = "";
                            }
                            if (message.trigger != null && message.hasOwnProperty("trigger"))
                                object.trigger = message.trigger;
                            if (message.triggerRegion != null && message.hasOwnProperty("triggerRegion"))
                                object.triggerRegion = message.triggerRegion;
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                object.eventType = message.eventType;
                            if (message.eventFilters && message.eventFilters.length) {
                                object.eventFilters = [];
                                for (var j = 0; j < message.eventFilters.length; ++j)
                                    object.eventFilters[j] = $root.google.cloud.functions.v2.EventFilter.toObject(message.eventFilters[j], options);
                            }
                            if (message.pubsubTopic != null && message.hasOwnProperty("pubsubTopic"))
                                object.pubsubTopic = message.pubsubTopic;
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.retryPolicy != null && message.hasOwnProperty("retryPolicy"))
                                object.retryPolicy = options.enums === String ? $root.google.cloud.functions.v2.EventTrigger.RetryPolicy[message.retryPolicy] === undefined ? message.retryPolicy : $root.google.cloud.functions.v2.EventTrigger.RetryPolicy[message.retryPolicy] : message.retryPolicy;
                            if (message.channel != null && message.hasOwnProperty("channel"))
                                object.channel = message.channel;
                            return object;
                        };
    
                        /**
                         * Converts this EventTrigger to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EventTrigger.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EventTrigger
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.EventTrigger
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EventTrigger.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.EventTrigger";
                        };
    
                        /**
                         * RetryPolicy enum.
                         * @name google.cloud.functions.v2.EventTrigger.RetryPolicy
                         * @enum {number}
                         * @property {number} RETRY_POLICY_UNSPECIFIED=0 RETRY_POLICY_UNSPECIFIED value
                         * @property {number} RETRY_POLICY_DO_NOT_RETRY=1 RETRY_POLICY_DO_NOT_RETRY value
                         * @property {number} RETRY_POLICY_RETRY=2 RETRY_POLICY_RETRY value
                         */
                        EventTrigger.RetryPolicy = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RETRY_POLICY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RETRY_POLICY_DO_NOT_RETRY"] = 1;
                            values[valuesById[2] = "RETRY_POLICY_RETRY"] = 2;
                            return values;
                        })();
    
                        return EventTrigger;
                    })();
    
                    v2.EventFilter = (function() {
    
                        /**
                         * Properties of an EventFilter.
                         * @memberof google.cloud.functions.v2
                         * @interface IEventFilter
                         * @property {string|null} [attribute] EventFilter attribute
                         * @property {string|null} [value] EventFilter value
                         * @property {string|null} [operator] EventFilter operator
                         */
    
                        /**
                         * Constructs a new EventFilter.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents an EventFilter.
                         * @implements IEventFilter
                         * @constructor
                         * @param {google.cloud.functions.v2.IEventFilter=} [properties] Properties to set
                         */
                        function EventFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EventFilter attribute.
                         * @member {string} attribute
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @instance
                         */
                        EventFilter.prototype.attribute = "";
    
                        /**
                         * EventFilter value.
                         * @member {string} value
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @instance
                         */
                        EventFilter.prototype.value = "";
    
                        /**
                         * EventFilter operator.
                         * @member {string} operator
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @instance
                         */
                        EventFilter.prototype.operator = "";
    
                        /**
                         * Creates a new EventFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @static
                         * @param {google.cloud.functions.v2.IEventFilter=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.EventFilter} EventFilter instance
                         */
                        EventFilter.create = function create(properties) {
                            return new EventFilter(properties);
                        };
    
                        /**
                         * Encodes the specified EventFilter message. Does not implicitly {@link google.cloud.functions.v2.EventFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @static
                         * @param {google.cloud.functions.v2.IEventFilter} message EventFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.attribute != null && Object.hasOwnProperty.call(message, "attribute"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.attribute);
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                            if (message.operator != null && Object.hasOwnProperty.call(message, "operator"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.operator);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EventFilter message, length delimited. Does not implicitly {@link google.cloud.functions.v2.EventFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @static
                         * @param {google.cloud.functions.v2.IEventFilter} message EventFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EventFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.EventFilter} EventFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.EventFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.attribute = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.value = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.operator = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EventFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.EventFilter} EventFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EventFilter message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EventFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.attribute != null && message.hasOwnProperty("attribute"))
                                if (!$util.isString(message.attribute))
                                    return "attribute: string expected";
                            if (message.value != null && message.hasOwnProperty("value"))
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            if (message.operator != null && message.hasOwnProperty("operator"))
                                if (!$util.isString(message.operator))
                                    return "operator: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EventFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.EventFilter} EventFilter
                         */
                        EventFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.EventFilter)
                                return object;
                            var message = new $root.google.cloud.functions.v2.EventFilter();
                            if (object.attribute != null)
                                message.attribute = String(object.attribute);
                            if (object.value != null)
                                message.value = String(object.value);
                            if (object.operator != null)
                                message.operator = String(object.operator);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EventFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @static
                         * @param {google.cloud.functions.v2.EventFilter} message EventFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EventFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.attribute = "";
                                object.value = "";
                                object.operator = "";
                            }
                            if (message.attribute != null && message.hasOwnProperty("attribute"))
                                object.attribute = message.attribute;
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = message.value;
                            if (message.operator != null && message.hasOwnProperty("operator"))
                                object.operator = message.operator;
                            return object;
                        };
    
                        /**
                         * Converts this EventFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EventFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EventFilter
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.EventFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EventFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.EventFilter";
                        };
    
                        return EventFilter;
                    })();
    
                    v2.GetFunctionRequest = (function() {
    
                        /**
                         * Properties of a GetFunctionRequest.
                         * @memberof google.cloud.functions.v2
                         * @interface IGetFunctionRequest
                         * @property {string|null} [name] GetFunctionRequest name
                         */
    
                        /**
                         * Constructs a new GetFunctionRequest.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a GetFunctionRequest.
                         * @implements IGetFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v2.IGetFunctionRequest=} [properties] Properties to set
                         */
                        function GetFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetFunctionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v2.GetFunctionRequest
                         * @instance
                         */
                        GetFunctionRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.IGetFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.GetFunctionRequest} GetFunctionRequest instance
                         */
                        GetFunctionRequest.create = function create(properties) {
                            return new GetFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetFunctionRequest message. Does not implicitly {@link google.cloud.functions.v2.GetFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.IGetFunctionRequest} message GetFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2.GetFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.IGetFunctionRequest} message GetFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.GetFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.GetFunctionRequest} GetFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.GetFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.GetFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.GetFunctionRequest} GetFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.GetFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.GetFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.GetFunctionRequest} GetFunctionRequest
                         */
                        GetFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.GetFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2.GetFunctionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.GetFunctionRequest} message GetFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.GetFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.GetFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.GetFunctionRequest";
                        };
    
                        return GetFunctionRequest;
                    })();
    
                    v2.ListFunctionsRequest = (function() {
    
                        /**
                         * Properties of a ListFunctionsRequest.
                         * @memberof google.cloud.functions.v2
                         * @interface IListFunctionsRequest
                         * @property {string|null} [parent] ListFunctionsRequest parent
                         * @property {number|null} [pageSize] ListFunctionsRequest pageSize
                         * @property {string|null} [pageToken] ListFunctionsRequest pageToken
                         * @property {string|null} [filter] ListFunctionsRequest filter
                         * @property {string|null} [orderBy] ListFunctionsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListFunctionsRequest.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a ListFunctionsRequest.
                         * @implements IListFunctionsRequest
                         * @constructor
                         * @param {google.cloud.functions.v2.IListFunctionsRequest=} [properties] Properties to set
                         */
                        function ListFunctionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFunctionsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.parent = "";
    
                        /**
                         * ListFunctionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListFunctionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.pageToken = "";
    
                        /**
                         * ListFunctionsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.filter = "";
    
                        /**
                         * ListFunctionsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListFunctionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v2.IListFunctionsRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.ListFunctionsRequest} ListFunctionsRequest instance
                         */
                        ListFunctionsRequest.create = function create(properties) {
                            return new ListFunctionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListFunctionsRequest message. Does not implicitly {@link google.cloud.functions.v2.ListFunctionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v2.IListFunctionsRequest} message ListFunctionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFunctionsRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2.ListFunctionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v2.IListFunctionsRequest} message ListFunctionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFunctionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.ListFunctionsRequest} ListFunctionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.ListFunctionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFunctionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.ListFunctionsRequest} ListFunctionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFunctionsRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFunctionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFunctionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.ListFunctionsRequest} ListFunctionsRequest
                         */
                        ListFunctionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.ListFunctionsRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2.ListFunctionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFunctionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v2.ListFunctionsRequest} message ListFunctionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFunctionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListFunctionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFunctionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFunctionsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.ListFunctionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFunctionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.ListFunctionsRequest";
                        };
    
                        return ListFunctionsRequest;
                    })();
    
                    v2.ListFunctionsResponse = (function() {
    
                        /**
                         * Properties of a ListFunctionsResponse.
                         * @memberof google.cloud.functions.v2
                         * @interface IListFunctionsResponse
                         * @property {Array.<google.cloud.functions.v2.IFunction>|null} [functions] ListFunctionsResponse functions
                         * @property {string|null} [nextPageToken] ListFunctionsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListFunctionsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListFunctionsResponse.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a ListFunctionsResponse.
                         * @implements IListFunctionsResponse
                         * @constructor
                         * @param {google.cloud.functions.v2.IListFunctionsResponse=} [properties] Properties to set
                         */
                        function ListFunctionsResponse(properties) {
                            this.functions = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFunctionsResponse functions.
                         * @member {Array.<google.cloud.functions.v2.IFunction>} functions
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @instance
                         */
                        ListFunctionsResponse.prototype.functions = $util.emptyArray;
    
                        /**
                         * ListFunctionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @instance
                         */
                        ListFunctionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListFunctionsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @instance
                         */
                        ListFunctionsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListFunctionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v2.IListFunctionsResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.ListFunctionsResponse} ListFunctionsResponse instance
                         */
                        ListFunctionsResponse.create = function create(properties) {
                            return new ListFunctionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListFunctionsResponse message. Does not implicitly {@link google.cloud.functions.v2.ListFunctionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v2.IListFunctionsResponse} message ListFunctionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.functions != null && message.functions.length)
                                for (var i = 0; i < message.functions.length; ++i)
                                    $root.google.cloud.functions.v2.Function.encode(message.functions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFunctionsResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v2.ListFunctionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v2.IListFunctionsResponse} message ListFunctionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFunctionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.ListFunctionsResponse} ListFunctionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.ListFunctionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.functions && message.functions.length))
                                            message.functions = [];
                                        message.functions.push($root.google.cloud.functions.v2.Function.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFunctionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.ListFunctionsResponse} ListFunctionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFunctionsResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFunctionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.functions != null && message.hasOwnProperty("functions")) {
                                if (!Array.isArray(message.functions))
                                    return "functions: array expected";
                                for (var i = 0; i < message.functions.length; ++i) {
                                    var error = $root.google.cloud.functions.v2.Function.verify(message.functions[i]);
                                    if (error)
                                        return "functions." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListFunctionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.ListFunctionsResponse} ListFunctionsResponse
                         */
                        ListFunctionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.ListFunctionsResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v2.ListFunctionsResponse();
                            if (object.functions) {
                                if (!Array.isArray(object.functions))
                                    throw TypeError(".google.cloud.functions.v2.ListFunctionsResponse.functions: array expected");
                                message.functions = [];
                                for (var i = 0; i < object.functions.length; ++i) {
                                    if (typeof object.functions[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2.ListFunctionsResponse.functions: object expected");
                                    message.functions[i] = $root.google.cloud.functions.v2.Function.fromObject(object.functions[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.functions.v2.ListFunctionsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFunctionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v2.ListFunctionsResponse} message ListFunctionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFunctionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.functions = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.functions && message.functions.length) {
                                object.functions = [];
                                for (var j = 0; j < message.functions.length; ++j)
                                    object.functions[j] = $root.google.cloud.functions.v2.Function.toObject(message.functions[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListFunctionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFunctionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFunctionsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.ListFunctionsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFunctionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.ListFunctionsResponse";
                        };
    
                        return ListFunctionsResponse;
                    })();
    
                    v2.CreateFunctionRequest = (function() {
    
                        /**
                         * Properties of a CreateFunctionRequest.
                         * @memberof google.cloud.functions.v2
                         * @interface ICreateFunctionRequest
                         * @property {string|null} [parent] CreateFunctionRequest parent
                         * @property {google.cloud.functions.v2.IFunction|null} ["function"] CreateFunctionRequest function
                         * @property {string|null} [functionId] CreateFunctionRequest functionId
                         */
    
                        /**
                         * Constructs a new CreateFunctionRequest.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a CreateFunctionRequest.
                         * @implements ICreateFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v2.ICreateFunctionRequest=} [properties] Properties to set
                         */
                        function CreateFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateFunctionRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @instance
                         */
                        CreateFunctionRequest.prototype.parent = "";
    
                        /**
                         * CreateFunctionRequest function.
                         * @member {google.cloud.functions.v2.IFunction|null|undefined} function
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @instance
                         */
                        CreateFunctionRequest.prototype["function"] = null;
    
                        /**
                         * CreateFunctionRequest functionId.
                         * @member {string} functionId
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @instance
                         */
                        CreateFunctionRequest.prototype.functionId = "";
    
                        /**
                         * Creates a new CreateFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.ICreateFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.CreateFunctionRequest} CreateFunctionRequest instance
                         */
                        CreateFunctionRequest.create = function create(properties) {
                            return new CreateFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateFunctionRequest message. Does not implicitly {@link google.cloud.functions.v2.CreateFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.ICreateFunctionRequest} message CreateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message["function"] != null && Object.hasOwnProperty.call(message, "function"))
                                $root.google.cloud.functions.v2.Function.encode(message["function"], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.functionId != null && Object.hasOwnProperty.call(message, "functionId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.functionId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2.CreateFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.ICreateFunctionRequest} message CreateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.CreateFunctionRequest} CreateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.CreateFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message["function"] = $root.google.cloud.functions.v2.Function.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.functionId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.CreateFunctionRequest} CreateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message["function"] != null && message.hasOwnProperty("function")) {
                                var error = $root.google.cloud.functions.v2.Function.verify(message["function"]);
                                if (error)
                                    return "function." + error;
                            }
                            if (message.functionId != null && message.hasOwnProperty("functionId"))
                                if (!$util.isString(message.functionId))
                                    return "functionId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.CreateFunctionRequest} CreateFunctionRequest
                         */
                        CreateFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.CreateFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2.CreateFunctionRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object["function"] != null) {
                                if (typeof object["function"] !== "object")
                                    throw TypeError(".google.cloud.functions.v2.CreateFunctionRequest.function: object expected");
                                message["function"] = $root.google.cloud.functions.v2.Function.fromObject(object["function"]);
                            }
                            if (object.functionId != null)
                                message.functionId = String(object.functionId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.CreateFunctionRequest} message CreateFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object["function"] = null;
                                object.functionId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message["function"] != null && message.hasOwnProperty("function"))
                                object["function"] = $root.google.cloud.functions.v2.Function.toObject(message["function"], options);
                            if (message.functionId != null && message.hasOwnProperty("functionId"))
                                object.functionId = message.functionId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.CreateFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.CreateFunctionRequest";
                        };
    
                        return CreateFunctionRequest;
                    })();
    
                    v2.UpdateFunctionRequest = (function() {
    
                        /**
                         * Properties of an UpdateFunctionRequest.
                         * @memberof google.cloud.functions.v2
                         * @interface IUpdateFunctionRequest
                         * @property {google.cloud.functions.v2.IFunction|null} ["function"] UpdateFunctionRequest function
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateFunctionRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateFunctionRequest.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents an UpdateFunctionRequest.
                         * @implements IUpdateFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v2.IUpdateFunctionRequest=} [properties] Properties to set
                         */
                        function UpdateFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateFunctionRequest function.
                         * @member {google.cloud.functions.v2.IFunction|null|undefined} function
                         * @memberof google.cloud.functions.v2.UpdateFunctionRequest
                         * @instance
                         */
                        UpdateFunctionRequest.prototype["function"] = null;
    
                        /**
                         * UpdateFunctionRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.functions.v2.UpdateFunctionRequest
                         * @instance
                         */
                        UpdateFunctionRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.IUpdateFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.UpdateFunctionRequest} UpdateFunctionRequest instance
                         */
                        UpdateFunctionRequest.create = function create(properties) {
                            return new UpdateFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateFunctionRequest message. Does not implicitly {@link google.cloud.functions.v2.UpdateFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.IUpdateFunctionRequest} message UpdateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message["function"] != null && Object.hasOwnProperty.call(message, "function"))
                                $root.google.cloud.functions.v2.Function.encode(message["function"], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2.UpdateFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.IUpdateFunctionRequest} message UpdateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.UpdateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.UpdateFunctionRequest} UpdateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.UpdateFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message["function"] = $root.google.cloud.functions.v2.Function.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.UpdateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.UpdateFunctionRequest} UpdateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.UpdateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message["function"] != null && message.hasOwnProperty("function")) {
                                var error = $root.google.cloud.functions.v2.Function.verify(message["function"]);
                                if (error)
                                    return "function." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.UpdateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.UpdateFunctionRequest} UpdateFunctionRequest
                         */
                        UpdateFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.UpdateFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2.UpdateFunctionRequest();
                            if (object["function"] != null) {
                                if (typeof object["function"] !== "object")
                                    throw TypeError(".google.cloud.functions.v2.UpdateFunctionRequest.function: object expected");
                                message["function"] = $root.google.cloud.functions.v2.Function.fromObject(object["function"]);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.functions.v2.UpdateFunctionRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.UpdateFunctionRequest} message UpdateFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object["function"] = null;
                                object.updateMask = null;
                            }
                            if (message["function"] != null && message.hasOwnProperty("function"))
                                object["function"] = $root.google.cloud.functions.v2.Function.toObject(message["function"], options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.UpdateFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.UpdateFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.UpdateFunctionRequest";
                        };
    
                        return UpdateFunctionRequest;
                    })();
    
                    v2.DeleteFunctionRequest = (function() {
    
                        /**
                         * Properties of a DeleteFunctionRequest.
                         * @memberof google.cloud.functions.v2
                         * @interface IDeleteFunctionRequest
                         * @property {string|null} [name] DeleteFunctionRequest name
                         */
    
                        /**
                         * Constructs a new DeleteFunctionRequest.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a DeleteFunctionRequest.
                         * @implements IDeleteFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v2.IDeleteFunctionRequest=} [properties] Properties to set
                         */
                        function DeleteFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteFunctionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v2.DeleteFunctionRequest
                         * @instance
                         */
                        DeleteFunctionRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.IDeleteFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.DeleteFunctionRequest} DeleteFunctionRequest instance
                         */
                        DeleteFunctionRequest.create = function create(properties) {
                            return new DeleteFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteFunctionRequest message. Does not implicitly {@link google.cloud.functions.v2.DeleteFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.IDeleteFunctionRequest} message DeleteFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2.DeleteFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.IDeleteFunctionRequest} message DeleteFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.DeleteFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.DeleteFunctionRequest} DeleteFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.DeleteFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.DeleteFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.DeleteFunctionRequest} DeleteFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.DeleteFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.DeleteFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.DeleteFunctionRequest} DeleteFunctionRequest
                         */
                        DeleteFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.DeleteFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2.DeleteFunctionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2.DeleteFunctionRequest} message DeleteFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.DeleteFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.DeleteFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.DeleteFunctionRequest";
                        };
    
                        return DeleteFunctionRequest;
                    })();
    
                    v2.GenerateUploadUrlRequest = (function() {
    
                        /**
                         * Properties of a GenerateUploadUrlRequest.
                         * @memberof google.cloud.functions.v2
                         * @interface IGenerateUploadUrlRequest
                         * @property {string|null} [parent] GenerateUploadUrlRequest parent
                         * @property {string|null} [kmsKeyName] GenerateUploadUrlRequest kmsKeyName
                         */
    
                        /**
                         * Constructs a new GenerateUploadUrlRequest.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a GenerateUploadUrlRequest.
                         * @implements IGenerateUploadUrlRequest
                         * @constructor
                         * @param {google.cloud.functions.v2.IGenerateUploadUrlRequest=} [properties] Properties to set
                         */
                        function GenerateUploadUrlRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateUploadUrlRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlRequest
                         * @instance
                         */
                        GenerateUploadUrlRequest.prototype.parent = "";
    
                        /**
                         * GenerateUploadUrlRequest kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlRequest
                         * @instance
                         */
                        GenerateUploadUrlRequest.prototype.kmsKeyName = "";
    
                        /**
                         * Creates a new GenerateUploadUrlRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2.IGenerateUploadUrlRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.GenerateUploadUrlRequest} GenerateUploadUrlRequest instance
                         */
                        GenerateUploadUrlRequest.create = function create(properties) {
                            return new GenerateUploadUrlRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlRequest message. Does not implicitly {@link google.cloud.functions.v2.GenerateUploadUrlRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2.IGenerateUploadUrlRequest} message GenerateUploadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.kmsKeyName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2.GenerateUploadUrlRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2.IGenerateUploadUrlRequest} message GenerateUploadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.GenerateUploadUrlRequest} GenerateUploadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.GenerateUploadUrlRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.GenerateUploadUrlRequest} GenerateUploadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateUploadUrlRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateUploadUrlRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateUploadUrlRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.GenerateUploadUrlRequest} GenerateUploadUrlRequest
                         */
                        GenerateUploadUrlRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.GenerateUploadUrlRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2.GenerateUploadUrlRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateUploadUrlRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2.GenerateUploadUrlRequest} message GenerateUploadUrlRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateUploadUrlRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.kmsKeyName = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateUploadUrlRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateUploadUrlRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateUploadUrlRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateUploadUrlRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.GenerateUploadUrlRequest";
                        };
    
                        return GenerateUploadUrlRequest;
                    })();
    
                    v2.GenerateUploadUrlResponse = (function() {
    
                        /**
                         * Properties of a GenerateUploadUrlResponse.
                         * @memberof google.cloud.functions.v2
                         * @interface IGenerateUploadUrlResponse
                         * @property {string|null} [uploadUrl] GenerateUploadUrlResponse uploadUrl
                         * @property {google.cloud.functions.v2.IStorageSource|null} [storageSource] GenerateUploadUrlResponse storageSource
                         */
    
                        /**
                         * Constructs a new GenerateUploadUrlResponse.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a GenerateUploadUrlResponse.
                         * @implements IGenerateUploadUrlResponse
                         * @constructor
                         * @param {google.cloud.functions.v2.IGenerateUploadUrlResponse=} [properties] Properties to set
                         */
                        function GenerateUploadUrlResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateUploadUrlResponse uploadUrl.
                         * @member {string} uploadUrl
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlResponse
                         * @instance
                         */
                        GenerateUploadUrlResponse.prototype.uploadUrl = "";
    
                        /**
                         * GenerateUploadUrlResponse storageSource.
                         * @member {google.cloud.functions.v2.IStorageSource|null|undefined} storageSource
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlResponse
                         * @instance
                         */
                        GenerateUploadUrlResponse.prototype.storageSource = null;
    
                        /**
                         * Creates a new GenerateUploadUrlResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2.IGenerateUploadUrlResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.GenerateUploadUrlResponse} GenerateUploadUrlResponse instance
                         */
                        GenerateUploadUrlResponse.create = function create(properties) {
                            return new GenerateUploadUrlResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlResponse message. Does not implicitly {@link google.cloud.functions.v2.GenerateUploadUrlResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2.IGenerateUploadUrlResponse} message GenerateUploadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uploadUrl != null && Object.hasOwnProperty.call(message, "uploadUrl"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uploadUrl);
                            if (message.storageSource != null && Object.hasOwnProperty.call(message, "storageSource"))
                                $root.google.cloud.functions.v2.StorageSource.encode(message.storageSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v2.GenerateUploadUrlResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2.IGenerateUploadUrlResponse} message GenerateUploadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.GenerateUploadUrlResponse} GenerateUploadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.GenerateUploadUrlResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uploadUrl = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.storageSource = $root.google.cloud.functions.v2.StorageSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.GenerateUploadUrlResponse} GenerateUploadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateUploadUrlResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateUploadUrlResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uploadUrl != null && message.hasOwnProperty("uploadUrl"))
                                if (!$util.isString(message.uploadUrl))
                                    return "uploadUrl: string expected";
                            if (message.storageSource != null && message.hasOwnProperty("storageSource")) {
                                var error = $root.google.cloud.functions.v2.StorageSource.verify(message.storageSource);
                                if (error)
                                    return "storageSource." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GenerateUploadUrlResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.GenerateUploadUrlResponse} GenerateUploadUrlResponse
                         */
                        GenerateUploadUrlResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.GenerateUploadUrlResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v2.GenerateUploadUrlResponse();
                            if (object.uploadUrl != null)
                                message.uploadUrl = String(object.uploadUrl);
                            if (object.storageSource != null) {
                                if (typeof object.storageSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2.GenerateUploadUrlResponse.storageSource: object expected");
                                message.storageSource = $root.google.cloud.functions.v2.StorageSource.fromObject(object.storageSource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateUploadUrlResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2.GenerateUploadUrlResponse} message GenerateUploadUrlResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateUploadUrlResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.uploadUrl = "";
                                object.storageSource = null;
                            }
                            if (message.uploadUrl != null && message.hasOwnProperty("uploadUrl"))
                                object.uploadUrl = message.uploadUrl;
                            if (message.storageSource != null && message.hasOwnProperty("storageSource"))
                                object.storageSource = $root.google.cloud.functions.v2.StorageSource.toObject(message.storageSource, options);
                            return object;
                        };
    
                        /**
                         * Converts this GenerateUploadUrlResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateUploadUrlResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateUploadUrlResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.GenerateUploadUrlResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateUploadUrlResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.GenerateUploadUrlResponse";
                        };
    
                        return GenerateUploadUrlResponse;
                    })();
    
                    v2.GenerateDownloadUrlRequest = (function() {
    
                        /**
                         * Properties of a GenerateDownloadUrlRequest.
                         * @memberof google.cloud.functions.v2
                         * @interface IGenerateDownloadUrlRequest
                         * @property {string|null} [name] GenerateDownloadUrlRequest name
                         */
    
                        /**
                         * Constructs a new GenerateDownloadUrlRequest.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a GenerateDownloadUrlRequest.
                         * @implements IGenerateDownloadUrlRequest
                         * @constructor
                         * @param {google.cloud.functions.v2.IGenerateDownloadUrlRequest=} [properties] Properties to set
                         */
                        function GenerateDownloadUrlRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateDownloadUrlRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlRequest
                         * @instance
                         */
                        GenerateDownloadUrlRequest.prototype.name = "";
    
                        /**
                         * Creates a new GenerateDownloadUrlRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2.IGenerateDownloadUrlRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest instance
                         */
                        GenerateDownloadUrlRequest.create = function create(properties) {
                            return new GenerateDownloadUrlRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlRequest message. Does not implicitly {@link google.cloud.functions.v2.GenerateDownloadUrlRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2.IGenerateDownloadUrlRequest} message GenerateDownloadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2.GenerateDownloadUrlRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2.IGenerateDownloadUrlRequest} message GenerateDownloadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.GenerateDownloadUrlRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateDownloadUrlRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateDownloadUrlRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateDownloadUrlRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest
                         */
                        GenerateDownloadUrlRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.GenerateDownloadUrlRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2.GenerateDownloadUrlRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateDownloadUrlRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2.GenerateDownloadUrlRequest} message GenerateDownloadUrlRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateDownloadUrlRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateDownloadUrlRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateDownloadUrlRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateDownloadUrlRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateDownloadUrlRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.GenerateDownloadUrlRequest";
                        };
    
                        return GenerateDownloadUrlRequest;
                    })();
    
                    v2.GenerateDownloadUrlResponse = (function() {
    
                        /**
                         * Properties of a GenerateDownloadUrlResponse.
                         * @memberof google.cloud.functions.v2
                         * @interface IGenerateDownloadUrlResponse
                         * @property {string|null} [downloadUrl] GenerateDownloadUrlResponse downloadUrl
                         */
    
                        /**
                         * Constructs a new GenerateDownloadUrlResponse.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a GenerateDownloadUrlResponse.
                         * @implements IGenerateDownloadUrlResponse
                         * @constructor
                         * @param {google.cloud.functions.v2.IGenerateDownloadUrlResponse=} [properties] Properties to set
                         */
                        function GenerateDownloadUrlResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateDownloadUrlResponse downloadUrl.
                         * @member {string} downloadUrl
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlResponse
                         * @instance
                         */
                        GenerateDownloadUrlResponse.prototype.downloadUrl = "";
    
                        /**
                         * Creates a new GenerateDownloadUrlResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2.IGenerateDownloadUrlResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse instance
                         */
                        GenerateDownloadUrlResponse.create = function create(properties) {
                            return new GenerateDownloadUrlResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlResponse message. Does not implicitly {@link google.cloud.functions.v2.GenerateDownloadUrlResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2.IGenerateDownloadUrlResponse} message GenerateDownloadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.downloadUrl != null && Object.hasOwnProperty.call(message, "downloadUrl"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.downloadUrl);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v2.GenerateDownloadUrlResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2.IGenerateDownloadUrlResponse} message GenerateDownloadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.GenerateDownloadUrlResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.downloadUrl = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateDownloadUrlResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateDownloadUrlResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.downloadUrl != null && message.hasOwnProperty("downloadUrl"))
                                if (!$util.isString(message.downloadUrl))
                                    return "downloadUrl: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateDownloadUrlResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse
                         */
                        GenerateDownloadUrlResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.GenerateDownloadUrlResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v2.GenerateDownloadUrlResponse();
                            if (object.downloadUrl != null)
                                message.downloadUrl = String(object.downloadUrl);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateDownloadUrlResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2.GenerateDownloadUrlResponse} message GenerateDownloadUrlResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateDownloadUrlResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.downloadUrl = "";
                            if (message.downloadUrl != null && message.hasOwnProperty("downloadUrl"))
                                object.downloadUrl = message.downloadUrl;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateDownloadUrlResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateDownloadUrlResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateDownloadUrlResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.GenerateDownloadUrlResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateDownloadUrlResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.GenerateDownloadUrlResponse";
                        };
    
                        return GenerateDownloadUrlResponse;
                    })();
    
                    v2.ListRuntimesRequest = (function() {
    
                        /**
                         * Properties of a ListRuntimesRequest.
                         * @memberof google.cloud.functions.v2
                         * @interface IListRuntimesRequest
                         * @property {string|null} [parent] ListRuntimesRequest parent
                         * @property {string|null} [filter] ListRuntimesRequest filter
                         */
    
                        /**
                         * Constructs a new ListRuntimesRequest.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a ListRuntimesRequest.
                         * @implements IListRuntimesRequest
                         * @constructor
                         * @param {google.cloud.functions.v2.IListRuntimesRequest=} [properties] Properties to set
                         */
                        function ListRuntimesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRuntimesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v2.ListRuntimesRequest
                         * @instance
                         */
                        ListRuntimesRequest.prototype.parent = "";
    
                        /**
                         * ListRuntimesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.functions.v2.ListRuntimesRequest
                         * @instance
                         */
                        ListRuntimesRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListRuntimesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.functions.v2.IListRuntimesRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.ListRuntimesRequest} ListRuntimesRequest instance
                         */
                        ListRuntimesRequest.create = function create(properties) {
                            return new ListRuntimesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRuntimesRequest message. Does not implicitly {@link google.cloud.functions.v2.ListRuntimesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.functions.v2.IListRuntimesRequest} message ListRuntimesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRuntimesRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2.ListRuntimesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.functions.v2.IListRuntimesRequest} message ListRuntimesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRuntimesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.ListRuntimesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.ListRuntimesRequest} ListRuntimesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.ListRuntimesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRuntimesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.ListRuntimesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.ListRuntimesRequest} ListRuntimesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRuntimesRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.ListRuntimesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRuntimesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRuntimesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.ListRuntimesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.ListRuntimesRequest} ListRuntimesRequest
                         */
                        ListRuntimesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.ListRuntimesRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2.ListRuntimesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRuntimesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.functions.v2.ListRuntimesRequest} message ListRuntimesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRuntimesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListRuntimesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.ListRuntimesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRuntimesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRuntimesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.ListRuntimesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRuntimesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.ListRuntimesRequest";
                        };
    
                        return ListRuntimesRequest;
                    })();
    
                    v2.ListRuntimesResponse = (function() {
    
                        /**
                         * Properties of a ListRuntimesResponse.
                         * @memberof google.cloud.functions.v2
                         * @interface IListRuntimesResponse
                         * @property {Array.<google.cloud.functions.v2.ListRuntimesResponse.IRuntime>|null} [runtimes] ListRuntimesResponse runtimes
                         */
    
                        /**
                         * Constructs a new ListRuntimesResponse.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a ListRuntimesResponse.
                         * @implements IListRuntimesResponse
                         * @constructor
                         * @param {google.cloud.functions.v2.IListRuntimesResponse=} [properties] Properties to set
                         */
                        function ListRuntimesResponse(properties) {
                            this.runtimes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRuntimesResponse runtimes.
                         * @member {Array.<google.cloud.functions.v2.ListRuntimesResponse.IRuntime>} runtimes
                         * @memberof google.cloud.functions.v2.ListRuntimesResponse
                         * @instance
                         */
                        ListRuntimesResponse.prototype.runtimes = $util.emptyArray;
    
                        /**
                         * Creates a new ListRuntimesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.functions.v2.IListRuntimesResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.ListRuntimesResponse} ListRuntimesResponse instance
                         */
                        ListRuntimesResponse.create = function create(properties) {
                            return new ListRuntimesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRuntimesResponse message. Does not implicitly {@link google.cloud.functions.v2.ListRuntimesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.functions.v2.IListRuntimesResponse} message ListRuntimesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.runtimes != null && message.runtimes.length)
                                for (var i = 0; i < message.runtimes.length; ++i)
                                    $root.google.cloud.functions.v2.ListRuntimesResponse.Runtime.encode(message.runtimes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRuntimesResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v2.ListRuntimesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.functions.v2.IListRuntimesResponse} message ListRuntimesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRuntimesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.ListRuntimesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.ListRuntimesResponse} ListRuntimesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.ListRuntimesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.runtimes && message.runtimes.length))
                                            message.runtimes = [];
                                        message.runtimes.push($root.google.cloud.functions.v2.ListRuntimesResponse.Runtime.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRuntimesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.ListRuntimesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.ListRuntimesResponse} ListRuntimesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRuntimesResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.ListRuntimesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRuntimesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.runtimes != null && message.hasOwnProperty("runtimes")) {
                                if (!Array.isArray(message.runtimes))
                                    return "runtimes: array expected";
                                for (var i = 0; i < message.runtimes.length; ++i) {
                                    var error = $root.google.cloud.functions.v2.ListRuntimesResponse.Runtime.verify(message.runtimes[i]);
                                    if (error)
                                        return "runtimes." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListRuntimesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.ListRuntimesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.ListRuntimesResponse} ListRuntimesResponse
                         */
                        ListRuntimesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.ListRuntimesResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v2.ListRuntimesResponse();
                            if (object.runtimes) {
                                if (!Array.isArray(object.runtimes))
                                    throw TypeError(".google.cloud.functions.v2.ListRuntimesResponse.runtimes: array expected");
                                message.runtimes = [];
                                for (var i = 0; i < object.runtimes.length; ++i) {
                                    if (typeof object.runtimes[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2.ListRuntimesResponse.runtimes: object expected");
                                    message.runtimes[i] = $root.google.cloud.functions.v2.ListRuntimesResponse.Runtime.fromObject(object.runtimes[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRuntimesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.functions.v2.ListRuntimesResponse} message ListRuntimesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRuntimesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.runtimes = [];
                            if (message.runtimes && message.runtimes.length) {
                                object.runtimes = [];
                                for (var j = 0; j < message.runtimes.length; ++j)
                                    object.runtimes[j] = $root.google.cloud.functions.v2.ListRuntimesResponse.Runtime.toObject(message.runtimes[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListRuntimesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.ListRuntimesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRuntimesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRuntimesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.ListRuntimesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRuntimesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.ListRuntimesResponse";
                        };
    
                        ListRuntimesResponse.Runtime = (function() {
    
                            /**
                             * Properties of a Runtime.
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse
                             * @interface IRuntime
                             * @property {string|null} [name] Runtime name
                             * @property {string|null} [displayName] Runtime displayName
                             * @property {google.cloud.functions.v2.ListRuntimesResponse.RuntimeStage|null} [stage] Runtime stage
                             * @property {Array.<string>|null} [warnings] Runtime warnings
                             * @property {google.cloud.functions.v2.Environment|null} [environment] Runtime environment
                             */
    
                            /**
                             * Constructs a new Runtime.
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse
                             * @classdesc Represents a Runtime.
                             * @implements IRuntime
                             * @constructor
                             * @param {google.cloud.functions.v2.ListRuntimesResponse.IRuntime=} [properties] Properties to set
                             */
                            function Runtime(properties) {
                                this.warnings = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Runtime name.
                             * @member {string} name
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.name = "";
    
                            /**
                             * Runtime displayName.
                             * @member {string} displayName
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.displayName = "";
    
                            /**
                             * Runtime stage.
                             * @member {google.cloud.functions.v2.ListRuntimesResponse.RuntimeStage} stage
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.stage = 0;
    
                            /**
                             * Runtime warnings.
                             * @member {Array.<string>} warnings
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.warnings = $util.emptyArray;
    
                            /**
                             * Runtime environment.
                             * @member {google.cloud.functions.v2.Environment} environment
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.environment = 0;
    
                            /**
                             * Creates a new Runtime instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @static
                             * @param {google.cloud.functions.v2.ListRuntimesResponse.IRuntime=} [properties] Properties to set
                             * @returns {google.cloud.functions.v2.ListRuntimesResponse.Runtime} Runtime instance
                             */
                            Runtime.create = function create(properties) {
                                return new Runtime(properties);
                            };
    
                            /**
                             * Encodes the specified Runtime message. Does not implicitly {@link google.cloud.functions.v2.ListRuntimesResponse.Runtime.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @static
                             * @param {google.cloud.functions.v2.ListRuntimesResponse.IRuntime} message Runtime message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Runtime.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.stage != null && Object.hasOwnProperty.call(message, "stage"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.stage);
                                if (message.warnings != null && message.warnings.length)
                                    for (var i = 0; i < message.warnings.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.warnings[i]);
                                if (message.environment != null && Object.hasOwnProperty.call(message, "environment"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.environment);
                                if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Runtime message, length delimited. Does not implicitly {@link google.cloud.functions.v2.ListRuntimesResponse.Runtime.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @static
                             * @param {google.cloud.functions.v2.ListRuntimesResponse.IRuntime} message Runtime message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Runtime.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Runtime message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.functions.v2.ListRuntimesResponse.Runtime} Runtime
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Runtime.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.ListRuntimesResponse.Runtime();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.displayName = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.stage = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.warnings && message.warnings.length))
                                                message.warnings = [];
                                            message.warnings.push(reader.string());
                                            break;
                                        }
                                    case 4: {
                                            message.environment = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Runtime message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.functions.v2.ListRuntimesResponse.Runtime} Runtime
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Runtime.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Runtime message.
                             * @function verify
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Runtime.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.displayName != null && message.hasOwnProperty("displayName"))
                                    if (!$util.isString(message.displayName))
                                        return "displayName: string expected";
                                if (message.stage != null && message.hasOwnProperty("stage"))
                                    switch (message.stage) {
                                    default:
                                        return "stage: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                                if (message.warnings != null && message.hasOwnProperty("warnings")) {
                                    if (!Array.isArray(message.warnings))
                                        return "warnings: array expected";
                                    for (var i = 0; i < message.warnings.length; ++i)
                                        if (!$util.isString(message.warnings[i]))
                                            return "warnings: string[] expected";
                                }
                                if (message.environment != null && message.hasOwnProperty("environment"))
                                    switch (message.environment) {
                                    default:
                                        return "environment: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a Runtime message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.functions.v2.ListRuntimesResponse.Runtime} Runtime
                             */
                            Runtime.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.functions.v2.ListRuntimesResponse.Runtime)
                                    return object;
                                var message = new $root.google.cloud.functions.v2.ListRuntimesResponse.Runtime();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.displayName != null)
                                    message.displayName = String(object.displayName);
                                switch (object.stage) {
                                default:
                                    if (typeof object.stage === "number") {
                                        message.stage = object.stage;
                                        break;
                                    }
                                    break;
                                case "RUNTIME_STAGE_UNSPECIFIED":
                                case 0:
                                    message.stage = 0;
                                    break;
                                case "DEVELOPMENT":
                                case 1:
                                    message.stage = 1;
                                    break;
                                case "ALPHA":
                                case 2:
                                    message.stage = 2;
                                    break;
                                case "BETA":
                                case 3:
                                    message.stage = 3;
                                    break;
                                case "GA":
                                case 4:
                                    message.stage = 4;
                                    break;
                                case "DEPRECATED":
                                case 5:
                                    message.stage = 5;
                                    break;
                                case "DECOMMISSIONED":
                                case 6:
                                    message.stage = 6;
                                    break;
                                }
                                if (object.warnings) {
                                    if (!Array.isArray(object.warnings))
                                        throw TypeError(".google.cloud.functions.v2.ListRuntimesResponse.Runtime.warnings: array expected");
                                    message.warnings = [];
                                    for (var i = 0; i < object.warnings.length; ++i)
                                        message.warnings[i] = String(object.warnings[i]);
                                }
                                switch (object.environment) {
                                default:
                                    if (typeof object.environment === "number") {
                                        message.environment = object.environment;
                                        break;
                                    }
                                    break;
                                case "ENVIRONMENT_UNSPECIFIED":
                                case 0:
                                    message.environment = 0;
                                    break;
                                case "GEN_1":
                                case 1:
                                    message.environment = 1;
                                    break;
                                case "GEN_2":
                                case 2:
                                    message.environment = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Runtime message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @static
                             * @param {google.cloud.functions.v2.ListRuntimesResponse.Runtime} message Runtime
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Runtime.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.warnings = [];
                                if (options.defaults) {
                                    object.name = "";
                                    object.stage = options.enums === String ? "RUNTIME_STAGE_UNSPECIFIED" : 0;
                                    object.environment = options.enums === String ? "ENVIRONMENT_UNSPECIFIED" : 0;
                                    object.displayName = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.stage != null && message.hasOwnProperty("stage"))
                                    object.stage = options.enums === String ? $root.google.cloud.functions.v2.ListRuntimesResponse.RuntimeStage[message.stage] === undefined ? message.stage : $root.google.cloud.functions.v2.ListRuntimesResponse.RuntimeStage[message.stage] : message.stage;
                                if (message.warnings && message.warnings.length) {
                                    object.warnings = [];
                                    for (var j = 0; j < message.warnings.length; ++j)
                                        object.warnings[j] = message.warnings[j];
                                }
                                if (message.environment != null && message.hasOwnProperty("environment"))
                                    object.environment = options.enums === String ? $root.google.cloud.functions.v2.Environment[message.environment] === undefined ? message.environment : $root.google.cloud.functions.v2.Environment[message.environment] : message.environment;
                                if (message.displayName != null && message.hasOwnProperty("displayName"))
                                    object.displayName = message.displayName;
                                return object;
                            };
    
                            /**
                             * Converts this Runtime to JSON.
                             * @function toJSON
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Runtime.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Runtime
                             * @function getTypeUrl
                             * @memberof google.cloud.functions.v2.ListRuntimesResponse.Runtime
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Runtime.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.functions.v2.ListRuntimesResponse.Runtime";
                            };
    
                            return Runtime;
                        })();
    
                        /**
                         * RuntimeStage enum.
                         * @name google.cloud.functions.v2.ListRuntimesResponse.RuntimeStage
                         * @enum {number}
                         * @property {number} RUNTIME_STAGE_UNSPECIFIED=0 RUNTIME_STAGE_UNSPECIFIED value
                         * @property {number} DEVELOPMENT=1 DEVELOPMENT value
                         * @property {number} ALPHA=2 ALPHA value
                         * @property {number} BETA=3 BETA value
                         * @property {number} GA=4 GA value
                         * @property {number} DEPRECATED=5 DEPRECATED value
                         * @property {number} DECOMMISSIONED=6 DECOMMISSIONED value
                         */
                        ListRuntimesResponse.RuntimeStage = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RUNTIME_STAGE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DEVELOPMENT"] = 1;
                            values[valuesById[2] = "ALPHA"] = 2;
                            values[valuesById[3] = "BETA"] = 3;
                            values[valuesById[4] = "GA"] = 4;
                            values[valuesById[5] = "DEPRECATED"] = 5;
                            values[valuesById[6] = "DECOMMISSIONED"] = 6;
                            return values;
                        })();
    
                        return ListRuntimesResponse;
                    })();
    
                    v2.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.functions.v2
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusDetail] OperationMetadata statusDetail
                         * @property {boolean|null} [cancelRequested] OperationMetadata cancelRequested
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         * @property {google.protobuf.IAny|null} [requestResource] OperationMetadata requestResource
                         * @property {Array.<google.cloud.functions.v2.IStage>|null} [stages] OperationMetadata stages
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.functions.v2.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            this.stages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusDetail.
                         * @member {string} statusDetail
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusDetail = "";
    
                        /**
                         * OperationMetadata cancelRequested.
                         * @member {boolean} cancelRequested
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.cancelRequested = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * OperationMetadata requestResource.
                         * @member {google.protobuf.IAny|null|undefined} requestResource
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestResource = null;
    
                        /**
                         * OperationMetadata stages.
                         * @member {Array.<google.cloud.functions.v2.IStage>} stages
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.stages = $util.emptyArray;
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @static
                         * @param {google.cloud.functions.v2.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.functions.v2.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @static
                         * @param {google.cloud.functions.v2.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusDetail != null && Object.hasOwnProperty.call(message, "statusDetail"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusDetail);
                            if (message.cancelRequested != null && Object.hasOwnProperty.call(message, "cancelRequested"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.cancelRequested);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            if (message.requestResource != null && Object.hasOwnProperty.call(message, "requestResource"))
                                $root.google.protobuf.Any.encode(message.requestResource, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.stages != null && message.stages.length)
                                for (var i = 0; i < message.stages.length; ++i)
                                    $root.google.cloud.functions.v2.Stage.encode(message.stages[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.functions.v2.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @static
                         * @param {google.cloud.functions.v2.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusDetail = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.cancelRequested = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.requestResource = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        if (!(message.stages && message.stages.length))
                                            message.stages = [];
                                        message.stages.push($root.google.cloud.functions.v2.Stage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                if (!$util.isString(message.statusDetail))
                                    return "statusDetail: string expected";
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                if (typeof message.cancelRequested !== "boolean")
                                    return "cancelRequested: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            if (message.requestResource != null && message.hasOwnProperty("requestResource")) {
                                var error = $root.google.protobuf.Any.verify(message.requestResource);
                                if (error)
                                    return "requestResource." + error;
                            }
                            if (message.stages != null && message.hasOwnProperty("stages")) {
                                if (!Array.isArray(message.stages))
                                    return "stages: array expected";
                                for (var i = 0; i < message.stages.length; ++i) {
                                    var error = $root.google.cloud.functions.v2.Stage.verify(message.stages[i]);
                                    if (error)
                                        return "stages." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.functions.v2.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.functions.v2.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.functions.v2.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusDetail != null)
                                message.statusDetail = String(object.statusDetail);
                            if (object.cancelRequested != null)
                                message.cancelRequested = Boolean(object.cancelRequested);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            if (object.requestResource != null) {
                                if (typeof object.requestResource !== "object")
                                    throw TypeError(".google.cloud.functions.v2.OperationMetadata.requestResource: object expected");
                                message.requestResource = $root.google.protobuf.Any.fromObject(object.requestResource);
                            }
                            if (object.stages) {
                                if (!Array.isArray(object.stages))
                                    throw TypeError(".google.cloud.functions.v2.OperationMetadata.stages: array expected");
                                message.stages = [];
                                for (var i = 0; i < object.stages.length; ++i) {
                                    if (typeof object.stages[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2.OperationMetadata.stages: object expected");
                                    message.stages[i] = $root.google.cloud.functions.v2.Stage.fromObject(object.stages[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @static
                         * @param {google.cloud.functions.v2.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.stages = [];
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusDetail = "";
                                object.cancelRequested = false;
                                object.apiVersion = "";
                                object.requestResource = null;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                object.statusDetail = message.statusDetail;
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                object.cancelRequested = message.cancelRequested;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            if (message.requestResource != null && message.hasOwnProperty("requestResource"))
                                object.requestResource = $root.google.protobuf.Any.toObject(message.requestResource, options);
                            if (message.stages && message.stages.length) {
                                object.stages = [];
                                for (var j = 0; j < message.stages.length; ++j)
                                    object.stages[j] = $root.google.cloud.functions.v2.Stage.toObject(message.stages[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v2.LocationMetadata = (function() {
    
                        /**
                         * Properties of a LocationMetadata.
                         * @memberof google.cloud.functions.v2
                         * @interface ILocationMetadata
                         * @property {Array.<google.cloud.functions.v2.Environment>|null} [environments] LocationMetadata environments
                         */
    
                        /**
                         * Constructs a new LocationMetadata.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a LocationMetadata.
                         * @implements ILocationMetadata
                         * @constructor
                         * @param {google.cloud.functions.v2.ILocationMetadata=} [properties] Properties to set
                         */
                        function LocationMetadata(properties) {
                            this.environments = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LocationMetadata environments.
                         * @member {Array.<google.cloud.functions.v2.Environment>} environments
                         * @memberof google.cloud.functions.v2.LocationMetadata
                         * @instance
                         */
                        LocationMetadata.prototype.environments = $util.emptyArray;
    
                        /**
                         * Creates a new LocationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.LocationMetadata
                         * @static
                         * @param {google.cloud.functions.v2.ILocationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.LocationMetadata} LocationMetadata instance
                         */
                        LocationMetadata.create = function create(properties) {
                            return new LocationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified LocationMetadata message. Does not implicitly {@link google.cloud.functions.v2.LocationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.LocationMetadata
                         * @static
                         * @param {google.cloud.functions.v2.ILocationMetadata} message LocationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.environments != null && message.environments.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.environments.length; ++i)
                                    writer.int32(message.environments[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LocationMetadata message, length delimited. Does not implicitly {@link google.cloud.functions.v2.LocationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.LocationMetadata
                         * @static
                         * @param {google.cloud.functions.v2.ILocationMetadata} message LocationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LocationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.LocationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.LocationMetadata} LocationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.LocationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.environments && message.environments.length))
                                            message.environments = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.environments.push(reader.int32());
                                        } else
                                            message.environments.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LocationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.LocationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.LocationMetadata} LocationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LocationMetadata message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.LocationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.environments != null && message.hasOwnProperty("environments")) {
                                if (!Array.isArray(message.environments))
                                    return "environments: array expected";
                                for (var i = 0; i < message.environments.length; ++i)
                                    switch (message.environments[i]) {
                                    default:
                                        return "environments: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LocationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.LocationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.LocationMetadata} LocationMetadata
                         */
                        LocationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.LocationMetadata)
                                return object;
                            var message = new $root.google.cloud.functions.v2.LocationMetadata();
                            if (object.environments) {
                                if (!Array.isArray(object.environments))
                                    throw TypeError(".google.cloud.functions.v2.LocationMetadata.environments: array expected");
                                message.environments = [];
                                for (var i = 0; i < object.environments.length; ++i)
                                    switch (object.environments[i]) {
                                    default:
                                        if (typeof object.environments[i] === "number") {
                                            message.environments[i] = object.environments[i];
                                            break;
                                        }
                                    case "ENVIRONMENT_UNSPECIFIED":
                                    case 0:
                                        message.environments[i] = 0;
                                        break;
                                    case "GEN_1":
                                    case 1:
                                        message.environments[i] = 1;
                                        break;
                                    case "GEN_2":
                                    case 2:
                                        message.environments[i] = 2;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LocationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.LocationMetadata
                         * @static
                         * @param {google.cloud.functions.v2.LocationMetadata} message LocationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.environments = [];
                            if (message.environments && message.environments.length) {
                                object.environments = [];
                                for (var j = 0; j < message.environments.length; ++j)
                                    object.environments[j] = options.enums === String ? $root.google.cloud.functions.v2.Environment[message.environments[j]] === undefined ? message.environments[j] : $root.google.cloud.functions.v2.Environment[message.environments[j]] : message.environments[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LocationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.LocationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LocationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.LocationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LocationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.LocationMetadata";
                        };
    
                        return LocationMetadata;
                    })();
    
                    v2.Stage = (function() {
    
                        /**
                         * Properties of a Stage.
                         * @memberof google.cloud.functions.v2
                         * @interface IStage
                         * @property {google.cloud.functions.v2.Stage.Name|null} [name] Stage name
                         * @property {string|null} [message] Stage message
                         * @property {google.cloud.functions.v2.Stage.State|null} [state] Stage state
                         * @property {string|null} [resource] Stage resource
                         * @property {string|null} [resourceUri] Stage resourceUri
                         * @property {Array.<google.cloud.functions.v2.IStateMessage>|null} [stateMessages] Stage stateMessages
                         */
    
                        /**
                         * Constructs a new Stage.
                         * @memberof google.cloud.functions.v2
                         * @classdesc Represents a Stage.
                         * @implements IStage
                         * @constructor
                         * @param {google.cloud.functions.v2.IStage=} [properties] Properties to set
                         */
                        function Stage(properties) {
                            this.stateMessages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Stage name.
                         * @member {google.cloud.functions.v2.Stage.Name} name
                         * @memberof google.cloud.functions.v2.Stage
                         * @instance
                         */
                        Stage.prototype.name = 0;
    
                        /**
                         * Stage message.
                         * @member {string} message
                         * @memberof google.cloud.functions.v2.Stage
                         * @instance
                         */
                        Stage.prototype.message = "";
    
                        /**
                         * Stage state.
                         * @member {google.cloud.functions.v2.Stage.State} state
                         * @memberof google.cloud.functions.v2.Stage
                         * @instance
                         */
                        Stage.prototype.state = 0;
    
                        /**
                         * Stage resource.
                         * @member {string} resource
                         * @memberof google.cloud.functions.v2.Stage
                         * @instance
                         */
                        Stage.prototype.resource = "";
    
                        /**
                         * Stage resourceUri.
                         * @member {string} resourceUri
                         * @memberof google.cloud.functions.v2.Stage
                         * @instance
                         */
                        Stage.prototype.resourceUri = "";
    
                        /**
                         * Stage stateMessages.
                         * @member {Array.<google.cloud.functions.v2.IStateMessage>} stateMessages
                         * @memberof google.cloud.functions.v2.Stage
                         * @instance
                         */
                        Stage.prototype.stateMessages = $util.emptyArray;
    
                        /**
                         * Creates a new Stage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2.Stage
                         * @static
                         * @param {google.cloud.functions.v2.IStage=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2.Stage} Stage instance
                         */
                        Stage.create = function create(properties) {
                            return new Stage(properties);
                        };
    
                        /**
                         * Encodes the specified Stage message. Does not implicitly {@link google.cloud.functions.v2.Stage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2.Stage
                         * @static
                         * @param {google.cloud.functions.v2.IStage} message Stage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Stage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.name);
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.resource);
                            if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.resourceUri);
                            if (message.stateMessages != null && message.stateMessages.length)
                                for (var i = 0; i < message.stateMessages.length; ++i)
                                    $root.google.cloud.functions.v2.StateMessage.encode(message.stateMessages[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Stage message, length delimited. Does not implicitly {@link google.cloud.functions.v2.Stage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2.Stage
                         * @static
                         * @param {google.cloud.functions.v2.IStage} message Stage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Stage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Stage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2.Stage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2.Stage} Stage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Stage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2.Stage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.resource = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.resourceUri = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (!(message.stateMessages && message.stateMessages.length))
                                            message.stateMessages = [];
                                        message.stateMessages.push($root.google.cloud.functions.v2.StateMessage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Stage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2.Stage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2.Stage} Stage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Stage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Stage message.
                         * @function verify
                         * @memberof google.cloud.functions.v2.Stage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Stage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                switch (message.name) {
                                default:
                                    return "name: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                if (!$util.isString(message.resource))
                                    return "resource: string expected";
                            if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                if (!$util.isString(message.resourceUri))
                                    return "resourceUri: string expected";
                            if (message.stateMessages != null && message.hasOwnProperty("stateMessages")) {
                                if (!Array.isArray(message.stateMessages))
                                    return "stateMessages: array expected";
                                for (var i = 0; i < message.stateMessages.length; ++i) {
                                    var error = $root.google.cloud.functions.v2.StateMessage.verify(message.stateMessages[i]);
                                    if (error)
                                        return "stateMessages." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Stage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2.Stage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2.Stage} Stage
                         */
                        Stage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2.Stage)
                                return object;
                            var message = new $root.google.cloud.functions.v2.Stage();
                            switch (object.name) {
                            default:
                                if (typeof object.name === "number") {
                                    message.name = object.name;
                                    break;
                                }
                                break;
                            case "NAME_UNSPECIFIED":
                            case 0:
                                message.name = 0;
                                break;
                            case "ARTIFACT_REGISTRY":
                            case 1:
                                message.name = 1;
                                break;
                            case "BUILD":
                            case 2:
                                message.name = 2;
                                break;
                            case "SERVICE":
                            case 3:
                                message.name = 3;
                                break;
                            case "TRIGGER":
                            case 4:
                                message.name = 4;
                                break;
                            case "SERVICE_ROLLBACK":
                            case 5:
                                message.name = 5;
                                break;
                            case "TRIGGER_ROLLBACK":
                            case 6:
                                message.name = 6;
                                break;
                            }
                            if (object.message != null)
                                message.message = String(object.message);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "NOT_STARTED":
                            case 1:
                                message.state = 1;
                                break;
                            case "IN_PROGRESS":
                            case 2:
                                message.state = 2;
                                break;
                            case "COMPLETE":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.resource != null)
                                message.resource = String(object.resource);
                            if (object.resourceUri != null)
                                message.resourceUri = String(object.resourceUri);
                            if (object.stateMessages) {
                                if (!Array.isArray(object.stateMessages))
                                    throw TypeError(".google.cloud.functions.v2.Stage.stateMessages: array expected");
                                message.stateMessages = [];
                                for (var i = 0; i < object.stateMessages.length; ++i) {
                                    if (typeof object.stateMessages[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2.Stage.stateMessages: object expected");
                                    message.stateMessages[i] = $root.google.cloud.functions.v2.StateMessage.fromObject(object.stateMessages[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Stage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2.Stage
                         * @static
                         * @param {google.cloud.functions.v2.Stage} message Stage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Stage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.stateMessages = [];
                            if (options.defaults) {
                                object.name = options.enums === String ? "NAME_UNSPECIFIED" : 0;
                                object.message = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.resource = "";
                                object.resourceUri = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = options.enums === String ? $root.google.cloud.functions.v2.Stage.Name[message.name] === undefined ? message.name : $root.google.cloud.functions.v2.Stage.Name[message.name] : message.name;
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.functions.v2.Stage.State[message.state] === undefined ? message.state : $root.google.cloud.functions.v2.Stage.State[message.state] : message.state;
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = message.resource;
                            if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                object.resourceUri = message.resourceUri;
                            if (message.stateMessages && message.stateMessages.length) {
                                object.stateMessages = [];
                                for (var j = 0; j < message.stateMessages.length; ++j)
                                    object.stateMessages[j] = $root.google.cloud.functions.v2.StateMessage.toObject(message.stateMessages[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Stage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2.Stage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Stage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Stage
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2.Stage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Stage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2.Stage";
                        };
    
                        /**
                         * Name enum.
                         * @name google.cloud.functions.v2.Stage.Name
                         * @enum {number}
                         * @property {number} NAME_UNSPECIFIED=0 NAME_UNSPECIFIED value
                         * @property {number} ARTIFACT_REGISTRY=1 ARTIFACT_REGISTRY value
                         * @property {number} BUILD=2 BUILD value
                         * @property {number} SERVICE=3 SERVICE value
                         * @property {number} TRIGGER=4 TRIGGER value
                         * @property {number} SERVICE_ROLLBACK=5 SERVICE_ROLLBACK value
                         * @property {number} TRIGGER_ROLLBACK=6 TRIGGER_ROLLBACK value
                         */
                        Stage.Name = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "NAME_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ARTIFACT_REGISTRY"] = 1;
                            values[valuesById[2] = "BUILD"] = 2;
                            values[valuesById[3] = "SERVICE"] = 3;
                            values[valuesById[4] = "TRIGGER"] = 4;
                            values[valuesById[5] = "SERVICE_ROLLBACK"] = 5;
                            values[valuesById[6] = "TRIGGER_ROLLBACK"] = 6;
                            return values;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.functions.v2.Stage.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} NOT_STARTED=1 NOT_STARTED value
                         * @property {number} IN_PROGRESS=2 IN_PROGRESS value
                         * @property {number} COMPLETE=3 COMPLETE value
                         */
                        Stage.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NOT_STARTED"] = 1;
                            values[valuesById[2] = "IN_PROGRESS"] = 2;
                            values[valuesById[3] = "COMPLETE"] = 3;
                            return values;
                        })();
    
                        return Stage;
                    })();
    
                    return v2;
                })();
    
                functions.v2alpha = (function() {
    
                    /**
                     * Namespace v2alpha.
                     * @memberof google.cloud.functions
                     * @namespace
                     */
                    var v2alpha = {};
    
                    v2alpha.FunctionService = (function() {
    
                        /**
                         * Constructs a new FunctionService service.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a FunctionService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function FunctionService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (FunctionService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = FunctionService;
    
                        /**
                         * Creates new FunctionService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {FunctionService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        FunctionService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2alpha.FunctionService|getFunction}.
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @typedef GetFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2alpha.Function} [response] Function
                         */
    
                        /**
                         * Calls GetFunction.
                         * @function getFunction
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IGetFunctionRequest} request GetFunctionRequest message or plain object
                         * @param {google.cloud.functions.v2alpha.FunctionService.GetFunctionCallback} callback Node-style callback called with the error, if any, and Function
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.getFunction = function getFunction(request, callback) {
                            return this.rpcCall(getFunction, $root.google.cloud.functions.v2alpha.GetFunctionRequest, $root.google.cloud.functions.v2alpha.Function, request, callback);
                        }, "name", { value: "GetFunction" });
    
                        /**
                         * Calls GetFunction.
                         * @function getFunction
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IGetFunctionRequest} request GetFunctionRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2alpha.Function>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2alpha.FunctionService|listFunctions}.
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @typedef ListFunctionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2alpha.ListFunctionsResponse} [response] ListFunctionsResponse
                         */
    
                        /**
                         * Calls ListFunctions.
                         * @function listFunctions
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IListFunctionsRequest} request ListFunctionsRequest message or plain object
                         * @param {google.cloud.functions.v2alpha.FunctionService.ListFunctionsCallback} callback Node-style callback called with the error, if any, and ListFunctionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.listFunctions = function listFunctions(request, callback) {
                            return this.rpcCall(listFunctions, $root.google.cloud.functions.v2alpha.ListFunctionsRequest, $root.google.cloud.functions.v2alpha.ListFunctionsResponse, request, callback);
                        }, "name", { value: "ListFunctions" });
    
                        /**
                         * Calls ListFunctions.
                         * @function listFunctions
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IListFunctionsRequest} request ListFunctionsRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2alpha.ListFunctionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2alpha.FunctionService|createFunction}.
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @typedef CreateFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateFunction.
                         * @function createFunction
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.ICreateFunctionRequest} request CreateFunctionRequest message or plain object
                         * @param {google.cloud.functions.v2alpha.FunctionService.CreateFunctionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.createFunction = function createFunction(request, callback) {
                            return this.rpcCall(createFunction, $root.google.cloud.functions.v2alpha.CreateFunctionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateFunction" });
    
                        /**
                         * Calls CreateFunction.
                         * @function createFunction
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.ICreateFunctionRequest} request CreateFunctionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2alpha.FunctionService|updateFunction}.
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @typedef UpdateFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateFunction.
                         * @function updateFunction
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IUpdateFunctionRequest} request UpdateFunctionRequest message or plain object
                         * @param {google.cloud.functions.v2alpha.FunctionService.UpdateFunctionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.updateFunction = function updateFunction(request, callback) {
                            return this.rpcCall(updateFunction, $root.google.cloud.functions.v2alpha.UpdateFunctionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateFunction" });
    
                        /**
                         * Calls UpdateFunction.
                         * @function updateFunction
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IUpdateFunctionRequest} request UpdateFunctionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2alpha.FunctionService|deleteFunction}.
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @typedef DeleteFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteFunction.
                         * @function deleteFunction
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IDeleteFunctionRequest} request DeleteFunctionRequest message or plain object
                         * @param {google.cloud.functions.v2alpha.FunctionService.DeleteFunctionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.deleteFunction = function deleteFunction(request, callback) {
                            return this.rpcCall(deleteFunction, $root.google.cloud.functions.v2alpha.DeleteFunctionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteFunction" });
    
                        /**
                         * Calls DeleteFunction.
                         * @function deleteFunction
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IDeleteFunctionRequest} request DeleteFunctionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2alpha.FunctionService|generateUploadUrl}.
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @typedef GenerateUploadUrlCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2alpha.GenerateUploadUrlResponse} [response] GenerateUploadUrlResponse
                         */
    
                        /**
                         * Calls GenerateUploadUrl.
                         * @function generateUploadUrl
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IGenerateUploadUrlRequest} request GenerateUploadUrlRequest message or plain object
                         * @param {google.cloud.functions.v2alpha.FunctionService.GenerateUploadUrlCallback} callback Node-style callback called with the error, if any, and GenerateUploadUrlResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.generateUploadUrl = function generateUploadUrl(request, callback) {
                            return this.rpcCall(generateUploadUrl, $root.google.cloud.functions.v2alpha.GenerateUploadUrlRequest, $root.google.cloud.functions.v2alpha.GenerateUploadUrlResponse, request, callback);
                        }, "name", { value: "GenerateUploadUrl" });
    
                        /**
                         * Calls GenerateUploadUrl.
                         * @function generateUploadUrl
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IGenerateUploadUrlRequest} request GenerateUploadUrlRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2alpha.GenerateUploadUrlResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2alpha.FunctionService|generateDownloadUrl}.
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @typedef GenerateDownloadUrlCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2alpha.GenerateDownloadUrlResponse} [response] GenerateDownloadUrlResponse
                         */
    
                        /**
                         * Calls GenerateDownloadUrl.
                         * @function generateDownloadUrl
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IGenerateDownloadUrlRequest} request GenerateDownloadUrlRequest message or plain object
                         * @param {google.cloud.functions.v2alpha.FunctionService.GenerateDownloadUrlCallback} callback Node-style callback called with the error, if any, and GenerateDownloadUrlResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.generateDownloadUrl = function generateDownloadUrl(request, callback) {
                            return this.rpcCall(generateDownloadUrl, $root.google.cloud.functions.v2alpha.GenerateDownloadUrlRequest, $root.google.cloud.functions.v2alpha.GenerateDownloadUrlResponse, request, callback);
                        }, "name", { value: "GenerateDownloadUrl" });
    
                        /**
                         * Calls GenerateDownloadUrl.
                         * @function generateDownloadUrl
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IGenerateDownloadUrlRequest} request GenerateDownloadUrlRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2alpha.GenerateDownloadUrlResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2alpha.FunctionService|listRuntimes}.
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @typedef ListRuntimesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2alpha.ListRuntimesResponse} [response] ListRuntimesResponse
                         */
    
                        /**
                         * Calls ListRuntimes.
                         * @function listRuntimes
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IListRuntimesRequest} request ListRuntimesRequest message or plain object
                         * @param {google.cloud.functions.v2alpha.FunctionService.ListRuntimesCallback} callback Node-style callback called with the error, if any, and ListRuntimesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.listRuntimes = function listRuntimes(request, callback) {
                            return this.rpcCall(listRuntimes, $root.google.cloud.functions.v2alpha.ListRuntimesRequest, $root.google.cloud.functions.v2alpha.ListRuntimesResponse, request, callback);
                        }, "name", { value: "ListRuntimes" });
    
                        /**
                         * Calls ListRuntimes.
                         * @function listRuntimes
                         * @memberof google.cloud.functions.v2alpha.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2alpha.IListRuntimesRequest} request ListRuntimesRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2alpha.ListRuntimesResponse>} Promise
                         * @variation 2
                         */
    
                        return FunctionService;
                    })();
    
                    /**
                     * Environment enum.
                     * @name google.cloud.functions.v2alpha.Environment
                     * @enum {number}
                     * @property {number} ENVIRONMENT_UNSPECIFIED=0 ENVIRONMENT_UNSPECIFIED value
                     * @property {number} GEN_1=1 GEN_1 value
                     * @property {number} GEN_2=2 GEN_2 value
                     */
                    v2alpha.Environment = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ENVIRONMENT_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "GEN_1"] = 1;
                        values[valuesById[2] = "GEN_2"] = 2;
                        return values;
                    })();
    
                    v2alpha.Function = (function() {
    
                        /**
                         * Properties of a Function.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IFunction
                         * @property {string|null} [name] Function name
                         * @property {string|null} [description] Function description
                         * @property {google.cloud.functions.v2alpha.IBuildConfig|null} [buildConfig] Function buildConfig
                         * @property {google.cloud.functions.v2alpha.IServiceConfig|null} [serviceConfig] Function serviceConfig
                         * @property {google.cloud.functions.v2alpha.IEventTrigger|null} [eventTrigger] Function eventTrigger
                         * @property {google.cloud.functions.v2alpha.Function.State|null} [state] Function state
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Function updateTime
                         * @property {Object.<string,string>|null} [labels] Function labels
                         * @property {Array.<google.cloud.functions.v2alpha.IStateMessage>|null} [stateMessages] Function stateMessages
                         * @property {google.cloud.functions.v2alpha.Environment|null} [environment] Function environment
                         * @property {string|null} [url] Function url
                         * @property {string|null} [kmsKeyName] Function kmsKeyName
                         */
    
                        /**
                         * Constructs a new Function.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a Function.
                         * @implements IFunction
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IFunction=} [properties] Properties to set
                         */
                        function Function(properties) {
                            this.labels = {};
                            this.stateMessages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Function name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         */
                        Function.prototype.name = "";
    
                        /**
                         * Function description.
                         * @member {string} description
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         */
                        Function.prototype.description = "";
    
                        /**
                         * Function buildConfig.
                         * @member {google.cloud.functions.v2alpha.IBuildConfig|null|undefined} buildConfig
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         */
                        Function.prototype.buildConfig = null;
    
                        /**
                         * Function serviceConfig.
                         * @member {google.cloud.functions.v2alpha.IServiceConfig|null|undefined} serviceConfig
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         */
                        Function.prototype.serviceConfig = null;
    
                        /**
                         * Function eventTrigger.
                         * @member {google.cloud.functions.v2alpha.IEventTrigger|null|undefined} eventTrigger
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         */
                        Function.prototype.eventTrigger = null;
    
                        /**
                         * Function state.
                         * @member {google.cloud.functions.v2alpha.Function.State} state
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         */
                        Function.prototype.state = 0;
    
                        /**
                         * Function updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         */
                        Function.prototype.updateTime = null;
    
                        /**
                         * Function labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         */
                        Function.prototype.labels = $util.emptyObject;
    
                        /**
                         * Function stateMessages.
                         * @member {Array.<google.cloud.functions.v2alpha.IStateMessage>} stateMessages
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         */
                        Function.prototype.stateMessages = $util.emptyArray;
    
                        /**
                         * Function environment.
                         * @member {google.cloud.functions.v2alpha.Environment} environment
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         */
                        Function.prototype.environment = 0;
    
                        /**
                         * Function url.
                         * @member {string} url
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         */
                        Function.prototype.url = "";
    
                        /**
                         * Function kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         */
                        Function.prototype.kmsKeyName = "";
    
                        /**
                         * Creates a new Function instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @static
                         * @param {google.cloud.functions.v2alpha.IFunction=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.Function} Function instance
                         */
                        Function.create = function create(properties) {
                            return new Function(properties);
                        };
    
                        /**
                         * Encodes the specified Function message. Does not implicitly {@link google.cloud.functions.v2alpha.Function.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @static
                         * @param {google.cloud.functions.v2alpha.IFunction} message Function message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Function.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.buildConfig != null && Object.hasOwnProperty.call(message, "buildConfig"))
                                $root.google.cloud.functions.v2alpha.BuildConfig.encode(message.buildConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.serviceConfig != null && Object.hasOwnProperty.call(message, "serviceConfig"))
                                $root.google.cloud.functions.v2alpha.ServiceConfig.encode(message.serviceConfig, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.eventTrigger != null && Object.hasOwnProperty.call(message, "eventTrigger"))
                                $root.google.cloud.functions.v2alpha.EventTrigger.encode(message.eventTrigger, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.stateMessages != null && message.stateMessages.length)
                                for (var i = 0; i < message.stateMessages.length; ++i)
                                    $root.google.cloud.functions.v2alpha.StateMessage.encode(message.stateMessages[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.environment != null && Object.hasOwnProperty.call(message, "environment"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.environment);
                            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.url);
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 25, wireType 2 =*/202).string(message.kmsKeyName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Function message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.Function.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @static
                         * @param {google.cloud.functions.v2alpha.IFunction} message Function message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Function.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Function message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.Function} Function
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Function.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.Function(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.buildConfig = $root.google.cloud.functions.v2alpha.BuildConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.serviceConfig = $root.google.cloud.functions.v2alpha.ServiceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.eventTrigger = $root.google.cloud.functions.v2alpha.EventTrigger.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 9: {
                                        if (!(message.stateMessages && message.stateMessages.length))
                                            message.stateMessages = [];
                                        message.stateMessages.push($root.google.cloud.functions.v2alpha.StateMessage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 10: {
                                        message.environment = reader.int32();
                                        break;
                                    }
                                case 14: {
                                        message.url = reader.string();
                                        break;
                                    }
                                case 25: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Function message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.Function} Function
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Function.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Function message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Function.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.buildConfig != null && message.hasOwnProperty("buildConfig")) {
                                var error = $root.google.cloud.functions.v2alpha.BuildConfig.verify(message.buildConfig);
                                if (error)
                                    return "buildConfig." + error;
                            }
                            if (message.serviceConfig != null && message.hasOwnProperty("serviceConfig")) {
                                var error = $root.google.cloud.functions.v2alpha.ServiceConfig.verify(message.serviceConfig);
                                if (error)
                                    return "serviceConfig." + error;
                            }
                            if (message.eventTrigger != null && message.hasOwnProperty("eventTrigger")) {
                                var error = $root.google.cloud.functions.v2alpha.EventTrigger.verify(message.eventTrigger);
                                if (error)
                                    return "eventTrigger." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.stateMessages != null && message.hasOwnProperty("stateMessages")) {
                                if (!Array.isArray(message.stateMessages))
                                    return "stateMessages: array expected";
                                for (var i = 0; i < message.stateMessages.length; ++i) {
                                    var error = $root.google.cloud.functions.v2alpha.StateMessage.verify(message.stateMessages[i]);
                                    if (error)
                                        return "stateMessages." + error;
                                }
                            }
                            if (message.environment != null && message.hasOwnProperty("environment"))
                                switch (message.environment) {
                                default:
                                    return "environment: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Function message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.Function} Function
                         */
                        Function.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.Function)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.Function();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.buildConfig != null) {
                                if (typeof object.buildConfig !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.Function.buildConfig: object expected");
                                message.buildConfig = $root.google.cloud.functions.v2alpha.BuildConfig.fromObject(object.buildConfig);
                            }
                            if (object.serviceConfig != null) {
                                if (typeof object.serviceConfig !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.Function.serviceConfig: object expected");
                                message.serviceConfig = $root.google.cloud.functions.v2alpha.ServiceConfig.fromObject(object.serviceConfig);
                            }
                            if (object.eventTrigger != null) {
                                if (typeof object.eventTrigger !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.Function.eventTrigger: object expected");
                                message.eventTrigger = $root.google.cloud.functions.v2alpha.EventTrigger.fromObject(object.eventTrigger);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.state = 1;
                                break;
                            case "FAILED":
                            case 2:
                                message.state = 2;
                                break;
                            case "DEPLOYING":
                            case 3:
                                message.state = 3;
                                break;
                            case "DELETING":
                            case 4:
                                message.state = 4;
                                break;
                            case "UNKNOWN":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.Function.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.Function.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.stateMessages) {
                                if (!Array.isArray(object.stateMessages))
                                    throw TypeError(".google.cloud.functions.v2alpha.Function.stateMessages: array expected");
                                message.stateMessages = [];
                                for (var i = 0; i < object.stateMessages.length; ++i) {
                                    if (typeof object.stateMessages[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2alpha.Function.stateMessages: object expected");
                                    message.stateMessages[i] = $root.google.cloud.functions.v2alpha.StateMessage.fromObject(object.stateMessages[i]);
                                }
                            }
                            switch (object.environment) {
                            default:
                                if (typeof object.environment === "number") {
                                    message.environment = object.environment;
                                    break;
                                }
                                break;
                            case "ENVIRONMENT_UNSPECIFIED":
                            case 0:
                                message.environment = 0;
                                break;
                            case "GEN_1":
                            case 1:
                                message.environment = 1;
                                break;
                            case "GEN_2":
                            case 2:
                                message.environment = 2;
                                break;
                            }
                            if (object.url != null)
                                message.url = String(object.url);
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Function message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @static
                         * @param {google.cloud.functions.v2alpha.Function} message Function
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Function.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.stateMessages = [];
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.buildConfig = null;
                                object.serviceConfig = null;
                                object.eventTrigger = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.updateTime = null;
                                object.environment = options.enums === String ? "ENVIRONMENT_UNSPECIFIED" : 0;
                                object.url = "";
                                object.kmsKeyName = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.buildConfig != null && message.hasOwnProperty("buildConfig"))
                                object.buildConfig = $root.google.cloud.functions.v2alpha.BuildConfig.toObject(message.buildConfig, options);
                            if (message.serviceConfig != null && message.hasOwnProperty("serviceConfig"))
                                object.serviceConfig = $root.google.cloud.functions.v2alpha.ServiceConfig.toObject(message.serviceConfig, options);
                            if (message.eventTrigger != null && message.hasOwnProperty("eventTrigger"))
                                object.eventTrigger = $root.google.cloud.functions.v2alpha.EventTrigger.toObject(message.eventTrigger, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.functions.v2alpha.Function.State[message.state] === undefined ? message.state : $root.google.cloud.functions.v2alpha.Function.State[message.state] : message.state;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.stateMessages && message.stateMessages.length) {
                                object.stateMessages = [];
                                for (var j = 0; j < message.stateMessages.length; ++j)
                                    object.stateMessages[j] = $root.google.cloud.functions.v2alpha.StateMessage.toObject(message.stateMessages[j], options);
                            }
                            if (message.environment != null && message.hasOwnProperty("environment"))
                                object.environment = options.enums === String ? $root.google.cloud.functions.v2alpha.Environment[message.environment] === undefined ? message.environment : $root.google.cloud.functions.v2alpha.Environment[message.environment] : message.environment;
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            return object;
                        };
    
                        /**
                         * Converts this Function to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Function.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Function
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.Function
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Function.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.Function";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.functions.v2alpha.Function.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=1 ACTIVE value
                         * @property {number} FAILED=2 FAILED value
                         * @property {number} DEPLOYING=3 DEPLOYING value
                         * @property {number} DELETING=4 DELETING value
                         * @property {number} UNKNOWN=5 UNKNOWN value
                         */
                        Function.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ACTIVE"] = 1;
                            values[valuesById[2] = "FAILED"] = 2;
                            values[valuesById[3] = "DEPLOYING"] = 3;
                            values[valuesById[4] = "DELETING"] = 4;
                            values[valuesById[5] = "UNKNOWN"] = 5;
                            return values;
                        })();
    
                        return Function;
                    })();
    
                    v2alpha.StateMessage = (function() {
    
                        /**
                         * Properties of a StateMessage.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IStateMessage
                         * @property {google.cloud.functions.v2alpha.StateMessage.Severity|null} [severity] StateMessage severity
                         * @property {string|null} [type] StateMessage type
                         * @property {string|null} [message] StateMessage message
                         */
    
                        /**
                         * Constructs a new StateMessage.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a StateMessage.
                         * @implements IStateMessage
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IStateMessage=} [properties] Properties to set
                         */
                        function StateMessage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StateMessage severity.
                         * @member {google.cloud.functions.v2alpha.StateMessage.Severity} severity
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @instance
                         */
                        StateMessage.prototype.severity = 0;
    
                        /**
                         * StateMessage type.
                         * @member {string} type
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @instance
                         */
                        StateMessage.prototype.type = "";
    
                        /**
                         * StateMessage message.
                         * @member {string} message
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @instance
                         */
                        StateMessage.prototype.message = "";
    
                        /**
                         * Creates a new StateMessage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @static
                         * @param {google.cloud.functions.v2alpha.IStateMessage=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.StateMessage} StateMessage instance
                         */
                        StateMessage.create = function create(properties) {
                            return new StateMessage(properties);
                        };
    
                        /**
                         * Encodes the specified StateMessage message. Does not implicitly {@link google.cloud.functions.v2alpha.StateMessage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @static
                         * @param {google.cloud.functions.v2alpha.IStateMessage} message StateMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StateMessage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.severity != null && Object.hasOwnProperty.call(message, "severity"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.severity);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.message);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StateMessage message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.StateMessage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @static
                         * @param {google.cloud.functions.v2alpha.IStateMessage} message StateMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StateMessage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StateMessage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.StateMessage} StateMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StateMessage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.StateMessage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.severity = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.message = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StateMessage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.StateMessage} StateMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StateMessage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StateMessage message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StateMessage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.severity != null && message.hasOwnProperty("severity"))
                                switch (message.severity) {
                                default:
                                    return "severity: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.type != null && message.hasOwnProperty("type"))
                                if (!$util.isString(message.type))
                                    return "type: string expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StateMessage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.StateMessage} StateMessage
                         */
                        StateMessage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.StateMessage)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.StateMessage();
                            switch (object.severity) {
                            default:
                                if (typeof object.severity === "number") {
                                    message.severity = object.severity;
                                    break;
                                }
                                break;
                            case "SEVERITY_UNSPECIFIED":
                            case 0:
                                message.severity = 0;
                                break;
                            case "ERROR":
                            case 1:
                                message.severity = 1;
                                break;
                            case "WARNING":
                            case 2:
                                message.severity = 2;
                                break;
                            case "INFO":
                            case 3:
                                message.severity = 3;
                                break;
                            }
                            if (object.type != null)
                                message.type = String(object.type);
                            if (object.message != null)
                                message.message = String(object.message);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StateMessage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @static
                         * @param {google.cloud.functions.v2alpha.StateMessage} message StateMessage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StateMessage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.severity = options.enums === String ? "SEVERITY_UNSPECIFIED" : 0;
                                object.type = "";
                                object.message = "";
                            }
                            if (message.severity != null && message.hasOwnProperty("severity"))
                                object.severity = options.enums === String ? $root.google.cloud.functions.v2alpha.StateMessage.Severity[message.severity] === undefined ? message.severity : $root.google.cloud.functions.v2alpha.StateMessage.Severity[message.severity] : message.severity;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = message.type;
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            return object;
                        };
    
                        /**
                         * Converts this StateMessage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StateMessage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StateMessage
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.StateMessage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StateMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.StateMessage";
                        };
    
                        /**
                         * Severity enum.
                         * @name google.cloud.functions.v2alpha.StateMessage.Severity
                         * @enum {number}
                         * @property {number} SEVERITY_UNSPECIFIED=0 SEVERITY_UNSPECIFIED value
                         * @property {number} ERROR=1 ERROR value
                         * @property {number} WARNING=2 WARNING value
                         * @property {number} INFO=3 INFO value
                         */
                        StateMessage.Severity = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SEVERITY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ERROR"] = 1;
                            values[valuesById[2] = "WARNING"] = 2;
                            values[valuesById[3] = "INFO"] = 3;
                            return values;
                        })();
    
                        return StateMessage;
                    })();
    
                    v2alpha.StorageSource = (function() {
    
                        /**
                         * Properties of a StorageSource.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IStorageSource
                         * @property {string|null} [bucket] StorageSource bucket
                         * @property {string|null} [object] StorageSource object
                         * @property {number|Long|null} [generation] StorageSource generation
                         */
    
                        /**
                         * Constructs a new StorageSource.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a StorageSource.
                         * @implements IStorageSource
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IStorageSource=} [properties] Properties to set
                         */
                        function StorageSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StorageSource bucket.
                         * @member {string} bucket
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.bucket = "";
    
                        /**
                         * StorageSource object.
                         * @member {string} object
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.object = "";
    
                        /**
                         * StorageSource generation.
                         * @member {number|Long} generation
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.generation = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new StorageSource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @static
                         * @param {google.cloud.functions.v2alpha.IStorageSource=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.StorageSource} StorageSource instance
                         */
                        StorageSource.create = function create(properties) {
                            return new StorageSource(properties);
                        };
    
                        /**
                         * Encodes the specified StorageSource message. Does not implicitly {@link google.cloud.functions.v2alpha.StorageSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @static
                         * @param {google.cloud.functions.v2alpha.IStorageSource} message StorageSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StorageSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.bucket != null && Object.hasOwnProperty.call(message, "bucket"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.bucket);
                            if (message.object != null && Object.hasOwnProperty.call(message, "object"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.object);
                            if (message.generation != null && Object.hasOwnProperty.call(message, "generation"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.generation);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StorageSource message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.StorageSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @static
                         * @param {google.cloud.functions.v2alpha.IStorageSource} message StorageSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StorageSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StorageSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.StorageSource} StorageSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StorageSource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.StorageSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.bucket = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.object = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.generation = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StorageSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.StorageSource} StorageSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StorageSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StorageSource message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StorageSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.bucket != null && message.hasOwnProperty("bucket"))
                                if (!$util.isString(message.bucket))
                                    return "bucket: string expected";
                            if (message.object != null && message.hasOwnProperty("object"))
                                if (!$util.isString(message.object))
                                    return "object: string expected";
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (!$util.isInteger(message.generation) && !(message.generation && $util.isInteger(message.generation.low) && $util.isInteger(message.generation.high)))
                                    return "generation: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates a StorageSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.StorageSource} StorageSource
                         */
                        StorageSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.StorageSource)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.StorageSource();
                            if (object.bucket != null)
                                message.bucket = String(object.bucket);
                            if (object.object != null)
                                message.object = String(object.object);
                            if (object.generation != null)
                                if ($util.Long)
                                    (message.generation = $util.Long.fromValue(object.generation)).unsigned = false;
                                else if (typeof object.generation === "string")
                                    message.generation = parseInt(object.generation, 10);
                                else if (typeof object.generation === "number")
                                    message.generation = object.generation;
                                else if (typeof object.generation === "object")
                                    message.generation = new $util.LongBits(object.generation.low >>> 0, object.generation.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StorageSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @static
                         * @param {google.cloud.functions.v2alpha.StorageSource} message StorageSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StorageSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.bucket = "";
                                object.object = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.generation = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.generation = options.longs === String ? "0" : 0;
                            }
                            if (message.bucket != null && message.hasOwnProperty("bucket"))
                                object.bucket = message.bucket;
                            if (message.object != null && message.hasOwnProperty("object"))
                                object.object = message.object;
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (typeof message.generation === "number")
                                    object.generation = options.longs === String ? String(message.generation) : message.generation;
                                else
                                    object.generation = options.longs === String ? $util.Long.prototype.toString.call(message.generation) : options.longs === Number ? new $util.LongBits(message.generation.low >>> 0, message.generation.high >>> 0).toNumber() : message.generation;
                            return object;
                        };
    
                        /**
                         * Converts this StorageSource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StorageSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StorageSource
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.StorageSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StorageSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.StorageSource";
                        };
    
                        return StorageSource;
                    })();
    
                    v2alpha.RepoSource = (function() {
    
                        /**
                         * Properties of a RepoSource.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IRepoSource
                         * @property {string|null} [branchName] RepoSource branchName
                         * @property {string|null} [tagName] RepoSource tagName
                         * @property {string|null} [commitSha] RepoSource commitSha
                         * @property {string|null} [projectId] RepoSource projectId
                         * @property {string|null} [repoName] RepoSource repoName
                         * @property {string|null} [dir] RepoSource dir
                         * @property {boolean|null} [invertRegex] RepoSource invertRegex
                         */
    
                        /**
                         * Constructs a new RepoSource.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a RepoSource.
                         * @implements IRepoSource
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IRepoSource=} [properties] Properties to set
                         */
                        function RepoSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RepoSource branchName.
                         * @member {string|null|undefined} branchName
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.branchName = null;
    
                        /**
                         * RepoSource tagName.
                         * @member {string|null|undefined} tagName
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.tagName = null;
    
                        /**
                         * RepoSource commitSha.
                         * @member {string|null|undefined} commitSha
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.commitSha = null;
    
                        /**
                         * RepoSource projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.projectId = "";
    
                        /**
                         * RepoSource repoName.
                         * @member {string} repoName
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.repoName = "";
    
                        /**
                         * RepoSource dir.
                         * @member {string} dir
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.dir = "";
    
                        /**
                         * RepoSource invertRegex.
                         * @member {boolean} invertRegex
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.invertRegex = false;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RepoSource revision.
                         * @member {"branchName"|"tagName"|"commitSha"|undefined} revision
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @instance
                         */
                        Object.defineProperty(RepoSource.prototype, "revision", {
                            get: $util.oneOfGetter($oneOfFields = ["branchName", "tagName", "commitSha"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RepoSource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @static
                         * @param {google.cloud.functions.v2alpha.IRepoSource=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.RepoSource} RepoSource instance
                         */
                        RepoSource.create = function create(properties) {
                            return new RepoSource(properties);
                        };
    
                        /**
                         * Encodes the specified RepoSource message. Does not implicitly {@link google.cloud.functions.v2alpha.RepoSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @static
                         * @param {google.cloud.functions.v2alpha.IRepoSource} message RepoSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepoSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.repoName != null && Object.hasOwnProperty.call(message, "repoName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.repoName);
                            if (message.branchName != null && Object.hasOwnProperty.call(message, "branchName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.branchName);
                            if (message.tagName != null && Object.hasOwnProperty.call(message, "tagName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.tagName);
                            if (message.commitSha != null && Object.hasOwnProperty.call(message, "commitSha"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.commitSha);
                            if (message.dir != null && Object.hasOwnProperty.call(message, "dir"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.dir);
                            if (message.invertRegex != null && Object.hasOwnProperty.call(message, "invertRegex"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.invertRegex);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RepoSource message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.RepoSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @static
                         * @param {google.cloud.functions.v2alpha.IRepoSource} message RepoSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepoSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RepoSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.RepoSource} RepoSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepoSource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.RepoSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.branchName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.tagName = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.commitSha = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.repoName = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.dir = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.invertRegex = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RepoSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.RepoSource} RepoSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepoSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RepoSource message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RepoSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.branchName != null && message.hasOwnProperty("branchName")) {
                                properties.revision = 1;
                                if (!$util.isString(message.branchName))
                                    return "branchName: string expected";
                            }
                            if (message.tagName != null && message.hasOwnProperty("tagName")) {
                                if (properties.revision === 1)
                                    return "revision: multiple values";
                                properties.revision = 1;
                                if (!$util.isString(message.tagName))
                                    return "tagName: string expected";
                            }
                            if (message.commitSha != null && message.hasOwnProperty("commitSha")) {
                                if (properties.revision === 1)
                                    return "revision: multiple values";
                                properties.revision = 1;
                                if (!$util.isString(message.commitSha))
                                    return "commitSha: string expected";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.repoName != null && message.hasOwnProperty("repoName"))
                                if (!$util.isString(message.repoName))
                                    return "repoName: string expected";
                            if (message.dir != null && message.hasOwnProperty("dir"))
                                if (!$util.isString(message.dir))
                                    return "dir: string expected";
                            if (message.invertRegex != null && message.hasOwnProperty("invertRegex"))
                                if (typeof message.invertRegex !== "boolean")
                                    return "invertRegex: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RepoSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.RepoSource} RepoSource
                         */
                        RepoSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.RepoSource)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.RepoSource();
                            if (object.branchName != null)
                                message.branchName = String(object.branchName);
                            if (object.tagName != null)
                                message.tagName = String(object.tagName);
                            if (object.commitSha != null)
                                message.commitSha = String(object.commitSha);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.repoName != null)
                                message.repoName = String(object.repoName);
                            if (object.dir != null)
                                message.dir = String(object.dir);
                            if (object.invertRegex != null)
                                message.invertRegex = Boolean(object.invertRegex);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RepoSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @static
                         * @param {google.cloud.functions.v2alpha.RepoSource} message RepoSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RepoSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.repoName = "";
                                object.dir = "";
                                object.invertRegex = false;
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.repoName != null && message.hasOwnProperty("repoName"))
                                object.repoName = message.repoName;
                            if (message.branchName != null && message.hasOwnProperty("branchName")) {
                                object.branchName = message.branchName;
                                if (options.oneofs)
                                    object.revision = "branchName";
                            }
                            if (message.tagName != null && message.hasOwnProperty("tagName")) {
                                object.tagName = message.tagName;
                                if (options.oneofs)
                                    object.revision = "tagName";
                            }
                            if (message.commitSha != null && message.hasOwnProperty("commitSha")) {
                                object.commitSha = message.commitSha;
                                if (options.oneofs)
                                    object.revision = "commitSha";
                            }
                            if (message.dir != null && message.hasOwnProperty("dir"))
                                object.dir = message.dir;
                            if (message.invertRegex != null && message.hasOwnProperty("invertRegex"))
                                object.invertRegex = message.invertRegex;
                            return object;
                        };
    
                        /**
                         * Converts this RepoSource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RepoSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RepoSource
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.RepoSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RepoSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.RepoSource";
                        };
    
                        return RepoSource;
                    })();
    
                    v2alpha.Source = (function() {
    
                        /**
                         * Properties of a Source.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface ISource
                         * @property {google.cloud.functions.v2alpha.IStorageSource|null} [storageSource] Source storageSource
                         * @property {google.cloud.functions.v2alpha.IRepoSource|null} [repoSource] Source repoSource
                         */
    
                        /**
                         * Constructs a new Source.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a Source.
                         * @implements ISource
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.ISource=} [properties] Properties to set
                         */
                        function Source(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Source storageSource.
                         * @member {google.cloud.functions.v2alpha.IStorageSource|null|undefined} storageSource
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @instance
                         */
                        Source.prototype.storageSource = null;
    
                        /**
                         * Source repoSource.
                         * @member {google.cloud.functions.v2alpha.IRepoSource|null|undefined} repoSource
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @instance
                         */
                        Source.prototype.repoSource = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Source source.
                         * @member {"storageSource"|"repoSource"|undefined} source
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @instance
                         */
                        Object.defineProperty(Source.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["storageSource", "repoSource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Source instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @static
                         * @param {google.cloud.functions.v2alpha.ISource=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.Source} Source instance
                         */
                        Source.create = function create(properties) {
                            return new Source(properties);
                        };
    
                        /**
                         * Encodes the specified Source message. Does not implicitly {@link google.cloud.functions.v2alpha.Source.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @static
                         * @param {google.cloud.functions.v2alpha.ISource} message Source message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Source.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.storageSource != null && Object.hasOwnProperty.call(message, "storageSource"))
                                $root.google.cloud.functions.v2alpha.StorageSource.encode(message.storageSource, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.repoSource != null && Object.hasOwnProperty.call(message, "repoSource"))
                                $root.google.cloud.functions.v2alpha.RepoSource.encode(message.repoSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Source message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.Source.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @static
                         * @param {google.cloud.functions.v2alpha.ISource} message Source message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Source.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Source message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.Source} Source
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Source.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.Source();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.storageSource = $root.google.cloud.functions.v2alpha.StorageSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.repoSource = $root.google.cloud.functions.v2alpha.RepoSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Source message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.Source} Source
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Source.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Source message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Source.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.storageSource != null && message.hasOwnProperty("storageSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.functions.v2alpha.StorageSource.verify(message.storageSource);
                                    if (error)
                                        return "storageSource." + error;
                                }
                            }
                            if (message.repoSource != null && message.hasOwnProperty("repoSource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.functions.v2alpha.RepoSource.verify(message.repoSource);
                                    if (error)
                                        return "repoSource." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Source message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.Source} Source
                         */
                        Source.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.Source)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.Source();
                            if (object.storageSource != null) {
                                if (typeof object.storageSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.Source.storageSource: object expected");
                                message.storageSource = $root.google.cloud.functions.v2alpha.StorageSource.fromObject(object.storageSource);
                            }
                            if (object.repoSource != null) {
                                if (typeof object.repoSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.Source.repoSource: object expected");
                                message.repoSource = $root.google.cloud.functions.v2alpha.RepoSource.fromObject(object.repoSource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Source message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @static
                         * @param {google.cloud.functions.v2alpha.Source} message Source
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Source.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.storageSource != null && message.hasOwnProperty("storageSource")) {
                                object.storageSource = $root.google.cloud.functions.v2alpha.StorageSource.toObject(message.storageSource, options);
                                if (options.oneofs)
                                    object.source = "storageSource";
                            }
                            if (message.repoSource != null && message.hasOwnProperty("repoSource")) {
                                object.repoSource = $root.google.cloud.functions.v2alpha.RepoSource.toObject(message.repoSource, options);
                                if (options.oneofs)
                                    object.source = "repoSource";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Source to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Source.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Source
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.Source
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Source.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.Source";
                        };
    
                        return Source;
                    })();
    
                    v2alpha.SourceProvenance = (function() {
    
                        /**
                         * Properties of a SourceProvenance.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface ISourceProvenance
                         * @property {google.cloud.functions.v2alpha.IStorageSource|null} [resolvedStorageSource] SourceProvenance resolvedStorageSource
                         * @property {google.cloud.functions.v2alpha.IRepoSource|null} [resolvedRepoSource] SourceProvenance resolvedRepoSource
                         */
    
                        /**
                         * Constructs a new SourceProvenance.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a SourceProvenance.
                         * @implements ISourceProvenance
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.ISourceProvenance=} [properties] Properties to set
                         */
                        function SourceProvenance(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SourceProvenance resolvedStorageSource.
                         * @member {google.cloud.functions.v2alpha.IStorageSource|null|undefined} resolvedStorageSource
                         * @memberof google.cloud.functions.v2alpha.SourceProvenance
                         * @instance
                         */
                        SourceProvenance.prototype.resolvedStorageSource = null;
    
                        /**
                         * SourceProvenance resolvedRepoSource.
                         * @member {google.cloud.functions.v2alpha.IRepoSource|null|undefined} resolvedRepoSource
                         * @memberof google.cloud.functions.v2alpha.SourceProvenance
                         * @instance
                         */
                        SourceProvenance.prototype.resolvedRepoSource = null;
    
                        /**
                         * Creates a new SourceProvenance instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.SourceProvenance
                         * @static
                         * @param {google.cloud.functions.v2alpha.ISourceProvenance=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.SourceProvenance} SourceProvenance instance
                         */
                        SourceProvenance.create = function create(properties) {
                            return new SourceProvenance(properties);
                        };
    
                        /**
                         * Encodes the specified SourceProvenance message. Does not implicitly {@link google.cloud.functions.v2alpha.SourceProvenance.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.SourceProvenance
                         * @static
                         * @param {google.cloud.functions.v2alpha.ISourceProvenance} message SourceProvenance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceProvenance.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resolvedStorageSource != null && Object.hasOwnProperty.call(message, "resolvedStorageSource"))
                                $root.google.cloud.functions.v2alpha.StorageSource.encode(message.resolvedStorageSource, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.resolvedRepoSource != null && Object.hasOwnProperty.call(message, "resolvedRepoSource"))
                                $root.google.cloud.functions.v2alpha.RepoSource.encode(message.resolvedRepoSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SourceProvenance message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.SourceProvenance.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.SourceProvenance
                         * @static
                         * @param {google.cloud.functions.v2alpha.ISourceProvenance} message SourceProvenance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceProvenance.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SourceProvenance message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.SourceProvenance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.SourceProvenance} SourceProvenance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceProvenance.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.SourceProvenance();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.resolvedStorageSource = $root.google.cloud.functions.v2alpha.StorageSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.resolvedRepoSource = $root.google.cloud.functions.v2alpha.RepoSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SourceProvenance message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.SourceProvenance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.SourceProvenance} SourceProvenance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceProvenance.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SourceProvenance message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.SourceProvenance
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SourceProvenance.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resolvedStorageSource != null && message.hasOwnProperty("resolvedStorageSource")) {
                                var error = $root.google.cloud.functions.v2alpha.StorageSource.verify(message.resolvedStorageSource);
                                if (error)
                                    return "resolvedStorageSource." + error;
                            }
                            if (message.resolvedRepoSource != null && message.hasOwnProperty("resolvedRepoSource")) {
                                var error = $root.google.cloud.functions.v2alpha.RepoSource.verify(message.resolvedRepoSource);
                                if (error)
                                    return "resolvedRepoSource." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SourceProvenance message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.SourceProvenance
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.SourceProvenance} SourceProvenance
                         */
                        SourceProvenance.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.SourceProvenance)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.SourceProvenance();
                            if (object.resolvedStorageSource != null) {
                                if (typeof object.resolvedStorageSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.SourceProvenance.resolvedStorageSource: object expected");
                                message.resolvedStorageSource = $root.google.cloud.functions.v2alpha.StorageSource.fromObject(object.resolvedStorageSource);
                            }
                            if (object.resolvedRepoSource != null) {
                                if (typeof object.resolvedRepoSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.SourceProvenance.resolvedRepoSource: object expected");
                                message.resolvedRepoSource = $root.google.cloud.functions.v2alpha.RepoSource.fromObject(object.resolvedRepoSource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SourceProvenance message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.SourceProvenance
                         * @static
                         * @param {google.cloud.functions.v2alpha.SourceProvenance} message SourceProvenance
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SourceProvenance.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resolvedStorageSource = null;
                                object.resolvedRepoSource = null;
                            }
                            if (message.resolvedStorageSource != null && message.hasOwnProperty("resolvedStorageSource"))
                                object.resolvedStorageSource = $root.google.cloud.functions.v2alpha.StorageSource.toObject(message.resolvedStorageSource, options);
                            if (message.resolvedRepoSource != null && message.hasOwnProperty("resolvedRepoSource"))
                                object.resolvedRepoSource = $root.google.cloud.functions.v2alpha.RepoSource.toObject(message.resolvedRepoSource, options);
                            return object;
                        };
    
                        /**
                         * Converts this SourceProvenance to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.SourceProvenance
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SourceProvenance.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SourceProvenance
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.SourceProvenance
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SourceProvenance.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.SourceProvenance";
                        };
    
                        return SourceProvenance;
                    })();
    
                    v2alpha.BuildConfig = (function() {
    
                        /**
                         * Properties of a BuildConfig.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IBuildConfig
                         * @property {string|null} [build] BuildConfig build
                         * @property {string|null} [runtime] BuildConfig runtime
                         * @property {string|null} [entryPoint] BuildConfig entryPoint
                         * @property {google.cloud.functions.v2alpha.ISource|null} [source] BuildConfig source
                         * @property {google.cloud.functions.v2alpha.ISourceProvenance|null} [sourceProvenance] BuildConfig sourceProvenance
                         * @property {string|null} [workerPool] BuildConfig workerPool
                         * @property {Object.<string,string>|null} [environmentVariables] BuildConfig environmentVariables
                         * @property {google.cloud.functions.v2alpha.BuildConfig.DockerRegistry|null} [dockerRegistry] BuildConfig dockerRegistry
                         * @property {string|null} [dockerRepository] BuildConfig dockerRepository
                         */
    
                        /**
                         * Constructs a new BuildConfig.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a BuildConfig.
                         * @implements IBuildConfig
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IBuildConfig=} [properties] Properties to set
                         */
                        function BuildConfig(properties) {
                            this.environmentVariables = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BuildConfig build.
                         * @member {string} build
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.build = "";
    
                        /**
                         * BuildConfig runtime.
                         * @member {string} runtime
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.runtime = "";
    
                        /**
                         * BuildConfig entryPoint.
                         * @member {string} entryPoint
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.entryPoint = "";
    
                        /**
                         * BuildConfig source.
                         * @member {google.cloud.functions.v2alpha.ISource|null|undefined} source
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.source = null;
    
                        /**
                         * BuildConfig sourceProvenance.
                         * @member {google.cloud.functions.v2alpha.ISourceProvenance|null|undefined} sourceProvenance
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.sourceProvenance = null;
    
                        /**
                         * BuildConfig workerPool.
                         * @member {string} workerPool
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.workerPool = "";
    
                        /**
                         * BuildConfig environmentVariables.
                         * @member {Object.<string,string>} environmentVariables
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.environmentVariables = $util.emptyObject;
    
                        /**
                         * BuildConfig dockerRegistry.
                         * @member {google.cloud.functions.v2alpha.BuildConfig.DockerRegistry} dockerRegistry
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.dockerRegistry = 0;
    
                        /**
                         * BuildConfig dockerRepository.
                         * @member {string} dockerRepository
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.dockerRepository = "";
    
                        /**
                         * Creates a new BuildConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @static
                         * @param {google.cloud.functions.v2alpha.IBuildConfig=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.BuildConfig} BuildConfig instance
                         */
                        BuildConfig.create = function create(properties) {
                            return new BuildConfig(properties);
                        };
    
                        /**
                         * Encodes the specified BuildConfig message. Does not implicitly {@link google.cloud.functions.v2alpha.BuildConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @static
                         * @param {google.cloud.functions.v2alpha.IBuildConfig} message BuildConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.build != null && Object.hasOwnProperty.call(message, "build"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.build);
                            if (message.runtime != null && Object.hasOwnProperty.call(message, "runtime"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.runtime);
                            if (message.entryPoint != null && Object.hasOwnProperty.call(message, "entryPoint"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.entryPoint);
                            if (message.source != null && Object.hasOwnProperty.call(message, "source"))
                                $root.google.cloud.functions.v2alpha.Source.encode(message.source, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.workerPool != null && Object.hasOwnProperty.call(message, "workerPool"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.workerPool);
                            if (message.environmentVariables != null && Object.hasOwnProperty.call(message, "environmentVariables"))
                                for (var keys = Object.keys(message.environmentVariables), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.environmentVariables[keys[i]]).ldelim();
                            if (message.dockerRepository != null && Object.hasOwnProperty.call(message, "dockerRepository"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.dockerRepository);
                            if (message.sourceProvenance != null && Object.hasOwnProperty.call(message, "sourceProvenance"))
                                $root.google.cloud.functions.v2alpha.SourceProvenance.encode(message.sourceProvenance, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.dockerRegistry != null && Object.hasOwnProperty.call(message, "dockerRegistry"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.dockerRegistry);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BuildConfig message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.BuildConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @static
                         * @param {google.cloud.functions.v2alpha.IBuildConfig} message BuildConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BuildConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.BuildConfig} BuildConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.BuildConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.build = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.runtime = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.entryPoint = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.source = $root.google.cloud.functions.v2alpha.Source.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.sourceProvenance = $root.google.cloud.functions.v2alpha.SourceProvenance.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.workerPool = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (message.environmentVariables === $util.emptyObject)
                                            message.environmentVariables = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.environmentVariables[key] = value;
                                        break;
                                    }
                                case 10: {
                                        message.dockerRegistry = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.dockerRepository = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BuildConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.BuildConfig} BuildConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BuildConfig message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BuildConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.build != null && message.hasOwnProperty("build"))
                                if (!$util.isString(message.build))
                                    return "build: string expected";
                            if (message.runtime != null && message.hasOwnProperty("runtime"))
                                if (!$util.isString(message.runtime))
                                    return "runtime: string expected";
                            if (message.entryPoint != null && message.hasOwnProperty("entryPoint"))
                                if (!$util.isString(message.entryPoint))
                                    return "entryPoint: string expected";
                            if (message.source != null && message.hasOwnProperty("source")) {
                                var error = $root.google.cloud.functions.v2alpha.Source.verify(message.source);
                                if (error)
                                    return "source." + error;
                            }
                            if (message.sourceProvenance != null && message.hasOwnProperty("sourceProvenance")) {
                                var error = $root.google.cloud.functions.v2alpha.SourceProvenance.verify(message.sourceProvenance);
                                if (error)
                                    return "sourceProvenance." + error;
                            }
                            if (message.workerPool != null && message.hasOwnProperty("workerPool"))
                                if (!$util.isString(message.workerPool))
                                    return "workerPool: string expected";
                            if (message.environmentVariables != null && message.hasOwnProperty("environmentVariables")) {
                                if (!$util.isObject(message.environmentVariables))
                                    return "environmentVariables: object expected";
                                var key = Object.keys(message.environmentVariables);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.environmentVariables[key[i]]))
                                        return "environmentVariables: string{k:string} expected";
                            }
                            if (message.dockerRegistry != null && message.hasOwnProperty("dockerRegistry"))
                                switch (message.dockerRegistry) {
                                default:
                                    return "dockerRegistry: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.dockerRepository != null && message.hasOwnProperty("dockerRepository"))
                                if (!$util.isString(message.dockerRepository))
                                    return "dockerRepository: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BuildConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.BuildConfig} BuildConfig
                         */
                        BuildConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.BuildConfig)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.BuildConfig();
                            if (object.build != null)
                                message.build = String(object.build);
                            if (object.runtime != null)
                                message.runtime = String(object.runtime);
                            if (object.entryPoint != null)
                                message.entryPoint = String(object.entryPoint);
                            if (object.source != null) {
                                if (typeof object.source !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.BuildConfig.source: object expected");
                                message.source = $root.google.cloud.functions.v2alpha.Source.fromObject(object.source);
                            }
                            if (object.sourceProvenance != null) {
                                if (typeof object.sourceProvenance !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.BuildConfig.sourceProvenance: object expected");
                                message.sourceProvenance = $root.google.cloud.functions.v2alpha.SourceProvenance.fromObject(object.sourceProvenance);
                            }
                            if (object.workerPool != null)
                                message.workerPool = String(object.workerPool);
                            if (object.environmentVariables) {
                                if (typeof object.environmentVariables !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.BuildConfig.environmentVariables: object expected");
                                message.environmentVariables = {};
                                for (var keys = Object.keys(object.environmentVariables), i = 0; i < keys.length; ++i)
                                    message.environmentVariables[keys[i]] = String(object.environmentVariables[keys[i]]);
                            }
                            switch (object.dockerRegistry) {
                            default:
                                if (typeof object.dockerRegistry === "number") {
                                    message.dockerRegistry = object.dockerRegistry;
                                    break;
                                }
                                break;
                            case "DOCKER_REGISTRY_UNSPECIFIED":
                            case 0:
                                message.dockerRegistry = 0;
                                break;
                            case "CONTAINER_REGISTRY":
                            case 1:
                                message.dockerRegistry = 1;
                                break;
                            case "ARTIFACT_REGISTRY":
                            case 2:
                                message.dockerRegistry = 2;
                                break;
                            }
                            if (object.dockerRepository != null)
                                message.dockerRepository = String(object.dockerRepository);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BuildConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @static
                         * @param {google.cloud.functions.v2alpha.BuildConfig} message BuildConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BuildConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.environmentVariables = {};
                            if (options.defaults) {
                                object.build = "";
                                object.runtime = "";
                                object.entryPoint = "";
                                object.source = null;
                                object.workerPool = "";
                                object.dockerRepository = "";
                                object.sourceProvenance = null;
                                object.dockerRegistry = options.enums === String ? "DOCKER_REGISTRY_UNSPECIFIED" : 0;
                            }
                            if (message.build != null && message.hasOwnProperty("build"))
                                object.build = message.build;
                            if (message.runtime != null && message.hasOwnProperty("runtime"))
                                object.runtime = message.runtime;
                            if (message.entryPoint != null && message.hasOwnProperty("entryPoint"))
                                object.entryPoint = message.entryPoint;
                            if (message.source != null && message.hasOwnProperty("source"))
                                object.source = $root.google.cloud.functions.v2alpha.Source.toObject(message.source, options);
                            if (message.workerPool != null && message.hasOwnProperty("workerPool"))
                                object.workerPool = message.workerPool;
                            var keys2;
                            if (message.environmentVariables && (keys2 = Object.keys(message.environmentVariables)).length) {
                                object.environmentVariables = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.environmentVariables[keys2[j]] = message.environmentVariables[keys2[j]];
                            }
                            if (message.dockerRepository != null && message.hasOwnProperty("dockerRepository"))
                                object.dockerRepository = message.dockerRepository;
                            if (message.sourceProvenance != null && message.hasOwnProperty("sourceProvenance"))
                                object.sourceProvenance = $root.google.cloud.functions.v2alpha.SourceProvenance.toObject(message.sourceProvenance, options);
                            if (message.dockerRegistry != null && message.hasOwnProperty("dockerRegistry"))
                                object.dockerRegistry = options.enums === String ? $root.google.cloud.functions.v2alpha.BuildConfig.DockerRegistry[message.dockerRegistry] === undefined ? message.dockerRegistry : $root.google.cloud.functions.v2alpha.BuildConfig.DockerRegistry[message.dockerRegistry] : message.dockerRegistry;
                            return object;
                        };
    
                        /**
                         * Converts this BuildConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BuildConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BuildConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.BuildConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BuildConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.BuildConfig";
                        };
    
                        /**
                         * DockerRegistry enum.
                         * @name google.cloud.functions.v2alpha.BuildConfig.DockerRegistry
                         * @enum {number}
                         * @property {number} DOCKER_REGISTRY_UNSPECIFIED=0 DOCKER_REGISTRY_UNSPECIFIED value
                         * @property {number} CONTAINER_REGISTRY=1 CONTAINER_REGISTRY value
                         * @property {number} ARTIFACT_REGISTRY=2 ARTIFACT_REGISTRY value
                         */
                        BuildConfig.DockerRegistry = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DOCKER_REGISTRY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CONTAINER_REGISTRY"] = 1;
                            values[valuesById[2] = "ARTIFACT_REGISTRY"] = 2;
                            return values;
                        })();
    
                        return BuildConfig;
                    })();
    
                    v2alpha.ServiceConfig = (function() {
    
                        /**
                         * Properties of a ServiceConfig.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IServiceConfig
                         * @property {string|null} [service] ServiceConfig service
                         * @property {number|null} [timeoutSeconds] ServiceConfig timeoutSeconds
                         * @property {string|null} [availableMemory] ServiceConfig availableMemory
                         * @property {string|null} [availableCpu] ServiceConfig availableCpu
                         * @property {Object.<string,string>|null} [environmentVariables] ServiceConfig environmentVariables
                         * @property {number|null} [maxInstanceCount] ServiceConfig maxInstanceCount
                         * @property {number|null} [minInstanceCount] ServiceConfig minInstanceCount
                         * @property {string|null} [vpcConnector] ServiceConfig vpcConnector
                         * @property {google.cloud.functions.v2alpha.ServiceConfig.VpcConnectorEgressSettings|null} [vpcConnectorEgressSettings] ServiceConfig vpcConnectorEgressSettings
                         * @property {google.cloud.functions.v2alpha.ServiceConfig.IngressSettings|null} [ingressSettings] ServiceConfig ingressSettings
                         * @property {string|null} [uri] ServiceConfig uri
                         * @property {string|null} [serviceAccountEmail] ServiceConfig serviceAccountEmail
                         * @property {boolean|null} [allTrafficOnLatestRevision] ServiceConfig allTrafficOnLatestRevision
                         * @property {Array.<google.cloud.functions.v2alpha.ISecretEnvVar>|null} [secretEnvironmentVariables] ServiceConfig secretEnvironmentVariables
                         * @property {Array.<google.cloud.functions.v2alpha.ISecretVolume>|null} [secretVolumes] ServiceConfig secretVolumes
                         * @property {string|null} [revision] ServiceConfig revision
                         * @property {number|null} [maxInstanceRequestConcurrency] ServiceConfig maxInstanceRequestConcurrency
                         * @property {google.cloud.functions.v2alpha.ServiceConfig.SecurityLevel|null} [securityLevel] ServiceConfig securityLevel
                         */
    
                        /**
                         * Constructs a new ServiceConfig.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a ServiceConfig.
                         * @implements IServiceConfig
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IServiceConfig=} [properties] Properties to set
                         */
                        function ServiceConfig(properties) {
                            this.environmentVariables = {};
                            this.secretEnvironmentVariables = [];
                            this.secretVolumes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ServiceConfig service.
                         * @member {string} service
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.service = "";
    
                        /**
                         * ServiceConfig timeoutSeconds.
                         * @member {number} timeoutSeconds
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.timeoutSeconds = 0;
    
                        /**
                         * ServiceConfig availableMemory.
                         * @member {string} availableMemory
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.availableMemory = "";
    
                        /**
                         * ServiceConfig availableCpu.
                         * @member {string} availableCpu
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.availableCpu = "";
    
                        /**
                         * ServiceConfig environmentVariables.
                         * @member {Object.<string,string>} environmentVariables
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.environmentVariables = $util.emptyObject;
    
                        /**
                         * ServiceConfig maxInstanceCount.
                         * @member {number} maxInstanceCount
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.maxInstanceCount = 0;
    
                        /**
                         * ServiceConfig minInstanceCount.
                         * @member {number} minInstanceCount
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.minInstanceCount = 0;
    
                        /**
                         * ServiceConfig vpcConnector.
                         * @member {string} vpcConnector
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.vpcConnector = "";
    
                        /**
                         * ServiceConfig vpcConnectorEgressSettings.
                         * @member {google.cloud.functions.v2alpha.ServiceConfig.VpcConnectorEgressSettings} vpcConnectorEgressSettings
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.vpcConnectorEgressSettings = 0;
    
                        /**
                         * ServiceConfig ingressSettings.
                         * @member {google.cloud.functions.v2alpha.ServiceConfig.IngressSettings} ingressSettings
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.ingressSettings = 0;
    
                        /**
                         * ServiceConfig uri.
                         * @member {string} uri
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.uri = "";
    
                        /**
                         * ServiceConfig serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.serviceAccountEmail = "";
    
                        /**
                         * ServiceConfig allTrafficOnLatestRevision.
                         * @member {boolean} allTrafficOnLatestRevision
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.allTrafficOnLatestRevision = false;
    
                        /**
                         * ServiceConfig secretEnvironmentVariables.
                         * @member {Array.<google.cloud.functions.v2alpha.ISecretEnvVar>} secretEnvironmentVariables
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.secretEnvironmentVariables = $util.emptyArray;
    
                        /**
                         * ServiceConfig secretVolumes.
                         * @member {Array.<google.cloud.functions.v2alpha.ISecretVolume>} secretVolumes
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.secretVolumes = $util.emptyArray;
    
                        /**
                         * ServiceConfig revision.
                         * @member {string} revision
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.revision = "";
    
                        /**
                         * ServiceConfig maxInstanceRequestConcurrency.
                         * @member {number} maxInstanceRequestConcurrency
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.maxInstanceRequestConcurrency = 0;
    
                        /**
                         * ServiceConfig securityLevel.
                         * @member {google.cloud.functions.v2alpha.ServiceConfig.SecurityLevel} securityLevel
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.securityLevel = 0;
    
                        /**
                         * Creates a new ServiceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @static
                         * @param {google.cloud.functions.v2alpha.IServiceConfig=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.ServiceConfig} ServiceConfig instance
                         */
                        ServiceConfig.create = function create(properties) {
                            return new ServiceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ServiceConfig message. Does not implicitly {@link google.cloud.functions.v2alpha.ServiceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @static
                         * @param {google.cloud.functions.v2alpha.IServiceConfig} message ServiceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ServiceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.timeoutSeconds != null && Object.hasOwnProperty.call(message, "timeoutSeconds"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.timeoutSeconds);
                            if (message.environmentVariables != null && Object.hasOwnProperty.call(message, "environmentVariables"))
                                for (var keys = Object.keys(message.environmentVariables), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.environmentVariables[keys[i]]).ldelim();
                            if (message.maxInstanceCount != null && Object.hasOwnProperty.call(message, "maxInstanceCount"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.maxInstanceCount);
                            if (message.vpcConnector != null && Object.hasOwnProperty.call(message, "vpcConnector"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.vpcConnector);
                            if (message.vpcConnectorEgressSettings != null && Object.hasOwnProperty.call(message, "vpcConnectorEgressSettings"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.vpcConnectorEgressSettings);
                            if (message.ingressSettings != null && Object.hasOwnProperty.call(message, "ingressSettings"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.ingressSettings);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.uri);
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.serviceAccountEmail);
                            if (message.minInstanceCount != null && Object.hasOwnProperty.call(message, "minInstanceCount"))
                                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.minInstanceCount);
                            if (message.availableMemory != null && Object.hasOwnProperty.call(message, "availableMemory"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.availableMemory);
                            if (message.allTrafficOnLatestRevision != null && Object.hasOwnProperty.call(message, "allTrafficOnLatestRevision"))
                                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.allTrafficOnLatestRevision);
                            if (message.secretEnvironmentVariables != null && message.secretEnvironmentVariables.length)
                                for (var i = 0; i < message.secretEnvironmentVariables.length; ++i)
                                    $root.google.cloud.functions.v2alpha.SecretEnvVar.encode(message.secretEnvironmentVariables[i], writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                writer.uint32(/* id 18, wireType 2 =*/146).string(message.revision);
                            if (message.secretVolumes != null && message.secretVolumes.length)
                                for (var i = 0; i < message.secretVolumes.length; ++i)
                                    $root.google.cloud.functions.v2alpha.SecretVolume.encode(message.secretVolumes[i], writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.maxInstanceRequestConcurrency != null && Object.hasOwnProperty.call(message, "maxInstanceRequestConcurrency"))
                                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.maxInstanceRequestConcurrency);
                            if (message.securityLevel != null && Object.hasOwnProperty.call(message, "securityLevel"))
                                writer.uint32(/* id 21, wireType 0 =*/168).int32(message.securityLevel);
                            if (message.availableCpu != null && Object.hasOwnProperty.call(message, "availableCpu"))
                                writer.uint32(/* id 22, wireType 2 =*/178).string(message.availableCpu);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ServiceConfig message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.ServiceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @static
                         * @param {google.cloud.functions.v2alpha.IServiceConfig} message ServiceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ServiceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ServiceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.ServiceConfig} ServiceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ServiceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.ServiceConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.timeoutSeconds = reader.int32();
                                        break;
                                    }
                                case 13: {
                                        message.availableMemory = reader.string();
                                        break;
                                    }
                                case 22: {
                                        message.availableCpu = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.environmentVariables === $util.emptyObject)
                                            message.environmentVariables = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.environmentVariables[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.maxInstanceCount = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        message.minInstanceCount = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.vpcConnector = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.vpcConnectorEgressSettings = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.ingressSettings = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 16: {
                                        message.allTrafficOnLatestRevision = reader.bool();
                                        break;
                                    }
                                case 17: {
                                        if (!(message.secretEnvironmentVariables && message.secretEnvironmentVariables.length))
                                            message.secretEnvironmentVariables = [];
                                        message.secretEnvironmentVariables.push($root.google.cloud.functions.v2alpha.SecretEnvVar.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 19: {
                                        if (!(message.secretVolumes && message.secretVolumes.length))
                                            message.secretVolumes = [];
                                        message.secretVolumes.push($root.google.cloud.functions.v2alpha.SecretVolume.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 18: {
                                        message.revision = reader.string();
                                        break;
                                    }
                                case 20: {
                                        message.maxInstanceRequestConcurrency = reader.int32();
                                        break;
                                    }
                                case 21: {
                                        message.securityLevel = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ServiceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.ServiceConfig} ServiceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ServiceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ServiceConfig message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ServiceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.timeoutSeconds != null && message.hasOwnProperty("timeoutSeconds"))
                                if (!$util.isInteger(message.timeoutSeconds))
                                    return "timeoutSeconds: integer expected";
                            if (message.availableMemory != null && message.hasOwnProperty("availableMemory"))
                                if (!$util.isString(message.availableMemory))
                                    return "availableMemory: string expected";
                            if (message.availableCpu != null && message.hasOwnProperty("availableCpu"))
                                if (!$util.isString(message.availableCpu))
                                    return "availableCpu: string expected";
                            if (message.environmentVariables != null && message.hasOwnProperty("environmentVariables")) {
                                if (!$util.isObject(message.environmentVariables))
                                    return "environmentVariables: object expected";
                                var key = Object.keys(message.environmentVariables);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.environmentVariables[key[i]]))
                                        return "environmentVariables: string{k:string} expected";
                            }
                            if (message.maxInstanceCount != null && message.hasOwnProperty("maxInstanceCount"))
                                if (!$util.isInteger(message.maxInstanceCount))
                                    return "maxInstanceCount: integer expected";
                            if (message.minInstanceCount != null && message.hasOwnProperty("minInstanceCount"))
                                if (!$util.isInteger(message.minInstanceCount))
                                    return "minInstanceCount: integer expected";
                            if (message.vpcConnector != null && message.hasOwnProperty("vpcConnector"))
                                if (!$util.isString(message.vpcConnector))
                                    return "vpcConnector: string expected";
                            if (message.vpcConnectorEgressSettings != null && message.hasOwnProperty("vpcConnectorEgressSettings"))
                                switch (message.vpcConnectorEgressSettings) {
                                default:
                                    return "vpcConnectorEgressSettings: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.ingressSettings != null && message.hasOwnProperty("ingressSettings"))
                                switch (message.ingressSettings) {
                                default:
                                    return "ingressSettings: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.allTrafficOnLatestRevision != null && message.hasOwnProperty("allTrafficOnLatestRevision"))
                                if (typeof message.allTrafficOnLatestRevision !== "boolean")
                                    return "allTrafficOnLatestRevision: boolean expected";
                            if (message.secretEnvironmentVariables != null && message.hasOwnProperty("secretEnvironmentVariables")) {
                                if (!Array.isArray(message.secretEnvironmentVariables))
                                    return "secretEnvironmentVariables: array expected";
                                for (var i = 0; i < message.secretEnvironmentVariables.length; ++i) {
                                    var error = $root.google.cloud.functions.v2alpha.SecretEnvVar.verify(message.secretEnvironmentVariables[i]);
                                    if (error)
                                        return "secretEnvironmentVariables." + error;
                                }
                            }
                            if (message.secretVolumes != null && message.hasOwnProperty("secretVolumes")) {
                                if (!Array.isArray(message.secretVolumes))
                                    return "secretVolumes: array expected";
                                for (var i = 0; i < message.secretVolumes.length; ++i) {
                                    var error = $root.google.cloud.functions.v2alpha.SecretVolume.verify(message.secretVolumes[i]);
                                    if (error)
                                        return "secretVolumes." + error;
                                }
                            }
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                if (!$util.isString(message.revision))
                                    return "revision: string expected";
                            if (message.maxInstanceRequestConcurrency != null && message.hasOwnProperty("maxInstanceRequestConcurrency"))
                                if (!$util.isInteger(message.maxInstanceRequestConcurrency))
                                    return "maxInstanceRequestConcurrency: integer expected";
                            if (message.securityLevel != null && message.hasOwnProperty("securityLevel"))
                                switch (message.securityLevel) {
                                default:
                                    return "securityLevel: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ServiceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.ServiceConfig} ServiceConfig
                         */
                        ServiceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.ServiceConfig)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.ServiceConfig();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.timeoutSeconds != null)
                                message.timeoutSeconds = object.timeoutSeconds | 0;
                            if (object.availableMemory != null)
                                message.availableMemory = String(object.availableMemory);
                            if (object.availableCpu != null)
                                message.availableCpu = String(object.availableCpu);
                            if (object.environmentVariables) {
                                if (typeof object.environmentVariables !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.ServiceConfig.environmentVariables: object expected");
                                message.environmentVariables = {};
                                for (var keys = Object.keys(object.environmentVariables), i = 0; i < keys.length; ++i)
                                    message.environmentVariables[keys[i]] = String(object.environmentVariables[keys[i]]);
                            }
                            if (object.maxInstanceCount != null)
                                message.maxInstanceCount = object.maxInstanceCount | 0;
                            if (object.minInstanceCount != null)
                                message.minInstanceCount = object.minInstanceCount | 0;
                            if (object.vpcConnector != null)
                                message.vpcConnector = String(object.vpcConnector);
                            switch (object.vpcConnectorEgressSettings) {
                            default:
                                if (typeof object.vpcConnectorEgressSettings === "number") {
                                    message.vpcConnectorEgressSettings = object.vpcConnectorEgressSettings;
                                    break;
                                }
                                break;
                            case "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED":
                            case 0:
                                message.vpcConnectorEgressSettings = 0;
                                break;
                            case "PRIVATE_RANGES_ONLY":
                            case 1:
                                message.vpcConnectorEgressSettings = 1;
                                break;
                            case "ALL_TRAFFIC":
                            case 2:
                                message.vpcConnectorEgressSettings = 2;
                                break;
                            }
                            switch (object.ingressSettings) {
                            default:
                                if (typeof object.ingressSettings === "number") {
                                    message.ingressSettings = object.ingressSettings;
                                    break;
                                }
                                break;
                            case "INGRESS_SETTINGS_UNSPECIFIED":
                            case 0:
                                message.ingressSettings = 0;
                                break;
                            case "ALLOW_ALL":
                            case 1:
                                message.ingressSettings = 1;
                                break;
                            case "ALLOW_INTERNAL_ONLY":
                            case 2:
                                message.ingressSettings = 2;
                                break;
                            case "ALLOW_INTERNAL_AND_GCLB":
                            case 3:
                                message.ingressSettings = 3;
                                break;
                            }
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.allTrafficOnLatestRevision != null)
                                message.allTrafficOnLatestRevision = Boolean(object.allTrafficOnLatestRevision);
                            if (object.secretEnvironmentVariables) {
                                if (!Array.isArray(object.secretEnvironmentVariables))
                                    throw TypeError(".google.cloud.functions.v2alpha.ServiceConfig.secretEnvironmentVariables: array expected");
                                message.secretEnvironmentVariables = [];
                                for (var i = 0; i < object.secretEnvironmentVariables.length; ++i) {
                                    if (typeof object.secretEnvironmentVariables[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2alpha.ServiceConfig.secretEnvironmentVariables: object expected");
                                    message.secretEnvironmentVariables[i] = $root.google.cloud.functions.v2alpha.SecretEnvVar.fromObject(object.secretEnvironmentVariables[i]);
                                }
                            }
                            if (object.secretVolumes) {
                                if (!Array.isArray(object.secretVolumes))
                                    throw TypeError(".google.cloud.functions.v2alpha.ServiceConfig.secretVolumes: array expected");
                                message.secretVolumes = [];
                                for (var i = 0; i < object.secretVolumes.length; ++i) {
                                    if (typeof object.secretVolumes[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2alpha.ServiceConfig.secretVolumes: object expected");
                                    message.secretVolumes[i] = $root.google.cloud.functions.v2alpha.SecretVolume.fromObject(object.secretVolumes[i]);
                                }
                            }
                            if (object.revision != null)
                                message.revision = String(object.revision);
                            if (object.maxInstanceRequestConcurrency != null)
                                message.maxInstanceRequestConcurrency = object.maxInstanceRequestConcurrency | 0;
                            switch (object.securityLevel) {
                            default:
                                if (typeof object.securityLevel === "number") {
                                    message.securityLevel = object.securityLevel;
                                    break;
                                }
                                break;
                            case "SECURITY_LEVEL_UNSPECIFIED":
                            case 0:
                                message.securityLevel = 0;
                                break;
                            case "SECURE_ALWAYS":
                            case 1:
                                message.securityLevel = 1;
                                break;
                            case "SECURE_OPTIONAL":
                            case 2:
                                message.securityLevel = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ServiceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @static
                         * @param {google.cloud.functions.v2alpha.ServiceConfig} message ServiceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ServiceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.secretEnvironmentVariables = [];
                                object.secretVolumes = [];
                            }
                            if (options.objects || options.defaults)
                                object.environmentVariables = {};
                            if (options.defaults) {
                                object.service = "";
                                object.timeoutSeconds = 0;
                                object.maxInstanceCount = 0;
                                object.vpcConnector = "";
                                object.vpcConnectorEgressSettings = options.enums === String ? "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED" : 0;
                                object.ingressSettings = options.enums === String ? "INGRESS_SETTINGS_UNSPECIFIED" : 0;
                                object.uri = "";
                                object.serviceAccountEmail = "";
                                object.minInstanceCount = 0;
                                object.availableMemory = "";
                                object.allTrafficOnLatestRevision = false;
                                object.revision = "";
                                object.maxInstanceRequestConcurrency = 0;
                                object.securityLevel = options.enums === String ? "SECURITY_LEVEL_UNSPECIFIED" : 0;
                                object.availableCpu = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.timeoutSeconds != null && message.hasOwnProperty("timeoutSeconds"))
                                object.timeoutSeconds = message.timeoutSeconds;
                            var keys2;
                            if (message.environmentVariables && (keys2 = Object.keys(message.environmentVariables)).length) {
                                object.environmentVariables = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.environmentVariables[keys2[j]] = message.environmentVariables[keys2[j]];
                            }
                            if (message.maxInstanceCount != null && message.hasOwnProperty("maxInstanceCount"))
                                object.maxInstanceCount = message.maxInstanceCount;
                            if (message.vpcConnector != null && message.hasOwnProperty("vpcConnector"))
                                object.vpcConnector = message.vpcConnector;
                            if (message.vpcConnectorEgressSettings != null && message.hasOwnProperty("vpcConnectorEgressSettings"))
                                object.vpcConnectorEgressSettings = options.enums === String ? $root.google.cloud.functions.v2alpha.ServiceConfig.VpcConnectorEgressSettings[message.vpcConnectorEgressSettings] === undefined ? message.vpcConnectorEgressSettings : $root.google.cloud.functions.v2alpha.ServiceConfig.VpcConnectorEgressSettings[message.vpcConnectorEgressSettings] : message.vpcConnectorEgressSettings;
                            if (message.ingressSettings != null && message.hasOwnProperty("ingressSettings"))
                                object.ingressSettings = options.enums === String ? $root.google.cloud.functions.v2alpha.ServiceConfig.IngressSettings[message.ingressSettings] === undefined ? message.ingressSettings : $root.google.cloud.functions.v2alpha.ServiceConfig.IngressSettings[message.ingressSettings] : message.ingressSettings;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.minInstanceCount != null && message.hasOwnProperty("minInstanceCount"))
                                object.minInstanceCount = message.minInstanceCount;
                            if (message.availableMemory != null && message.hasOwnProperty("availableMemory"))
                                object.availableMemory = message.availableMemory;
                            if (message.allTrafficOnLatestRevision != null && message.hasOwnProperty("allTrafficOnLatestRevision"))
                                object.allTrafficOnLatestRevision = message.allTrafficOnLatestRevision;
                            if (message.secretEnvironmentVariables && message.secretEnvironmentVariables.length) {
                                object.secretEnvironmentVariables = [];
                                for (var j = 0; j < message.secretEnvironmentVariables.length; ++j)
                                    object.secretEnvironmentVariables[j] = $root.google.cloud.functions.v2alpha.SecretEnvVar.toObject(message.secretEnvironmentVariables[j], options);
                            }
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                object.revision = message.revision;
                            if (message.secretVolumes && message.secretVolumes.length) {
                                object.secretVolumes = [];
                                for (var j = 0; j < message.secretVolumes.length; ++j)
                                    object.secretVolumes[j] = $root.google.cloud.functions.v2alpha.SecretVolume.toObject(message.secretVolumes[j], options);
                            }
                            if (message.maxInstanceRequestConcurrency != null && message.hasOwnProperty("maxInstanceRequestConcurrency"))
                                object.maxInstanceRequestConcurrency = message.maxInstanceRequestConcurrency;
                            if (message.securityLevel != null && message.hasOwnProperty("securityLevel"))
                                object.securityLevel = options.enums === String ? $root.google.cloud.functions.v2alpha.ServiceConfig.SecurityLevel[message.securityLevel] === undefined ? message.securityLevel : $root.google.cloud.functions.v2alpha.ServiceConfig.SecurityLevel[message.securityLevel] : message.securityLevel;
                            if (message.availableCpu != null && message.hasOwnProperty("availableCpu"))
                                object.availableCpu = message.availableCpu;
                            return object;
                        };
    
                        /**
                         * Converts this ServiceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ServiceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ServiceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.ServiceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ServiceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.ServiceConfig";
                        };
    
                        /**
                         * VpcConnectorEgressSettings enum.
                         * @name google.cloud.functions.v2alpha.ServiceConfig.VpcConnectorEgressSettings
                         * @enum {number}
                         * @property {number} VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED=0 VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED value
                         * @property {number} PRIVATE_RANGES_ONLY=1 PRIVATE_RANGES_ONLY value
                         * @property {number} ALL_TRAFFIC=2 ALL_TRAFFIC value
                         */
                        ServiceConfig.VpcConnectorEgressSettings = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PRIVATE_RANGES_ONLY"] = 1;
                            values[valuesById[2] = "ALL_TRAFFIC"] = 2;
                            return values;
                        })();
    
                        /**
                         * IngressSettings enum.
                         * @name google.cloud.functions.v2alpha.ServiceConfig.IngressSettings
                         * @enum {number}
                         * @property {number} INGRESS_SETTINGS_UNSPECIFIED=0 INGRESS_SETTINGS_UNSPECIFIED value
                         * @property {number} ALLOW_ALL=1 ALLOW_ALL value
                         * @property {number} ALLOW_INTERNAL_ONLY=2 ALLOW_INTERNAL_ONLY value
                         * @property {number} ALLOW_INTERNAL_AND_GCLB=3 ALLOW_INTERNAL_AND_GCLB value
                         */
                        ServiceConfig.IngressSettings = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "INGRESS_SETTINGS_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ALLOW_ALL"] = 1;
                            values[valuesById[2] = "ALLOW_INTERNAL_ONLY"] = 2;
                            values[valuesById[3] = "ALLOW_INTERNAL_AND_GCLB"] = 3;
                            return values;
                        })();
    
                        /**
                         * SecurityLevel enum.
                         * @name google.cloud.functions.v2alpha.ServiceConfig.SecurityLevel
                         * @enum {number}
                         * @property {number} SECURITY_LEVEL_UNSPECIFIED=0 SECURITY_LEVEL_UNSPECIFIED value
                         * @property {number} SECURE_ALWAYS=1 SECURE_ALWAYS value
                         * @property {number} SECURE_OPTIONAL=2 SECURE_OPTIONAL value
                         */
                        ServiceConfig.SecurityLevel = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SECURITY_LEVEL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SECURE_ALWAYS"] = 1;
                            values[valuesById[2] = "SECURE_OPTIONAL"] = 2;
                            return values;
                        })();
    
                        return ServiceConfig;
                    })();
    
                    v2alpha.SecretEnvVar = (function() {
    
                        /**
                         * Properties of a SecretEnvVar.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface ISecretEnvVar
                         * @property {string|null} [key] SecretEnvVar key
                         * @property {string|null} [projectId] SecretEnvVar projectId
                         * @property {string|null} [secret] SecretEnvVar secret
                         * @property {string|null} [version] SecretEnvVar version
                         */
    
                        /**
                         * Constructs a new SecretEnvVar.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a SecretEnvVar.
                         * @implements ISecretEnvVar
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.ISecretEnvVar=} [properties] Properties to set
                         */
                        function SecretEnvVar(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SecretEnvVar key.
                         * @member {string} key
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.key = "";
    
                        /**
                         * SecretEnvVar projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.projectId = "";
    
                        /**
                         * SecretEnvVar secret.
                         * @member {string} secret
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.secret = "";
    
                        /**
                         * SecretEnvVar version.
                         * @member {string} version
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.version = "";
    
                        /**
                         * Creates a new SecretEnvVar instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v2alpha.ISecretEnvVar=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.SecretEnvVar} SecretEnvVar instance
                         */
                        SecretEnvVar.create = function create(properties) {
                            return new SecretEnvVar(properties);
                        };
    
                        /**
                         * Encodes the specified SecretEnvVar message. Does not implicitly {@link google.cloud.functions.v2alpha.SecretEnvVar.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v2alpha.ISecretEnvVar} message SecretEnvVar message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretEnvVar.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.projectId);
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.secret);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.version);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SecretEnvVar message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.SecretEnvVar.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v2alpha.ISecretEnvVar} message SecretEnvVar message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretEnvVar.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SecretEnvVar message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.SecretEnvVar} SecretEnvVar
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretEnvVar.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.SecretEnvVar();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.key = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.secret = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.version = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SecretEnvVar message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.SecretEnvVar} SecretEnvVar
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretEnvVar.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SecretEnvVar message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SecretEnvVar.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.key != null && message.hasOwnProperty("key"))
                                if (!$util.isString(message.key))
                                    return "key: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                if (!$util.isString(message.secret))
                                    return "secret: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SecretEnvVar message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.SecretEnvVar} SecretEnvVar
                         */
                        SecretEnvVar.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.SecretEnvVar)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.SecretEnvVar();
                            if (object.key != null)
                                message.key = String(object.key);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.secret != null)
                                message.secret = String(object.secret);
                            if (object.version != null)
                                message.version = String(object.version);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SecretEnvVar message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v2alpha.SecretEnvVar} message SecretEnvVar
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SecretEnvVar.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.key = "";
                                object.projectId = "";
                                object.secret = "";
                                object.version = "";
                            }
                            if (message.key != null && message.hasOwnProperty("key"))
                                object.key = message.key;
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                object.secret = message.secret;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            return object;
                        };
    
                        /**
                         * Converts this SecretEnvVar to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SecretEnvVar.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SecretEnvVar
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.SecretEnvVar
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SecretEnvVar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.SecretEnvVar";
                        };
    
                        return SecretEnvVar;
                    })();
    
                    v2alpha.SecretVolume = (function() {
    
                        /**
                         * Properties of a SecretVolume.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface ISecretVolume
                         * @property {string|null} [mountPath] SecretVolume mountPath
                         * @property {string|null} [projectId] SecretVolume projectId
                         * @property {string|null} [secret] SecretVolume secret
                         * @property {Array.<google.cloud.functions.v2alpha.SecretVolume.ISecretVersion>|null} [versions] SecretVolume versions
                         */
    
                        /**
                         * Constructs a new SecretVolume.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a SecretVolume.
                         * @implements ISecretVolume
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.ISecretVolume=} [properties] Properties to set
                         */
                        function SecretVolume(properties) {
                            this.versions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SecretVolume mountPath.
                         * @member {string} mountPath
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.mountPath = "";
    
                        /**
                         * SecretVolume projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.projectId = "";
    
                        /**
                         * SecretVolume secret.
                         * @member {string} secret
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.secret = "";
    
                        /**
                         * SecretVolume versions.
                         * @member {Array.<google.cloud.functions.v2alpha.SecretVolume.ISecretVersion>} versions
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.versions = $util.emptyArray;
    
                        /**
                         * Creates a new SecretVolume instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v2alpha.ISecretVolume=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.SecretVolume} SecretVolume instance
                         */
                        SecretVolume.create = function create(properties) {
                            return new SecretVolume(properties);
                        };
    
                        /**
                         * Encodes the specified SecretVolume message. Does not implicitly {@link google.cloud.functions.v2alpha.SecretVolume.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v2alpha.ISecretVolume} message SecretVolume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretVolume.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mountPath != null && Object.hasOwnProperty.call(message, "mountPath"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mountPath);
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.projectId);
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.secret);
                            if (message.versions != null && message.versions.length)
                                for (var i = 0; i < message.versions.length; ++i)
                                    $root.google.cloud.functions.v2alpha.SecretVolume.SecretVersion.encode(message.versions[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SecretVolume message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.SecretVolume.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v2alpha.ISecretVolume} message SecretVolume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretVolume.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SecretVolume message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.SecretVolume} SecretVolume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretVolume.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.SecretVolume();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mountPath = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.secret = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.versions && message.versions.length))
                                            message.versions = [];
                                        message.versions.push($root.google.cloud.functions.v2alpha.SecretVolume.SecretVersion.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SecretVolume message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.SecretVolume} SecretVolume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretVolume.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SecretVolume message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SecretVolume.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mountPath != null && message.hasOwnProperty("mountPath"))
                                if (!$util.isString(message.mountPath))
                                    return "mountPath: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                if (!$util.isString(message.secret))
                                    return "secret: string expected";
                            if (message.versions != null && message.hasOwnProperty("versions")) {
                                if (!Array.isArray(message.versions))
                                    return "versions: array expected";
                                for (var i = 0; i < message.versions.length; ++i) {
                                    var error = $root.google.cloud.functions.v2alpha.SecretVolume.SecretVersion.verify(message.versions[i]);
                                    if (error)
                                        return "versions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SecretVolume message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.SecretVolume} SecretVolume
                         */
                        SecretVolume.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.SecretVolume)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.SecretVolume();
                            if (object.mountPath != null)
                                message.mountPath = String(object.mountPath);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.secret != null)
                                message.secret = String(object.secret);
                            if (object.versions) {
                                if (!Array.isArray(object.versions))
                                    throw TypeError(".google.cloud.functions.v2alpha.SecretVolume.versions: array expected");
                                message.versions = [];
                                for (var i = 0; i < object.versions.length; ++i) {
                                    if (typeof object.versions[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2alpha.SecretVolume.versions: object expected");
                                    message.versions[i] = $root.google.cloud.functions.v2alpha.SecretVolume.SecretVersion.fromObject(object.versions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SecretVolume message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v2alpha.SecretVolume} message SecretVolume
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SecretVolume.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.versions = [];
                            if (options.defaults) {
                                object.mountPath = "";
                                object.projectId = "";
                                object.secret = "";
                            }
                            if (message.mountPath != null && message.hasOwnProperty("mountPath"))
                                object.mountPath = message.mountPath;
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                object.secret = message.secret;
                            if (message.versions && message.versions.length) {
                                object.versions = [];
                                for (var j = 0; j < message.versions.length; ++j)
                                    object.versions[j] = $root.google.cloud.functions.v2alpha.SecretVolume.SecretVersion.toObject(message.versions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SecretVolume to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SecretVolume.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SecretVolume
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.SecretVolume
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SecretVolume.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.SecretVolume";
                        };
    
                        SecretVolume.SecretVersion = (function() {
    
                            /**
                             * Properties of a SecretVersion.
                             * @memberof google.cloud.functions.v2alpha.SecretVolume
                             * @interface ISecretVersion
                             * @property {string|null} [version] SecretVersion version
                             * @property {string|null} [path] SecretVersion path
                             */
    
                            /**
                             * Constructs a new SecretVersion.
                             * @memberof google.cloud.functions.v2alpha.SecretVolume
                             * @classdesc Represents a SecretVersion.
                             * @implements ISecretVersion
                             * @constructor
                             * @param {google.cloud.functions.v2alpha.SecretVolume.ISecretVersion=} [properties] Properties to set
                             */
                            function SecretVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SecretVersion version.
                             * @member {string} version
                             * @memberof google.cloud.functions.v2alpha.SecretVolume.SecretVersion
                             * @instance
                             */
                            SecretVersion.prototype.version = "";
    
                            /**
                             * SecretVersion path.
                             * @member {string} path
                             * @memberof google.cloud.functions.v2alpha.SecretVolume.SecretVersion
                             * @instance
                             */
                            SecretVersion.prototype.path = "";
    
                            /**
                             * Creates a new SecretVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.functions.v2alpha.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v2alpha.SecretVolume.ISecretVersion=} [properties] Properties to set
                             * @returns {google.cloud.functions.v2alpha.SecretVolume.SecretVersion} SecretVersion instance
                             */
                            SecretVersion.create = function create(properties) {
                                return new SecretVersion(properties);
                            };
    
                            /**
                             * Encodes the specified SecretVersion message. Does not implicitly {@link google.cloud.functions.v2alpha.SecretVolume.SecretVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.functions.v2alpha.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v2alpha.SecretVolume.ISecretVersion} message SecretVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SecretVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SecretVersion message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.SecretVolume.SecretVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.functions.v2alpha.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v2alpha.SecretVolume.ISecretVersion} message SecretVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SecretVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SecretVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.functions.v2alpha.SecretVolume.SecretVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.functions.v2alpha.SecretVolume.SecretVersion} SecretVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SecretVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.SecretVolume.SecretVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.version = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.path = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SecretVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.functions.v2alpha.SecretVolume.SecretVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.functions.v2alpha.SecretVolume.SecretVersion} SecretVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SecretVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SecretVersion message.
                             * @function verify
                             * @memberof google.cloud.functions.v2alpha.SecretVolume.SecretVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SecretVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.path != null && message.hasOwnProperty("path"))
                                    if (!$util.isString(message.path))
                                        return "path: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a SecretVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.functions.v2alpha.SecretVolume.SecretVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.functions.v2alpha.SecretVolume.SecretVersion} SecretVersion
                             */
                            SecretVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.functions.v2alpha.SecretVolume.SecretVersion)
                                    return object;
                                var message = new $root.google.cloud.functions.v2alpha.SecretVolume.SecretVersion();
                                if (object.version != null)
                                    message.version = String(object.version);
                                if (object.path != null)
                                    message.path = String(object.path);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SecretVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.functions.v2alpha.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v2alpha.SecretVolume.SecretVersion} message SecretVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SecretVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = "";
                                    object.path = "";
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.path != null && message.hasOwnProperty("path"))
                                    object.path = message.path;
                                return object;
                            };
    
                            /**
                             * Converts this SecretVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.functions.v2alpha.SecretVolume.SecretVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SecretVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SecretVersion
                             * @function getTypeUrl
                             * @memberof google.cloud.functions.v2alpha.SecretVolume.SecretVersion
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SecretVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.functions.v2alpha.SecretVolume.SecretVersion";
                            };
    
                            return SecretVersion;
                        })();
    
                        return SecretVolume;
                    })();
    
                    v2alpha.EventTrigger = (function() {
    
                        /**
                         * Properties of an EventTrigger.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IEventTrigger
                         * @property {string|null} [trigger] EventTrigger trigger
                         * @property {string|null} [triggerRegion] EventTrigger triggerRegion
                         * @property {string|null} [eventType] EventTrigger eventType
                         * @property {Array.<google.cloud.functions.v2alpha.IEventFilter>|null} [eventFilters] EventTrigger eventFilters
                         * @property {string|null} [pubsubTopic] EventTrigger pubsubTopic
                         * @property {string|null} [serviceAccountEmail] EventTrigger serviceAccountEmail
                         * @property {google.cloud.functions.v2alpha.EventTrigger.RetryPolicy|null} [retryPolicy] EventTrigger retryPolicy
                         * @property {string|null} [channel] EventTrigger channel
                         */
    
                        /**
                         * Constructs a new EventTrigger.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents an EventTrigger.
                         * @implements IEventTrigger
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IEventTrigger=} [properties] Properties to set
                         */
                        function EventTrigger(properties) {
                            this.eventFilters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EventTrigger trigger.
                         * @member {string} trigger
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.trigger = "";
    
                        /**
                         * EventTrigger triggerRegion.
                         * @member {string} triggerRegion
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.triggerRegion = "";
    
                        /**
                         * EventTrigger eventType.
                         * @member {string} eventType
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.eventType = "";
    
                        /**
                         * EventTrigger eventFilters.
                         * @member {Array.<google.cloud.functions.v2alpha.IEventFilter>} eventFilters
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.eventFilters = $util.emptyArray;
    
                        /**
                         * EventTrigger pubsubTopic.
                         * @member {string} pubsubTopic
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.pubsubTopic = "";
    
                        /**
                         * EventTrigger serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.serviceAccountEmail = "";
    
                        /**
                         * EventTrigger retryPolicy.
                         * @member {google.cloud.functions.v2alpha.EventTrigger.RetryPolicy} retryPolicy
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.retryPolicy = 0;
    
                        /**
                         * EventTrigger channel.
                         * @member {string} channel
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.channel = "";
    
                        /**
                         * Creates a new EventTrigger instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v2alpha.IEventTrigger=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.EventTrigger} EventTrigger instance
                         */
                        EventTrigger.create = function create(properties) {
                            return new EventTrigger(properties);
                        };
    
                        /**
                         * Encodes the specified EventTrigger message. Does not implicitly {@link google.cloud.functions.v2alpha.EventTrigger.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v2alpha.IEventTrigger} message EventTrigger message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventTrigger.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.trigger != null && Object.hasOwnProperty.call(message, "trigger"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.trigger);
                            if (message.triggerRegion != null && Object.hasOwnProperty.call(message, "triggerRegion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.triggerRegion);
                            if (message.eventType != null && Object.hasOwnProperty.call(message, "eventType"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.eventType);
                            if (message.eventFilters != null && message.eventFilters.length)
                                for (var i = 0; i < message.eventFilters.length; ++i)
                                    $root.google.cloud.functions.v2alpha.EventFilter.encode(message.eventFilters[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.pubsubTopic != null && Object.hasOwnProperty.call(message, "pubsubTopic"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.pubsubTopic);
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.serviceAccountEmail);
                            if (message.retryPolicy != null && Object.hasOwnProperty.call(message, "retryPolicy"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.retryPolicy);
                            if (message.channel != null && Object.hasOwnProperty.call(message, "channel"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.channel);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EventTrigger message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.EventTrigger.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v2alpha.IEventTrigger} message EventTrigger message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventTrigger.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EventTrigger message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.EventTrigger} EventTrigger
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventTrigger.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.EventTrigger();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.trigger = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.triggerRegion = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.eventType = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.eventFilters && message.eventFilters.length))
                                            message.eventFilters = [];
                                        message.eventFilters.push($root.google.cloud.functions.v2alpha.EventFilter.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        message.pubsubTopic = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.retryPolicy = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.channel = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EventTrigger message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.EventTrigger} EventTrigger
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventTrigger.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EventTrigger message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EventTrigger.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.trigger != null && message.hasOwnProperty("trigger"))
                                if (!$util.isString(message.trigger))
                                    return "trigger: string expected";
                            if (message.triggerRegion != null && message.hasOwnProperty("triggerRegion"))
                                if (!$util.isString(message.triggerRegion))
                                    return "triggerRegion: string expected";
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                if (!$util.isString(message.eventType))
                                    return "eventType: string expected";
                            if (message.eventFilters != null && message.hasOwnProperty("eventFilters")) {
                                if (!Array.isArray(message.eventFilters))
                                    return "eventFilters: array expected";
                                for (var i = 0; i < message.eventFilters.length; ++i) {
                                    var error = $root.google.cloud.functions.v2alpha.EventFilter.verify(message.eventFilters[i]);
                                    if (error)
                                        return "eventFilters." + error;
                                }
                            }
                            if (message.pubsubTopic != null && message.hasOwnProperty("pubsubTopic"))
                                if (!$util.isString(message.pubsubTopic))
                                    return "pubsubTopic: string expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.retryPolicy != null && message.hasOwnProperty("retryPolicy"))
                                switch (message.retryPolicy) {
                                default:
                                    return "retryPolicy: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.channel != null && message.hasOwnProperty("channel"))
                                if (!$util.isString(message.channel))
                                    return "channel: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EventTrigger message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.EventTrigger} EventTrigger
                         */
                        EventTrigger.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.EventTrigger)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.EventTrigger();
                            if (object.trigger != null)
                                message.trigger = String(object.trigger);
                            if (object.triggerRegion != null)
                                message.triggerRegion = String(object.triggerRegion);
                            if (object.eventType != null)
                                message.eventType = String(object.eventType);
                            if (object.eventFilters) {
                                if (!Array.isArray(object.eventFilters))
                                    throw TypeError(".google.cloud.functions.v2alpha.EventTrigger.eventFilters: array expected");
                                message.eventFilters = [];
                                for (var i = 0; i < object.eventFilters.length; ++i) {
                                    if (typeof object.eventFilters[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2alpha.EventTrigger.eventFilters: object expected");
                                    message.eventFilters[i] = $root.google.cloud.functions.v2alpha.EventFilter.fromObject(object.eventFilters[i]);
                                }
                            }
                            if (object.pubsubTopic != null)
                                message.pubsubTopic = String(object.pubsubTopic);
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            switch (object.retryPolicy) {
                            default:
                                if (typeof object.retryPolicy === "number") {
                                    message.retryPolicy = object.retryPolicy;
                                    break;
                                }
                                break;
                            case "RETRY_POLICY_UNSPECIFIED":
                            case 0:
                                message.retryPolicy = 0;
                                break;
                            case "RETRY_POLICY_DO_NOT_RETRY":
                            case 1:
                                message.retryPolicy = 1;
                                break;
                            case "RETRY_POLICY_RETRY":
                            case 2:
                                message.retryPolicy = 2;
                                break;
                            }
                            if (object.channel != null)
                                message.channel = String(object.channel);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EventTrigger message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v2alpha.EventTrigger} message EventTrigger
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EventTrigger.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.eventFilters = [];
                            if (options.defaults) {
                                object.trigger = "";
                                object.triggerRegion = "";
                                object.eventType = "";
                                object.pubsubTopic = "";
                                object.serviceAccountEmail = "";
                                object.retryPolicy = options.enums === String ? "RETRY_POLICY_UNSPECIFIED" : 0;
                                object.channel = "";
                            }
                            if (message.trigger != null && message.hasOwnProperty("trigger"))
                                object.trigger = message.trigger;
                            if (message.triggerRegion != null && message.hasOwnProperty("triggerRegion"))
                                object.triggerRegion = message.triggerRegion;
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                object.eventType = message.eventType;
                            if (message.eventFilters && message.eventFilters.length) {
                                object.eventFilters = [];
                                for (var j = 0; j < message.eventFilters.length; ++j)
                                    object.eventFilters[j] = $root.google.cloud.functions.v2alpha.EventFilter.toObject(message.eventFilters[j], options);
                            }
                            if (message.pubsubTopic != null && message.hasOwnProperty("pubsubTopic"))
                                object.pubsubTopic = message.pubsubTopic;
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.retryPolicy != null && message.hasOwnProperty("retryPolicy"))
                                object.retryPolicy = options.enums === String ? $root.google.cloud.functions.v2alpha.EventTrigger.RetryPolicy[message.retryPolicy] === undefined ? message.retryPolicy : $root.google.cloud.functions.v2alpha.EventTrigger.RetryPolicy[message.retryPolicy] : message.retryPolicy;
                            if (message.channel != null && message.hasOwnProperty("channel"))
                                object.channel = message.channel;
                            return object;
                        };
    
                        /**
                         * Converts this EventTrigger to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EventTrigger.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EventTrigger
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.EventTrigger
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EventTrigger.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.EventTrigger";
                        };
    
                        /**
                         * RetryPolicy enum.
                         * @name google.cloud.functions.v2alpha.EventTrigger.RetryPolicy
                         * @enum {number}
                         * @property {number} RETRY_POLICY_UNSPECIFIED=0 RETRY_POLICY_UNSPECIFIED value
                         * @property {number} RETRY_POLICY_DO_NOT_RETRY=1 RETRY_POLICY_DO_NOT_RETRY value
                         * @property {number} RETRY_POLICY_RETRY=2 RETRY_POLICY_RETRY value
                         */
                        EventTrigger.RetryPolicy = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RETRY_POLICY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RETRY_POLICY_DO_NOT_RETRY"] = 1;
                            values[valuesById[2] = "RETRY_POLICY_RETRY"] = 2;
                            return values;
                        })();
    
                        return EventTrigger;
                    })();
    
                    v2alpha.EventFilter = (function() {
    
                        /**
                         * Properties of an EventFilter.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IEventFilter
                         * @property {string|null} [attribute] EventFilter attribute
                         * @property {string|null} [value] EventFilter value
                         * @property {string|null} [operator] EventFilter operator
                         */
    
                        /**
                         * Constructs a new EventFilter.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents an EventFilter.
                         * @implements IEventFilter
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IEventFilter=} [properties] Properties to set
                         */
                        function EventFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EventFilter attribute.
                         * @member {string} attribute
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @instance
                         */
                        EventFilter.prototype.attribute = "";
    
                        /**
                         * EventFilter value.
                         * @member {string} value
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @instance
                         */
                        EventFilter.prototype.value = "";
    
                        /**
                         * EventFilter operator.
                         * @member {string} operator
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @instance
                         */
                        EventFilter.prototype.operator = "";
    
                        /**
                         * Creates a new EventFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @static
                         * @param {google.cloud.functions.v2alpha.IEventFilter=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.EventFilter} EventFilter instance
                         */
                        EventFilter.create = function create(properties) {
                            return new EventFilter(properties);
                        };
    
                        /**
                         * Encodes the specified EventFilter message. Does not implicitly {@link google.cloud.functions.v2alpha.EventFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @static
                         * @param {google.cloud.functions.v2alpha.IEventFilter} message EventFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.attribute != null && Object.hasOwnProperty.call(message, "attribute"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.attribute);
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                            if (message.operator != null && Object.hasOwnProperty.call(message, "operator"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.operator);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EventFilter message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.EventFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @static
                         * @param {google.cloud.functions.v2alpha.IEventFilter} message EventFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EventFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.EventFilter} EventFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.EventFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.attribute = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.value = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.operator = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EventFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.EventFilter} EventFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EventFilter message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EventFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.attribute != null && message.hasOwnProperty("attribute"))
                                if (!$util.isString(message.attribute))
                                    return "attribute: string expected";
                            if (message.value != null && message.hasOwnProperty("value"))
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            if (message.operator != null && message.hasOwnProperty("operator"))
                                if (!$util.isString(message.operator))
                                    return "operator: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EventFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.EventFilter} EventFilter
                         */
                        EventFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.EventFilter)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.EventFilter();
                            if (object.attribute != null)
                                message.attribute = String(object.attribute);
                            if (object.value != null)
                                message.value = String(object.value);
                            if (object.operator != null)
                                message.operator = String(object.operator);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EventFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @static
                         * @param {google.cloud.functions.v2alpha.EventFilter} message EventFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EventFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.attribute = "";
                                object.value = "";
                                object.operator = "";
                            }
                            if (message.attribute != null && message.hasOwnProperty("attribute"))
                                object.attribute = message.attribute;
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = message.value;
                            if (message.operator != null && message.hasOwnProperty("operator"))
                                object.operator = message.operator;
                            return object;
                        };
    
                        /**
                         * Converts this EventFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EventFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EventFilter
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.EventFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EventFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.EventFilter";
                        };
    
                        return EventFilter;
                    })();
    
                    v2alpha.GetFunctionRequest = (function() {
    
                        /**
                         * Properties of a GetFunctionRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IGetFunctionRequest
                         * @property {string|null} [name] GetFunctionRequest name
                         */
    
                        /**
                         * Constructs a new GetFunctionRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a GetFunctionRequest.
                         * @implements IGetFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IGetFunctionRequest=} [properties] Properties to set
                         */
                        function GetFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetFunctionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v2alpha.GetFunctionRequest
                         * @instance
                         */
                        GetFunctionRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGetFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.GetFunctionRequest} GetFunctionRequest instance
                         */
                        GetFunctionRequest.create = function create(properties) {
                            return new GetFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetFunctionRequest message. Does not implicitly {@link google.cloud.functions.v2alpha.GetFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGetFunctionRequest} message GetFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.GetFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGetFunctionRequest} message GetFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.GetFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.GetFunctionRequest} GetFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.GetFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.GetFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.GetFunctionRequest} GetFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.GetFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.GetFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.GetFunctionRequest} GetFunctionRequest
                         */
                        GetFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.GetFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.GetFunctionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.GetFunctionRequest} message GetFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.GetFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.GetFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.GetFunctionRequest";
                        };
    
                        return GetFunctionRequest;
                    })();
    
                    v2alpha.ListFunctionsRequest = (function() {
    
                        /**
                         * Properties of a ListFunctionsRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IListFunctionsRequest
                         * @property {string|null} [parent] ListFunctionsRequest parent
                         * @property {number|null} [pageSize] ListFunctionsRequest pageSize
                         * @property {string|null} [pageToken] ListFunctionsRequest pageToken
                         * @property {string|null} [filter] ListFunctionsRequest filter
                         * @property {string|null} [orderBy] ListFunctionsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListFunctionsRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a ListFunctionsRequest.
                         * @implements IListFunctionsRequest
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IListFunctionsRequest=} [properties] Properties to set
                         */
                        function ListFunctionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFunctionsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.parent = "";
    
                        /**
                         * ListFunctionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListFunctionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.pageToken = "";
    
                        /**
                         * ListFunctionsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.filter = "";
    
                        /**
                         * ListFunctionsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListFunctionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IListFunctionsRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.ListFunctionsRequest} ListFunctionsRequest instance
                         */
                        ListFunctionsRequest.create = function create(properties) {
                            return new ListFunctionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListFunctionsRequest message. Does not implicitly {@link google.cloud.functions.v2alpha.ListFunctionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IListFunctionsRequest} message ListFunctionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFunctionsRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.ListFunctionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IListFunctionsRequest} message ListFunctionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFunctionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.ListFunctionsRequest} ListFunctionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.ListFunctionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFunctionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.ListFunctionsRequest} ListFunctionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFunctionsRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFunctionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFunctionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.ListFunctionsRequest} ListFunctionsRequest
                         */
                        ListFunctionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.ListFunctionsRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.ListFunctionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFunctionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.ListFunctionsRequest} message ListFunctionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFunctionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListFunctionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFunctionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFunctionsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFunctionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.ListFunctionsRequest";
                        };
    
                        return ListFunctionsRequest;
                    })();
    
                    v2alpha.ListFunctionsResponse = (function() {
    
                        /**
                         * Properties of a ListFunctionsResponse.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IListFunctionsResponse
                         * @property {Array.<google.cloud.functions.v2alpha.IFunction>|null} [functions] ListFunctionsResponse functions
                         * @property {string|null} [nextPageToken] ListFunctionsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListFunctionsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListFunctionsResponse.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a ListFunctionsResponse.
                         * @implements IListFunctionsResponse
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IListFunctionsResponse=} [properties] Properties to set
                         */
                        function ListFunctionsResponse(properties) {
                            this.functions = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFunctionsResponse functions.
                         * @member {Array.<google.cloud.functions.v2alpha.IFunction>} functions
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @instance
                         */
                        ListFunctionsResponse.prototype.functions = $util.emptyArray;
    
                        /**
                         * ListFunctionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @instance
                         */
                        ListFunctionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListFunctionsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @instance
                         */
                        ListFunctionsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListFunctionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.IListFunctionsResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.ListFunctionsResponse} ListFunctionsResponse instance
                         */
                        ListFunctionsResponse.create = function create(properties) {
                            return new ListFunctionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListFunctionsResponse message. Does not implicitly {@link google.cloud.functions.v2alpha.ListFunctionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.IListFunctionsResponse} message ListFunctionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.functions != null && message.functions.length)
                                for (var i = 0; i < message.functions.length; ++i)
                                    $root.google.cloud.functions.v2alpha.Function.encode(message.functions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFunctionsResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.ListFunctionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.IListFunctionsResponse} message ListFunctionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFunctionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.ListFunctionsResponse} ListFunctionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.ListFunctionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.functions && message.functions.length))
                                            message.functions = [];
                                        message.functions.push($root.google.cloud.functions.v2alpha.Function.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFunctionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.ListFunctionsResponse} ListFunctionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFunctionsResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFunctionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.functions != null && message.hasOwnProperty("functions")) {
                                if (!Array.isArray(message.functions))
                                    return "functions: array expected";
                                for (var i = 0; i < message.functions.length; ++i) {
                                    var error = $root.google.cloud.functions.v2alpha.Function.verify(message.functions[i]);
                                    if (error)
                                        return "functions." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListFunctionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.ListFunctionsResponse} ListFunctionsResponse
                         */
                        ListFunctionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.ListFunctionsResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.ListFunctionsResponse();
                            if (object.functions) {
                                if (!Array.isArray(object.functions))
                                    throw TypeError(".google.cloud.functions.v2alpha.ListFunctionsResponse.functions: array expected");
                                message.functions = [];
                                for (var i = 0; i < object.functions.length; ++i) {
                                    if (typeof object.functions[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2alpha.ListFunctionsResponse.functions: object expected");
                                    message.functions[i] = $root.google.cloud.functions.v2alpha.Function.fromObject(object.functions[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.functions.v2alpha.ListFunctionsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFunctionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.ListFunctionsResponse} message ListFunctionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFunctionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.functions = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.functions && message.functions.length) {
                                object.functions = [];
                                for (var j = 0; j < message.functions.length; ++j)
                                    object.functions[j] = $root.google.cloud.functions.v2alpha.Function.toObject(message.functions[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListFunctionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFunctionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFunctionsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.ListFunctionsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFunctionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.ListFunctionsResponse";
                        };
    
                        return ListFunctionsResponse;
                    })();
    
                    v2alpha.CreateFunctionRequest = (function() {
    
                        /**
                         * Properties of a CreateFunctionRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface ICreateFunctionRequest
                         * @property {string|null} [parent] CreateFunctionRequest parent
                         * @property {google.cloud.functions.v2alpha.IFunction|null} ["function"] CreateFunctionRequest function
                         * @property {string|null} [functionId] CreateFunctionRequest functionId
                         */
    
                        /**
                         * Constructs a new CreateFunctionRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a CreateFunctionRequest.
                         * @implements ICreateFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.ICreateFunctionRequest=} [properties] Properties to set
                         */
                        function CreateFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateFunctionRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @instance
                         */
                        CreateFunctionRequest.prototype.parent = "";
    
                        /**
                         * CreateFunctionRequest function.
                         * @member {google.cloud.functions.v2alpha.IFunction|null|undefined} function
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @instance
                         */
                        CreateFunctionRequest.prototype["function"] = null;
    
                        /**
                         * CreateFunctionRequest functionId.
                         * @member {string} functionId
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @instance
                         */
                        CreateFunctionRequest.prototype.functionId = "";
    
                        /**
                         * Creates a new CreateFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.ICreateFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.CreateFunctionRequest} CreateFunctionRequest instance
                         */
                        CreateFunctionRequest.create = function create(properties) {
                            return new CreateFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateFunctionRequest message. Does not implicitly {@link google.cloud.functions.v2alpha.CreateFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.ICreateFunctionRequest} message CreateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message["function"] != null && Object.hasOwnProperty.call(message, "function"))
                                $root.google.cloud.functions.v2alpha.Function.encode(message["function"], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.functionId != null && Object.hasOwnProperty.call(message, "functionId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.functionId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.CreateFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.ICreateFunctionRequest} message CreateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.CreateFunctionRequest} CreateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.CreateFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message["function"] = $root.google.cloud.functions.v2alpha.Function.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.functionId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.CreateFunctionRequest} CreateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message["function"] != null && message.hasOwnProperty("function")) {
                                var error = $root.google.cloud.functions.v2alpha.Function.verify(message["function"]);
                                if (error)
                                    return "function." + error;
                            }
                            if (message.functionId != null && message.hasOwnProperty("functionId"))
                                if (!$util.isString(message.functionId))
                                    return "functionId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.CreateFunctionRequest} CreateFunctionRequest
                         */
                        CreateFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.CreateFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.CreateFunctionRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object["function"] != null) {
                                if (typeof object["function"] !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.CreateFunctionRequest.function: object expected");
                                message["function"] = $root.google.cloud.functions.v2alpha.Function.fromObject(object["function"]);
                            }
                            if (object.functionId != null)
                                message.functionId = String(object.functionId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.CreateFunctionRequest} message CreateFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object["function"] = null;
                                object.functionId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message["function"] != null && message.hasOwnProperty("function"))
                                object["function"] = $root.google.cloud.functions.v2alpha.Function.toObject(message["function"], options);
                            if (message.functionId != null && message.hasOwnProperty("functionId"))
                                object.functionId = message.functionId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.CreateFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.CreateFunctionRequest";
                        };
    
                        return CreateFunctionRequest;
                    })();
    
                    v2alpha.UpdateFunctionRequest = (function() {
    
                        /**
                         * Properties of an UpdateFunctionRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IUpdateFunctionRequest
                         * @property {google.cloud.functions.v2alpha.IFunction|null} ["function"] UpdateFunctionRequest function
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateFunctionRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateFunctionRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents an UpdateFunctionRequest.
                         * @implements IUpdateFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IUpdateFunctionRequest=} [properties] Properties to set
                         */
                        function UpdateFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateFunctionRequest function.
                         * @member {google.cloud.functions.v2alpha.IFunction|null|undefined} function
                         * @memberof google.cloud.functions.v2alpha.UpdateFunctionRequest
                         * @instance
                         */
                        UpdateFunctionRequest.prototype["function"] = null;
    
                        /**
                         * UpdateFunctionRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.functions.v2alpha.UpdateFunctionRequest
                         * @instance
                         */
                        UpdateFunctionRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IUpdateFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.UpdateFunctionRequest} UpdateFunctionRequest instance
                         */
                        UpdateFunctionRequest.create = function create(properties) {
                            return new UpdateFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateFunctionRequest message. Does not implicitly {@link google.cloud.functions.v2alpha.UpdateFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IUpdateFunctionRequest} message UpdateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message["function"] != null && Object.hasOwnProperty.call(message, "function"))
                                $root.google.cloud.functions.v2alpha.Function.encode(message["function"], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.UpdateFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IUpdateFunctionRequest} message UpdateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.UpdateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.UpdateFunctionRequest} UpdateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.UpdateFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message["function"] = $root.google.cloud.functions.v2alpha.Function.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.UpdateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.UpdateFunctionRequest} UpdateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.UpdateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message["function"] != null && message.hasOwnProperty("function")) {
                                var error = $root.google.cloud.functions.v2alpha.Function.verify(message["function"]);
                                if (error)
                                    return "function." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.UpdateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.UpdateFunctionRequest} UpdateFunctionRequest
                         */
                        UpdateFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.UpdateFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.UpdateFunctionRequest();
                            if (object["function"] != null) {
                                if (typeof object["function"] !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.UpdateFunctionRequest.function: object expected");
                                message["function"] = $root.google.cloud.functions.v2alpha.Function.fromObject(object["function"]);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.UpdateFunctionRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.UpdateFunctionRequest} message UpdateFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object["function"] = null;
                                object.updateMask = null;
                            }
                            if (message["function"] != null && message.hasOwnProperty("function"))
                                object["function"] = $root.google.cloud.functions.v2alpha.Function.toObject(message["function"], options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.UpdateFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.UpdateFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.UpdateFunctionRequest";
                        };
    
                        return UpdateFunctionRequest;
                    })();
    
                    v2alpha.DeleteFunctionRequest = (function() {
    
                        /**
                         * Properties of a DeleteFunctionRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IDeleteFunctionRequest
                         * @property {string|null} [name] DeleteFunctionRequest name
                         */
    
                        /**
                         * Constructs a new DeleteFunctionRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a DeleteFunctionRequest.
                         * @implements IDeleteFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IDeleteFunctionRequest=} [properties] Properties to set
                         */
                        function DeleteFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteFunctionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v2alpha.DeleteFunctionRequest
                         * @instance
                         */
                        DeleteFunctionRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IDeleteFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.DeleteFunctionRequest} DeleteFunctionRequest instance
                         */
                        DeleteFunctionRequest.create = function create(properties) {
                            return new DeleteFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteFunctionRequest message. Does not implicitly {@link google.cloud.functions.v2alpha.DeleteFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IDeleteFunctionRequest} message DeleteFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.DeleteFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IDeleteFunctionRequest} message DeleteFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.DeleteFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.DeleteFunctionRequest} DeleteFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.DeleteFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.DeleteFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.DeleteFunctionRequest} DeleteFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.DeleteFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.DeleteFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.DeleteFunctionRequest} DeleteFunctionRequest
                         */
                        DeleteFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.DeleteFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.DeleteFunctionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.DeleteFunctionRequest} message DeleteFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.DeleteFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.DeleteFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.DeleteFunctionRequest";
                        };
    
                        return DeleteFunctionRequest;
                    })();
    
                    v2alpha.GenerateUploadUrlRequest = (function() {
    
                        /**
                         * Properties of a GenerateUploadUrlRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IGenerateUploadUrlRequest
                         * @property {string|null} [parent] GenerateUploadUrlRequest parent
                         * @property {string|null} [kmsKeyName] GenerateUploadUrlRequest kmsKeyName
                         */
    
                        /**
                         * Constructs a new GenerateUploadUrlRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a GenerateUploadUrlRequest.
                         * @implements IGenerateUploadUrlRequest
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IGenerateUploadUrlRequest=} [properties] Properties to set
                         */
                        function GenerateUploadUrlRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateUploadUrlRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlRequest
                         * @instance
                         */
                        GenerateUploadUrlRequest.prototype.parent = "";
    
                        /**
                         * GenerateUploadUrlRequest kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlRequest
                         * @instance
                         */
                        GenerateUploadUrlRequest.prototype.kmsKeyName = "";
    
                        /**
                         * Creates a new GenerateUploadUrlRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGenerateUploadUrlRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.GenerateUploadUrlRequest} GenerateUploadUrlRequest instance
                         */
                        GenerateUploadUrlRequest.create = function create(properties) {
                            return new GenerateUploadUrlRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlRequest message. Does not implicitly {@link google.cloud.functions.v2alpha.GenerateUploadUrlRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGenerateUploadUrlRequest} message GenerateUploadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.kmsKeyName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.GenerateUploadUrlRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGenerateUploadUrlRequest} message GenerateUploadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.GenerateUploadUrlRequest} GenerateUploadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.GenerateUploadUrlRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.GenerateUploadUrlRequest} GenerateUploadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateUploadUrlRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateUploadUrlRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateUploadUrlRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.GenerateUploadUrlRequest} GenerateUploadUrlRequest
                         */
                        GenerateUploadUrlRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.GenerateUploadUrlRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.GenerateUploadUrlRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateUploadUrlRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.GenerateUploadUrlRequest} message GenerateUploadUrlRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateUploadUrlRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.kmsKeyName = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateUploadUrlRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateUploadUrlRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateUploadUrlRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateUploadUrlRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.GenerateUploadUrlRequest";
                        };
    
                        return GenerateUploadUrlRequest;
                    })();
    
                    v2alpha.GenerateUploadUrlResponse = (function() {
    
                        /**
                         * Properties of a GenerateUploadUrlResponse.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IGenerateUploadUrlResponse
                         * @property {string|null} [uploadUrl] GenerateUploadUrlResponse uploadUrl
                         * @property {google.cloud.functions.v2alpha.IStorageSource|null} [storageSource] GenerateUploadUrlResponse storageSource
                         */
    
                        /**
                         * Constructs a new GenerateUploadUrlResponse.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a GenerateUploadUrlResponse.
                         * @implements IGenerateUploadUrlResponse
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IGenerateUploadUrlResponse=} [properties] Properties to set
                         */
                        function GenerateUploadUrlResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateUploadUrlResponse uploadUrl.
                         * @member {string} uploadUrl
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlResponse
                         * @instance
                         */
                        GenerateUploadUrlResponse.prototype.uploadUrl = "";
    
                        /**
                         * GenerateUploadUrlResponse storageSource.
                         * @member {google.cloud.functions.v2alpha.IStorageSource|null|undefined} storageSource
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlResponse
                         * @instance
                         */
                        GenerateUploadUrlResponse.prototype.storageSource = null;
    
                        /**
                         * Creates a new GenerateUploadUrlResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGenerateUploadUrlResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.GenerateUploadUrlResponse} GenerateUploadUrlResponse instance
                         */
                        GenerateUploadUrlResponse.create = function create(properties) {
                            return new GenerateUploadUrlResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlResponse message. Does not implicitly {@link google.cloud.functions.v2alpha.GenerateUploadUrlResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGenerateUploadUrlResponse} message GenerateUploadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uploadUrl != null && Object.hasOwnProperty.call(message, "uploadUrl"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uploadUrl);
                            if (message.storageSource != null && Object.hasOwnProperty.call(message, "storageSource"))
                                $root.google.cloud.functions.v2alpha.StorageSource.encode(message.storageSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.GenerateUploadUrlResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGenerateUploadUrlResponse} message GenerateUploadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.GenerateUploadUrlResponse} GenerateUploadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.GenerateUploadUrlResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uploadUrl = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.storageSource = $root.google.cloud.functions.v2alpha.StorageSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.GenerateUploadUrlResponse} GenerateUploadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateUploadUrlResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateUploadUrlResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uploadUrl != null && message.hasOwnProperty("uploadUrl"))
                                if (!$util.isString(message.uploadUrl))
                                    return "uploadUrl: string expected";
                            if (message.storageSource != null && message.hasOwnProperty("storageSource")) {
                                var error = $root.google.cloud.functions.v2alpha.StorageSource.verify(message.storageSource);
                                if (error)
                                    return "storageSource." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GenerateUploadUrlResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.GenerateUploadUrlResponse} GenerateUploadUrlResponse
                         */
                        GenerateUploadUrlResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.GenerateUploadUrlResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.GenerateUploadUrlResponse();
                            if (object.uploadUrl != null)
                                message.uploadUrl = String(object.uploadUrl);
                            if (object.storageSource != null) {
                                if (typeof object.storageSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.GenerateUploadUrlResponse.storageSource: object expected");
                                message.storageSource = $root.google.cloud.functions.v2alpha.StorageSource.fromObject(object.storageSource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateUploadUrlResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.GenerateUploadUrlResponse} message GenerateUploadUrlResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateUploadUrlResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.uploadUrl = "";
                                object.storageSource = null;
                            }
                            if (message.uploadUrl != null && message.hasOwnProperty("uploadUrl"))
                                object.uploadUrl = message.uploadUrl;
                            if (message.storageSource != null && message.hasOwnProperty("storageSource"))
                                object.storageSource = $root.google.cloud.functions.v2alpha.StorageSource.toObject(message.storageSource, options);
                            return object;
                        };
    
                        /**
                         * Converts this GenerateUploadUrlResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateUploadUrlResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateUploadUrlResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.GenerateUploadUrlResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateUploadUrlResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.GenerateUploadUrlResponse";
                        };
    
                        return GenerateUploadUrlResponse;
                    })();
    
                    v2alpha.GenerateDownloadUrlRequest = (function() {
    
                        /**
                         * Properties of a GenerateDownloadUrlRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IGenerateDownloadUrlRequest
                         * @property {string|null} [name] GenerateDownloadUrlRequest name
                         */
    
                        /**
                         * Constructs a new GenerateDownloadUrlRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a GenerateDownloadUrlRequest.
                         * @implements IGenerateDownloadUrlRequest
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IGenerateDownloadUrlRequest=} [properties] Properties to set
                         */
                        function GenerateDownloadUrlRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateDownloadUrlRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlRequest
                         * @instance
                         */
                        GenerateDownloadUrlRequest.prototype.name = "";
    
                        /**
                         * Creates a new GenerateDownloadUrlRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGenerateDownloadUrlRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest instance
                         */
                        GenerateDownloadUrlRequest.create = function create(properties) {
                            return new GenerateDownloadUrlRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlRequest message. Does not implicitly {@link google.cloud.functions.v2alpha.GenerateDownloadUrlRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGenerateDownloadUrlRequest} message GenerateDownloadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.GenerateDownloadUrlRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGenerateDownloadUrlRequest} message GenerateDownloadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.GenerateDownloadUrlRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateDownloadUrlRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateDownloadUrlRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateDownloadUrlRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest
                         */
                        GenerateDownloadUrlRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.GenerateDownloadUrlRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.GenerateDownloadUrlRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateDownloadUrlRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.GenerateDownloadUrlRequest} message GenerateDownloadUrlRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateDownloadUrlRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateDownloadUrlRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateDownloadUrlRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateDownloadUrlRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateDownloadUrlRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.GenerateDownloadUrlRequest";
                        };
    
                        return GenerateDownloadUrlRequest;
                    })();
    
                    v2alpha.GenerateDownloadUrlResponse = (function() {
    
                        /**
                         * Properties of a GenerateDownloadUrlResponse.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IGenerateDownloadUrlResponse
                         * @property {string|null} [downloadUrl] GenerateDownloadUrlResponse downloadUrl
                         */
    
                        /**
                         * Constructs a new GenerateDownloadUrlResponse.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a GenerateDownloadUrlResponse.
                         * @implements IGenerateDownloadUrlResponse
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IGenerateDownloadUrlResponse=} [properties] Properties to set
                         */
                        function GenerateDownloadUrlResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateDownloadUrlResponse downloadUrl.
                         * @member {string} downloadUrl
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlResponse
                         * @instance
                         */
                        GenerateDownloadUrlResponse.prototype.downloadUrl = "";
    
                        /**
                         * Creates a new GenerateDownloadUrlResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGenerateDownloadUrlResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse instance
                         */
                        GenerateDownloadUrlResponse.create = function create(properties) {
                            return new GenerateDownloadUrlResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlResponse message. Does not implicitly {@link google.cloud.functions.v2alpha.GenerateDownloadUrlResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGenerateDownloadUrlResponse} message GenerateDownloadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.downloadUrl != null && Object.hasOwnProperty.call(message, "downloadUrl"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.downloadUrl);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.GenerateDownloadUrlResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.IGenerateDownloadUrlResponse} message GenerateDownloadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.GenerateDownloadUrlResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.downloadUrl = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateDownloadUrlResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateDownloadUrlResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.downloadUrl != null && message.hasOwnProperty("downloadUrl"))
                                if (!$util.isString(message.downloadUrl))
                                    return "downloadUrl: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateDownloadUrlResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse
                         */
                        GenerateDownloadUrlResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.GenerateDownloadUrlResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.GenerateDownloadUrlResponse();
                            if (object.downloadUrl != null)
                                message.downloadUrl = String(object.downloadUrl);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateDownloadUrlResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.GenerateDownloadUrlResponse} message GenerateDownloadUrlResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateDownloadUrlResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.downloadUrl = "";
                            if (message.downloadUrl != null && message.hasOwnProperty("downloadUrl"))
                                object.downloadUrl = message.downloadUrl;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateDownloadUrlResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateDownloadUrlResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateDownloadUrlResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.GenerateDownloadUrlResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateDownloadUrlResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.GenerateDownloadUrlResponse";
                        };
    
                        return GenerateDownloadUrlResponse;
                    })();
    
                    v2alpha.ListRuntimesRequest = (function() {
    
                        /**
                         * Properties of a ListRuntimesRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IListRuntimesRequest
                         * @property {string|null} [parent] ListRuntimesRequest parent
                         * @property {string|null} [filter] ListRuntimesRequest filter
                         */
    
                        /**
                         * Constructs a new ListRuntimesRequest.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a ListRuntimesRequest.
                         * @implements IListRuntimesRequest
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IListRuntimesRequest=} [properties] Properties to set
                         */
                        function ListRuntimesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRuntimesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesRequest
                         * @instance
                         */
                        ListRuntimesRequest.prototype.parent = "";
    
                        /**
                         * ListRuntimesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesRequest
                         * @instance
                         */
                        ListRuntimesRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListRuntimesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IListRuntimesRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.ListRuntimesRequest} ListRuntimesRequest instance
                         */
                        ListRuntimesRequest.create = function create(properties) {
                            return new ListRuntimesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRuntimesRequest message. Does not implicitly {@link google.cloud.functions.v2alpha.ListRuntimesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IListRuntimesRequest} message ListRuntimesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRuntimesRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.ListRuntimesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.IListRuntimesRequest} message ListRuntimesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRuntimesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.ListRuntimesRequest} ListRuntimesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.ListRuntimesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRuntimesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.ListRuntimesRequest} ListRuntimesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRuntimesRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRuntimesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRuntimesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.ListRuntimesRequest} ListRuntimesRequest
                         */
                        ListRuntimesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.ListRuntimesRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.ListRuntimesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRuntimesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.functions.v2alpha.ListRuntimesRequest} message ListRuntimesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRuntimesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListRuntimesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRuntimesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRuntimesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRuntimesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.ListRuntimesRequest";
                        };
    
                        return ListRuntimesRequest;
                    })();
    
                    v2alpha.ListRuntimesResponse = (function() {
    
                        /**
                         * Properties of a ListRuntimesResponse.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IListRuntimesResponse
                         * @property {Array.<google.cloud.functions.v2alpha.ListRuntimesResponse.IRuntime>|null} [runtimes] ListRuntimesResponse runtimes
                         */
    
                        /**
                         * Constructs a new ListRuntimesResponse.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a ListRuntimesResponse.
                         * @implements IListRuntimesResponse
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IListRuntimesResponse=} [properties] Properties to set
                         */
                        function ListRuntimesResponse(properties) {
                            this.runtimes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRuntimesResponse runtimes.
                         * @member {Array.<google.cloud.functions.v2alpha.ListRuntimesResponse.IRuntime>} runtimes
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                         * @instance
                         */
                        ListRuntimesResponse.prototype.runtimes = $util.emptyArray;
    
                        /**
                         * Creates a new ListRuntimesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.IListRuntimesResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.ListRuntimesResponse} ListRuntimesResponse instance
                         */
                        ListRuntimesResponse.create = function create(properties) {
                            return new ListRuntimesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRuntimesResponse message. Does not implicitly {@link google.cloud.functions.v2alpha.ListRuntimesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.IListRuntimesResponse} message ListRuntimesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.runtimes != null && message.runtimes.length)
                                for (var i = 0; i < message.runtimes.length; ++i)
                                    $root.google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime.encode(message.runtimes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRuntimesResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.ListRuntimesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.IListRuntimesResponse} message ListRuntimesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRuntimesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.ListRuntimesResponse} ListRuntimesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.ListRuntimesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.runtimes && message.runtimes.length))
                                            message.runtimes = [];
                                        message.runtimes.push($root.google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRuntimesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.ListRuntimesResponse} ListRuntimesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRuntimesResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRuntimesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.runtimes != null && message.hasOwnProperty("runtimes")) {
                                if (!Array.isArray(message.runtimes))
                                    return "runtimes: array expected";
                                for (var i = 0; i < message.runtimes.length; ++i) {
                                    var error = $root.google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime.verify(message.runtimes[i]);
                                    if (error)
                                        return "runtimes." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListRuntimesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.ListRuntimesResponse} ListRuntimesResponse
                         */
                        ListRuntimesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.ListRuntimesResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.ListRuntimesResponse();
                            if (object.runtimes) {
                                if (!Array.isArray(object.runtimes))
                                    throw TypeError(".google.cloud.functions.v2alpha.ListRuntimesResponse.runtimes: array expected");
                                message.runtimes = [];
                                for (var i = 0; i < object.runtimes.length; ++i) {
                                    if (typeof object.runtimes[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2alpha.ListRuntimesResponse.runtimes: object expected");
                                    message.runtimes[i] = $root.google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime.fromObject(object.runtimes[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRuntimesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.functions.v2alpha.ListRuntimesResponse} message ListRuntimesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRuntimesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.runtimes = [];
                            if (message.runtimes && message.runtimes.length) {
                                object.runtimes = [];
                                for (var j = 0; j < message.runtimes.length; ++j)
                                    object.runtimes[j] = $root.google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime.toObject(message.runtimes[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListRuntimesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRuntimesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRuntimesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRuntimesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.ListRuntimesResponse";
                        };
    
                        ListRuntimesResponse.Runtime = (function() {
    
                            /**
                             * Properties of a Runtime.
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                             * @interface IRuntime
                             * @property {string|null} [name] Runtime name
                             * @property {string|null} [displayName] Runtime displayName
                             * @property {google.cloud.functions.v2alpha.ListRuntimesResponse.RuntimeStage|null} [stage] Runtime stage
                             * @property {Array.<string>|null} [warnings] Runtime warnings
                             * @property {google.cloud.functions.v2alpha.Environment|null} [environment] Runtime environment
                             */
    
                            /**
                             * Constructs a new Runtime.
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse
                             * @classdesc Represents a Runtime.
                             * @implements IRuntime
                             * @constructor
                             * @param {google.cloud.functions.v2alpha.ListRuntimesResponse.IRuntime=} [properties] Properties to set
                             */
                            function Runtime(properties) {
                                this.warnings = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Runtime name.
                             * @member {string} name
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.name = "";
    
                            /**
                             * Runtime displayName.
                             * @member {string} displayName
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.displayName = "";
    
                            /**
                             * Runtime stage.
                             * @member {google.cloud.functions.v2alpha.ListRuntimesResponse.RuntimeStage} stage
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.stage = 0;
    
                            /**
                             * Runtime warnings.
                             * @member {Array.<string>} warnings
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.warnings = $util.emptyArray;
    
                            /**
                             * Runtime environment.
                             * @member {google.cloud.functions.v2alpha.Environment} environment
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.environment = 0;
    
                            /**
                             * Creates a new Runtime instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @static
                             * @param {google.cloud.functions.v2alpha.ListRuntimesResponse.IRuntime=} [properties] Properties to set
                             * @returns {google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime} Runtime instance
                             */
                            Runtime.create = function create(properties) {
                                return new Runtime(properties);
                            };
    
                            /**
                             * Encodes the specified Runtime message. Does not implicitly {@link google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @static
                             * @param {google.cloud.functions.v2alpha.ListRuntimesResponse.IRuntime} message Runtime message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Runtime.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.stage != null && Object.hasOwnProperty.call(message, "stage"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.stage);
                                if (message.warnings != null && message.warnings.length)
                                    for (var i = 0; i < message.warnings.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.warnings[i]);
                                if (message.environment != null && Object.hasOwnProperty.call(message, "environment"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.environment);
                                if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Runtime message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @static
                             * @param {google.cloud.functions.v2alpha.ListRuntimesResponse.IRuntime} message Runtime message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Runtime.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Runtime message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime} Runtime
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Runtime.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.displayName = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.stage = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.warnings && message.warnings.length))
                                                message.warnings = [];
                                            message.warnings.push(reader.string());
                                            break;
                                        }
                                    case 4: {
                                            message.environment = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Runtime message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime} Runtime
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Runtime.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Runtime message.
                             * @function verify
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Runtime.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.displayName != null && message.hasOwnProperty("displayName"))
                                    if (!$util.isString(message.displayName))
                                        return "displayName: string expected";
                                if (message.stage != null && message.hasOwnProperty("stage"))
                                    switch (message.stage) {
                                    default:
                                        return "stage: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                                if (message.warnings != null && message.hasOwnProperty("warnings")) {
                                    if (!Array.isArray(message.warnings))
                                        return "warnings: array expected";
                                    for (var i = 0; i < message.warnings.length; ++i)
                                        if (!$util.isString(message.warnings[i]))
                                            return "warnings: string[] expected";
                                }
                                if (message.environment != null && message.hasOwnProperty("environment"))
                                    switch (message.environment) {
                                    default:
                                        return "environment: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a Runtime message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime} Runtime
                             */
                            Runtime.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime)
                                    return object;
                                var message = new $root.google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.displayName != null)
                                    message.displayName = String(object.displayName);
                                switch (object.stage) {
                                default:
                                    if (typeof object.stage === "number") {
                                        message.stage = object.stage;
                                        break;
                                    }
                                    break;
                                case "RUNTIME_STAGE_UNSPECIFIED":
                                case 0:
                                    message.stage = 0;
                                    break;
                                case "DEVELOPMENT":
                                case 1:
                                    message.stage = 1;
                                    break;
                                case "ALPHA":
                                case 2:
                                    message.stage = 2;
                                    break;
                                case "BETA":
                                case 3:
                                    message.stage = 3;
                                    break;
                                case "GA":
                                case 4:
                                    message.stage = 4;
                                    break;
                                case "DEPRECATED":
                                case 5:
                                    message.stage = 5;
                                    break;
                                case "DECOMMISSIONED":
                                case 6:
                                    message.stage = 6;
                                    break;
                                }
                                if (object.warnings) {
                                    if (!Array.isArray(object.warnings))
                                        throw TypeError(".google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime.warnings: array expected");
                                    message.warnings = [];
                                    for (var i = 0; i < object.warnings.length; ++i)
                                        message.warnings[i] = String(object.warnings[i]);
                                }
                                switch (object.environment) {
                                default:
                                    if (typeof object.environment === "number") {
                                        message.environment = object.environment;
                                        break;
                                    }
                                    break;
                                case "ENVIRONMENT_UNSPECIFIED":
                                case 0:
                                    message.environment = 0;
                                    break;
                                case "GEN_1":
                                case 1:
                                    message.environment = 1;
                                    break;
                                case "GEN_2":
                                case 2:
                                    message.environment = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Runtime message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @static
                             * @param {google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime} message Runtime
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Runtime.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.warnings = [];
                                if (options.defaults) {
                                    object.name = "";
                                    object.stage = options.enums === String ? "RUNTIME_STAGE_UNSPECIFIED" : 0;
                                    object.environment = options.enums === String ? "ENVIRONMENT_UNSPECIFIED" : 0;
                                    object.displayName = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.stage != null && message.hasOwnProperty("stage"))
                                    object.stage = options.enums === String ? $root.google.cloud.functions.v2alpha.ListRuntimesResponse.RuntimeStage[message.stage] === undefined ? message.stage : $root.google.cloud.functions.v2alpha.ListRuntimesResponse.RuntimeStage[message.stage] : message.stage;
                                if (message.warnings && message.warnings.length) {
                                    object.warnings = [];
                                    for (var j = 0; j < message.warnings.length; ++j)
                                        object.warnings[j] = message.warnings[j];
                                }
                                if (message.environment != null && message.hasOwnProperty("environment"))
                                    object.environment = options.enums === String ? $root.google.cloud.functions.v2alpha.Environment[message.environment] === undefined ? message.environment : $root.google.cloud.functions.v2alpha.Environment[message.environment] : message.environment;
                                if (message.displayName != null && message.hasOwnProperty("displayName"))
                                    object.displayName = message.displayName;
                                return object;
                            };
    
                            /**
                             * Converts this Runtime to JSON.
                             * @function toJSON
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Runtime.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Runtime
                             * @function getTypeUrl
                             * @memberof google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Runtime.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.functions.v2alpha.ListRuntimesResponse.Runtime";
                            };
    
                            return Runtime;
                        })();
    
                        /**
                         * RuntimeStage enum.
                         * @name google.cloud.functions.v2alpha.ListRuntimesResponse.RuntimeStage
                         * @enum {number}
                         * @property {number} RUNTIME_STAGE_UNSPECIFIED=0 RUNTIME_STAGE_UNSPECIFIED value
                         * @property {number} DEVELOPMENT=1 DEVELOPMENT value
                         * @property {number} ALPHA=2 ALPHA value
                         * @property {number} BETA=3 BETA value
                         * @property {number} GA=4 GA value
                         * @property {number} DEPRECATED=5 DEPRECATED value
                         * @property {number} DECOMMISSIONED=6 DECOMMISSIONED value
                         */
                        ListRuntimesResponse.RuntimeStage = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RUNTIME_STAGE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DEVELOPMENT"] = 1;
                            values[valuesById[2] = "ALPHA"] = 2;
                            values[valuesById[3] = "BETA"] = 3;
                            values[valuesById[4] = "GA"] = 4;
                            values[valuesById[5] = "DEPRECATED"] = 5;
                            values[valuesById[6] = "DECOMMISSIONED"] = 6;
                            return values;
                        })();
    
                        return ListRuntimesResponse;
                    })();
    
                    v2alpha.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusDetail] OperationMetadata statusDetail
                         * @property {boolean|null} [cancelRequested] OperationMetadata cancelRequested
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         * @property {google.protobuf.IAny|null} [requestResource] OperationMetadata requestResource
                         * @property {Array.<google.cloud.functions.v2alpha.IStage>|null} [stages] OperationMetadata stages
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            this.stages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusDetail.
                         * @member {string} statusDetail
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusDetail = "";
    
                        /**
                         * OperationMetadata cancelRequested.
                         * @member {boolean} cancelRequested
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.cancelRequested = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * OperationMetadata requestResource.
                         * @member {google.protobuf.IAny|null|undefined} requestResource
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestResource = null;
    
                        /**
                         * OperationMetadata stages.
                         * @member {Array.<google.cloud.functions.v2alpha.IStage>} stages
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.stages = $util.emptyArray;
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @static
                         * @param {google.cloud.functions.v2alpha.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.functions.v2alpha.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @static
                         * @param {google.cloud.functions.v2alpha.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusDetail != null && Object.hasOwnProperty.call(message, "statusDetail"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusDetail);
                            if (message.cancelRequested != null && Object.hasOwnProperty.call(message, "cancelRequested"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.cancelRequested);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            if (message.requestResource != null && Object.hasOwnProperty.call(message, "requestResource"))
                                $root.google.protobuf.Any.encode(message.requestResource, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.stages != null && message.stages.length)
                                for (var i = 0; i < message.stages.length; ++i)
                                    $root.google.cloud.functions.v2alpha.Stage.encode(message.stages[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @static
                         * @param {google.cloud.functions.v2alpha.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusDetail = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.cancelRequested = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.requestResource = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        if (!(message.stages && message.stages.length))
                                            message.stages = [];
                                        message.stages.push($root.google.cloud.functions.v2alpha.Stage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                if (!$util.isString(message.statusDetail))
                                    return "statusDetail: string expected";
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                if (typeof message.cancelRequested !== "boolean")
                                    return "cancelRequested: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            if (message.requestResource != null && message.hasOwnProperty("requestResource")) {
                                var error = $root.google.protobuf.Any.verify(message.requestResource);
                                if (error)
                                    return "requestResource." + error;
                            }
                            if (message.stages != null && message.hasOwnProperty("stages")) {
                                if (!Array.isArray(message.stages))
                                    return "stages: array expected";
                                for (var i = 0; i < message.stages.length; ++i) {
                                    var error = $root.google.cloud.functions.v2alpha.Stage.verify(message.stages[i]);
                                    if (error)
                                        return "stages." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusDetail != null)
                                message.statusDetail = String(object.statusDetail);
                            if (object.cancelRequested != null)
                                message.cancelRequested = Boolean(object.cancelRequested);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            if (object.requestResource != null) {
                                if (typeof object.requestResource !== "object")
                                    throw TypeError(".google.cloud.functions.v2alpha.OperationMetadata.requestResource: object expected");
                                message.requestResource = $root.google.protobuf.Any.fromObject(object.requestResource);
                            }
                            if (object.stages) {
                                if (!Array.isArray(object.stages))
                                    throw TypeError(".google.cloud.functions.v2alpha.OperationMetadata.stages: array expected");
                                message.stages = [];
                                for (var i = 0; i < object.stages.length; ++i) {
                                    if (typeof object.stages[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2alpha.OperationMetadata.stages: object expected");
                                    message.stages[i] = $root.google.cloud.functions.v2alpha.Stage.fromObject(object.stages[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @static
                         * @param {google.cloud.functions.v2alpha.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.stages = [];
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusDetail = "";
                                object.cancelRequested = false;
                                object.apiVersion = "";
                                object.requestResource = null;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                object.statusDetail = message.statusDetail;
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                object.cancelRequested = message.cancelRequested;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            if (message.requestResource != null && message.hasOwnProperty("requestResource"))
                                object.requestResource = $root.google.protobuf.Any.toObject(message.requestResource, options);
                            if (message.stages && message.stages.length) {
                                object.stages = [];
                                for (var j = 0; j < message.stages.length; ++j)
                                    object.stages[j] = $root.google.cloud.functions.v2alpha.Stage.toObject(message.stages[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v2alpha.LocationMetadata = (function() {
    
                        /**
                         * Properties of a LocationMetadata.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface ILocationMetadata
                         * @property {Array.<google.cloud.functions.v2alpha.Environment>|null} [environments] LocationMetadata environments
                         */
    
                        /**
                         * Constructs a new LocationMetadata.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a LocationMetadata.
                         * @implements ILocationMetadata
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.ILocationMetadata=} [properties] Properties to set
                         */
                        function LocationMetadata(properties) {
                            this.environments = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LocationMetadata environments.
                         * @member {Array.<google.cloud.functions.v2alpha.Environment>} environments
                         * @memberof google.cloud.functions.v2alpha.LocationMetadata
                         * @instance
                         */
                        LocationMetadata.prototype.environments = $util.emptyArray;
    
                        /**
                         * Creates a new LocationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.LocationMetadata
                         * @static
                         * @param {google.cloud.functions.v2alpha.ILocationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.LocationMetadata} LocationMetadata instance
                         */
                        LocationMetadata.create = function create(properties) {
                            return new LocationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified LocationMetadata message. Does not implicitly {@link google.cloud.functions.v2alpha.LocationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.LocationMetadata
                         * @static
                         * @param {google.cloud.functions.v2alpha.ILocationMetadata} message LocationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.environments != null && message.environments.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.environments.length; ++i)
                                    writer.int32(message.environments[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LocationMetadata message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.LocationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.LocationMetadata
                         * @static
                         * @param {google.cloud.functions.v2alpha.ILocationMetadata} message LocationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LocationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.LocationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.LocationMetadata} LocationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.LocationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.environments && message.environments.length))
                                            message.environments = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.environments.push(reader.int32());
                                        } else
                                            message.environments.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LocationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.LocationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.LocationMetadata} LocationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LocationMetadata message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.LocationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.environments != null && message.hasOwnProperty("environments")) {
                                if (!Array.isArray(message.environments))
                                    return "environments: array expected";
                                for (var i = 0; i < message.environments.length; ++i)
                                    switch (message.environments[i]) {
                                    default:
                                        return "environments: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LocationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.LocationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.LocationMetadata} LocationMetadata
                         */
                        LocationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.LocationMetadata)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.LocationMetadata();
                            if (object.environments) {
                                if (!Array.isArray(object.environments))
                                    throw TypeError(".google.cloud.functions.v2alpha.LocationMetadata.environments: array expected");
                                message.environments = [];
                                for (var i = 0; i < object.environments.length; ++i)
                                    switch (object.environments[i]) {
                                    default:
                                        if (typeof object.environments[i] === "number") {
                                            message.environments[i] = object.environments[i];
                                            break;
                                        }
                                    case "ENVIRONMENT_UNSPECIFIED":
                                    case 0:
                                        message.environments[i] = 0;
                                        break;
                                    case "GEN_1":
                                    case 1:
                                        message.environments[i] = 1;
                                        break;
                                    case "GEN_2":
                                    case 2:
                                        message.environments[i] = 2;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LocationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.LocationMetadata
                         * @static
                         * @param {google.cloud.functions.v2alpha.LocationMetadata} message LocationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.environments = [];
                            if (message.environments && message.environments.length) {
                                object.environments = [];
                                for (var j = 0; j < message.environments.length; ++j)
                                    object.environments[j] = options.enums === String ? $root.google.cloud.functions.v2alpha.Environment[message.environments[j]] === undefined ? message.environments[j] : $root.google.cloud.functions.v2alpha.Environment[message.environments[j]] : message.environments[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LocationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.LocationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LocationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.LocationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LocationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.LocationMetadata";
                        };
    
                        return LocationMetadata;
                    })();
    
                    v2alpha.Stage = (function() {
    
                        /**
                         * Properties of a Stage.
                         * @memberof google.cloud.functions.v2alpha
                         * @interface IStage
                         * @property {google.cloud.functions.v2alpha.Stage.Name|null} [name] Stage name
                         * @property {string|null} [message] Stage message
                         * @property {google.cloud.functions.v2alpha.Stage.State|null} [state] Stage state
                         * @property {string|null} [resource] Stage resource
                         * @property {string|null} [resourceUri] Stage resourceUri
                         * @property {Array.<google.cloud.functions.v2alpha.IStateMessage>|null} [stateMessages] Stage stateMessages
                         */
    
                        /**
                         * Constructs a new Stage.
                         * @memberof google.cloud.functions.v2alpha
                         * @classdesc Represents a Stage.
                         * @implements IStage
                         * @constructor
                         * @param {google.cloud.functions.v2alpha.IStage=} [properties] Properties to set
                         */
                        function Stage(properties) {
                            this.stateMessages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Stage name.
                         * @member {google.cloud.functions.v2alpha.Stage.Name} name
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @instance
                         */
                        Stage.prototype.name = 0;
    
                        /**
                         * Stage message.
                         * @member {string} message
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @instance
                         */
                        Stage.prototype.message = "";
    
                        /**
                         * Stage state.
                         * @member {google.cloud.functions.v2alpha.Stage.State} state
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @instance
                         */
                        Stage.prototype.state = 0;
    
                        /**
                         * Stage resource.
                         * @member {string} resource
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @instance
                         */
                        Stage.prototype.resource = "";
    
                        /**
                         * Stage resourceUri.
                         * @member {string} resourceUri
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @instance
                         */
                        Stage.prototype.resourceUri = "";
    
                        /**
                         * Stage stateMessages.
                         * @member {Array.<google.cloud.functions.v2alpha.IStateMessage>} stateMessages
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @instance
                         */
                        Stage.prototype.stateMessages = $util.emptyArray;
    
                        /**
                         * Creates a new Stage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @static
                         * @param {google.cloud.functions.v2alpha.IStage=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2alpha.Stage} Stage instance
                         */
                        Stage.create = function create(properties) {
                            return new Stage(properties);
                        };
    
                        /**
                         * Encodes the specified Stage message. Does not implicitly {@link google.cloud.functions.v2alpha.Stage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @static
                         * @param {google.cloud.functions.v2alpha.IStage} message Stage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Stage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.name);
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.resource);
                            if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.resourceUri);
                            if (message.stateMessages != null && message.stateMessages.length)
                                for (var i = 0; i < message.stateMessages.length; ++i)
                                    $root.google.cloud.functions.v2alpha.StateMessage.encode(message.stateMessages[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Stage message, length delimited. Does not implicitly {@link google.cloud.functions.v2alpha.Stage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @static
                         * @param {google.cloud.functions.v2alpha.IStage} message Stage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Stage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Stage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2alpha.Stage} Stage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Stage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2alpha.Stage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.resource = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.resourceUri = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (!(message.stateMessages && message.stateMessages.length))
                                            message.stateMessages = [];
                                        message.stateMessages.push($root.google.cloud.functions.v2alpha.StateMessage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Stage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2alpha.Stage} Stage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Stage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Stage message.
                         * @function verify
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Stage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                switch (message.name) {
                                default:
                                    return "name: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                if (!$util.isString(message.resource))
                                    return "resource: string expected";
                            if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                if (!$util.isString(message.resourceUri))
                                    return "resourceUri: string expected";
                            if (message.stateMessages != null && message.hasOwnProperty("stateMessages")) {
                                if (!Array.isArray(message.stateMessages))
                                    return "stateMessages: array expected";
                                for (var i = 0; i < message.stateMessages.length; ++i) {
                                    var error = $root.google.cloud.functions.v2alpha.StateMessage.verify(message.stateMessages[i]);
                                    if (error)
                                        return "stateMessages." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Stage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2alpha.Stage} Stage
                         */
                        Stage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2alpha.Stage)
                                return object;
                            var message = new $root.google.cloud.functions.v2alpha.Stage();
                            switch (object.name) {
                            default:
                                if (typeof object.name === "number") {
                                    message.name = object.name;
                                    break;
                                }
                                break;
                            case "NAME_UNSPECIFIED":
                            case 0:
                                message.name = 0;
                                break;
                            case "ARTIFACT_REGISTRY":
                            case 1:
                                message.name = 1;
                                break;
                            case "BUILD":
                            case 2:
                                message.name = 2;
                                break;
                            case "SERVICE":
                            case 3:
                                message.name = 3;
                                break;
                            case "TRIGGER":
                            case 4:
                                message.name = 4;
                                break;
                            case "SERVICE_ROLLBACK":
                            case 5:
                                message.name = 5;
                                break;
                            case "TRIGGER_ROLLBACK":
                            case 6:
                                message.name = 6;
                                break;
                            }
                            if (object.message != null)
                                message.message = String(object.message);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "NOT_STARTED":
                            case 1:
                                message.state = 1;
                                break;
                            case "IN_PROGRESS":
                            case 2:
                                message.state = 2;
                                break;
                            case "COMPLETE":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.resource != null)
                                message.resource = String(object.resource);
                            if (object.resourceUri != null)
                                message.resourceUri = String(object.resourceUri);
                            if (object.stateMessages) {
                                if (!Array.isArray(object.stateMessages))
                                    throw TypeError(".google.cloud.functions.v2alpha.Stage.stateMessages: array expected");
                                message.stateMessages = [];
                                for (var i = 0; i < object.stateMessages.length; ++i) {
                                    if (typeof object.stateMessages[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2alpha.Stage.stateMessages: object expected");
                                    message.stateMessages[i] = $root.google.cloud.functions.v2alpha.StateMessage.fromObject(object.stateMessages[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Stage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @static
                         * @param {google.cloud.functions.v2alpha.Stage} message Stage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Stage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.stateMessages = [];
                            if (options.defaults) {
                                object.name = options.enums === String ? "NAME_UNSPECIFIED" : 0;
                                object.message = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.resource = "";
                                object.resourceUri = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = options.enums === String ? $root.google.cloud.functions.v2alpha.Stage.Name[message.name] === undefined ? message.name : $root.google.cloud.functions.v2alpha.Stage.Name[message.name] : message.name;
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.functions.v2alpha.Stage.State[message.state] === undefined ? message.state : $root.google.cloud.functions.v2alpha.Stage.State[message.state] : message.state;
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = message.resource;
                            if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                object.resourceUri = message.resourceUri;
                            if (message.stateMessages && message.stateMessages.length) {
                                object.stateMessages = [];
                                for (var j = 0; j < message.stateMessages.length; ++j)
                                    object.stateMessages[j] = $root.google.cloud.functions.v2alpha.StateMessage.toObject(message.stateMessages[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Stage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Stage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Stage
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2alpha.Stage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Stage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2alpha.Stage";
                        };
    
                        /**
                         * Name enum.
                         * @name google.cloud.functions.v2alpha.Stage.Name
                         * @enum {number}
                         * @property {number} NAME_UNSPECIFIED=0 NAME_UNSPECIFIED value
                         * @property {number} ARTIFACT_REGISTRY=1 ARTIFACT_REGISTRY value
                         * @property {number} BUILD=2 BUILD value
                         * @property {number} SERVICE=3 SERVICE value
                         * @property {number} TRIGGER=4 TRIGGER value
                         * @property {number} SERVICE_ROLLBACK=5 SERVICE_ROLLBACK value
                         * @property {number} TRIGGER_ROLLBACK=6 TRIGGER_ROLLBACK value
                         */
                        Stage.Name = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "NAME_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ARTIFACT_REGISTRY"] = 1;
                            values[valuesById[2] = "BUILD"] = 2;
                            values[valuesById[3] = "SERVICE"] = 3;
                            values[valuesById[4] = "TRIGGER"] = 4;
                            values[valuesById[5] = "SERVICE_ROLLBACK"] = 5;
                            values[valuesById[6] = "TRIGGER_ROLLBACK"] = 6;
                            return values;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.functions.v2alpha.Stage.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} NOT_STARTED=1 NOT_STARTED value
                         * @property {number} IN_PROGRESS=2 IN_PROGRESS value
                         * @property {number} COMPLETE=3 COMPLETE value
                         */
                        Stage.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NOT_STARTED"] = 1;
                            values[valuesById[2] = "IN_PROGRESS"] = 2;
                            values[valuesById[3] = "COMPLETE"] = 3;
                            return values;
                        })();
    
                        return Stage;
                    })();
    
                    return v2alpha;
                })();
    
                functions.v2beta = (function() {
    
                    /**
                     * Namespace v2beta.
                     * @memberof google.cloud.functions
                     * @namespace
                     */
                    var v2beta = {};
    
                    v2beta.FunctionService = (function() {
    
                        /**
                         * Constructs a new FunctionService service.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a FunctionService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function FunctionService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (FunctionService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = FunctionService;
    
                        /**
                         * Creates new FunctionService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {FunctionService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        FunctionService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2beta.FunctionService|getFunction}.
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @typedef GetFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2beta.Function} [response] Function
                         */
    
                        /**
                         * Calls GetFunction.
                         * @function getFunction
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IGetFunctionRequest} request GetFunctionRequest message or plain object
                         * @param {google.cloud.functions.v2beta.FunctionService.GetFunctionCallback} callback Node-style callback called with the error, if any, and Function
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.getFunction = function getFunction(request, callback) {
                            return this.rpcCall(getFunction, $root.google.cloud.functions.v2beta.GetFunctionRequest, $root.google.cloud.functions.v2beta.Function, request, callback);
                        }, "name", { value: "GetFunction" });
    
                        /**
                         * Calls GetFunction.
                         * @function getFunction
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IGetFunctionRequest} request GetFunctionRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2beta.Function>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2beta.FunctionService|listFunctions}.
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @typedef ListFunctionsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2beta.ListFunctionsResponse} [response] ListFunctionsResponse
                         */
    
                        /**
                         * Calls ListFunctions.
                         * @function listFunctions
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IListFunctionsRequest} request ListFunctionsRequest message or plain object
                         * @param {google.cloud.functions.v2beta.FunctionService.ListFunctionsCallback} callback Node-style callback called with the error, if any, and ListFunctionsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.listFunctions = function listFunctions(request, callback) {
                            return this.rpcCall(listFunctions, $root.google.cloud.functions.v2beta.ListFunctionsRequest, $root.google.cloud.functions.v2beta.ListFunctionsResponse, request, callback);
                        }, "name", { value: "ListFunctions" });
    
                        /**
                         * Calls ListFunctions.
                         * @function listFunctions
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IListFunctionsRequest} request ListFunctionsRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2beta.ListFunctionsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2beta.FunctionService|createFunction}.
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @typedef CreateFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateFunction.
                         * @function createFunction
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.ICreateFunctionRequest} request CreateFunctionRequest message or plain object
                         * @param {google.cloud.functions.v2beta.FunctionService.CreateFunctionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.createFunction = function createFunction(request, callback) {
                            return this.rpcCall(createFunction, $root.google.cloud.functions.v2beta.CreateFunctionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateFunction" });
    
                        /**
                         * Calls CreateFunction.
                         * @function createFunction
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.ICreateFunctionRequest} request CreateFunctionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2beta.FunctionService|updateFunction}.
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @typedef UpdateFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateFunction.
                         * @function updateFunction
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IUpdateFunctionRequest} request UpdateFunctionRequest message or plain object
                         * @param {google.cloud.functions.v2beta.FunctionService.UpdateFunctionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.updateFunction = function updateFunction(request, callback) {
                            return this.rpcCall(updateFunction, $root.google.cloud.functions.v2beta.UpdateFunctionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateFunction" });
    
                        /**
                         * Calls UpdateFunction.
                         * @function updateFunction
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IUpdateFunctionRequest} request UpdateFunctionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2beta.FunctionService|deleteFunction}.
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @typedef DeleteFunctionCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteFunction.
                         * @function deleteFunction
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IDeleteFunctionRequest} request DeleteFunctionRequest message or plain object
                         * @param {google.cloud.functions.v2beta.FunctionService.DeleteFunctionCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.deleteFunction = function deleteFunction(request, callback) {
                            return this.rpcCall(deleteFunction, $root.google.cloud.functions.v2beta.DeleteFunctionRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteFunction" });
    
                        /**
                         * Calls DeleteFunction.
                         * @function deleteFunction
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IDeleteFunctionRequest} request DeleteFunctionRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2beta.FunctionService|generateUploadUrl}.
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @typedef GenerateUploadUrlCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2beta.GenerateUploadUrlResponse} [response] GenerateUploadUrlResponse
                         */
    
                        /**
                         * Calls GenerateUploadUrl.
                         * @function generateUploadUrl
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IGenerateUploadUrlRequest} request GenerateUploadUrlRequest message or plain object
                         * @param {google.cloud.functions.v2beta.FunctionService.GenerateUploadUrlCallback} callback Node-style callback called with the error, if any, and GenerateUploadUrlResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.generateUploadUrl = function generateUploadUrl(request, callback) {
                            return this.rpcCall(generateUploadUrl, $root.google.cloud.functions.v2beta.GenerateUploadUrlRequest, $root.google.cloud.functions.v2beta.GenerateUploadUrlResponse, request, callback);
                        }, "name", { value: "GenerateUploadUrl" });
    
                        /**
                         * Calls GenerateUploadUrl.
                         * @function generateUploadUrl
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IGenerateUploadUrlRequest} request GenerateUploadUrlRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2beta.GenerateUploadUrlResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2beta.FunctionService|generateDownloadUrl}.
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @typedef GenerateDownloadUrlCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2beta.GenerateDownloadUrlResponse} [response] GenerateDownloadUrlResponse
                         */
    
                        /**
                         * Calls GenerateDownloadUrl.
                         * @function generateDownloadUrl
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IGenerateDownloadUrlRequest} request GenerateDownloadUrlRequest message or plain object
                         * @param {google.cloud.functions.v2beta.FunctionService.GenerateDownloadUrlCallback} callback Node-style callback called with the error, if any, and GenerateDownloadUrlResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.generateDownloadUrl = function generateDownloadUrl(request, callback) {
                            return this.rpcCall(generateDownloadUrl, $root.google.cloud.functions.v2beta.GenerateDownloadUrlRequest, $root.google.cloud.functions.v2beta.GenerateDownloadUrlResponse, request, callback);
                        }, "name", { value: "GenerateDownloadUrl" });
    
                        /**
                         * Calls GenerateDownloadUrl.
                         * @function generateDownloadUrl
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IGenerateDownloadUrlRequest} request GenerateDownloadUrlRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2beta.GenerateDownloadUrlResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.functions.v2beta.FunctionService|listRuntimes}.
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @typedef ListRuntimesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.functions.v2beta.ListRuntimesResponse} [response] ListRuntimesResponse
                         */
    
                        /**
                         * Calls ListRuntimes.
                         * @function listRuntimes
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IListRuntimesRequest} request ListRuntimesRequest message or plain object
                         * @param {google.cloud.functions.v2beta.FunctionService.ListRuntimesCallback} callback Node-style callback called with the error, if any, and ListRuntimesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(FunctionService.prototype.listRuntimes = function listRuntimes(request, callback) {
                            return this.rpcCall(listRuntimes, $root.google.cloud.functions.v2beta.ListRuntimesRequest, $root.google.cloud.functions.v2beta.ListRuntimesResponse, request, callback);
                        }, "name", { value: "ListRuntimes" });
    
                        /**
                         * Calls ListRuntimes.
                         * @function listRuntimes
                         * @memberof google.cloud.functions.v2beta.FunctionService
                         * @instance
                         * @param {google.cloud.functions.v2beta.IListRuntimesRequest} request ListRuntimesRequest message or plain object
                         * @returns {Promise<google.cloud.functions.v2beta.ListRuntimesResponse>} Promise
                         * @variation 2
                         */
    
                        return FunctionService;
                    })();
    
                    /**
                     * Environment enum.
                     * @name google.cloud.functions.v2beta.Environment
                     * @enum {number}
                     * @property {number} ENVIRONMENT_UNSPECIFIED=0 ENVIRONMENT_UNSPECIFIED value
                     * @property {number} GEN_1=1 GEN_1 value
                     * @property {number} GEN_2=2 GEN_2 value
                     */
                    v2beta.Environment = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ENVIRONMENT_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "GEN_1"] = 1;
                        values[valuesById[2] = "GEN_2"] = 2;
                        return values;
                    })();
    
                    v2beta.Function = (function() {
    
                        /**
                         * Properties of a Function.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IFunction
                         * @property {string|null} [name] Function name
                         * @property {string|null} [description] Function description
                         * @property {google.cloud.functions.v2beta.IBuildConfig|null} [buildConfig] Function buildConfig
                         * @property {google.cloud.functions.v2beta.IServiceConfig|null} [serviceConfig] Function serviceConfig
                         * @property {google.cloud.functions.v2beta.IEventTrigger|null} [eventTrigger] Function eventTrigger
                         * @property {google.cloud.functions.v2beta.Function.State|null} [state] Function state
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Function updateTime
                         * @property {Object.<string,string>|null} [labels] Function labels
                         * @property {Array.<google.cloud.functions.v2beta.IStateMessage>|null} [stateMessages] Function stateMessages
                         * @property {google.cloud.functions.v2beta.Environment|null} [environment] Function environment
                         * @property {string|null} [url] Function url
                         * @property {string|null} [kmsKeyName] Function kmsKeyName
                         */
    
                        /**
                         * Constructs a new Function.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a Function.
                         * @implements IFunction
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IFunction=} [properties] Properties to set
                         */
                        function Function(properties) {
                            this.labels = {};
                            this.stateMessages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Function name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         */
                        Function.prototype.name = "";
    
                        /**
                         * Function description.
                         * @member {string} description
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         */
                        Function.prototype.description = "";
    
                        /**
                         * Function buildConfig.
                         * @member {google.cloud.functions.v2beta.IBuildConfig|null|undefined} buildConfig
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         */
                        Function.prototype.buildConfig = null;
    
                        /**
                         * Function serviceConfig.
                         * @member {google.cloud.functions.v2beta.IServiceConfig|null|undefined} serviceConfig
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         */
                        Function.prototype.serviceConfig = null;
    
                        /**
                         * Function eventTrigger.
                         * @member {google.cloud.functions.v2beta.IEventTrigger|null|undefined} eventTrigger
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         */
                        Function.prototype.eventTrigger = null;
    
                        /**
                         * Function state.
                         * @member {google.cloud.functions.v2beta.Function.State} state
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         */
                        Function.prototype.state = 0;
    
                        /**
                         * Function updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         */
                        Function.prototype.updateTime = null;
    
                        /**
                         * Function labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         */
                        Function.prototype.labels = $util.emptyObject;
    
                        /**
                         * Function stateMessages.
                         * @member {Array.<google.cloud.functions.v2beta.IStateMessage>} stateMessages
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         */
                        Function.prototype.stateMessages = $util.emptyArray;
    
                        /**
                         * Function environment.
                         * @member {google.cloud.functions.v2beta.Environment} environment
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         */
                        Function.prototype.environment = 0;
    
                        /**
                         * Function url.
                         * @member {string} url
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         */
                        Function.prototype.url = "";
    
                        /**
                         * Function kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         */
                        Function.prototype.kmsKeyName = "";
    
                        /**
                         * Creates a new Function instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.Function
                         * @static
                         * @param {google.cloud.functions.v2beta.IFunction=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.Function} Function instance
                         */
                        Function.create = function create(properties) {
                            return new Function(properties);
                        };
    
                        /**
                         * Encodes the specified Function message. Does not implicitly {@link google.cloud.functions.v2beta.Function.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.Function
                         * @static
                         * @param {google.cloud.functions.v2beta.IFunction} message Function message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Function.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.buildConfig != null && Object.hasOwnProperty.call(message, "buildConfig"))
                                $root.google.cloud.functions.v2beta.BuildConfig.encode(message.buildConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.serviceConfig != null && Object.hasOwnProperty.call(message, "serviceConfig"))
                                $root.google.cloud.functions.v2beta.ServiceConfig.encode(message.serviceConfig, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.eventTrigger != null && Object.hasOwnProperty.call(message, "eventTrigger"))
                                $root.google.cloud.functions.v2beta.EventTrigger.encode(message.eventTrigger, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.stateMessages != null && message.stateMessages.length)
                                for (var i = 0; i < message.stateMessages.length; ++i)
                                    $root.google.cloud.functions.v2beta.StateMessage.encode(message.stateMessages[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.environment != null && Object.hasOwnProperty.call(message, "environment"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.environment);
                            if (message.url != null && Object.hasOwnProperty.call(message, "url"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.url);
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 25, wireType 2 =*/202).string(message.kmsKeyName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Function message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.Function.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.Function
                         * @static
                         * @param {google.cloud.functions.v2beta.IFunction} message Function message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Function.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Function message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.Function
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.Function} Function
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Function.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.Function(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.buildConfig = $root.google.cloud.functions.v2beta.BuildConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.serviceConfig = $root.google.cloud.functions.v2beta.ServiceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.eventTrigger = $root.google.cloud.functions.v2beta.EventTrigger.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 9: {
                                        if (!(message.stateMessages && message.stateMessages.length))
                                            message.stateMessages = [];
                                        message.stateMessages.push($root.google.cloud.functions.v2beta.StateMessage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 10: {
                                        message.environment = reader.int32();
                                        break;
                                    }
                                case 14: {
                                        message.url = reader.string();
                                        break;
                                    }
                                case 25: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Function message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.Function
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.Function} Function
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Function.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Function message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.Function
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Function.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.buildConfig != null && message.hasOwnProperty("buildConfig")) {
                                var error = $root.google.cloud.functions.v2beta.BuildConfig.verify(message.buildConfig);
                                if (error)
                                    return "buildConfig." + error;
                            }
                            if (message.serviceConfig != null && message.hasOwnProperty("serviceConfig")) {
                                var error = $root.google.cloud.functions.v2beta.ServiceConfig.verify(message.serviceConfig);
                                if (error)
                                    return "serviceConfig." + error;
                            }
                            if (message.eventTrigger != null && message.hasOwnProperty("eventTrigger")) {
                                var error = $root.google.cloud.functions.v2beta.EventTrigger.verify(message.eventTrigger);
                                if (error)
                                    return "eventTrigger." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.stateMessages != null && message.hasOwnProperty("stateMessages")) {
                                if (!Array.isArray(message.stateMessages))
                                    return "stateMessages: array expected";
                                for (var i = 0; i < message.stateMessages.length; ++i) {
                                    var error = $root.google.cloud.functions.v2beta.StateMessage.verify(message.stateMessages[i]);
                                    if (error)
                                        return "stateMessages." + error;
                                }
                            }
                            if (message.environment != null && message.hasOwnProperty("environment"))
                                switch (message.environment) {
                                default:
                                    return "environment: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.url != null && message.hasOwnProperty("url"))
                                if (!$util.isString(message.url))
                                    return "url: string expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a Function message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.Function
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.Function} Function
                         */
                        Function.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.Function)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.Function();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.buildConfig != null) {
                                if (typeof object.buildConfig !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.Function.buildConfig: object expected");
                                message.buildConfig = $root.google.cloud.functions.v2beta.BuildConfig.fromObject(object.buildConfig);
                            }
                            if (object.serviceConfig != null) {
                                if (typeof object.serviceConfig !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.Function.serviceConfig: object expected");
                                message.serviceConfig = $root.google.cloud.functions.v2beta.ServiceConfig.fromObject(object.serviceConfig);
                            }
                            if (object.eventTrigger != null) {
                                if (typeof object.eventTrigger !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.Function.eventTrigger: object expected");
                                message.eventTrigger = $root.google.cloud.functions.v2beta.EventTrigger.fromObject(object.eventTrigger);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.state = 1;
                                break;
                            case "FAILED":
                            case 2:
                                message.state = 2;
                                break;
                            case "DEPLOYING":
                            case 3:
                                message.state = 3;
                                break;
                            case "DELETING":
                            case 4:
                                message.state = 4;
                                break;
                            case "UNKNOWN":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.Function.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.Function.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.stateMessages) {
                                if (!Array.isArray(object.stateMessages))
                                    throw TypeError(".google.cloud.functions.v2beta.Function.stateMessages: array expected");
                                message.stateMessages = [];
                                for (var i = 0; i < object.stateMessages.length; ++i) {
                                    if (typeof object.stateMessages[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2beta.Function.stateMessages: object expected");
                                    message.stateMessages[i] = $root.google.cloud.functions.v2beta.StateMessage.fromObject(object.stateMessages[i]);
                                }
                            }
                            switch (object.environment) {
                            default:
                                if (typeof object.environment === "number") {
                                    message.environment = object.environment;
                                    break;
                                }
                                break;
                            case "ENVIRONMENT_UNSPECIFIED":
                            case 0:
                                message.environment = 0;
                                break;
                            case "GEN_1":
                            case 1:
                                message.environment = 1;
                                break;
                            case "GEN_2":
                            case 2:
                                message.environment = 2;
                                break;
                            }
                            if (object.url != null)
                                message.url = String(object.url);
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Function message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.Function
                         * @static
                         * @param {google.cloud.functions.v2beta.Function} message Function
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Function.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.stateMessages = [];
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.buildConfig = null;
                                object.serviceConfig = null;
                                object.eventTrigger = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.updateTime = null;
                                object.environment = options.enums === String ? "ENVIRONMENT_UNSPECIFIED" : 0;
                                object.url = "";
                                object.kmsKeyName = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.buildConfig != null && message.hasOwnProperty("buildConfig"))
                                object.buildConfig = $root.google.cloud.functions.v2beta.BuildConfig.toObject(message.buildConfig, options);
                            if (message.serviceConfig != null && message.hasOwnProperty("serviceConfig"))
                                object.serviceConfig = $root.google.cloud.functions.v2beta.ServiceConfig.toObject(message.serviceConfig, options);
                            if (message.eventTrigger != null && message.hasOwnProperty("eventTrigger"))
                                object.eventTrigger = $root.google.cloud.functions.v2beta.EventTrigger.toObject(message.eventTrigger, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.functions.v2beta.Function.State[message.state] === undefined ? message.state : $root.google.cloud.functions.v2beta.Function.State[message.state] : message.state;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.stateMessages && message.stateMessages.length) {
                                object.stateMessages = [];
                                for (var j = 0; j < message.stateMessages.length; ++j)
                                    object.stateMessages[j] = $root.google.cloud.functions.v2beta.StateMessage.toObject(message.stateMessages[j], options);
                            }
                            if (message.environment != null && message.hasOwnProperty("environment"))
                                object.environment = options.enums === String ? $root.google.cloud.functions.v2beta.Environment[message.environment] === undefined ? message.environment : $root.google.cloud.functions.v2beta.Environment[message.environment] : message.environment;
                            if (message.url != null && message.hasOwnProperty("url"))
                                object.url = message.url;
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            return object;
                        };
    
                        /**
                         * Converts this Function to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.Function
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Function.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Function
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.Function
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Function.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.Function";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.functions.v2beta.Function.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ACTIVE=1 ACTIVE value
                         * @property {number} FAILED=2 FAILED value
                         * @property {number} DEPLOYING=3 DEPLOYING value
                         * @property {number} DELETING=4 DELETING value
                         * @property {number} UNKNOWN=5 UNKNOWN value
                         */
                        Function.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ACTIVE"] = 1;
                            values[valuesById[2] = "FAILED"] = 2;
                            values[valuesById[3] = "DEPLOYING"] = 3;
                            values[valuesById[4] = "DELETING"] = 4;
                            values[valuesById[5] = "UNKNOWN"] = 5;
                            return values;
                        })();
    
                        return Function;
                    })();
    
                    v2beta.StateMessage = (function() {
    
                        /**
                         * Properties of a StateMessage.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IStateMessage
                         * @property {google.cloud.functions.v2beta.StateMessage.Severity|null} [severity] StateMessage severity
                         * @property {string|null} [type] StateMessage type
                         * @property {string|null} [message] StateMessage message
                         */
    
                        /**
                         * Constructs a new StateMessage.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a StateMessage.
                         * @implements IStateMessage
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IStateMessage=} [properties] Properties to set
                         */
                        function StateMessage(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StateMessage severity.
                         * @member {google.cloud.functions.v2beta.StateMessage.Severity} severity
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @instance
                         */
                        StateMessage.prototype.severity = 0;
    
                        /**
                         * StateMessage type.
                         * @member {string} type
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @instance
                         */
                        StateMessage.prototype.type = "";
    
                        /**
                         * StateMessage message.
                         * @member {string} message
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @instance
                         */
                        StateMessage.prototype.message = "";
    
                        /**
                         * Creates a new StateMessage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @static
                         * @param {google.cloud.functions.v2beta.IStateMessage=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.StateMessage} StateMessage instance
                         */
                        StateMessage.create = function create(properties) {
                            return new StateMessage(properties);
                        };
    
                        /**
                         * Encodes the specified StateMessage message. Does not implicitly {@link google.cloud.functions.v2beta.StateMessage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @static
                         * @param {google.cloud.functions.v2beta.IStateMessage} message StateMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StateMessage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.severity != null && Object.hasOwnProperty.call(message, "severity"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.severity);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.type);
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.message);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StateMessage message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.StateMessage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @static
                         * @param {google.cloud.functions.v2beta.IStateMessage} message StateMessage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StateMessage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StateMessage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.StateMessage} StateMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StateMessage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.StateMessage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.severity = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.message = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StateMessage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.StateMessage} StateMessage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StateMessage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StateMessage message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StateMessage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.severity != null && message.hasOwnProperty("severity"))
                                switch (message.severity) {
                                default:
                                    return "severity: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.type != null && message.hasOwnProperty("type"))
                                if (!$util.isString(message.type))
                                    return "type: string expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StateMessage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.StateMessage} StateMessage
                         */
                        StateMessage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.StateMessage)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.StateMessage();
                            switch (object.severity) {
                            default:
                                if (typeof object.severity === "number") {
                                    message.severity = object.severity;
                                    break;
                                }
                                break;
                            case "SEVERITY_UNSPECIFIED":
                            case 0:
                                message.severity = 0;
                                break;
                            case "ERROR":
                            case 1:
                                message.severity = 1;
                                break;
                            case "WARNING":
                            case 2:
                                message.severity = 2;
                                break;
                            case "INFO":
                            case 3:
                                message.severity = 3;
                                break;
                            }
                            if (object.type != null)
                                message.type = String(object.type);
                            if (object.message != null)
                                message.message = String(object.message);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StateMessage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @static
                         * @param {google.cloud.functions.v2beta.StateMessage} message StateMessage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StateMessage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.severity = options.enums === String ? "SEVERITY_UNSPECIFIED" : 0;
                                object.type = "";
                                object.message = "";
                            }
                            if (message.severity != null && message.hasOwnProperty("severity"))
                                object.severity = options.enums === String ? $root.google.cloud.functions.v2beta.StateMessage.Severity[message.severity] === undefined ? message.severity : $root.google.cloud.functions.v2beta.StateMessage.Severity[message.severity] : message.severity;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = message.type;
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            return object;
                        };
    
                        /**
                         * Converts this StateMessage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StateMessage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StateMessage
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.StateMessage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StateMessage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.StateMessage";
                        };
    
                        /**
                         * Severity enum.
                         * @name google.cloud.functions.v2beta.StateMessage.Severity
                         * @enum {number}
                         * @property {number} SEVERITY_UNSPECIFIED=0 SEVERITY_UNSPECIFIED value
                         * @property {number} ERROR=1 ERROR value
                         * @property {number} WARNING=2 WARNING value
                         * @property {number} INFO=3 INFO value
                         */
                        StateMessage.Severity = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SEVERITY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ERROR"] = 1;
                            values[valuesById[2] = "WARNING"] = 2;
                            values[valuesById[3] = "INFO"] = 3;
                            return values;
                        })();
    
                        return StateMessage;
                    })();
    
                    v2beta.StorageSource = (function() {
    
                        /**
                         * Properties of a StorageSource.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IStorageSource
                         * @property {string|null} [bucket] StorageSource bucket
                         * @property {string|null} [object] StorageSource object
                         * @property {number|Long|null} [generation] StorageSource generation
                         */
    
                        /**
                         * Constructs a new StorageSource.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a StorageSource.
                         * @implements IStorageSource
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IStorageSource=} [properties] Properties to set
                         */
                        function StorageSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StorageSource bucket.
                         * @member {string} bucket
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.bucket = "";
    
                        /**
                         * StorageSource object.
                         * @member {string} object
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.object = "";
    
                        /**
                         * StorageSource generation.
                         * @member {number|Long} generation
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @instance
                         */
                        StorageSource.prototype.generation = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Creates a new StorageSource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @static
                         * @param {google.cloud.functions.v2beta.IStorageSource=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.StorageSource} StorageSource instance
                         */
                        StorageSource.create = function create(properties) {
                            return new StorageSource(properties);
                        };
    
                        /**
                         * Encodes the specified StorageSource message. Does not implicitly {@link google.cloud.functions.v2beta.StorageSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @static
                         * @param {google.cloud.functions.v2beta.IStorageSource} message StorageSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StorageSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.bucket != null && Object.hasOwnProperty.call(message, "bucket"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.bucket);
                            if (message.object != null && Object.hasOwnProperty.call(message, "object"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.object);
                            if (message.generation != null && Object.hasOwnProperty.call(message, "generation"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.generation);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StorageSource message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.StorageSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @static
                         * @param {google.cloud.functions.v2beta.IStorageSource} message StorageSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StorageSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StorageSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.StorageSource} StorageSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StorageSource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.StorageSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.bucket = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.object = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.generation = reader.int64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StorageSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.StorageSource} StorageSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StorageSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StorageSource message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StorageSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.bucket != null && message.hasOwnProperty("bucket"))
                                if (!$util.isString(message.bucket))
                                    return "bucket: string expected";
                            if (message.object != null && message.hasOwnProperty("object"))
                                if (!$util.isString(message.object))
                                    return "object: string expected";
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (!$util.isInteger(message.generation) && !(message.generation && $util.isInteger(message.generation.low) && $util.isInteger(message.generation.high)))
                                    return "generation: integer|Long expected";
                            return null;
                        };
    
                        /**
                         * Creates a StorageSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.StorageSource} StorageSource
                         */
                        StorageSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.StorageSource)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.StorageSource();
                            if (object.bucket != null)
                                message.bucket = String(object.bucket);
                            if (object.object != null)
                                message.object = String(object.object);
                            if (object.generation != null)
                                if ($util.Long)
                                    (message.generation = $util.Long.fromValue(object.generation)).unsigned = false;
                                else if (typeof object.generation === "string")
                                    message.generation = parseInt(object.generation, 10);
                                else if (typeof object.generation === "number")
                                    message.generation = object.generation;
                                else if (typeof object.generation === "object")
                                    message.generation = new $util.LongBits(object.generation.low >>> 0, object.generation.high >>> 0).toNumber();
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StorageSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @static
                         * @param {google.cloud.functions.v2beta.StorageSource} message StorageSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StorageSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.bucket = "";
                                object.object = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.generation = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.generation = options.longs === String ? "0" : 0;
                            }
                            if (message.bucket != null && message.hasOwnProperty("bucket"))
                                object.bucket = message.bucket;
                            if (message.object != null && message.hasOwnProperty("object"))
                                object.object = message.object;
                            if (message.generation != null && message.hasOwnProperty("generation"))
                                if (typeof message.generation === "number")
                                    object.generation = options.longs === String ? String(message.generation) : message.generation;
                                else
                                    object.generation = options.longs === String ? $util.Long.prototype.toString.call(message.generation) : options.longs === Number ? new $util.LongBits(message.generation.low >>> 0, message.generation.high >>> 0).toNumber() : message.generation;
                            return object;
                        };
    
                        /**
                         * Converts this StorageSource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StorageSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StorageSource
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.StorageSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StorageSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.StorageSource";
                        };
    
                        return StorageSource;
                    })();
    
                    v2beta.RepoSource = (function() {
    
                        /**
                         * Properties of a RepoSource.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IRepoSource
                         * @property {string|null} [branchName] RepoSource branchName
                         * @property {string|null} [tagName] RepoSource tagName
                         * @property {string|null} [commitSha] RepoSource commitSha
                         * @property {string|null} [projectId] RepoSource projectId
                         * @property {string|null} [repoName] RepoSource repoName
                         * @property {string|null} [dir] RepoSource dir
                         * @property {boolean|null} [invertRegex] RepoSource invertRegex
                         */
    
                        /**
                         * Constructs a new RepoSource.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a RepoSource.
                         * @implements IRepoSource
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IRepoSource=} [properties] Properties to set
                         */
                        function RepoSource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RepoSource branchName.
                         * @member {string|null|undefined} branchName
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.branchName = null;
    
                        /**
                         * RepoSource tagName.
                         * @member {string|null|undefined} tagName
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.tagName = null;
    
                        /**
                         * RepoSource commitSha.
                         * @member {string|null|undefined} commitSha
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.commitSha = null;
    
                        /**
                         * RepoSource projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.projectId = "";
    
                        /**
                         * RepoSource repoName.
                         * @member {string} repoName
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.repoName = "";
    
                        /**
                         * RepoSource dir.
                         * @member {string} dir
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.dir = "";
    
                        /**
                         * RepoSource invertRegex.
                         * @member {boolean} invertRegex
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @instance
                         */
                        RepoSource.prototype.invertRegex = false;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * RepoSource revision.
                         * @member {"branchName"|"tagName"|"commitSha"|undefined} revision
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @instance
                         */
                        Object.defineProperty(RepoSource.prototype, "revision", {
                            get: $util.oneOfGetter($oneOfFields = ["branchName", "tagName", "commitSha"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new RepoSource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @static
                         * @param {google.cloud.functions.v2beta.IRepoSource=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.RepoSource} RepoSource instance
                         */
                        RepoSource.create = function create(properties) {
                            return new RepoSource(properties);
                        };
    
                        /**
                         * Encodes the specified RepoSource message. Does not implicitly {@link google.cloud.functions.v2beta.RepoSource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @static
                         * @param {google.cloud.functions.v2beta.IRepoSource} message RepoSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepoSource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.repoName != null && Object.hasOwnProperty.call(message, "repoName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.repoName);
                            if (message.branchName != null && Object.hasOwnProperty.call(message, "branchName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.branchName);
                            if (message.tagName != null && Object.hasOwnProperty.call(message, "tagName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.tagName);
                            if (message.commitSha != null && Object.hasOwnProperty.call(message, "commitSha"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.commitSha);
                            if (message.dir != null && Object.hasOwnProperty.call(message, "dir"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.dir);
                            if (message.invertRegex != null && Object.hasOwnProperty.call(message, "invertRegex"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.invertRegex);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RepoSource message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.RepoSource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @static
                         * @param {google.cloud.functions.v2beta.IRepoSource} message RepoSource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RepoSource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RepoSource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.RepoSource} RepoSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepoSource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.RepoSource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.branchName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.tagName = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.commitSha = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.repoName = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.dir = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.invertRegex = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RepoSource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.RepoSource} RepoSource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RepoSource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RepoSource message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RepoSource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.branchName != null && message.hasOwnProperty("branchName")) {
                                properties.revision = 1;
                                if (!$util.isString(message.branchName))
                                    return "branchName: string expected";
                            }
                            if (message.tagName != null && message.hasOwnProperty("tagName")) {
                                if (properties.revision === 1)
                                    return "revision: multiple values";
                                properties.revision = 1;
                                if (!$util.isString(message.tagName))
                                    return "tagName: string expected";
                            }
                            if (message.commitSha != null && message.hasOwnProperty("commitSha")) {
                                if (properties.revision === 1)
                                    return "revision: multiple values";
                                properties.revision = 1;
                                if (!$util.isString(message.commitSha))
                                    return "commitSha: string expected";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.repoName != null && message.hasOwnProperty("repoName"))
                                if (!$util.isString(message.repoName))
                                    return "repoName: string expected";
                            if (message.dir != null && message.hasOwnProperty("dir"))
                                if (!$util.isString(message.dir))
                                    return "dir: string expected";
                            if (message.invertRegex != null && message.hasOwnProperty("invertRegex"))
                                if (typeof message.invertRegex !== "boolean")
                                    return "invertRegex: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a RepoSource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.RepoSource} RepoSource
                         */
                        RepoSource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.RepoSource)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.RepoSource();
                            if (object.branchName != null)
                                message.branchName = String(object.branchName);
                            if (object.tagName != null)
                                message.tagName = String(object.tagName);
                            if (object.commitSha != null)
                                message.commitSha = String(object.commitSha);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.repoName != null)
                                message.repoName = String(object.repoName);
                            if (object.dir != null)
                                message.dir = String(object.dir);
                            if (object.invertRegex != null)
                                message.invertRegex = Boolean(object.invertRegex);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RepoSource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @static
                         * @param {google.cloud.functions.v2beta.RepoSource} message RepoSource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RepoSource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.repoName = "";
                                object.dir = "";
                                object.invertRegex = false;
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.repoName != null && message.hasOwnProperty("repoName"))
                                object.repoName = message.repoName;
                            if (message.branchName != null && message.hasOwnProperty("branchName")) {
                                object.branchName = message.branchName;
                                if (options.oneofs)
                                    object.revision = "branchName";
                            }
                            if (message.tagName != null && message.hasOwnProperty("tagName")) {
                                object.tagName = message.tagName;
                                if (options.oneofs)
                                    object.revision = "tagName";
                            }
                            if (message.commitSha != null && message.hasOwnProperty("commitSha")) {
                                object.commitSha = message.commitSha;
                                if (options.oneofs)
                                    object.revision = "commitSha";
                            }
                            if (message.dir != null && message.hasOwnProperty("dir"))
                                object.dir = message.dir;
                            if (message.invertRegex != null && message.hasOwnProperty("invertRegex"))
                                object.invertRegex = message.invertRegex;
                            return object;
                        };
    
                        /**
                         * Converts this RepoSource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RepoSource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RepoSource
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.RepoSource
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RepoSource.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.RepoSource";
                        };
    
                        return RepoSource;
                    })();
    
                    v2beta.Source = (function() {
    
                        /**
                         * Properties of a Source.
                         * @memberof google.cloud.functions.v2beta
                         * @interface ISource
                         * @property {google.cloud.functions.v2beta.IStorageSource|null} [storageSource] Source storageSource
                         * @property {google.cloud.functions.v2beta.IRepoSource|null} [repoSource] Source repoSource
                         */
    
                        /**
                         * Constructs a new Source.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a Source.
                         * @implements ISource
                         * @constructor
                         * @param {google.cloud.functions.v2beta.ISource=} [properties] Properties to set
                         */
                        function Source(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Source storageSource.
                         * @member {google.cloud.functions.v2beta.IStorageSource|null|undefined} storageSource
                         * @memberof google.cloud.functions.v2beta.Source
                         * @instance
                         */
                        Source.prototype.storageSource = null;
    
                        /**
                         * Source repoSource.
                         * @member {google.cloud.functions.v2beta.IRepoSource|null|undefined} repoSource
                         * @memberof google.cloud.functions.v2beta.Source
                         * @instance
                         */
                        Source.prototype.repoSource = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Source source.
                         * @member {"storageSource"|"repoSource"|undefined} source
                         * @memberof google.cloud.functions.v2beta.Source
                         * @instance
                         */
                        Object.defineProperty(Source.prototype, "source", {
                            get: $util.oneOfGetter($oneOfFields = ["storageSource", "repoSource"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Source instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.Source
                         * @static
                         * @param {google.cloud.functions.v2beta.ISource=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.Source} Source instance
                         */
                        Source.create = function create(properties) {
                            return new Source(properties);
                        };
    
                        /**
                         * Encodes the specified Source message. Does not implicitly {@link google.cloud.functions.v2beta.Source.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.Source
                         * @static
                         * @param {google.cloud.functions.v2beta.ISource} message Source message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Source.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.storageSource != null && Object.hasOwnProperty.call(message, "storageSource"))
                                $root.google.cloud.functions.v2beta.StorageSource.encode(message.storageSource, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.repoSource != null && Object.hasOwnProperty.call(message, "repoSource"))
                                $root.google.cloud.functions.v2beta.RepoSource.encode(message.repoSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Source message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.Source.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.Source
                         * @static
                         * @param {google.cloud.functions.v2beta.ISource} message Source message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Source.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Source message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.Source
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.Source} Source
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Source.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.Source();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.storageSource = $root.google.cloud.functions.v2beta.StorageSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.repoSource = $root.google.cloud.functions.v2beta.RepoSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Source message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.Source
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.Source} Source
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Source.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Source message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.Source
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Source.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.storageSource != null && message.hasOwnProperty("storageSource")) {
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.functions.v2beta.StorageSource.verify(message.storageSource);
                                    if (error)
                                        return "storageSource." + error;
                                }
                            }
                            if (message.repoSource != null && message.hasOwnProperty("repoSource")) {
                                if (properties.source === 1)
                                    return "source: multiple values";
                                properties.source = 1;
                                {
                                    var error = $root.google.cloud.functions.v2beta.RepoSource.verify(message.repoSource);
                                    if (error)
                                        return "repoSource." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Source message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.Source
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.Source} Source
                         */
                        Source.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.Source)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.Source();
                            if (object.storageSource != null) {
                                if (typeof object.storageSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.Source.storageSource: object expected");
                                message.storageSource = $root.google.cloud.functions.v2beta.StorageSource.fromObject(object.storageSource);
                            }
                            if (object.repoSource != null) {
                                if (typeof object.repoSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.Source.repoSource: object expected");
                                message.repoSource = $root.google.cloud.functions.v2beta.RepoSource.fromObject(object.repoSource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Source message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.Source
                         * @static
                         * @param {google.cloud.functions.v2beta.Source} message Source
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Source.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.storageSource != null && message.hasOwnProperty("storageSource")) {
                                object.storageSource = $root.google.cloud.functions.v2beta.StorageSource.toObject(message.storageSource, options);
                                if (options.oneofs)
                                    object.source = "storageSource";
                            }
                            if (message.repoSource != null && message.hasOwnProperty("repoSource")) {
                                object.repoSource = $root.google.cloud.functions.v2beta.RepoSource.toObject(message.repoSource, options);
                                if (options.oneofs)
                                    object.source = "repoSource";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Source to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.Source
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Source.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Source
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.Source
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Source.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.Source";
                        };
    
                        return Source;
                    })();
    
                    v2beta.SourceProvenance = (function() {
    
                        /**
                         * Properties of a SourceProvenance.
                         * @memberof google.cloud.functions.v2beta
                         * @interface ISourceProvenance
                         * @property {google.cloud.functions.v2beta.IStorageSource|null} [resolvedStorageSource] SourceProvenance resolvedStorageSource
                         * @property {google.cloud.functions.v2beta.IRepoSource|null} [resolvedRepoSource] SourceProvenance resolvedRepoSource
                         */
    
                        /**
                         * Constructs a new SourceProvenance.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a SourceProvenance.
                         * @implements ISourceProvenance
                         * @constructor
                         * @param {google.cloud.functions.v2beta.ISourceProvenance=} [properties] Properties to set
                         */
                        function SourceProvenance(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SourceProvenance resolvedStorageSource.
                         * @member {google.cloud.functions.v2beta.IStorageSource|null|undefined} resolvedStorageSource
                         * @memberof google.cloud.functions.v2beta.SourceProvenance
                         * @instance
                         */
                        SourceProvenance.prototype.resolvedStorageSource = null;
    
                        /**
                         * SourceProvenance resolvedRepoSource.
                         * @member {google.cloud.functions.v2beta.IRepoSource|null|undefined} resolvedRepoSource
                         * @memberof google.cloud.functions.v2beta.SourceProvenance
                         * @instance
                         */
                        SourceProvenance.prototype.resolvedRepoSource = null;
    
                        /**
                         * Creates a new SourceProvenance instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.SourceProvenance
                         * @static
                         * @param {google.cloud.functions.v2beta.ISourceProvenance=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.SourceProvenance} SourceProvenance instance
                         */
                        SourceProvenance.create = function create(properties) {
                            return new SourceProvenance(properties);
                        };
    
                        /**
                         * Encodes the specified SourceProvenance message. Does not implicitly {@link google.cloud.functions.v2beta.SourceProvenance.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.SourceProvenance
                         * @static
                         * @param {google.cloud.functions.v2beta.ISourceProvenance} message SourceProvenance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceProvenance.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resolvedStorageSource != null && Object.hasOwnProperty.call(message, "resolvedStorageSource"))
                                $root.google.cloud.functions.v2beta.StorageSource.encode(message.resolvedStorageSource, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.resolvedRepoSource != null && Object.hasOwnProperty.call(message, "resolvedRepoSource"))
                                $root.google.cloud.functions.v2beta.RepoSource.encode(message.resolvedRepoSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SourceProvenance message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.SourceProvenance.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.SourceProvenance
                         * @static
                         * @param {google.cloud.functions.v2beta.ISourceProvenance} message SourceProvenance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SourceProvenance.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SourceProvenance message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.SourceProvenance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.SourceProvenance} SourceProvenance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceProvenance.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.SourceProvenance();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.resolvedStorageSource = $root.google.cloud.functions.v2beta.StorageSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.resolvedRepoSource = $root.google.cloud.functions.v2beta.RepoSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SourceProvenance message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.SourceProvenance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.SourceProvenance} SourceProvenance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SourceProvenance.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SourceProvenance message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.SourceProvenance
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SourceProvenance.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resolvedStorageSource != null && message.hasOwnProperty("resolvedStorageSource")) {
                                var error = $root.google.cloud.functions.v2beta.StorageSource.verify(message.resolvedStorageSource);
                                if (error)
                                    return "resolvedStorageSource." + error;
                            }
                            if (message.resolvedRepoSource != null && message.hasOwnProperty("resolvedRepoSource")) {
                                var error = $root.google.cloud.functions.v2beta.RepoSource.verify(message.resolvedRepoSource);
                                if (error)
                                    return "resolvedRepoSource." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SourceProvenance message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.SourceProvenance
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.SourceProvenance} SourceProvenance
                         */
                        SourceProvenance.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.SourceProvenance)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.SourceProvenance();
                            if (object.resolvedStorageSource != null) {
                                if (typeof object.resolvedStorageSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.SourceProvenance.resolvedStorageSource: object expected");
                                message.resolvedStorageSource = $root.google.cloud.functions.v2beta.StorageSource.fromObject(object.resolvedStorageSource);
                            }
                            if (object.resolvedRepoSource != null) {
                                if (typeof object.resolvedRepoSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.SourceProvenance.resolvedRepoSource: object expected");
                                message.resolvedRepoSource = $root.google.cloud.functions.v2beta.RepoSource.fromObject(object.resolvedRepoSource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SourceProvenance message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.SourceProvenance
                         * @static
                         * @param {google.cloud.functions.v2beta.SourceProvenance} message SourceProvenance
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SourceProvenance.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resolvedStorageSource = null;
                                object.resolvedRepoSource = null;
                            }
                            if (message.resolvedStorageSource != null && message.hasOwnProperty("resolvedStorageSource"))
                                object.resolvedStorageSource = $root.google.cloud.functions.v2beta.StorageSource.toObject(message.resolvedStorageSource, options);
                            if (message.resolvedRepoSource != null && message.hasOwnProperty("resolvedRepoSource"))
                                object.resolvedRepoSource = $root.google.cloud.functions.v2beta.RepoSource.toObject(message.resolvedRepoSource, options);
                            return object;
                        };
    
                        /**
                         * Converts this SourceProvenance to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.SourceProvenance
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SourceProvenance.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SourceProvenance
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.SourceProvenance
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SourceProvenance.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.SourceProvenance";
                        };
    
                        return SourceProvenance;
                    })();
    
                    v2beta.BuildConfig = (function() {
    
                        /**
                         * Properties of a BuildConfig.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IBuildConfig
                         * @property {string|null} [build] BuildConfig build
                         * @property {string|null} [runtime] BuildConfig runtime
                         * @property {string|null} [entryPoint] BuildConfig entryPoint
                         * @property {google.cloud.functions.v2beta.ISource|null} [source] BuildConfig source
                         * @property {google.cloud.functions.v2beta.ISourceProvenance|null} [sourceProvenance] BuildConfig sourceProvenance
                         * @property {string|null} [workerPool] BuildConfig workerPool
                         * @property {Object.<string,string>|null} [environmentVariables] BuildConfig environmentVariables
                         * @property {google.cloud.functions.v2beta.BuildConfig.DockerRegistry|null} [dockerRegistry] BuildConfig dockerRegistry
                         * @property {string|null} [dockerRepository] BuildConfig dockerRepository
                         */
    
                        /**
                         * Constructs a new BuildConfig.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a BuildConfig.
                         * @implements IBuildConfig
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IBuildConfig=} [properties] Properties to set
                         */
                        function BuildConfig(properties) {
                            this.environmentVariables = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BuildConfig build.
                         * @member {string} build
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.build = "";
    
                        /**
                         * BuildConfig runtime.
                         * @member {string} runtime
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.runtime = "";
    
                        /**
                         * BuildConfig entryPoint.
                         * @member {string} entryPoint
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.entryPoint = "";
    
                        /**
                         * BuildConfig source.
                         * @member {google.cloud.functions.v2beta.ISource|null|undefined} source
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.source = null;
    
                        /**
                         * BuildConfig sourceProvenance.
                         * @member {google.cloud.functions.v2beta.ISourceProvenance|null|undefined} sourceProvenance
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.sourceProvenance = null;
    
                        /**
                         * BuildConfig workerPool.
                         * @member {string} workerPool
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.workerPool = "";
    
                        /**
                         * BuildConfig environmentVariables.
                         * @member {Object.<string,string>} environmentVariables
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.environmentVariables = $util.emptyObject;
    
                        /**
                         * BuildConfig dockerRegistry.
                         * @member {google.cloud.functions.v2beta.BuildConfig.DockerRegistry} dockerRegistry
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.dockerRegistry = 0;
    
                        /**
                         * BuildConfig dockerRepository.
                         * @member {string} dockerRepository
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @instance
                         */
                        BuildConfig.prototype.dockerRepository = "";
    
                        /**
                         * Creates a new BuildConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @static
                         * @param {google.cloud.functions.v2beta.IBuildConfig=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.BuildConfig} BuildConfig instance
                         */
                        BuildConfig.create = function create(properties) {
                            return new BuildConfig(properties);
                        };
    
                        /**
                         * Encodes the specified BuildConfig message. Does not implicitly {@link google.cloud.functions.v2beta.BuildConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @static
                         * @param {google.cloud.functions.v2beta.IBuildConfig} message BuildConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.build != null && Object.hasOwnProperty.call(message, "build"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.build);
                            if (message.runtime != null && Object.hasOwnProperty.call(message, "runtime"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.runtime);
                            if (message.entryPoint != null && Object.hasOwnProperty.call(message, "entryPoint"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.entryPoint);
                            if (message.source != null && Object.hasOwnProperty.call(message, "source"))
                                $root.google.cloud.functions.v2beta.Source.encode(message.source, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.workerPool != null && Object.hasOwnProperty.call(message, "workerPool"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.workerPool);
                            if (message.environmentVariables != null && Object.hasOwnProperty.call(message, "environmentVariables"))
                                for (var keys = Object.keys(message.environmentVariables), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.environmentVariables[keys[i]]).ldelim();
                            if (message.dockerRepository != null && Object.hasOwnProperty.call(message, "dockerRepository"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.dockerRepository);
                            if (message.sourceProvenance != null && Object.hasOwnProperty.call(message, "sourceProvenance"))
                                $root.google.cloud.functions.v2beta.SourceProvenance.encode(message.sourceProvenance, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.dockerRegistry != null && Object.hasOwnProperty.call(message, "dockerRegistry"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.dockerRegistry);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BuildConfig message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.BuildConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @static
                         * @param {google.cloud.functions.v2beta.IBuildConfig} message BuildConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BuildConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BuildConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.BuildConfig} BuildConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.BuildConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.build = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.runtime = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.entryPoint = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.source = $root.google.cloud.functions.v2beta.Source.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.sourceProvenance = $root.google.cloud.functions.v2beta.SourceProvenance.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.workerPool = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (message.environmentVariables === $util.emptyObject)
                                            message.environmentVariables = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.environmentVariables[key] = value;
                                        break;
                                    }
                                case 10: {
                                        message.dockerRegistry = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.dockerRepository = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BuildConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.BuildConfig} BuildConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BuildConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BuildConfig message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BuildConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.build != null && message.hasOwnProperty("build"))
                                if (!$util.isString(message.build))
                                    return "build: string expected";
                            if (message.runtime != null && message.hasOwnProperty("runtime"))
                                if (!$util.isString(message.runtime))
                                    return "runtime: string expected";
                            if (message.entryPoint != null && message.hasOwnProperty("entryPoint"))
                                if (!$util.isString(message.entryPoint))
                                    return "entryPoint: string expected";
                            if (message.source != null && message.hasOwnProperty("source")) {
                                var error = $root.google.cloud.functions.v2beta.Source.verify(message.source);
                                if (error)
                                    return "source." + error;
                            }
                            if (message.sourceProvenance != null && message.hasOwnProperty("sourceProvenance")) {
                                var error = $root.google.cloud.functions.v2beta.SourceProvenance.verify(message.sourceProvenance);
                                if (error)
                                    return "sourceProvenance." + error;
                            }
                            if (message.workerPool != null && message.hasOwnProperty("workerPool"))
                                if (!$util.isString(message.workerPool))
                                    return "workerPool: string expected";
                            if (message.environmentVariables != null && message.hasOwnProperty("environmentVariables")) {
                                if (!$util.isObject(message.environmentVariables))
                                    return "environmentVariables: object expected";
                                var key = Object.keys(message.environmentVariables);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.environmentVariables[key[i]]))
                                        return "environmentVariables: string{k:string} expected";
                            }
                            if (message.dockerRegistry != null && message.hasOwnProperty("dockerRegistry"))
                                switch (message.dockerRegistry) {
                                default:
                                    return "dockerRegistry: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.dockerRepository != null && message.hasOwnProperty("dockerRepository"))
                                if (!$util.isString(message.dockerRepository))
                                    return "dockerRepository: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BuildConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.BuildConfig} BuildConfig
                         */
                        BuildConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.BuildConfig)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.BuildConfig();
                            if (object.build != null)
                                message.build = String(object.build);
                            if (object.runtime != null)
                                message.runtime = String(object.runtime);
                            if (object.entryPoint != null)
                                message.entryPoint = String(object.entryPoint);
                            if (object.source != null) {
                                if (typeof object.source !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.BuildConfig.source: object expected");
                                message.source = $root.google.cloud.functions.v2beta.Source.fromObject(object.source);
                            }
                            if (object.sourceProvenance != null) {
                                if (typeof object.sourceProvenance !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.BuildConfig.sourceProvenance: object expected");
                                message.sourceProvenance = $root.google.cloud.functions.v2beta.SourceProvenance.fromObject(object.sourceProvenance);
                            }
                            if (object.workerPool != null)
                                message.workerPool = String(object.workerPool);
                            if (object.environmentVariables) {
                                if (typeof object.environmentVariables !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.BuildConfig.environmentVariables: object expected");
                                message.environmentVariables = {};
                                for (var keys = Object.keys(object.environmentVariables), i = 0; i < keys.length; ++i)
                                    message.environmentVariables[keys[i]] = String(object.environmentVariables[keys[i]]);
                            }
                            switch (object.dockerRegistry) {
                            default:
                                if (typeof object.dockerRegistry === "number") {
                                    message.dockerRegistry = object.dockerRegistry;
                                    break;
                                }
                                break;
                            case "DOCKER_REGISTRY_UNSPECIFIED":
                            case 0:
                                message.dockerRegistry = 0;
                                break;
                            case "CONTAINER_REGISTRY":
                            case 1:
                                message.dockerRegistry = 1;
                                break;
                            case "ARTIFACT_REGISTRY":
                            case 2:
                                message.dockerRegistry = 2;
                                break;
                            }
                            if (object.dockerRepository != null)
                                message.dockerRepository = String(object.dockerRepository);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BuildConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @static
                         * @param {google.cloud.functions.v2beta.BuildConfig} message BuildConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BuildConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.environmentVariables = {};
                            if (options.defaults) {
                                object.build = "";
                                object.runtime = "";
                                object.entryPoint = "";
                                object.source = null;
                                object.workerPool = "";
                                object.dockerRepository = "";
                                object.sourceProvenance = null;
                                object.dockerRegistry = options.enums === String ? "DOCKER_REGISTRY_UNSPECIFIED" : 0;
                            }
                            if (message.build != null && message.hasOwnProperty("build"))
                                object.build = message.build;
                            if (message.runtime != null && message.hasOwnProperty("runtime"))
                                object.runtime = message.runtime;
                            if (message.entryPoint != null && message.hasOwnProperty("entryPoint"))
                                object.entryPoint = message.entryPoint;
                            if (message.source != null && message.hasOwnProperty("source"))
                                object.source = $root.google.cloud.functions.v2beta.Source.toObject(message.source, options);
                            if (message.workerPool != null && message.hasOwnProperty("workerPool"))
                                object.workerPool = message.workerPool;
                            var keys2;
                            if (message.environmentVariables && (keys2 = Object.keys(message.environmentVariables)).length) {
                                object.environmentVariables = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.environmentVariables[keys2[j]] = message.environmentVariables[keys2[j]];
                            }
                            if (message.dockerRepository != null && message.hasOwnProperty("dockerRepository"))
                                object.dockerRepository = message.dockerRepository;
                            if (message.sourceProvenance != null && message.hasOwnProperty("sourceProvenance"))
                                object.sourceProvenance = $root.google.cloud.functions.v2beta.SourceProvenance.toObject(message.sourceProvenance, options);
                            if (message.dockerRegistry != null && message.hasOwnProperty("dockerRegistry"))
                                object.dockerRegistry = options.enums === String ? $root.google.cloud.functions.v2beta.BuildConfig.DockerRegistry[message.dockerRegistry] === undefined ? message.dockerRegistry : $root.google.cloud.functions.v2beta.BuildConfig.DockerRegistry[message.dockerRegistry] : message.dockerRegistry;
                            return object;
                        };
    
                        /**
                         * Converts this BuildConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BuildConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BuildConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.BuildConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BuildConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.BuildConfig";
                        };
    
                        /**
                         * DockerRegistry enum.
                         * @name google.cloud.functions.v2beta.BuildConfig.DockerRegistry
                         * @enum {number}
                         * @property {number} DOCKER_REGISTRY_UNSPECIFIED=0 DOCKER_REGISTRY_UNSPECIFIED value
                         * @property {number} CONTAINER_REGISTRY=1 CONTAINER_REGISTRY value
                         * @property {number} ARTIFACT_REGISTRY=2 ARTIFACT_REGISTRY value
                         */
                        BuildConfig.DockerRegistry = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DOCKER_REGISTRY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CONTAINER_REGISTRY"] = 1;
                            values[valuesById[2] = "ARTIFACT_REGISTRY"] = 2;
                            return values;
                        })();
    
                        return BuildConfig;
                    })();
    
                    v2beta.ServiceConfig = (function() {
    
                        /**
                         * Properties of a ServiceConfig.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IServiceConfig
                         * @property {string|null} [service] ServiceConfig service
                         * @property {number|null} [timeoutSeconds] ServiceConfig timeoutSeconds
                         * @property {string|null} [availableMemory] ServiceConfig availableMemory
                         * @property {string|null} [availableCpu] ServiceConfig availableCpu
                         * @property {Object.<string,string>|null} [environmentVariables] ServiceConfig environmentVariables
                         * @property {number|null} [maxInstanceCount] ServiceConfig maxInstanceCount
                         * @property {number|null} [minInstanceCount] ServiceConfig minInstanceCount
                         * @property {string|null} [vpcConnector] ServiceConfig vpcConnector
                         * @property {google.cloud.functions.v2beta.ServiceConfig.VpcConnectorEgressSettings|null} [vpcConnectorEgressSettings] ServiceConfig vpcConnectorEgressSettings
                         * @property {google.cloud.functions.v2beta.ServiceConfig.IngressSettings|null} [ingressSettings] ServiceConfig ingressSettings
                         * @property {string|null} [uri] ServiceConfig uri
                         * @property {string|null} [serviceAccountEmail] ServiceConfig serviceAccountEmail
                         * @property {boolean|null} [allTrafficOnLatestRevision] ServiceConfig allTrafficOnLatestRevision
                         * @property {Array.<google.cloud.functions.v2beta.ISecretEnvVar>|null} [secretEnvironmentVariables] ServiceConfig secretEnvironmentVariables
                         * @property {Array.<google.cloud.functions.v2beta.ISecretVolume>|null} [secretVolumes] ServiceConfig secretVolumes
                         * @property {string|null} [revision] ServiceConfig revision
                         * @property {number|null} [maxInstanceRequestConcurrency] ServiceConfig maxInstanceRequestConcurrency
                         * @property {google.cloud.functions.v2beta.ServiceConfig.SecurityLevel|null} [securityLevel] ServiceConfig securityLevel
                         */
    
                        /**
                         * Constructs a new ServiceConfig.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a ServiceConfig.
                         * @implements IServiceConfig
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IServiceConfig=} [properties] Properties to set
                         */
                        function ServiceConfig(properties) {
                            this.environmentVariables = {};
                            this.secretEnvironmentVariables = [];
                            this.secretVolumes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ServiceConfig service.
                         * @member {string} service
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.service = "";
    
                        /**
                         * ServiceConfig timeoutSeconds.
                         * @member {number} timeoutSeconds
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.timeoutSeconds = 0;
    
                        /**
                         * ServiceConfig availableMemory.
                         * @member {string} availableMemory
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.availableMemory = "";
    
                        /**
                         * ServiceConfig availableCpu.
                         * @member {string} availableCpu
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.availableCpu = "";
    
                        /**
                         * ServiceConfig environmentVariables.
                         * @member {Object.<string,string>} environmentVariables
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.environmentVariables = $util.emptyObject;
    
                        /**
                         * ServiceConfig maxInstanceCount.
                         * @member {number} maxInstanceCount
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.maxInstanceCount = 0;
    
                        /**
                         * ServiceConfig minInstanceCount.
                         * @member {number} minInstanceCount
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.minInstanceCount = 0;
    
                        /**
                         * ServiceConfig vpcConnector.
                         * @member {string} vpcConnector
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.vpcConnector = "";
    
                        /**
                         * ServiceConfig vpcConnectorEgressSettings.
                         * @member {google.cloud.functions.v2beta.ServiceConfig.VpcConnectorEgressSettings} vpcConnectorEgressSettings
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.vpcConnectorEgressSettings = 0;
    
                        /**
                         * ServiceConfig ingressSettings.
                         * @member {google.cloud.functions.v2beta.ServiceConfig.IngressSettings} ingressSettings
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.ingressSettings = 0;
    
                        /**
                         * ServiceConfig uri.
                         * @member {string} uri
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.uri = "";
    
                        /**
                         * ServiceConfig serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.serviceAccountEmail = "";
    
                        /**
                         * ServiceConfig allTrafficOnLatestRevision.
                         * @member {boolean} allTrafficOnLatestRevision
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.allTrafficOnLatestRevision = false;
    
                        /**
                         * ServiceConfig secretEnvironmentVariables.
                         * @member {Array.<google.cloud.functions.v2beta.ISecretEnvVar>} secretEnvironmentVariables
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.secretEnvironmentVariables = $util.emptyArray;
    
                        /**
                         * ServiceConfig secretVolumes.
                         * @member {Array.<google.cloud.functions.v2beta.ISecretVolume>} secretVolumes
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.secretVolumes = $util.emptyArray;
    
                        /**
                         * ServiceConfig revision.
                         * @member {string} revision
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.revision = "";
    
                        /**
                         * ServiceConfig maxInstanceRequestConcurrency.
                         * @member {number} maxInstanceRequestConcurrency
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.maxInstanceRequestConcurrency = 0;
    
                        /**
                         * ServiceConfig securityLevel.
                         * @member {google.cloud.functions.v2beta.ServiceConfig.SecurityLevel} securityLevel
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         */
                        ServiceConfig.prototype.securityLevel = 0;
    
                        /**
                         * Creates a new ServiceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @static
                         * @param {google.cloud.functions.v2beta.IServiceConfig=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.ServiceConfig} ServiceConfig instance
                         */
                        ServiceConfig.create = function create(properties) {
                            return new ServiceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ServiceConfig message. Does not implicitly {@link google.cloud.functions.v2beta.ServiceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @static
                         * @param {google.cloud.functions.v2beta.IServiceConfig} message ServiceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ServiceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                            if (message.timeoutSeconds != null && Object.hasOwnProperty.call(message, "timeoutSeconds"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.timeoutSeconds);
                            if (message.environmentVariables != null && Object.hasOwnProperty.call(message, "environmentVariables"))
                                for (var keys = Object.keys(message.environmentVariables), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.environmentVariables[keys[i]]).ldelim();
                            if (message.maxInstanceCount != null && Object.hasOwnProperty.call(message, "maxInstanceCount"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.maxInstanceCount);
                            if (message.vpcConnector != null && Object.hasOwnProperty.call(message, "vpcConnector"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.vpcConnector);
                            if (message.vpcConnectorEgressSettings != null && Object.hasOwnProperty.call(message, "vpcConnectorEgressSettings"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.vpcConnectorEgressSettings);
                            if (message.ingressSettings != null && Object.hasOwnProperty.call(message, "ingressSettings"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.ingressSettings);
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.uri);
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.serviceAccountEmail);
                            if (message.minInstanceCount != null && Object.hasOwnProperty.call(message, "minInstanceCount"))
                                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.minInstanceCount);
                            if (message.availableMemory != null && Object.hasOwnProperty.call(message, "availableMemory"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.availableMemory);
                            if (message.allTrafficOnLatestRevision != null && Object.hasOwnProperty.call(message, "allTrafficOnLatestRevision"))
                                writer.uint32(/* id 16, wireType 0 =*/128).bool(message.allTrafficOnLatestRevision);
                            if (message.secretEnvironmentVariables != null && message.secretEnvironmentVariables.length)
                                for (var i = 0; i < message.secretEnvironmentVariables.length; ++i)
                                    $root.google.cloud.functions.v2beta.SecretEnvVar.encode(message.secretEnvironmentVariables[i], writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.revision != null && Object.hasOwnProperty.call(message, "revision"))
                                writer.uint32(/* id 18, wireType 2 =*/146).string(message.revision);
                            if (message.secretVolumes != null && message.secretVolumes.length)
                                for (var i = 0; i < message.secretVolumes.length; ++i)
                                    $root.google.cloud.functions.v2beta.SecretVolume.encode(message.secretVolumes[i], writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.maxInstanceRequestConcurrency != null && Object.hasOwnProperty.call(message, "maxInstanceRequestConcurrency"))
                                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.maxInstanceRequestConcurrency);
                            if (message.securityLevel != null && Object.hasOwnProperty.call(message, "securityLevel"))
                                writer.uint32(/* id 21, wireType 0 =*/168).int32(message.securityLevel);
                            if (message.availableCpu != null && Object.hasOwnProperty.call(message, "availableCpu"))
                                writer.uint32(/* id 22, wireType 2 =*/178).string(message.availableCpu);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ServiceConfig message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.ServiceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @static
                         * @param {google.cloud.functions.v2beta.IServiceConfig} message ServiceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ServiceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ServiceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.ServiceConfig} ServiceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ServiceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.ServiceConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.service = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.timeoutSeconds = reader.int32();
                                        break;
                                    }
                                case 13: {
                                        message.availableMemory = reader.string();
                                        break;
                                    }
                                case 22: {
                                        message.availableCpu = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (message.environmentVariables === $util.emptyObject)
                                            message.environmentVariables = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.environmentVariables[key] = value;
                                        break;
                                    }
                                case 5: {
                                        message.maxInstanceCount = reader.int32();
                                        break;
                                    }
                                case 12: {
                                        message.minInstanceCount = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.vpcConnector = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.vpcConnectorEgressSettings = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.ingressSettings = reader.int32();
                                        break;
                                    }
                                case 9: {
                                        message.uri = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 16: {
                                        message.allTrafficOnLatestRevision = reader.bool();
                                        break;
                                    }
                                case 17: {
                                        if (!(message.secretEnvironmentVariables && message.secretEnvironmentVariables.length))
                                            message.secretEnvironmentVariables = [];
                                        message.secretEnvironmentVariables.push($root.google.cloud.functions.v2beta.SecretEnvVar.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 19: {
                                        if (!(message.secretVolumes && message.secretVolumes.length))
                                            message.secretVolumes = [];
                                        message.secretVolumes.push($root.google.cloud.functions.v2beta.SecretVolume.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 18: {
                                        message.revision = reader.string();
                                        break;
                                    }
                                case 20: {
                                        message.maxInstanceRequestConcurrency = reader.int32();
                                        break;
                                    }
                                case 21: {
                                        message.securityLevel = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ServiceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.ServiceConfig} ServiceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ServiceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ServiceConfig message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ServiceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.service != null && message.hasOwnProperty("service"))
                                if (!$util.isString(message.service))
                                    return "service: string expected";
                            if (message.timeoutSeconds != null && message.hasOwnProperty("timeoutSeconds"))
                                if (!$util.isInteger(message.timeoutSeconds))
                                    return "timeoutSeconds: integer expected";
                            if (message.availableMemory != null && message.hasOwnProperty("availableMemory"))
                                if (!$util.isString(message.availableMemory))
                                    return "availableMemory: string expected";
                            if (message.availableCpu != null && message.hasOwnProperty("availableCpu"))
                                if (!$util.isString(message.availableCpu))
                                    return "availableCpu: string expected";
                            if (message.environmentVariables != null && message.hasOwnProperty("environmentVariables")) {
                                if (!$util.isObject(message.environmentVariables))
                                    return "environmentVariables: object expected";
                                var key = Object.keys(message.environmentVariables);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.environmentVariables[key[i]]))
                                        return "environmentVariables: string{k:string} expected";
                            }
                            if (message.maxInstanceCount != null && message.hasOwnProperty("maxInstanceCount"))
                                if (!$util.isInteger(message.maxInstanceCount))
                                    return "maxInstanceCount: integer expected";
                            if (message.minInstanceCount != null && message.hasOwnProperty("minInstanceCount"))
                                if (!$util.isInteger(message.minInstanceCount))
                                    return "minInstanceCount: integer expected";
                            if (message.vpcConnector != null && message.hasOwnProperty("vpcConnector"))
                                if (!$util.isString(message.vpcConnector))
                                    return "vpcConnector: string expected";
                            if (message.vpcConnectorEgressSettings != null && message.hasOwnProperty("vpcConnectorEgressSettings"))
                                switch (message.vpcConnectorEgressSettings) {
                                default:
                                    return "vpcConnectorEgressSettings: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.ingressSettings != null && message.hasOwnProperty("ingressSettings"))
                                switch (message.ingressSettings) {
                                default:
                                    return "ingressSettings: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.allTrafficOnLatestRevision != null && message.hasOwnProperty("allTrafficOnLatestRevision"))
                                if (typeof message.allTrafficOnLatestRevision !== "boolean")
                                    return "allTrafficOnLatestRevision: boolean expected";
                            if (message.secretEnvironmentVariables != null && message.hasOwnProperty("secretEnvironmentVariables")) {
                                if (!Array.isArray(message.secretEnvironmentVariables))
                                    return "secretEnvironmentVariables: array expected";
                                for (var i = 0; i < message.secretEnvironmentVariables.length; ++i) {
                                    var error = $root.google.cloud.functions.v2beta.SecretEnvVar.verify(message.secretEnvironmentVariables[i]);
                                    if (error)
                                        return "secretEnvironmentVariables." + error;
                                }
                            }
                            if (message.secretVolumes != null && message.hasOwnProperty("secretVolumes")) {
                                if (!Array.isArray(message.secretVolumes))
                                    return "secretVolumes: array expected";
                                for (var i = 0; i < message.secretVolumes.length; ++i) {
                                    var error = $root.google.cloud.functions.v2beta.SecretVolume.verify(message.secretVolumes[i]);
                                    if (error)
                                        return "secretVolumes." + error;
                                }
                            }
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                if (!$util.isString(message.revision))
                                    return "revision: string expected";
                            if (message.maxInstanceRequestConcurrency != null && message.hasOwnProperty("maxInstanceRequestConcurrency"))
                                if (!$util.isInteger(message.maxInstanceRequestConcurrency))
                                    return "maxInstanceRequestConcurrency: integer expected";
                            if (message.securityLevel != null && message.hasOwnProperty("securityLevel"))
                                switch (message.securityLevel) {
                                default:
                                    return "securityLevel: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ServiceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.ServiceConfig} ServiceConfig
                         */
                        ServiceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.ServiceConfig)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.ServiceConfig();
                            if (object.service != null)
                                message.service = String(object.service);
                            if (object.timeoutSeconds != null)
                                message.timeoutSeconds = object.timeoutSeconds | 0;
                            if (object.availableMemory != null)
                                message.availableMemory = String(object.availableMemory);
                            if (object.availableCpu != null)
                                message.availableCpu = String(object.availableCpu);
                            if (object.environmentVariables) {
                                if (typeof object.environmentVariables !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.ServiceConfig.environmentVariables: object expected");
                                message.environmentVariables = {};
                                for (var keys = Object.keys(object.environmentVariables), i = 0; i < keys.length; ++i)
                                    message.environmentVariables[keys[i]] = String(object.environmentVariables[keys[i]]);
                            }
                            if (object.maxInstanceCount != null)
                                message.maxInstanceCount = object.maxInstanceCount | 0;
                            if (object.minInstanceCount != null)
                                message.minInstanceCount = object.minInstanceCount | 0;
                            if (object.vpcConnector != null)
                                message.vpcConnector = String(object.vpcConnector);
                            switch (object.vpcConnectorEgressSettings) {
                            default:
                                if (typeof object.vpcConnectorEgressSettings === "number") {
                                    message.vpcConnectorEgressSettings = object.vpcConnectorEgressSettings;
                                    break;
                                }
                                break;
                            case "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED":
                            case 0:
                                message.vpcConnectorEgressSettings = 0;
                                break;
                            case "PRIVATE_RANGES_ONLY":
                            case 1:
                                message.vpcConnectorEgressSettings = 1;
                                break;
                            case "ALL_TRAFFIC":
                            case 2:
                                message.vpcConnectorEgressSettings = 2;
                                break;
                            }
                            switch (object.ingressSettings) {
                            default:
                                if (typeof object.ingressSettings === "number") {
                                    message.ingressSettings = object.ingressSettings;
                                    break;
                                }
                                break;
                            case "INGRESS_SETTINGS_UNSPECIFIED":
                            case 0:
                                message.ingressSettings = 0;
                                break;
                            case "ALLOW_ALL":
                            case 1:
                                message.ingressSettings = 1;
                                break;
                            case "ALLOW_INTERNAL_ONLY":
                            case 2:
                                message.ingressSettings = 2;
                                break;
                            case "ALLOW_INTERNAL_AND_GCLB":
                            case 3:
                                message.ingressSettings = 3;
                                break;
                            }
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            if (object.allTrafficOnLatestRevision != null)
                                message.allTrafficOnLatestRevision = Boolean(object.allTrafficOnLatestRevision);
                            if (object.secretEnvironmentVariables) {
                                if (!Array.isArray(object.secretEnvironmentVariables))
                                    throw TypeError(".google.cloud.functions.v2beta.ServiceConfig.secretEnvironmentVariables: array expected");
                                message.secretEnvironmentVariables = [];
                                for (var i = 0; i < object.secretEnvironmentVariables.length; ++i) {
                                    if (typeof object.secretEnvironmentVariables[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2beta.ServiceConfig.secretEnvironmentVariables: object expected");
                                    message.secretEnvironmentVariables[i] = $root.google.cloud.functions.v2beta.SecretEnvVar.fromObject(object.secretEnvironmentVariables[i]);
                                }
                            }
                            if (object.secretVolumes) {
                                if (!Array.isArray(object.secretVolumes))
                                    throw TypeError(".google.cloud.functions.v2beta.ServiceConfig.secretVolumes: array expected");
                                message.secretVolumes = [];
                                for (var i = 0; i < object.secretVolumes.length; ++i) {
                                    if (typeof object.secretVolumes[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2beta.ServiceConfig.secretVolumes: object expected");
                                    message.secretVolumes[i] = $root.google.cloud.functions.v2beta.SecretVolume.fromObject(object.secretVolumes[i]);
                                }
                            }
                            if (object.revision != null)
                                message.revision = String(object.revision);
                            if (object.maxInstanceRequestConcurrency != null)
                                message.maxInstanceRequestConcurrency = object.maxInstanceRequestConcurrency | 0;
                            switch (object.securityLevel) {
                            default:
                                if (typeof object.securityLevel === "number") {
                                    message.securityLevel = object.securityLevel;
                                    break;
                                }
                                break;
                            case "SECURITY_LEVEL_UNSPECIFIED":
                            case 0:
                                message.securityLevel = 0;
                                break;
                            case "SECURE_ALWAYS":
                            case 1:
                                message.securityLevel = 1;
                                break;
                            case "SECURE_OPTIONAL":
                            case 2:
                                message.securityLevel = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ServiceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @static
                         * @param {google.cloud.functions.v2beta.ServiceConfig} message ServiceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ServiceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.secretEnvironmentVariables = [];
                                object.secretVolumes = [];
                            }
                            if (options.objects || options.defaults)
                                object.environmentVariables = {};
                            if (options.defaults) {
                                object.service = "";
                                object.timeoutSeconds = 0;
                                object.maxInstanceCount = 0;
                                object.vpcConnector = "";
                                object.vpcConnectorEgressSettings = options.enums === String ? "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED" : 0;
                                object.ingressSettings = options.enums === String ? "INGRESS_SETTINGS_UNSPECIFIED" : 0;
                                object.uri = "";
                                object.serviceAccountEmail = "";
                                object.minInstanceCount = 0;
                                object.availableMemory = "";
                                object.allTrafficOnLatestRevision = false;
                                object.revision = "";
                                object.maxInstanceRequestConcurrency = 0;
                                object.securityLevel = options.enums === String ? "SECURITY_LEVEL_UNSPECIFIED" : 0;
                                object.availableCpu = "";
                            }
                            if (message.service != null && message.hasOwnProperty("service"))
                                object.service = message.service;
                            if (message.timeoutSeconds != null && message.hasOwnProperty("timeoutSeconds"))
                                object.timeoutSeconds = message.timeoutSeconds;
                            var keys2;
                            if (message.environmentVariables && (keys2 = Object.keys(message.environmentVariables)).length) {
                                object.environmentVariables = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.environmentVariables[keys2[j]] = message.environmentVariables[keys2[j]];
                            }
                            if (message.maxInstanceCount != null && message.hasOwnProperty("maxInstanceCount"))
                                object.maxInstanceCount = message.maxInstanceCount;
                            if (message.vpcConnector != null && message.hasOwnProperty("vpcConnector"))
                                object.vpcConnector = message.vpcConnector;
                            if (message.vpcConnectorEgressSettings != null && message.hasOwnProperty("vpcConnectorEgressSettings"))
                                object.vpcConnectorEgressSettings = options.enums === String ? $root.google.cloud.functions.v2beta.ServiceConfig.VpcConnectorEgressSettings[message.vpcConnectorEgressSettings] === undefined ? message.vpcConnectorEgressSettings : $root.google.cloud.functions.v2beta.ServiceConfig.VpcConnectorEgressSettings[message.vpcConnectorEgressSettings] : message.vpcConnectorEgressSettings;
                            if (message.ingressSettings != null && message.hasOwnProperty("ingressSettings"))
                                object.ingressSettings = options.enums === String ? $root.google.cloud.functions.v2beta.ServiceConfig.IngressSettings[message.ingressSettings] === undefined ? message.ingressSettings : $root.google.cloud.functions.v2beta.ServiceConfig.IngressSettings[message.ingressSettings] : message.ingressSettings;
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.minInstanceCount != null && message.hasOwnProperty("minInstanceCount"))
                                object.minInstanceCount = message.minInstanceCount;
                            if (message.availableMemory != null && message.hasOwnProperty("availableMemory"))
                                object.availableMemory = message.availableMemory;
                            if (message.allTrafficOnLatestRevision != null && message.hasOwnProperty("allTrafficOnLatestRevision"))
                                object.allTrafficOnLatestRevision = message.allTrafficOnLatestRevision;
                            if (message.secretEnvironmentVariables && message.secretEnvironmentVariables.length) {
                                object.secretEnvironmentVariables = [];
                                for (var j = 0; j < message.secretEnvironmentVariables.length; ++j)
                                    object.secretEnvironmentVariables[j] = $root.google.cloud.functions.v2beta.SecretEnvVar.toObject(message.secretEnvironmentVariables[j], options);
                            }
                            if (message.revision != null && message.hasOwnProperty("revision"))
                                object.revision = message.revision;
                            if (message.secretVolumes && message.secretVolumes.length) {
                                object.secretVolumes = [];
                                for (var j = 0; j < message.secretVolumes.length; ++j)
                                    object.secretVolumes[j] = $root.google.cloud.functions.v2beta.SecretVolume.toObject(message.secretVolumes[j], options);
                            }
                            if (message.maxInstanceRequestConcurrency != null && message.hasOwnProperty("maxInstanceRequestConcurrency"))
                                object.maxInstanceRequestConcurrency = message.maxInstanceRequestConcurrency;
                            if (message.securityLevel != null && message.hasOwnProperty("securityLevel"))
                                object.securityLevel = options.enums === String ? $root.google.cloud.functions.v2beta.ServiceConfig.SecurityLevel[message.securityLevel] === undefined ? message.securityLevel : $root.google.cloud.functions.v2beta.ServiceConfig.SecurityLevel[message.securityLevel] : message.securityLevel;
                            if (message.availableCpu != null && message.hasOwnProperty("availableCpu"))
                                object.availableCpu = message.availableCpu;
                            return object;
                        };
    
                        /**
                         * Converts this ServiceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ServiceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ServiceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.ServiceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ServiceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.ServiceConfig";
                        };
    
                        /**
                         * VpcConnectorEgressSettings enum.
                         * @name google.cloud.functions.v2beta.ServiceConfig.VpcConnectorEgressSettings
                         * @enum {number}
                         * @property {number} VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED=0 VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED value
                         * @property {number} PRIVATE_RANGES_ONLY=1 PRIVATE_RANGES_ONLY value
                         * @property {number} ALL_TRAFFIC=2 ALL_TRAFFIC value
                         */
                        ServiceConfig.VpcConnectorEgressSettings = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PRIVATE_RANGES_ONLY"] = 1;
                            values[valuesById[2] = "ALL_TRAFFIC"] = 2;
                            return values;
                        })();
    
                        /**
                         * IngressSettings enum.
                         * @name google.cloud.functions.v2beta.ServiceConfig.IngressSettings
                         * @enum {number}
                         * @property {number} INGRESS_SETTINGS_UNSPECIFIED=0 INGRESS_SETTINGS_UNSPECIFIED value
                         * @property {number} ALLOW_ALL=1 ALLOW_ALL value
                         * @property {number} ALLOW_INTERNAL_ONLY=2 ALLOW_INTERNAL_ONLY value
                         * @property {number} ALLOW_INTERNAL_AND_GCLB=3 ALLOW_INTERNAL_AND_GCLB value
                         */
                        ServiceConfig.IngressSettings = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "INGRESS_SETTINGS_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ALLOW_ALL"] = 1;
                            values[valuesById[2] = "ALLOW_INTERNAL_ONLY"] = 2;
                            values[valuesById[3] = "ALLOW_INTERNAL_AND_GCLB"] = 3;
                            return values;
                        })();
    
                        /**
                         * SecurityLevel enum.
                         * @name google.cloud.functions.v2beta.ServiceConfig.SecurityLevel
                         * @enum {number}
                         * @property {number} SECURITY_LEVEL_UNSPECIFIED=0 SECURITY_LEVEL_UNSPECIFIED value
                         * @property {number} SECURE_ALWAYS=1 SECURE_ALWAYS value
                         * @property {number} SECURE_OPTIONAL=2 SECURE_OPTIONAL value
                         */
                        ServiceConfig.SecurityLevel = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SECURITY_LEVEL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SECURE_ALWAYS"] = 1;
                            values[valuesById[2] = "SECURE_OPTIONAL"] = 2;
                            return values;
                        })();
    
                        return ServiceConfig;
                    })();
    
                    v2beta.SecretEnvVar = (function() {
    
                        /**
                         * Properties of a SecretEnvVar.
                         * @memberof google.cloud.functions.v2beta
                         * @interface ISecretEnvVar
                         * @property {string|null} [key] SecretEnvVar key
                         * @property {string|null} [projectId] SecretEnvVar projectId
                         * @property {string|null} [secret] SecretEnvVar secret
                         * @property {string|null} [version] SecretEnvVar version
                         */
    
                        /**
                         * Constructs a new SecretEnvVar.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a SecretEnvVar.
                         * @implements ISecretEnvVar
                         * @constructor
                         * @param {google.cloud.functions.v2beta.ISecretEnvVar=} [properties] Properties to set
                         */
                        function SecretEnvVar(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SecretEnvVar key.
                         * @member {string} key
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.key = "";
    
                        /**
                         * SecretEnvVar projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.projectId = "";
    
                        /**
                         * SecretEnvVar secret.
                         * @member {string} secret
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.secret = "";
    
                        /**
                         * SecretEnvVar version.
                         * @member {string} version
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @instance
                         */
                        SecretEnvVar.prototype.version = "";
    
                        /**
                         * Creates a new SecretEnvVar instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v2beta.ISecretEnvVar=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.SecretEnvVar} SecretEnvVar instance
                         */
                        SecretEnvVar.create = function create(properties) {
                            return new SecretEnvVar(properties);
                        };
    
                        /**
                         * Encodes the specified SecretEnvVar message. Does not implicitly {@link google.cloud.functions.v2beta.SecretEnvVar.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v2beta.ISecretEnvVar} message SecretEnvVar message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretEnvVar.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.projectId);
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.secret);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.version);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SecretEnvVar message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.SecretEnvVar.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v2beta.ISecretEnvVar} message SecretEnvVar message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretEnvVar.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SecretEnvVar message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.SecretEnvVar} SecretEnvVar
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretEnvVar.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.SecretEnvVar();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.key = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.secret = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.version = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SecretEnvVar message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.SecretEnvVar} SecretEnvVar
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretEnvVar.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SecretEnvVar message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SecretEnvVar.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.key != null && message.hasOwnProperty("key"))
                                if (!$util.isString(message.key))
                                    return "key: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                if (!$util.isString(message.secret))
                                    return "secret: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SecretEnvVar message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.SecretEnvVar} SecretEnvVar
                         */
                        SecretEnvVar.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.SecretEnvVar)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.SecretEnvVar();
                            if (object.key != null)
                                message.key = String(object.key);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.secret != null)
                                message.secret = String(object.secret);
                            if (object.version != null)
                                message.version = String(object.version);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SecretEnvVar message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @static
                         * @param {google.cloud.functions.v2beta.SecretEnvVar} message SecretEnvVar
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SecretEnvVar.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.key = "";
                                object.projectId = "";
                                object.secret = "";
                                object.version = "";
                            }
                            if (message.key != null && message.hasOwnProperty("key"))
                                object.key = message.key;
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                object.secret = message.secret;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            return object;
                        };
    
                        /**
                         * Converts this SecretEnvVar to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SecretEnvVar.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SecretEnvVar
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.SecretEnvVar
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SecretEnvVar.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.SecretEnvVar";
                        };
    
                        return SecretEnvVar;
                    })();
    
                    v2beta.SecretVolume = (function() {
    
                        /**
                         * Properties of a SecretVolume.
                         * @memberof google.cloud.functions.v2beta
                         * @interface ISecretVolume
                         * @property {string|null} [mountPath] SecretVolume mountPath
                         * @property {string|null} [projectId] SecretVolume projectId
                         * @property {string|null} [secret] SecretVolume secret
                         * @property {Array.<google.cloud.functions.v2beta.SecretVolume.ISecretVersion>|null} [versions] SecretVolume versions
                         */
    
                        /**
                         * Constructs a new SecretVolume.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a SecretVolume.
                         * @implements ISecretVolume
                         * @constructor
                         * @param {google.cloud.functions.v2beta.ISecretVolume=} [properties] Properties to set
                         */
                        function SecretVolume(properties) {
                            this.versions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SecretVolume mountPath.
                         * @member {string} mountPath
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.mountPath = "";
    
                        /**
                         * SecretVolume projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.projectId = "";
    
                        /**
                         * SecretVolume secret.
                         * @member {string} secret
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.secret = "";
    
                        /**
                         * SecretVolume versions.
                         * @member {Array.<google.cloud.functions.v2beta.SecretVolume.ISecretVersion>} versions
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @instance
                         */
                        SecretVolume.prototype.versions = $util.emptyArray;
    
                        /**
                         * Creates a new SecretVolume instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v2beta.ISecretVolume=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.SecretVolume} SecretVolume instance
                         */
                        SecretVolume.create = function create(properties) {
                            return new SecretVolume(properties);
                        };
    
                        /**
                         * Encodes the specified SecretVolume message. Does not implicitly {@link google.cloud.functions.v2beta.SecretVolume.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v2beta.ISecretVolume} message SecretVolume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretVolume.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mountPath != null && Object.hasOwnProperty.call(message, "mountPath"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mountPath);
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.projectId);
                            if (message.secret != null && Object.hasOwnProperty.call(message, "secret"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.secret);
                            if (message.versions != null && message.versions.length)
                                for (var i = 0; i < message.versions.length; ++i)
                                    $root.google.cloud.functions.v2beta.SecretVolume.SecretVersion.encode(message.versions[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SecretVolume message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.SecretVolume.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v2beta.ISecretVolume} message SecretVolume message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecretVolume.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SecretVolume message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.SecretVolume} SecretVolume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretVolume.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.SecretVolume();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mountPath = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.secret = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.versions && message.versions.length))
                                            message.versions = [];
                                        message.versions.push($root.google.cloud.functions.v2beta.SecretVolume.SecretVersion.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SecretVolume message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.SecretVolume} SecretVolume
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecretVolume.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SecretVolume message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SecretVolume.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mountPath != null && message.hasOwnProperty("mountPath"))
                                if (!$util.isString(message.mountPath))
                                    return "mountPath: string expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                if (!$util.isString(message.secret))
                                    return "secret: string expected";
                            if (message.versions != null && message.hasOwnProperty("versions")) {
                                if (!Array.isArray(message.versions))
                                    return "versions: array expected";
                                for (var i = 0; i < message.versions.length; ++i) {
                                    var error = $root.google.cloud.functions.v2beta.SecretVolume.SecretVersion.verify(message.versions[i]);
                                    if (error)
                                        return "versions." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SecretVolume message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.SecretVolume} SecretVolume
                         */
                        SecretVolume.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.SecretVolume)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.SecretVolume();
                            if (object.mountPath != null)
                                message.mountPath = String(object.mountPath);
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.secret != null)
                                message.secret = String(object.secret);
                            if (object.versions) {
                                if (!Array.isArray(object.versions))
                                    throw TypeError(".google.cloud.functions.v2beta.SecretVolume.versions: array expected");
                                message.versions = [];
                                for (var i = 0; i < object.versions.length; ++i) {
                                    if (typeof object.versions[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2beta.SecretVolume.versions: object expected");
                                    message.versions[i] = $root.google.cloud.functions.v2beta.SecretVolume.SecretVersion.fromObject(object.versions[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SecretVolume message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @static
                         * @param {google.cloud.functions.v2beta.SecretVolume} message SecretVolume
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SecretVolume.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.versions = [];
                            if (options.defaults) {
                                object.mountPath = "";
                                object.projectId = "";
                                object.secret = "";
                            }
                            if (message.mountPath != null && message.hasOwnProperty("mountPath"))
                                object.mountPath = message.mountPath;
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.secret != null && message.hasOwnProperty("secret"))
                                object.secret = message.secret;
                            if (message.versions && message.versions.length) {
                                object.versions = [];
                                for (var j = 0; j < message.versions.length; ++j)
                                    object.versions[j] = $root.google.cloud.functions.v2beta.SecretVolume.SecretVersion.toObject(message.versions[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SecretVolume to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SecretVolume.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SecretVolume
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.SecretVolume
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SecretVolume.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.SecretVolume";
                        };
    
                        SecretVolume.SecretVersion = (function() {
    
                            /**
                             * Properties of a SecretVersion.
                             * @memberof google.cloud.functions.v2beta.SecretVolume
                             * @interface ISecretVersion
                             * @property {string|null} [version] SecretVersion version
                             * @property {string|null} [path] SecretVersion path
                             */
    
                            /**
                             * Constructs a new SecretVersion.
                             * @memberof google.cloud.functions.v2beta.SecretVolume
                             * @classdesc Represents a SecretVersion.
                             * @implements ISecretVersion
                             * @constructor
                             * @param {google.cloud.functions.v2beta.SecretVolume.ISecretVersion=} [properties] Properties to set
                             */
                            function SecretVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SecretVersion version.
                             * @member {string} version
                             * @memberof google.cloud.functions.v2beta.SecretVolume.SecretVersion
                             * @instance
                             */
                            SecretVersion.prototype.version = "";
    
                            /**
                             * SecretVersion path.
                             * @member {string} path
                             * @memberof google.cloud.functions.v2beta.SecretVolume.SecretVersion
                             * @instance
                             */
                            SecretVersion.prototype.path = "";
    
                            /**
                             * Creates a new SecretVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.functions.v2beta.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v2beta.SecretVolume.ISecretVersion=} [properties] Properties to set
                             * @returns {google.cloud.functions.v2beta.SecretVolume.SecretVersion} SecretVersion instance
                             */
                            SecretVersion.create = function create(properties) {
                                return new SecretVersion(properties);
                            };
    
                            /**
                             * Encodes the specified SecretVersion message. Does not implicitly {@link google.cloud.functions.v2beta.SecretVolume.SecretVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.functions.v2beta.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v2beta.SecretVolume.ISecretVersion} message SecretVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SecretVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SecretVersion message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.SecretVolume.SecretVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.functions.v2beta.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v2beta.SecretVolume.ISecretVersion} message SecretVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SecretVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SecretVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.functions.v2beta.SecretVolume.SecretVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.functions.v2beta.SecretVolume.SecretVersion} SecretVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SecretVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.SecretVolume.SecretVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.version = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.path = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SecretVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.functions.v2beta.SecretVolume.SecretVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.functions.v2beta.SecretVolume.SecretVersion} SecretVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SecretVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SecretVersion message.
                             * @function verify
                             * @memberof google.cloud.functions.v2beta.SecretVolume.SecretVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SecretVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.path != null && message.hasOwnProperty("path"))
                                    if (!$util.isString(message.path))
                                        return "path: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a SecretVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.functions.v2beta.SecretVolume.SecretVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.functions.v2beta.SecretVolume.SecretVersion} SecretVersion
                             */
                            SecretVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.functions.v2beta.SecretVolume.SecretVersion)
                                    return object;
                                var message = new $root.google.cloud.functions.v2beta.SecretVolume.SecretVersion();
                                if (object.version != null)
                                    message.version = String(object.version);
                                if (object.path != null)
                                    message.path = String(object.path);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SecretVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.functions.v2beta.SecretVolume.SecretVersion
                             * @static
                             * @param {google.cloud.functions.v2beta.SecretVolume.SecretVersion} message SecretVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SecretVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = "";
                                    object.path = "";
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.path != null && message.hasOwnProperty("path"))
                                    object.path = message.path;
                                return object;
                            };
    
                            /**
                             * Converts this SecretVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.functions.v2beta.SecretVolume.SecretVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SecretVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SecretVersion
                             * @function getTypeUrl
                             * @memberof google.cloud.functions.v2beta.SecretVolume.SecretVersion
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SecretVersion.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.functions.v2beta.SecretVolume.SecretVersion";
                            };
    
                            return SecretVersion;
                        })();
    
                        return SecretVolume;
                    })();
    
                    v2beta.EventTrigger = (function() {
    
                        /**
                         * Properties of an EventTrigger.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IEventTrigger
                         * @property {string|null} [trigger] EventTrigger trigger
                         * @property {string|null} [triggerRegion] EventTrigger triggerRegion
                         * @property {string|null} [eventType] EventTrigger eventType
                         * @property {Array.<google.cloud.functions.v2beta.IEventFilter>|null} [eventFilters] EventTrigger eventFilters
                         * @property {string|null} [pubsubTopic] EventTrigger pubsubTopic
                         * @property {string|null} [serviceAccountEmail] EventTrigger serviceAccountEmail
                         * @property {google.cloud.functions.v2beta.EventTrigger.RetryPolicy|null} [retryPolicy] EventTrigger retryPolicy
                         * @property {string|null} [channel] EventTrigger channel
                         */
    
                        /**
                         * Constructs a new EventTrigger.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents an EventTrigger.
                         * @implements IEventTrigger
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IEventTrigger=} [properties] Properties to set
                         */
                        function EventTrigger(properties) {
                            this.eventFilters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EventTrigger trigger.
                         * @member {string} trigger
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.trigger = "";
    
                        /**
                         * EventTrigger triggerRegion.
                         * @member {string} triggerRegion
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.triggerRegion = "";
    
                        /**
                         * EventTrigger eventType.
                         * @member {string} eventType
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.eventType = "";
    
                        /**
                         * EventTrigger eventFilters.
                         * @member {Array.<google.cloud.functions.v2beta.IEventFilter>} eventFilters
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.eventFilters = $util.emptyArray;
    
                        /**
                         * EventTrigger pubsubTopic.
                         * @member {string} pubsubTopic
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.pubsubTopic = "";
    
                        /**
                         * EventTrigger serviceAccountEmail.
                         * @member {string} serviceAccountEmail
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.serviceAccountEmail = "";
    
                        /**
                         * EventTrigger retryPolicy.
                         * @member {google.cloud.functions.v2beta.EventTrigger.RetryPolicy} retryPolicy
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.retryPolicy = 0;
    
                        /**
                         * EventTrigger channel.
                         * @member {string} channel
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @instance
                         */
                        EventTrigger.prototype.channel = "";
    
                        /**
                         * Creates a new EventTrigger instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v2beta.IEventTrigger=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.EventTrigger} EventTrigger instance
                         */
                        EventTrigger.create = function create(properties) {
                            return new EventTrigger(properties);
                        };
    
                        /**
                         * Encodes the specified EventTrigger message. Does not implicitly {@link google.cloud.functions.v2beta.EventTrigger.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v2beta.IEventTrigger} message EventTrigger message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventTrigger.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.trigger != null && Object.hasOwnProperty.call(message, "trigger"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.trigger);
                            if (message.triggerRegion != null && Object.hasOwnProperty.call(message, "triggerRegion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.triggerRegion);
                            if (message.eventType != null && Object.hasOwnProperty.call(message, "eventType"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.eventType);
                            if (message.eventFilters != null && message.eventFilters.length)
                                for (var i = 0; i < message.eventFilters.length; ++i)
                                    $root.google.cloud.functions.v2beta.EventFilter.encode(message.eventFilters[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.pubsubTopic != null && Object.hasOwnProperty.call(message, "pubsubTopic"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.pubsubTopic);
                            if (message.serviceAccountEmail != null && Object.hasOwnProperty.call(message, "serviceAccountEmail"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.serviceAccountEmail);
                            if (message.retryPolicy != null && Object.hasOwnProperty.call(message, "retryPolicy"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.retryPolicy);
                            if (message.channel != null && Object.hasOwnProperty.call(message, "channel"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.channel);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EventTrigger message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.EventTrigger.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v2beta.IEventTrigger} message EventTrigger message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventTrigger.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EventTrigger message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.EventTrigger} EventTrigger
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventTrigger.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.EventTrigger();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.trigger = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.triggerRegion = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.eventType = reader.string();
                                        break;
                                    }
                                case 4: {
                                        if (!(message.eventFilters && message.eventFilters.length))
                                            message.eventFilters = [];
                                        message.eventFilters.push($root.google.cloud.functions.v2beta.EventFilter.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        message.pubsubTopic = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.serviceAccountEmail = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.retryPolicy = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.channel = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EventTrigger message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.EventTrigger} EventTrigger
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventTrigger.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EventTrigger message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EventTrigger.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.trigger != null && message.hasOwnProperty("trigger"))
                                if (!$util.isString(message.trigger))
                                    return "trigger: string expected";
                            if (message.triggerRegion != null && message.hasOwnProperty("triggerRegion"))
                                if (!$util.isString(message.triggerRegion))
                                    return "triggerRegion: string expected";
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                if (!$util.isString(message.eventType))
                                    return "eventType: string expected";
                            if (message.eventFilters != null && message.hasOwnProperty("eventFilters")) {
                                if (!Array.isArray(message.eventFilters))
                                    return "eventFilters: array expected";
                                for (var i = 0; i < message.eventFilters.length; ++i) {
                                    var error = $root.google.cloud.functions.v2beta.EventFilter.verify(message.eventFilters[i]);
                                    if (error)
                                        return "eventFilters." + error;
                                }
                            }
                            if (message.pubsubTopic != null && message.hasOwnProperty("pubsubTopic"))
                                if (!$util.isString(message.pubsubTopic))
                                    return "pubsubTopic: string expected";
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                if (!$util.isString(message.serviceAccountEmail))
                                    return "serviceAccountEmail: string expected";
                            if (message.retryPolicy != null && message.hasOwnProperty("retryPolicy"))
                                switch (message.retryPolicy) {
                                default:
                                    return "retryPolicy: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.channel != null && message.hasOwnProperty("channel"))
                                if (!$util.isString(message.channel))
                                    return "channel: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EventTrigger message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.EventTrigger} EventTrigger
                         */
                        EventTrigger.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.EventTrigger)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.EventTrigger();
                            if (object.trigger != null)
                                message.trigger = String(object.trigger);
                            if (object.triggerRegion != null)
                                message.triggerRegion = String(object.triggerRegion);
                            if (object.eventType != null)
                                message.eventType = String(object.eventType);
                            if (object.eventFilters) {
                                if (!Array.isArray(object.eventFilters))
                                    throw TypeError(".google.cloud.functions.v2beta.EventTrigger.eventFilters: array expected");
                                message.eventFilters = [];
                                for (var i = 0; i < object.eventFilters.length; ++i) {
                                    if (typeof object.eventFilters[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2beta.EventTrigger.eventFilters: object expected");
                                    message.eventFilters[i] = $root.google.cloud.functions.v2beta.EventFilter.fromObject(object.eventFilters[i]);
                                }
                            }
                            if (object.pubsubTopic != null)
                                message.pubsubTopic = String(object.pubsubTopic);
                            if (object.serviceAccountEmail != null)
                                message.serviceAccountEmail = String(object.serviceAccountEmail);
                            switch (object.retryPolicy) {
                            default:
                                if (typeof object.retryPolicy === "number") {
                                    message.retryPolicy = object.retryPolicy;
                                    break;
                                }
                                break;
                            case "RETRY_POLICY_UNSPECIFIED":
                            case 0:
                                message.retryPolicy = 0;
                                break;
                            case "RETRY_POLICY_DO_NOT_RETRY":
                            case 1:
                                message.retryPolicy = 1;
                                break;
                            case "RETRY_POLICY_RETRY":
                            case 2:
                                message.retryPolicy = 2;
                                break;
                            }
                            if (object.channel != null)
                                message.channel = String(object.channel);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EventTrigger message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @static
                         * @param {google.cloud.functions.v2beta.EventTrigger} message EventTrigger
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EventTrigger.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.eventFilters = [];
                            if (options.defaults) {
                                object.trigger = "";
                                object.triggerRegion = "";
                                object.eventType = "";
                                object.pubsubTopic = "";
                                object.serviceAccountEmail = "";
                                object.retryPolicy = options.enums === String ? "RETRY_POLICY_UNSPECIFIED" : 0;
                                object.channel = "";
                            }
                            if (message.trigger != null && message.hasOwnProperty("trigger"))
                                object.trigger = message.trigger;
                            if (message.triggerRegion != null && message.hasOwnProperty("triggerRegion"))
                                object.triggerRegion = message.triggerRegion;
                            if (message.eventType != null && message.hasOwnProperty("eventType"))
                                object.eventType = message.eventType;
                            if (message.eventFilters && message.eventFilters.length) {
                                object.eventFilters = [];
                                for (var j = 0; j < message.eventFilters.length; ++j)
                                    object.eventFilters[j] = $root.google.cloud.functions.v2beta.EventFilter.toObject(message.eventFilters[j], options);
                            }
                            if (message.pubsubTopic != null && message.hasOwnProperty("pubsubTopic"))
                                object.pubsubTopic = message.pubsubTopic;
                            if (message.serviceAccountEmail != null && message.hasOwnProperty("serviceAccountEmail"))
                                object.serviceAccountEmail = message.serviceAccountEmail;
                            if (message.retryPolicy != null && message.hasOwnProperty("retryPolicy"))
                                object.retryPolicy = options.enums === String ? $root.google.cloud.functions.v2beta.EventTrigger.RetryPolicy[message.retryPolicy] === undefined ? message.retryPolicy : $root.google.cloud.functions.v2beta.EventTrigger.RetryPolicy[message.retryPolicy] : message.retryPolicy;
                            if (message.channel != null && message.hasOwnProperty("channel"))
                                object.channel = message.channel;
                            return object;
                        };
    
                        /**
                         * Converts this EventTrigger to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EventTrigger.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EventTrigger
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.EventTrigger
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EventTrigger.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.EventTrigger";
                        };
    
                        /**
                         * RetryPolicy enum.
                         * @name google.cloud.functions.v2beta.EventTrigger.RetryPolicy
                         * @enum {number}
                         * @property {number} RETRY_POLICY_UNSPECIFIED=0 RETRY_POLICY_UNSPECIFIED value
                         * @property {number} RETRY_POLICY_DO_NOT_RETRY=1 RETRY_POLICY_DO_NOT_RETRY value
                         * @property {number} RETRY_POLICY_RETRY=2 RETRY_POLICY_RETRY value
                         */
                        EventTrigger.RetryPolicy = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RETRY_POLICY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RETRY_POLICY_DO_NOT_RETRY"] = 1;
                            values[valuesById[2] = "RETRY_POLICY_RETRY"] = 2;
                            return values;
                        })();
    
                        return EventTrigger;
                    })();
    
                    v2beta.EventFilter = (function() {
    
                        /**
                         * Properties of an EventFilter.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IEventFilter
                         * @property {string|null} [attribute] EventFilter attribute
                         * @property {string|null} [value] EventFilter value
                         * @property {string|null} [operator] EventFilter operator
                         */
    
                        /**
                         * Constructs a new EventFilter.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents an EventFilter.
                         * @implements IEventFilter
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IEventFilter=} [properties] Properties to set
                         */
                        function EventFilter(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EventFilter attribute.
                         * @member {string} attribute
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @instance
                         */
                        EventFilter.prototype.attribute = "";
    
                        /**
                         * EventFilter value.
                         * @member {string} value
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @instance
                         */
                        EventFilter.prototype.value = "";
    
                        /**
                         * EventFilter operator.
                         * @member {string} operator
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @instance
                         */
                        EventFilter.prototype.operator = "";
    
                        /**
                         * Creates a new EventFilter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @static
                         * @param {google.cloud.functions.v2beta.IEventFilter=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.EventFilter} EventFilter instance
                         */
                        EventFilter.create = function create(properties) {
                            return new EventFilter(properties);
                        };
    
                        /**
                         * Encodes the specified EventFilter message. Does not implicitly {@link google.cloud.functions.v2beta.EventFilter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @static
                         * @param {google.cloud.functions.v2beta.IEventFilter} message EventFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventFilter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.attribute != null && Object.hasOwnProperty.call(message, "attribute"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.attribute);
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                            if (message.operator != null && Object.hasOwnProperty.call(message, "operator"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.operator);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EventFilter message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.EventFilter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @static
                         * @param {google.cloud.functions.v2beta.IEventFilter} message EventFilter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EventFilter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EventFilter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.EventFilter} EventFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventFilter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.EventFilter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.attribute = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.value = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.operator = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EventFilter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.EventFilter} EventFilter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EventFilter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EventFilter message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EventFilter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.attribute != null && message.hasOwnProperty("attribute"))
                                if (!$util.isString(message.attribute))
                                    return "attribute: string expected";
                            if (message.value != null && message.hasOwnProperty("value"))
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            if (message.operator != null && message.hasOwnProperty("operator"))
                                if (!$util.isString(message.operator))
                                    return "operator: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EventFilter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.EventFilter} EventFilter
                         */
                        EventFilter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.EventFilter)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.EventFilter();
                            if (object.attribute != null)
                                message.attribute = String(object.attribute);
                            if (object.value != null)
                                message.value = String(object.value);
                            if (object.operator != null)
                                message.operator = String(object.operator);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EventFilter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @static
                         * @param {google.cloud.functions.v2beta.EventFilter} message EventFilter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EventFilter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.attribute = "";
                                object.value = "";
                                object.operator = "";
                            }
                            if (message.attribute != null && message.hasOwnProperty("attribute"))
                                object.attribute = message.attribute;
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = message.value;
                            if (message.operator != null && message.hasOwnProperty("operator"))
                                object.operator = message.operator;
                            return object;
                        };
    
                        /**
                         * Converts this EventFilter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EventFilter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EventFilter
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.EventFilter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EventFilter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.EventFilter";
                        };
    
                        return EventFilter;
                    })();
    
                    v2beta.GetFunctionRequest = (function() {
    
                        /**
                         * Properties of a GetFunctionRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IGetFunctionRequest
                         * @property {string|null} [name] GetFunctionRequest name
                         */
    
                        /**
                         * Constructs a new GetFunctionRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a GetFunctionRequest.
                         * @implements IGetFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IGetFunctionRequest=} [properties] Properties to set
                         */
                        function GetFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetFunctionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v2beta.GetFunctionRequest
                         * @instance
                         */
                        GetFunctionRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IGetFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.GetFunctionRequest} GetFunctionRequest instance
                         */
                        GetFunctionRequest.create = function create(properties) {
                            return new GetFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetFunctionRequest message. Does not implicitly {@link google.cloud.functions.v2beta.GetFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IGetFunctionRequest} message GetFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.GetFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IGetFunctionRequest} message GetFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.GetFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.GetFunctionRequest} GetFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.GetFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.GetFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.GetFunctionRequest} GetFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.GetFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.GetFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.GetFunctionRequest} GetFunctionRequest
                         */
                        GetFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.GetFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.GetFunctionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.GetFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.GetFunctionRequest} message GetFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.GetFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.GetFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.GetFunctionRequest";
                        };
    
                        return GetFunctionRequest;
                    })();
    
                    v2beta.ListFunctionsRequest = (function() {
    
                        /**
                         * Properties of a ListFunctionsRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IListFunctionsRequest
                         * @property {string|null} [parent] ListFunctionsRequest parent
                         * @property {number|null} [pageSize] ListFunctionsRequest pageSize
                         * @property {string|null} [pageToken] ListFunctionsRequest pageToken
                         * @property {string|null} [filter] ListFunctionsRequest filter
                         * @property {string|null} [orderBy] ListFunctionsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListFunctionsRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a ListFunctionsRequest.
                         * @implements IListFunctionsRequest
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IListFunctionsRequest=} [properties] Properties to set
                         */
                        function ListFunctionsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFunctionsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.parent = "";
    
                        /**
                         * ListFunctionsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListFunctionsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.pageToken = "";
    
                        /**
                         * ListFunctionsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.filter = "";
    
                        /**
                         * ListFunctionsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @instance
                         */
                        ListFunctionsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListFunctionsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IListFunctionsRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.ListFunctionsRequest} ListFunctionsRequest instance
                         */
                        ListFunctionsRequest.create = function create(properties) {
                            return new ListFunctionsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListFunctionsRequest message. Does not implicitly {@link google.cloud.functions.v2beta.ListFunctionsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IListFunctionsRequest} message ListFunctionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFunctionsRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.ListFunctionsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IListFunctionsRequest} message ListFunctionsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFunctionsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.ListFunctionsRequest} ListFunctionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.ListFunctionsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.orderBy = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFunctionsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.ListFunctionsRequest} ListFunctionsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFunctionsRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFunctionsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFunctionsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.ListFunctionsRequest} ListFunctionsRequest
                         */
                        ListFunctionsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.ListFunctionsRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.ListFunctionsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFunctionsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.ListFunctionsRequest} message ListFunctionsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFunctionsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListFunctionsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFunctionsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFunctionsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.ListFunctionsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFunctionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.ListFunctionsRequest";
                        };
    
                        return ListFunctionsRequest;
                    })();
    
                    v2beta.ListFunctionsResponse = (function() {
    
                        /**
                         * Properties of a ListFunctionsResponse.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IListFunctionsResponse
                         * @property {Array.<google.cloud.functions.v2beta.IFunction>|null} [functions] ListFunctionsResponse functions
                         * @property {string|null} [nextPageToken] ListFunctionsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListFunctionsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListFunctionsResponse.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a ListFunctionsResponse.
                         * @implements IListFunctionsResponse
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IListFunctionsResponse=} [properties] Properties to set
                         */
                        function ListFunctionsResponse(properties) {
                            this.functions = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFunctionsResponse functions.
                         * @member {Array.<google.cloud.functions.v2beta.IFunction>} functions
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @instance
                         */
                        ListFunctionsResponse.prototype.functions = $util.emptyArray;
    
                        /**
                         * ListFunctionsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @instance
                         */
                        ListFunctionsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListFunctionsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @instance
                         */
                        ListFunctionsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListFunctionsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.IListFunctionsResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.ListFunctionsResponse} ListFunctionsResponse instance
                         */
                        ListFunctionsResponse.create = function create(properties) {
                            return new ListFunctionsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListFunctionsResponse message. Does not implicitly {@link google.cloud.functions.v2beta.ListFunctionsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.IListFunctionsResponse} message ListFunctionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.functions != null && message.functions.length)
                                for (var i = 0; i < message.functions.length; ++i)
                                    $root.google.cloud.functions.v2beta.Function.encode(message.functions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFunctionsResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.ListFunctionsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.IListFunctionsResponse} message ListFunctionsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFunctionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFunctionsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.ListFunctionsResponse} ListFunctionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.ListFunctionsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.functions && message.functions.length))
                                            message.functions = [];
                                        message.functions.push($root.google.cloud.functions.v2beta.Function.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.unreachable && message.unreachable.length))
                                            message.unreachable = [];
                                        message.unreachable.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFunctionsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.ListFunctionsResponse} ListFunctionsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFunctionsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFunctionsResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFunctionsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.functions != null && message.hasOwnProperty("functions")) {
                                if (!Array.isArray(message.functions))
                                    return "functions: array expected";
                                for (var i = 0; i < message.functions.length; ++i) {
                                    var error = $root.google.cloud.functions.v2beta.Function.verify(message.functions[i]);
                                    if (error)
                                        return "functions." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListFunctionsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.ListFunctionsResponse} ListFunctionsResponse
                         */
                        ListFunctionsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.ListFunctionsResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.ListFunctionsResponse();
                            if (object.functions) {
                                if (!Array.isArray(object.functions))
                                    throw TypeError(".google.cloud.functions.v2beta.ListFunctionsResponse.functions: array expected");
                                message.functions = [];
                                for (var i = 0; i < object.functions.length; ++i) {
                                    if (typeof object.functions[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2beta.ListFunctionsResponse.functions: object expected");
                                    message.functions[i] = $root.google.cloud.functions.v2beta.Function.fromObject(object.functions[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.functions.v2beta.ListFunctionsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFunctionsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.ListFunctionsResponse} message ListFunctionsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFunctionsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.functions = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.functions && message.functions.length) {
                                object.functions = [];
                                for (var j = 0; j < message.functions.length; ++j)
                                    object.functions[j] = $root.google.cloud.functions.v2beta.Function.toObject(message.functions[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListFunctionsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFunctionsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListFunctionsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.ListFunctionsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListFunctionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.ListFunctionsResponse";
                        };
    
                        return ListFunctionsResponse;
                    })();
    
                    v2beta.CreateFunctionRequest = (function() {
    
                        /**
                         * Properties of a CreateFunctionRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @interface ICreateFunctionRequest
                         * @property {string|null} [parent] CreateFunctionRequest parent
                         * @property {google.cloud.functions.v2beta.IFunction|null} ["function"] CreateFunctionRequest function
                         * @property {string|null} [functionId] CreateFunctionRequest functionId
                         */
    
                        /**
                         * Constructs a new CreateFunctionRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a CreateFunctionRequest.
                         * @implements ICreateFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v2beta.ICreateFunctionRequest=} [properties] Properties to set
                         */
                        function CreateFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateFunctionRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @instance
                         */
                        CreateFunctionRequest.prototype.parent = "";
    
                        /**
                         * CreateFunctionRequest function.
                         * @member {google.cloud.functions.v2beta.IFunction|null|undefined} function
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @instance
                         */
                        CreateFunctionRequest.prototype["function"] = null;
    
                        /**
                         * CreateFunctionRequest functionId.
                         * @member {string} functionId
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @instance
                         */
                        CreateFunctionRequest.prototype.functionId = "";
    
                        /**
                         * Creates a new CreateFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.ICreateFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.CreateFunctionRequest} CreateFunctionRequest instance
                         */
                        CreateFunctionRequest.create = function create(properties) {
                            return new CreateFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateFunctionRequest message. Does not implicitly {@link google.cloud.functions.v2beta.CreateFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.ICreateFunctionRequest} message CreateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message["function"] != null && Object.hasOwnProperty.call(message, "function"))
                                $root.google.cloud.functions.v2beta.Function.encode(message["function"], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.functionId != null && Object.hasOwnProperty.call(message, "functionId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.functionId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.CreateFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.ICreateFunctionRequest} message CreateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.CreateFunctionRequest} CreateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.CreateFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message["function"] = $root.google.cloud.functions.v2beta.Function.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.functionId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.CreateFunctionRequest} CreateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message["function"] != null && message.hasOwnProperty("function")) {
                                var error = $root.google.cloud.functions.v2beta.Function.verify(message["function"]);
                                if (error)
                                    return "function." + error;
                            }
                            if (message.functionId != null && message.hasOwnProperty("functionId"))
                                if (!$util.isString(message.functionId))
                                    return "functionId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.CreateFunctionRequest} CreateFunctionRequest
                         */
                        CreateFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.CreateFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.CreateFunctionRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object["function"] != null) {
                                if (typeof object["function"] !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.CreateFunctionRequest.function: object expected");
                                message["function"] = $root.google.cloud.functions.v2beta.Function.fromObject(object["function"]);
                            }
                            if (object.functionId != null)
                                message.functionId = String(object.functionId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.CreateFunctionRequest} message CreateFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object["function"] = null;
                                object.functionId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message["function"] != null && message.hasOwnProperty("function"))
                                object["function"] = $root.google.cloud.functions.v2beta.Function.toObject(message["function"], options);
                            if (message.functionId != null && message.hasOwnProperty("functionId"))
                                object.functionId = message.functionId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.CreateFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.CreateFunctionRequest";
                        };
    
                        return CreateFunctionRequest;
                    })();
    
                    v2beta.UpdateFunctionRequest = (function() {
    
                        /**
                         * Properties of an UpdateFunctionRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IUpdateFunctionRequest
                         * @property {google.cloud.functions.v2beta.IFunction|null} ["function"] UpdateFunctionRequest function
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateFunctionRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateFunctionRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents an UpdateFunctionRequest.
                         * @implements IUpdateFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IUpdateFunctionRequest=} [properties] Properties to set
                         */
                        function UpdateFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateFunctionRequest function.
                         * @member {google.cloud.functions.v2beta.IFunction|null|undefined} function
                         * @memberof google.cloud.functions.v2beta.UpdateFunctionRequest
                         * @instance
                         */
                        UpdateFunctionRequest.prototype["function"] = null;
    
                        /**
                         * UpdateFunctionRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.functions.v2beta.UpdateFunctionRequest
                         * @instance
                         */
                        UpdateFunctionRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IUpdateFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.UpdateFunctionRequest} UpdateFunctionRequest instance
                         */
                        UpdateFunctionRequest.create = function create(properties) {
                            return new UpdateFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateFunctionRequest message. Does not implicitly {@link google.cloud.functions.v2beta.UpdateFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IUpdateFunctionRequest} message UpdateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message["function"] != null && Object.hasOwnProperty.call(message, "function"))
                                $root.google.cloud.functions.v2beta.Function.encode(message["function"], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.UpdateFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IUpdateFunctionRequest} message UpdateFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.UpdateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.UpdateFunctionRequest} UpdateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.UpdateFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message["function"] = $root.google.cloud.functions.v2beta.Function.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.UpdateFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.UpdateFunctionRequest} UpdateFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.UpdateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message["function"] != null && message.hasOwnProperty("function")) {
                                var error = $root.google.cloud.functions.v2beta.Function.verify(message["function"]);
                                if (error)
                                    return "function." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.UpdateFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.UpdateFunctionRequest} UpdateFunctionRequest
                         */
                        UpdateFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.UpdateFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.UpdateFunctionRequest();
                            if (object["function"] != null) {
                                if (typeof object["function"] !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.UpdateFunctionRequest.function: object expected");
                                message["function"] = $root.google.cloud.functions.v2beta.Function.fromObject(object["function"]);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.UpdateFunctionRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.UpdateFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.UpdateFunctionRequest} message UpdateFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object["function"] = null;
                                object.updateMask = null;
                            }
                            if (message["function"] != null && message.hasOwnProperty("function"))
                                object["function"] = $root.google.cloud.functions.v2beta.Function.toObject(message["function"], options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.UpdateFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.UpdateFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.UpdateFunctionRequest";
                        };
    
                        return UpdateFunctionRequest;
                    })();
    
                    v2beta.DeleteFunctionRequest = (function() {
    
                        /**
                         * Properties of a DeleteFunctionRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IDeleteFunctionRequest
                         * @property {string|null} [name] DeleteFunctionRequest name
                         */
    
                        /**
                         * Constructs a new DeleteFunctionRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a DeleteFunctionRequest.
                         * @implements IDeleteFunctionRequest
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IDeleteFunctionRequest=} [properties] Properties to set
                         */
                        function DeleteFunctionRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteFunctionRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v2beta.DeleteFunctionRequest
                         * @instance
                         */
                        DeleteFunctionRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteFunctionRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IDeleteFunctionRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.DeleteFunctionRequest} DeleteFunctionRequest instance
                         */
                        DeleteFunctionRequest.create = function create(properties) {
                            return new DeleteFunctionRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteFunctionRequest message. Does not implicitly {@link google.cloud.functions.v2beta.DeleteFunctionRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IDeleteFunctionRequest} message DeleteFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFunctionRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteFunctionRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.DeleteFunctionRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IDeleteFunctionRequest} message DeleteFunctionRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFunctionRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteFunctionRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.DeleteFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.DeleteFunctionRequest} DeleteFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFunctionRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.DeleteFunctionRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteFunctionRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.DeleteFunctionRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.DeleteFunctionRequest} DeleteFunctionRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFunctionRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteFunctionRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.DeleteFunctionRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteFunctionRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteFunctionRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.DeleteFunctionRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.DeleteFunctionRequest} DeleteFunctionRequest
                         */
                        DeleteFunctionRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.DeleteFunctionRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.DeleteFunctionRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteFunctionRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.DeleteFunctionRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.DeleteFunctionRequest} message DeleteFunctionRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteFunctionRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteFunctionRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.DeleteFunctionRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteFunctionRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteFunctionRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.DeleteFunctionRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteFunctionRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.DeleteFunctionRequest";
                        };
    
                        return DeleteFunctionRequest;
                    })();
    
                    v2beta.GenerateUploadUrlRequest = (function() {
    
                        /**
                         * Properties of a GenerateUploadUrlRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IGenerateUploadUrlRequest
                         * @property {string|null} [parent] GenerateUploadUrlRequest parent
                         * @property {string|null} [kmsKeyName] GenerateUploadUrlRequest kmsKeyName
                         */
    
                        /**
                         * Constructs a new GenerateUploadUrlRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a GenerateUploadUrlRequest.
                         * @implements IGenerateUploadUrlRequest
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IGenerateUploadUrlRequest=} [properties] Properties to set
                         */
                        function GenerateUploadUrlRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateUploadUrlRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlRequest
                         * @instance
                         */
                        GenerateUploadUrlRequest.prototype.parent = "";
    
                        /**
                         * GenerateUploadUrlRequest kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlRequest
                         * @instance
                         */
                        GenerateUploadUrlRequest.prototype.kmsKeyName = "";
    
                        /**
                         * Creates a new GenerateUploadUrlRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IGenerateUploadUrlRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.GenerateUploadUrlRequest} GenerateUploadUrlRequest instance
                         */
                        GenerateUploadUrlRequest.create = function create(properties) {
                            return new GenerateUploadUrlRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlRequest message. Does not implicitly {@link google.cloud.functions.v2beta.GenerateUploadUrlRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IGenerateUploadUrlRequest} message GenerateUploadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.kmsKeyName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.GenerateUploadUrlRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IGenerateUploadUrlRequest} message GenerateUploadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.GenerateUploadUrlRequest} GenerateUploadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.GenerateUploadUrlRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.kmsKeyName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.GenerateUploadUrlRequest} GenerateUploadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateUploadUrlRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateUploadUrlRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateUploadUrlRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.GenerateUploadUrlRequest} GenerateUploadUrlRequest
                         */
                        GenerateUploadUrlRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.GenerateUploadUrlRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.GenerateUploadUrlRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateUploadUrlRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.GenerateUploadUrlRequest} message GenerateUploadUrlRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateUploadUrlRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.kmsKeyName = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateUploadUrlRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateUploadUrlRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateUploadUrlRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateUploadUrlRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.GenerateUploadUrlRequest";
                        };
    
                        return GenerateUploadUrlRequest;
                    })();
    
                    v2beta.GenerateUploadUrlResponse = (function() {
    
                        /**
                         * Properties of a GenerateUploadUrlResponse.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IGenerateUploadUrlResponse
                         * @property {string|null} [uploadUrl] GenerateUploadUrlResponse uploadUrl
                         * @property {google.cloud.functions.v2beta.IStorageSource|null} [storageSource] GenerateUploadUrlResponse storageSource
                         */
    
                        /**
                         * Constructs a new GenerateUploadUrlResponse.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a GenerateUploadUrlResponse.
                         * @implements IGenerateUploadUrlResponse
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IGenerateUploadUrlResponse=} [properties] Properties to set
                         */
                        function GenerateUploadUrlResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateUploadUrlResponse uploadUrl.
                         * @member {string} uploadUrl
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlResponse
                         * @instance
                         */
                        GenerateUploadUrlResponse.prototype.uploadUrl = "";
    
                        /**
                         * GenerateUploadUrlResponse storageSource.
                         * @member {google.cloud.functions.v2beta.IStorageSource|null|undefined} storageSource
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlResponse
                         * @instance
                         */
                        GenerateUploadUrlResponse.prototype.storageSource = null;
    
                        /**
                         * Creates a new GenerateUploadUrlResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.IGenerateUploadUrlResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.GenerateUploadUrlResponse} GenerateUploadUrlResponse instance
                         */
                        GenerateUploadUrlResponse.create = function create(properties) {
                            return new GenerateUploadUrlResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlResponse message. Does not implicitly {@link google.cloud.functions.v2beta.GenerateUploadUrlResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.IGenerateUploadUrlResponse} message GenerateUploadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uploadUrl != null && Object.hasOwnProperty.call(message, "uploadUrl"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uploadUrl);
                            if (message.storageSource != null && Object.hasOwnProperty.call(message, "storageSource"))
                                $root.google.cloud.functions.v2beta.StorageSource.encode(message.storageSource, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateUploadUrlResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.GenerateUploadUrlResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.IGenerateUploadUrlResponse} message GenerateUploadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateUploadUrlResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.GenerateUploadUrlResponse} GenerateUploadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.GenerateUploadUrlResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.uploadUrl = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.storageSource = $root.google.cloud.functions.v2beta.StorageSource.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateUploadUrlResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.GenerateUploadUrlResponse} GenerateUploadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateUploadUrlResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateUploadUrlResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateUploadUrlResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uploadUrl != null && message.hasOwnProperty("uploadUrl"))
                                if (!$util.isString(message.uploadUrl))
                                    return "uploadUrl: string expected";
                            if (message.storageSource != null && message.hasOwnProperty("storageSource")) {
                                var error = $root.google.cloud.functions.v2beta.StorageSource.verify(message.storageSource);
                                if (error)
                                    return "storageSource." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GenerateUploadUrlResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.GenerateUploadUrlResponse} GenerateUploadUrlResponse
                         */
                        GenerateUploadUrlResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.GenerateUploadUrlResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.GenerateUploadUrlResponse();
                            if (object.uploadUrl != null)
                                message.uploadUrl = String(object.uploadUrl);
                            if (object.storageSource != null) {
                                if (typeof object.storageSource !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.GenerateUploadUrlResponse.storageSource: object expected");
                                message.storageSource = $root.google.cloud.functions.v2beta.StorageSource.fromObject(object.storageSource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateUploadUrlResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.GenerateUploadUrlResponse} message GenerateUploadUrlResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateUploadUrlResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.uploadUrl = "";
                                object.storageSource = null;
                            }
                            if (message.uploadUrl != null && message.hasOwnProperty("uploadUrl"))
                                object.uploadUrl = message.uploadUrl;
                            if (message.storageSource != null && message.hasOwnProperty("storageSource"))
                                object.storageSource = $root.google.cloud.functions.v2beta.StorageSource.toObject(message.storageSource, options);
                            return object;
                        };
    
                        /**
                         * Converts this GenerateUploadUrlResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateUploadUrlResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateUploadUrlResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.GenerateUploadUrlResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateUploadUrlResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.GenerateUploadUrlResponse";
                        };
    
                        return GenerateUploadUrlResponse;
                    })();
    
                    v2beta.GenerateDownloadUrlRequest = (function() {
    
                        /**
                         * Properties of a GenerateDownloadUrlRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IGenerateDownloadUrlRequest
                         * @property {string|null} [name] GenerateDownloadUrlRequest name
                         */
    
                        /**
                         * Constructs a new GenerateDownloadUrlRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a GenerateDownloadUrlRequest.
                         * @implements IGenerateDownloadUrlRequest
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IGenerateDownloadUrlRequest=} [properties] Properties to set
                         */
                        function GenerateDownloadUrlRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateDownloadUrlRequest name.
                         * @member {string} name
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlRequest
                         * @instance
                         */
                        GenerateDownloadUrlRequest.prototype.name = "";
    
                        /**
                         * Creates a new GenerateDownloadUrlRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IGenerateDownloadUrlRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest instance
                         */
                        GenerateDownloadUrlRequest.create = function create(properties) {
                            return new GenerateDownloadUrlRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlRequest message. Does not implicitly {@link google.cloud.functions.v2beta.GenerateDownloadUrlRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IGenerateDownloadUrlRequest} message GenerateDownloadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.GenerateDownloadUrlRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IGenerateDownloadUrlRequest} message GenerateDownloadUrlRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.GenerateDownloadUrlRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateDownloadUrlRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateDownloadUrlRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateDownloadUrlRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.GenerateDownloadUrlRequest} GenerateDownloadUrlRequest
                         */
                        GenerateDownloadUrlRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.GenerateDownloadUrlRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.GenerateDownloadUrlRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateDownloadUrlRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.GenerateDownloadUrlRequest} message GenerateDownloadUrlRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateDownloadUrlRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateDownloadUrlRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateDownloadUrlRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateDownloadUrlRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateDownloadUrlRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.GenerateDownloadUrlRequest";
                        };
    
                        return GenerateDownloadUrlRequest;
                    })();
    
                    v2beta.GenerateDownloadUrlResponse = (function() {
    
                        /**
                         * Properties of a GenerateDownloadUrlResponse.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IGenerateDownloadUrlResponse
                         * @property {string|null} [downloadUrl] GenerateDownloadUrlResponse downloadUrl
                         */
    
                        /**
                         * Constructs a new GenerateDownloadUrlResponse.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a GenerateDownloadUrlResponse.
                         * @implements IGenerateDownloadUrlResponse
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IGenerateDownloadUrlResponse=} [properties] Properties to set
                         */
                        function GenerateDownloadUrlResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateDownloadUrlResponse downloadUrl.
                         * @member {string} downloadUrl
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlResponse
                         * @instance
                         */
                        GenerateDownloadUrlResponse.prototype.downloadUrl = "";
    
                        /**
                         * Creates a new GenerateDownloadUrlResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.IGenerateDownloadUrlResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse instance
                         */
                        GenerateDownloadUrlResponse.create = function create(properties) {
                            return new GenerateDownloadUrlResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlResponse message. Does not implicitly {@link google.cloud.functions.v2beta.GenerateDownloadUrlResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.IGenerateDownloadUrlResponse} message GenerateDownloadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.downloadUrl != null && Object.hasOwnProperty.call(message, "downloadUrl"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.downloadUrl);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateDownloadUrlResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.GenerateDownloadUrlResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.IGenerateDownloadUrlResponse} message GenerateDownloadUrlResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateDownloadUrlResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.GenerateDownloadUrlResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.downloadUrl = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateDownloadUrlResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateDownloadUrlResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateDownloadUrlResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateDownloadUrlResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.downloadUrl != null && message.hasOwnProperty("downloadUrl"))
                                if (!$util.isString(message.downloadUrl))
                                    return "downloadUrl: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateDownloadUrlResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.GenerateDownloadUrlResponse} GenerateDownloadUrlResponse
                         */
                        GenerateDownloadUrlResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.GenerateDownloadUrlResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.GenerateDownloadUrlResponse();
                            if (object.downloadUrl != null)
                                message.downloadUrl = String(object.downloadUrl);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateDownloadUrlResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.GenerateDownloadUrlResponse} message GenerateDownloadUrlResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateDownloadUrlResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.downloadUrl = "";
                            if (message.downloadUrl != null && message.hasOwnProperty("downloadUrl"))
                                object.downloadUrl = message.downloadUrl;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateDownloadUrlResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateDownloadUrlResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GenerateDownloadUrlResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.GenerateDownloadUrlResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GenerateDownloadUrlResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.GenerateDownloadUrlResponse";
                        };
    
                        return GenerateDownloadUrlResponse;
                    })();
    
                    v2beta.ListRuntimesRequest = (function() {
    
                        /**
                         * Properties of a ListRuntimesRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IListRuntimesRequest
                         * @property {string|null} [parent] ListRuntimesRequest parent
                         * @property {string|null} [filter] ListRuntimesRequest filter
                         */
    
                        /**
                         * Constructs a new ListRuntimesRequest.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a ListRuntimesRequest.
                         * @implements IListRuntimesRequest
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IListRuntimesRequest=} [properties] Properties to set
                         */
                        function ListRuntimesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRuntimesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.functions.v2beta.ListRuntimesRequest
                         * @instance
                         */
                        ListRuntimesRequest.prototype.parent = "";
    
                        /**
                         * ListRuntimesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.functions.v2beta.ListRuntimesRequest
                         * @instance
                         */
                        ListRuntimesRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListRuntimesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IListRuntimesRequest=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.ListRuntimesRequest} ListRuntimesRequest instance
                         */
                        ListRuntimesRequest.create = function create(properties) {
                            return new ListRuntimesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListRuntimesRequest message. Does not implicitly {@link google.cloud.functions.v2beta.ListRuntimesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IListRuntimesRequest} message ListRuntimesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRuntimesRequest message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.ListRuntimesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.IListRuntimesRequest} message ListRuntimesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRuntimesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.ListRuntimesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.ListRuntimesRequest} ListRuntimesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.ListRuntimesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRuntimesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.ListRuntimesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.ListRuntimesRequest} ListRuntimesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRuntimesRequest message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.ListRuntimesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRuntimesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListRuntimesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.ListRuntimesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.ListRuntimesRequest} ListRuntimesRequest
                         */
                        ListRuntimesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.ListRuntimesRequest)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.ListRuntimesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRuntimesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.ListRuntimesRequest
                         * @static
                         * @param {google.cloud.functions.v2beta.ListRuntimesRequest} message ListRuntimesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRuntimesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.filter = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListRuntimesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.ListRuntimesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRuntimesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRuntimesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.ListRuntimesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRuntimesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.ListRuntimesRequest";
                        };
    
                        return ListRuntimesRequest;
                    })();
    
                    v2beta.ListRuntimesResponse = (function() {
    
                        /**
                         * Properties of a ListRuntimesResponse.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IListRuntimesResponse
                         * @property {Array.<google.cloud.functions.v2beta.ListRuntimesResponse.IRuntime>|null} [runtimes] ListRuntimesResponse runtimes
                         */
    
                        /**
                         * Constructs a new ListRuntimesResponse.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a ListRuntimesResponse.
                         * @implements IListRuntimesResponse
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IListRuntimesResponse=} [properties] Properties to set
                         */
                        function ListRuntimesResponse(properties) {
                            this.runtimes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListRuntimesResponse runtimes.
                         * @member {Array.<google.cloud.functions.v2beta.ListRuntimesResponse.IRuntime>} runtimes
                         * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                         * @instance
                         */
                        ListRuntimesResponse.prototype.runtimes = $util.emptyArray;
    
                        /**
                         * Creates a new ListRuntimesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.IListRuntimesResponse=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.ListRuntimesResponse} ListRuntimesResponse instance
                         */
                        ListRuntimesResponse.create = function create(properties) {
                            return new ListRuntimesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListRuntimesResponse message. Does not implicitly {@link google.cloud.functions.v2beta.ListRuntimesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.IListRuntimesResponse} message ListRuntimesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.runtimes != null && message.runtimes.length)
                                for (var i = 0; i < message.runtimes.length; ++i)
                                    $root.google.cloud.functions.v2beta.ListRuntimesResponse.Runtime.encode(message.runtimes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListRuntimesResponse message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.ListRuntimesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.IListRuntimesResponse} message ListRuntimesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListRuntimesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListRuntimesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.ListRuntimesResponse} ListRuntimesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.ListRuntimesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.runtimes && message.runtimes.length))
                                            message.runtimes = [];
                                        message.runtimes.push($root.google.cloud.functions.v2beta.ListRuntimesResponse.Runtime.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListRuntimesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.ListRuntimesResponse} ListRuntimesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListRuntimesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListRuntimesResponse message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListRuntimesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.runtimes != null && message.hasOwnProperty("runtimes")) {
                                if (!Array.isArray(message.runtimes))
                                    return "runtimes: array expected";
                                for (var i = 0; i < message.runtimes.length; ++i) {
                                    var error = $root.google.cloud.functions.v2beta.ListRuntimesResponse.Runtime.verify(message.runtimes[i]);
                                    if (error)
                                        return "runtimes." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListRuntimesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.ListRuntimesResponse} ListRuntimesResponse
                         */
                        ListRuntimesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.ListRuntimesResponse)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.ListRuntimesResponse();
                            if (object.runtimes) {
                                if (!Array.isArray(object.runtimes))
                                    throw TypeError(".google.cloud.functions.v2beta.ListRuntimesResponse.runtimes: array expected");
                                message.runtimes = [];
                                for (var i = 0; i < object.runtimes.length; ++i) {
                                    if (typeof object.runtimes[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2beta.ListRuntimesResponse.runtimes: object expected");
                                    message.runtimes[i] = $root.google.cloud.functions.v2beta.ListRuntimesResponse.Runtime.fromObject(object.runtimes[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListRuntimesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                         * @static
                         * @param {google.cloud.functions.v2beta.ListRuntimesResponse} message ListRuntimesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListRuntimesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.runtimes = [];
                            if (message.runtimes && message.runtimes.length) {
                                object.runtimes = [];
                                for (var j = 0; j < message.runtimes.length; ++j)
                                    object.runtimes[j] = $root.google.cloud.functions.v2beta.ListRuntimesResponse.Runtime.toObject(message.runtimes[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListRuntimesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListRuntimesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListRuntimesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListRuntimesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.ListRuntimesResponse";
                        };
    
                        ListRuntimesResponse.Runtime = (function() {
    
                            /**
                             * Properties of a Runtime.
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                             * @interface IRuntime
                             * @property {string|null} [name] Runtime name
                             * @property {string|null} [displayName] Runtime displayName
                             * @property {google.cloud.functions.v2beta.ListRuntimesResponse.RuntimeStage|null} [stage] Runtime stage
                             * @property {Array.<string>|null} [warnings] Runtime warnings
                             * @property {google.cloud.functions.v2beta.Environment|null} [environment] Runtime environment
                             */
    
                            /**
                             * Constructs a new Runtime.
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse
                             * @classdesc Represents a Runtime.
                             * @implements IRuntime
                             * @constructor
                             * @param {google.cloud.functions.v2beta.ListRuntimesResponse.IRuntime=} [properties] Properties to set
                             */
                            function Runtime(properties) {
                                this.warnings = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Runtime name.
                             * @member {string} name
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.name = "";
    
                            /**
                             * Runtime displayName.
                             * @member {string} displayName
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.displayName = "";
    
                            /**
                             * Runtime stage.
                             * @member {google.cloud.functions.v2beta.ListRuntimesResponse.RuntimeStage} stage
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.stage = 0;
    
                            /**
                             * Runtime warnings.
                             * @member {Array.<string>} warnings
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.warnings = $util.emptyArray;
    
                            /**
                             * Runtime environment.
                             * @member {google.cloud.functions.v2beta.Environment} environment
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @instance
                             */
                            Runtime.prototype.environment = 0;
    
                            /**
                             * Creates a new Runtime instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @static
                             * @param {google.cloud.functions.v2beta.ListRuntimesResponse.IRuntime=} [properties] Properties to set
                             * @returns {google.cloud.functions.v2beta.ListRuntimesResponse.Runtime} Runtime instance
                             */
                            Runtime.create = function create(properties) {
                                return new Runtime(properties);
                            };
    
                            /**
                             * Encodes the specified Runtime message. Does not implicitly {@link google.cloud.functions.v2beta.ListRuntimesResponse.Runtime.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @static
                             * @param {google.cloud.functions.v2beta.ListRuntimesResponse.IRuntime} message Runtime message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Runtime.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.stage != null && Object.hasOwnProperty.call(message, "stage"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.stage);
                                if (message.warnings != null && message.warnings.length)
                                    for (var i = 0; i < message.warnings.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.warnings[i]);
                                if (message.environment != null && Object.hasOwnProperty.call(message, "environment"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.environment);
                                if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.displayName);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Runtime message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.ListRuntimesResponse.Runtime.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @static
                             * @param {google.cloud.functions.v2beta.ListRuntimesResponse.IRuntime} message Runtime message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Runtime.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Runtime message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.functions.v2beta.ListRuntimesResponse.Runtime} Runtime
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Runtime.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.ListRuntimesResponse.Runtime();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.displayName = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.stage = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.warnings && message.warnings.length))
                                                message.warnings = [];
                                            message.warnings.push(reader.string());
                                            break;
                                        }
                                    case 4: {
                                            message.environment = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Runtime message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.functions.v2beta.ListRuntimesResponse.Runtime} Runtime
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Runtime.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Runtime message.
                             * @function verify
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Runtime.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.displayName != null && message.hasOwnProperty("displayName"))
                                    if (!$util.isString(message.displayName))
                                        return "displayName: string expected";
                                if (message.stage != null && message.hasOwnProperty("stage"))
                                    switch (message.stage) {
                                    default:
                                        return "stage: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                                if (message.warnings != null && message.hasOwnProperty("warnings")) {
                                    if (!Array.isArray(message.warnings))
                                        return "warnings: array expected";
                                    for (var i = 0; i < message.warnings.length; ++i)
                                        if (!$util.isString(message.warnings[i]))
                                            return "warnings: string[] expected";
                                }
                                if (message.environment != null && message.hasOwnProperty("environment"))
                                    switch (message.environment) {
                                    default:
                                        return "environment: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a Runtime message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.functions.v2beta.ListRuntimesResponse.Runtime} Runtime
                             */
                            Runtime.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.functions.v2beta.ListRuntimesResponse.Runtime)
                                    return object;
                                var message = new $root.google.cloud.functions.v2beta.ListRuntimesResponse.Runtime();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.displayName != null)
                                    message.displayName = String(object.displayName);
                                switch (object.stage) {
                                default:
                                    if (typeof object.stage === "number") {
                                        message.stage = object.stage;
                                        break;
                                    }
                                    break;
                                case "RUNTIME_STAGE_UNSPECIFIED":
                                case 0:
                                    message.stage = 0;
                                    break;
                                case "DEVELOPMENT":
                                case 1:
                                    message.stage = 1;
                                    break;
                                case "ALPHA":
                                case 2:
                                    message.stage = 2;
                                    break;
                                case "BETA":
                                case 3:
                                    message.stage = 3;
                                    break;
                                case "GA":
                                case 4:
                                    message.stage = 4;
                                    break;
                                case "DEPRECATED":
                                case 5:
                                    message.stage = 5;
                                    break;
                                case "DECOMMISSIONED":
                                case 6:
                                    message.stage = 6;
                                    break;
                                }
                                if (object.warnings) {
                                    if (!Array.isArray(object.warnings))
                                        throw TypeError(".google.cloud.functions.v2beta.ListRuntimesResponse.Runtime.warnings: array expected");
                                    message.warnings = [];
                                    for (var i = 0; i < object.warnings.length; ++i)
                                        message.warnings[i] = String(object.warnings[i]);
                                }
                                switch (object.environment) {
                                default:
                                    if (typeof object.environment === "number") {
                                        message.environment = object.environment;
                                        break;
                                    }
                                    break;
                                case "ENVIRONMENT_UNSPECIFIED":
                                case 0:
                                    message.environment = 0;
                                    break;
                                case "GEN_1":
                                case 1:
                                    message.environment = 1;
                                    break;
                                case "GEN_2":
                                case 2:
                                    message.environment = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Runtime message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @static
                             * @param {google.cloud.functions.v2beta.ListRuntimesResponse.Runtime} message Runtime
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Runtime.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.warnings = [];
                                if (options.defaults) {
                                    object.name = "";
                                    object.stage = options.enums === String ? "RUNTIME_STAGE_UNSPECIFIED" : 0;
                                    object.environment = options.enums === String ? "ENVIRONMENT_UNSPECIFIED" : 0;
                                    object.displayName = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.stage != null && message.hasOwnProperty("stage"))
                                    object.stage = options.enums === String ? $root.google.cloud.functions.v2beta.ListRuntimesResponse.RuntimeStage[message.stage] === undefined ? message.stage : $root.google.cloud.functions.v2beta.ListRuntimesResponse.RuntimeStage[message.stage] : message.stage;
                                if (message.warnings && message.warnings.length) {
                                    object.warnings = [];
                                    for (var j = 0; j < message.warnings.length; ++j)
                                        object.warnings[j] = message.warnings[j];
                                }
                                if (message.environment != null && message.hasOwnProperty("environment"))
                                    object.environment = options.enums === String ? $root.google.cloud.functions.v2beta.Environment[message.environment] === undefined ? message.environment : $root.google.cloud.functions.v2beta.Environment[message.environment] : message.environment;
                                if (message.displayName != null && message.hasOwnProperty("displayName"))
                                    object.displayName = message.displayName;
                                return object;
                            };
    
                            /**
                             * Converts this Runtime to JSON.
                             * @function toJSON
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Runtime.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Runtime
                             * @function getTypeUrl
                             * @memberof google.cloud.functions.v2beta.ListRuntimesResponse.Runtime
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Runtime.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.functions.v2beta.ListRuntimesResponse.Runtime";
                            };
    
                            return Runtime;
                        })();
    
                        /**
                         * RuntimeStage enum.
                         * @name google.cloud.functions.v2beta.ListRuntimesResponse.RuntimeStage
                         * @enum {number}
                         * @property {number} RUNTIME_STAGE_UNSPECIFIED=0 RUNTIME_STAGE_UNSPECIFIED value
                         * @property {number} DEVELOPMENT=1 DEVELOPMENT value
                         * @property {number} ALPHA=2 ALPHA value
                         * @property {number} BETA=3 BETA value
                         * @property {number} GA=4 GA value
                         * @property {number} DEPRECATED=5 DEPRECATED value
                         * @property {number} DECOMMISSIONED=6 DECOMMISSIONED value
                         */
                        ListRuntimesResponse.RuntimeStage = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RUNTIME_STAGE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DEVELOPMENT"] = 1;
                            values[valuesById[2] = "ALPHA"] = 2;
                            values[valuesById[3] = "BETA"] = 3;
                            values[valuesById[4] = "GA"] = 4;
                            values[valuesById[5] = "DEPRECATED"] = 5;
                            values[valuesById[6] = "DECOMMISSIONED"] = 6;
                            return values;
                        })();
    
                        return ListRuntimesResponse;
                    })();
    
                    v2beta.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusDetail] OperationMetadata statusDetail
                         * @property {boolean|null} [cancelRequested] OperationMetadata cancelRequested
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         * @property {google.protobuf.IAny|null} [requestResource] OperationMetadata requestResource
                         * @property {Array.<google.cloud.functions.v2beta.IStage>|null} [stages] OperationMetadata stages
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            this.stages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusDetail.
                         * @member {string} statusDetail
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusDetail = "";
    
                        /**
                         * OperationMetadata cancelRequested.
                         * @member {boolean} cancelRequested
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.cancelRequested = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * OperationMetadata requestResource.
                         * @member {google.protobuf.IAny|null|undefined} requestResource
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.requestResource = null;
    
                        /**
                         * OperationMetadata stages.
                         * @member {Array.<google.cloud.functions.v2beta.IStage>} stages
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.stages = $util.emptyArray;
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @static
                         * @param {google.cloud.functions.v2beta.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.functions.v2beta.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @static
                         * @param {google.cloud.functions.v2beta.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusDetail != null && Object.hasOwnProperty.call(message, "statusDetail"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusDetail);
                            if (message.cancelRequested != null && Object.hasOwnProperty.call(message, "cancelRequested"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.cancelRequested);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            if (message.requestResource != null && Object.hasOwnProperty.call(message, "requestResource"))
                                $root.google.protobuf.Any.encode(message.requestResource, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.stages != null && message.stages.length)
                                for (var i = 0; i < message.stages.length; ++i)
                                    $root.google.cloud.functions.v2beta.Stage.encode(message.stages[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @static
                         * @param {google.cloud.functions.v2beta.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.target = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.verb = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.statusDetail = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.cancelRequested = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.apiVersion = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.requestResource = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        if (!(message.stages && message.stages.length))
                                            message.stages = [];
                                        message.stages.push($root.google.cloud.functions.v2beta.Stage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                if (!$util.isString(message.statusDetail))
                                    return "statusDetail: string expected";
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                if (typeof message.cancelRequested !== "boolean")
                                    return "cancelRequested: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            if (message.requestResource != null && message.hasOwnProperty("requestResource")) {
                                var error = $root.google.protobuf.Any.verify(message.requestResource);
                                if (error)
                                    return "requestResource." + error;
                            }
                            if (message.stages != null && message.hasOwnProperty("stages")) {
                                if (!Array.isArray(message.stages))
                                    return "stages: array expected";
                                for (var i = 0; i < message.stages.length; ++i) {
                                    var error = $root.google.cloud.functions.v2beta.Stage.verify(message.stages[i]);
                                    if (error)
                                        return "stages." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusDetail != null)
                                message.statusDetail = String(object.statusDetail);
                            if (object.cancelRequested != null)
                                message.cancelRequested = Boolean(object.cancelRequested);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            if (object.requestResource != null) {
                                if (typeof object.requestResource !== "object")
                                    throw TypeError(".google.cloud.functions.v2beta.OperationMetadata.requestResource: object expected");
                                message.requestResource = $root.google.protobuf.Any.fromObject(object.requestResource);
                            }
                            if (object.stages) {
                                if (!Array.isArray(object.stages))
                                    throw TypeError(".google.cloud.functions.v2beta.OperationMetadata.stages: array expected");
                                message.stages = [];
                                for (var i = 0; i < object.stages.length; ++i) {
                                    if (typeof object.stages[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2beta.OperationMetadata.stages: object expected");
                                    message.stages[i] = $root.google.cloud.functions.v2beta.Stage.fromObject(object.stages[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @static
                         * @param {google.cloud.functions.v2beta.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.stages = [];
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusDetail = "";
                                object.cancelRequested = false;
                                object.apiVersion = "";
                                object.requestResource = null;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                object.statusDetail = message.statusDetail;
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                object.cancelRequested = message.cancelRequested;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            if (message.requestResource != null && message.hasOwnProperty("requestResource"))
                                object.requestResource = $root.google.protobuf.Any.toObject(message.requestResource, options);
                            if (message.stages && message.stages.length) {
                                object.stages = [];
                                for (var j = 0; j < message.stages.length; ++j)
                                    object.stages[j] = $root.google.cloud.functions.v2beta.Stage.toObject(message.stages[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.OperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.OperationMetadata";
                        };
    
                        return OperationMetadata;
                    })();
    
                    v2beta.LocationMetadata = (function() {
    
                        /**
                         * Properties of a LocationMetadata.
                         * @memberof google.cloud.functions.v2beta
                         * @interface ILocationMetadata
                         * @property {Array.<google.cloud.functions.v2beta.Environment>|null} [environments] LocationMetadata environments
                         */
    
                        /**
                         * Constructs a new LocationMetadata.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a LocationMetadata.
                         * @implements ILocationMetadata
                         * @constructor
                         * @param {google.cloud.functions.v2beta.ILocationMetadata=} [properties] Properties to set
                         */
                        function LocationMetadata(properties) {
                            this.environments = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LocationMetadata environments.
                         * @member {Array.<google.cloud.functions.v2beta.Environment>} environments
                         * @memberof google.cloud.functions.v2beta.LocationMetadata
                         * @instance
                         */
                        LocationMetadata.prototype.environments = $util.emptyArray;
    
                        /**
                         * Creates a new LocationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.LocationMetadata
                         * @static
                         * @param {google.cloud.functions.v2beta.ILocationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.LocationMetadata} LocationMetadata instance
                         */
                        LocationMetadata.create = function create(properties) {
                            return new LocationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified LocationMetadata message. Does not implicitly {@link google.cloud.functions.v2beta.LocationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.LocationMetadata
                         * @static
                         * @param {google.cloud.functions.v2beta.ILocationMetadata} message LocationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.environments != null && message.environments.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.environments.length; ++i)
                                    writer.int32(message.environments[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LocationMetadata message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.LocationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.LocationMetadata
                         * @static
                         * @param {google.cloud.functions.v2beta.ILocationMetadata} message LocationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LocationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.LocationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.LocationMetadata} LocationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.LocationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.environments && message.environments.length))
                                            message.environments = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.environments.push(reader.int32());
                                        } else
                                            message.environments.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LocationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.LocationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.LocationMetadata} LocationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LocationMetadata message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.LocationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.environments != null && message.hasOwnProperty("environments")) {
                                if (!Array.isArray(message.environments))
                                    return "environments: array expected";
                                for (var i = 0; i < message.environments.length; ++i)
                                    switch (message.environments[i]) {
                                    default:
                                        return "environments: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LocationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.LocationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.LocationMetadata} LocationMetadata
                         */
                        LocationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.LocationMetadata)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.LocationMetadata();
                            if (object.environments) {
                                if (!Array.isArray(object.environments))
                                    throw TypeError(".google.cloud.functions.v2beta.LocationMetadata.environments: array expected");
                                message.environments = [];
                                for (var i = 0; i < object.environments.length; ++i)
                                    switch (object.environments[i]) {
                                    default:
                                        if (typeof object.environments[i] === "number") {
                                            message.environments[i] = object.environments[i];
                                            break;
                                        }
                                    case "ENVIRONMENT_UNSPECIFIED":
                                    case 0:
                                        message.environments[i] = 0;
                                        break;
                                    case "GEN_1":
                                    case 1:
                                        message.environments[i] = 1;
                                        break;
                                    case "GEN_2":
                                    case 2:
                                        message.environments[i] = 2;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LocationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.LocationMetadata
                         * @static
                         * @param {google.cloud.functions.v2beta.LocationMetadata} message LocationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.environments = [];
                            if (message.environments && message.environments.length) {
                                object.environments = [];
                                for (var j = 0; j < message.environments.length; ++j)
                                    object.environments[j] = options.enums === String ? $root.google.cloud.functions.v2beta.Environment[message.environments[j]] === undefined ? message.environments[j] : $root.google.cloud.functions.v2beta.Environment[message.environments[j]] : message.environments[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LocationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.LocationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LocationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.LocationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LocationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.LocationMetadata";
                        };
    
                        return LocationMetadata;
                    })();
    
                    v2beta.Stage = (function() {
    
                        /**
                         * Properties of a Stage.
                         * @memberof google.cloud.functions.v2beta
                         * @interface IStage
                         * @property {google.cloud.functions.v2beta.Stage.Name|null} [name] Stage name
                         * @property {string|null} [message] Stage message
                         * @property {google.cloud.functions.v2beta.Stage.State|null} [state] Stage state
                         * @property {string|null} [resource] Stage resource
                         * @property {string|null} [resourceUri] Stage resourceUri
                         * @property {Array.<google.cloud.functions.v2beta.IStateMessage>|null} [stateMessages] Stage stateMessages
                         */
    
                        /**
                         * Constructs a new Stage.
                         * @memberof google.cloud.functions.v2beta
                         * @classdesc Represents a Stage.
                         * @implements IStage
                         * @constructor
                         * @param {google.cloud.functions.v2beta.IStage=} [properties] Properties to set
                         */
                        function Stage(properties) {
                            this.stateMessages = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Stage name.
                         * @member {google.cloud.functions.v2beta.Stage.Name} name
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @instance
                         */
                        Stage.prototype.name = 0;
    
                        /**
                         * Stage message.
                         * @member {string} message
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @instance
                         */
                        Stage.prototype.message = "";
    
                        /**
                         * Stage state.
                         * @member {google.cloud.functions.v2beta.Stage.State} state
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @instance
                         */
                        Stage.prototype.state = 0;
    
                        /**
                         * Stage resource.
                         * @member {string} resource
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @instance
                         */
                        Stage.prototype.resource = "";
    
                        /**
                         * Stage resourceUri.
                         * @member {string} resourceUri
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @instance
                         */
                        Stage.prototype.resourceUri = "";
    
                        /**
                         * Stage stateMessages.
                         * @member {Array.<google.cloud.functions.v2beta.IStateMessage>} stateMessages
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @instance
                         */
                        Stage.prototype.stateMessages = $util.emptyArray;
    
                        /**
                         * Creates a new Stage instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @static
                         * @param {google.cloud.functions.v2beta.IStage=} [properties] Properties to set
                         * @returns {google.cloud.functions.v2beta.Stage} Stage instance
                         */
                        Stage.create = function create(properties) {
                            return new Stage(properties);
                        };
    
                        /**
                         * Encodes the specified Stage message. Does not implicitly {@link google.cloud.functions.v2beta.Stage.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @static
                         * @param {google.cloud.functions.v2beta.IStage} message Stage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Stage.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.name);
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.state);
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.resource);
                            if (message.resourceUri != null && Object.hasOwnProperty.call(message, "resourceUri"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.resourceUri);
                            if (message.stateMessages != null && message.stateMessages.length)
                                for (var i = 0; i < message.stateMessages.length; ++i)
                                    $root.google.cloud.functions.v2beta.StateMessage.encode(message.stateMessages[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Stage message, length delimited. Does not implicitly {@link google.cloud.functions.v2beta.Stage.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @static
                         * @param {google.cloud.functions.v2beta.IStage} message Stage message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Stage.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Stage message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.functions.v2beta.Stage} Stage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Stage.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.functions.v2beta.Stage();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.message = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.resource = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.resourceUri = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (!(message.stateMessages && message.stateMessages.length))
                                            message.stateMessages = [];
                                        message.stateMessages.push($root.google.cloud.functions.v2beta.StateMessage.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Stage message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.functions.v2beta.Stage} Stage
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Stage.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Stage message.
                         * @function verify
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Stage.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                switch (message.name) {
                                default:
                                    return "name: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                if (!$util.isString(message.resource))
                                    return "resource: string expected";
                            if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                if (!$util.isString(message.resourceUri))
                                    return "resourceUri: string expected";
                            if (message.stateMessages != null && message.hasOwnProperty("stateMessages")) {
                                if (!Array.isArray(message.stateMessages))
                                    return "stateMessages: array expected";
                                for (var i = 0; i < message.stateMessages.length; ++i) {
                                    var error = $root.google.cloud.functions.v2beta.StateMessage.verify(message.stateMessages[i]);
                                    if (error)
                                        return "stateMessages." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Stage message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.functions.v2beta.Stage} Stage
                         */
                        Stage.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.functions.v2beta.Stage)
                                return object;
                            var message = new $root.google.cloud.functions.v2beta.Stage();
                            switch (object.name) {
                            default:
                                if (typeof object.name === "number") {
                                    message.name = object.name;
                                    break;
                                }
                                break;
                            case "NAME_UNSPECIFIED":
                            case 0:
                                message.name = 0;
                                break;
                            case "ARTIFACT_REGISTRY":
                            case 1:
                                message.name = 1;
                                break;
                            case "BUILD":
                            case 2:
                                message.name = 2;
                                break;
                            case "SERVICE":
                            case 3:
                                message.name = 3;
                                break;
                            case "TRIGGER":
                            case 4:
                                message.name = 4;
                                break;
                            case "SERVICE_ROLLBACK":
                            case 5:
                                message.name = 5;
                                break;
                            case "TRIGGER_ROLLBACK":
                            case 6:
                                message.name = 6;
                                break;
                            }
                            if (object.message != null)
                                message.message = String(object.message);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "NOT_STARTED":
                            case 1:
                                message.state = 1;
                                break;
                            case "IN_PROGRESS":
                            case 2:
                                message.state = 2;
                                break;
                            case "COMPLETE":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.resource != null)
                                message.resource = String(object.resource);
                            if (object.resourceUri != null)
                                message.resourceUri = String(object.resourceUri);
                            if (object.stateMessages) {
                                if (!Array.isArray(object.stateMessages))
                                    throw TypeError(".google.cloud.functions.v2beta.Stage.stateMessages: array expected");
                                message.stateMessages = [];
                                for (var i = 0; i < object.stateMessages.length; ++i) {
                                    if (typeof object.stateMessages[i] !== "object")
                                        throw TypeError(".google.cloud.functions.v2beta.Stage.stateMessages: object expected");
                                    message.stateMessages[i] = $root.google.cloud.functions.v2beta.StateMessage.fromObject(object.stateMessages[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Stage message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @static
                         * @param {google.cloud.functions.v2beta.Stage} message Stage
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Stage.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.stateMessages = [];
                            if (options.defaults) {
                                object.name = options.enums === String ? "NAME_UNSPECIFIED" : 0;
                                object.message = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.resource = "";
                                object.resourceUri = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = options.enums === String ? $root.google.cloud.functions.v2beta.Stage.Name[message.name] === undefined ? message.name : $root.google.cloud.functions.v2beta.Stage.Name[message.name] : message.name;
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.functions.v2beta.Stage.State[message.state] === undefined ? message.state : $root.google.cloud.functions.v2beta.Stage.State[message.state] : message.state;
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = message.resource;
                            if (message.resourceUri != null && message.hasOwnProperty("resourceUri"))
                                object.resourceUri = message.resourceUri;
                            if (message.stateMessages && message.stateMessages.length) {
                                object.stateMessages = [];
                                for (var j = 0; j < message.stateMessages.length; ++j)
                                    object.stateMessages[j] = $root.google.cloud.functions.v2beta.StateMessage.toObject(message.stateMessages[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Stage to JSON.
                         * @function toJSON
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Stage.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Stage
                         * @function getTypeUrl
                         * @memberof google.cloud.functions.v2beta.Stage
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Stage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.functions.v2beta.Stage";
                        };
    
                        /**
                         * Name enum.
                         * @name google.cloud.functions.v2beta.Stage.Name
                         * @enum {number}
                         * @property {number} NAME_UNSPECIFIED=0 NAME_UNSPECIFIED value
                         * @property {number} ARTIFACT_REGISTRY=1 ARTIFACT_REGISTRY value
                         * @property {number} BUILD=2 BUILD value
                         * @property {number} SERVICE=3 SERVICE value
                         * @property {number} TRIGGER=4 TRIGGER value
                         * @property {number} SERVICE_ROLLBACK=5 SERVICE_ROLLBACK value
                         * @property {number} TRIGGER_ROLLBACK=6 TRIGGER_ROLLBACK value
                         */
                        Stage.Name = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "NAME_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ARTIFACT_REGISTRY"] = 1;
                            values[valuesById[2] = "BUILD"] = 2;
                            values[valuesById[3] = "SERVICE"] = 3;
                            values[valuesById[4] = "TRIGGER"] = 4;
                            values[valuesById[5] = "SERVICE_ROLLBACK"] = 5;
                            values[valuesById[6] = "TRIGGER_ROLLBACK"] = 6;
                            return values;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.functions.v2beta.Stage.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} NOT_STARTED=1 NOT_STARTED value
                         * @property {number} IN_PROGRESS=2 IN_PROGRESS value
                         * @property {number} COMPLETE=3 COMPLETE value
                         */
                        Stage.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NOT_STARTED"] = 1;
                            values[valuesById[2] = "IN_PROGRESS"] = 2;
                            values[valuesById[3] = "COMPLETE"] = 3;
                            return values;
                        })();
    
                        return Stage;
                    })();
    
                    return v2beta;
                })();
    
                return functions;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            api.CommonLanguageSettings = (function() {
    
                /**
                 * Properties of a CommonLanguageSettings.
                 * @memberof google.api
                 * @interface ICommonLanguageSettings
                 * @property {string|null} [referenceDocsUri] CommonLanguageSettings referenceDocsUri
                 * @property {Array.<google.api.ClientLibraryDestination>|null} [destinations] CommonLanguageSettings destinations
                 */
    
                /**
                 * Constructs a new CommonLanguageSettings.
                 * @memberof google.api
                 * @classdesc Represents a CommonLanguageSettings.
                 * @implements ICommonLanguageSettings
                 * @constructor
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 */
                function CommonLanguageSettings(properties) {
                    this.destinations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CommonLanguageSettings referenceDocsUri.
                 * @member {string} referenceDocsUri
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.referenceDocsUri = "";
    
                /**
                 * CommonLanguageSettings destinations.
                 * @member {Array.<google.api.ClientLibraryDestination>} destinations
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.destinations = $util.emptyArray;
    
                /**
                 * Creates a new CommonLanguageSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings instance
                 */
                CommonLanguageSettings.create = function create(properties) {
                    return new CommonLanguageSettings(properties);
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.referenceDocsUri != null && Object.hasOwnProperty.call(message, "referenceDocsUri"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.referenceDocsUri);
                    if (message.destinations != null && message.destinations.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (var i = 0; i < message.destinations.length; ++i)
                            writer.int32(message.destinations[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message, length delimited. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CommonLanguageSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.referenceDocsUri = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.destinations && message.destinations.length))
                                    message.destinations = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.destinations.push(reader.int32());
                                } else
                                    message.destinations.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CommonLanguageSettings message.
                 * @function verify
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CommonLanguageSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        if (!$util.isString(message.referenceDocsUri))
                            return "referenceDocsUri: string expected";
                    if (message.destinations != null && message.hasOwnProperty("destinations")) {
                        if (!Array.isArray(message.destinations))
                            return "destinations: array expected";
                        for (var i = 0; i < message.destinations.length; ++i)
                            switch (message.destinations[i]) {
                            default:
                                return "destinations: enum value[] expected";
                            case 0:
                            case 10:
                            case 20:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a CommonLanguageSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 */
                CommonLanguageSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CommonLanguageSettings)
                        return object;
                    var message = new $root.google.api.CommonLanguageSettings();
                    if (object.referenceDocsUri != null)
                        message.referenceDocsUri = String(object.referenceDocsUri);
                    if (object.destinations) {
                        if (!Array.isArray(object.destinations))
                            throw TypeError(".google.api.CommonLanguageSettings.destinations: array expected");
                        message.destinations = [];
                        for (var i = 0; i < object.destinations.length; ++i)
                            switch (object.destinations[i]) {
                            default:
                                if (typeof object.destinations[i] === "number") {
                                    message.destinations[i] = object.destinations[i];
                                    break;
                                }
                            case "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED":
                            case 0:
                                message.destinations[i] = 0;
                                break;
                            case "GITHUB":
                            case 10:
                                message.destinations[i] = 10;
                                break;
                            case "PACKAGE_MANAGER":
                            case 20:
                                message.destinations[i] = 20;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CommonLanguageSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.CommonLanguageSettings} message CommonLanguageSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CommonLanguageSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.destinations = [];
                    if (options.defaults)
                        object.referenceDocsUri = "";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        object.referenceDocsUri = message.referenceDocsUri;
                    if (message.destinations && message.destinations.length) {
                        object.destinations = [];
                        for (var j = 0; j < message.destinations.length; ++j)
                            object.destinations[j] = options.enums === String ? $root.google.api.ClientLibraryDestination[message.destinations[j]] === undefined ? message.destinations[j] : $root.google.api.ClientLibraryDestination[message.destinations[j]] : message.destinations[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this CommonLanguageSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CommonLanguageSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CommonLanguageSettings
                 * @function getTypeUrl
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CommonLanguageSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CommonLanguageSettings";
                };
    
                return CommonLanguageSettings;
            })();
    
            api.ClientLibrarySettings = (function() {
    
                /**
                 * Properties of a ClientLibrarySettings.
                 * @memberof google.api
                 * @interface IClientLibrarySettings
                 * @property {string|null} [version] ClientLibrarySettings version
                 * @property {google.api.LaunchStage|null} [launchStage] ClientLibrarySettings launchStage
                 * @property {boolean|null} [restNumericEnums] ClientLibrarySettings restNumericEnums
                 * @property {google.api.IJavaSettings|null} [javaSettings] ClientLibrarySettings javaSettings
                 * @property {google.api.ICppSettings|null} [cppSettings] ClientLibrarySettings cppSettings
                 * @property {google.api.IPhpSettings|null} [phpSettings] ClientLibrarySettings phpSettings
                 * @property {google.api.IPythonSettings|null} [pythonSettings] ClientLibrarySettings pythonSettings
                 * @property {google.api.INodeSettings|null} [nodeSettings] ClientLibrarySettings nodeSettings
                 * @property {google.api.IDotnetSettings|null} [dotnetSettings] ClientLibrarySettings dotnetSettings
                 * @property {google.api.IRubySettings|null} [rubySettings] ClientLibrarySettings rubySettings
                 * @property {google.api.IGoSettings|null} [goSettings] ClientLibrarySettings goSettings
                 */
    
                /**
                 * Constructs a new ClientLibrarySettings.
                 * @memberof google.api
                 * @classdesc Represents a ClientLibrarySettings.
                 * @implements IClientLibrarySettings
                 * @constructor
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 */
                function ClientLibrarySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ClientLibrarySettings version.
                 * @member {string} version
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.version = "";
    
                /**
                 * ClientLibrarySettings launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.launchStage = 0;
    
                /**
                 * ClientLibrarySettings restNumericEnums.
                 * @member {boolean} restNumericEnums
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.restNumericEnums = false;
    
                /**
                 * ClientLibrarySettings javaSettings.
                 * @member {google.api.IJavaSettings|null|undefined} javaSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.javaSettings = null;
    
                /**
                 * ClientLibrarySettings cppSettings.
                 * @member {google.api.ICppSettings|null|undefined} cppSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.cppSettings = null;
    
                /**
                 * ClientLibrarySettings phpSettings.
                 * @member {google.api.IPhpSettings|null|undefined} phpSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.phpSettings = null;
    
                /**
                 * ClientLibrarySettings pythonSettings.
                 * @member {google.api.IPythonSettings|null|undefined} pythonSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.pythonSettings = null;
    
                /**
                 * ClientLibrarySettings nodeSettings.
                 * @member {google.api.INodeSettings|null|undefined} nodeSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.nodeSettings = null;
    
                /**
                 * ClientLibrarySettings dotnetSettings.
                 * @member {google.api.IDotnetSettings|null|undefined} dotnetSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.dotnetSettings = null;
    
                /**
                 * ClientLibrarySettings rubySettings.
                 * @member {google.api.IRubySettings|null|undefined} rubySettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.rubySettings = null;
    
                /**
                 * ClientLibrarySettings goSettings.
                 * @member {google.api.IGoSettings|null|undefined} goSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.goSettings = null;
    
                /**
                 * Creates a new ClientLibrarySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings instance
                 */
                ClientLibrarySettings.create = function create(properties) {
                    return new ClientLibrarySettings(properties);
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.launchStage);
                    if (message.restNumericEnums != null && Object.hasOwnProperty.call(message, "restNumericEnums"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.restNumericEnums);
                    if (message.javaSettings != null && Object.hasOwnProperty.call(message, "javaSettings"))
                        $root.google.api.JavaSettings.encode(message.javaSettings, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.cppSettings != null && Object.hasOwnProperty.call(message, "cppSettings"))
                        $root.google.api.CppSettings.encode(message.cppSettings, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                    if (message.phpSettings != null && Object.hasOwnProperty.call(message, "phpSettings"))
                        $root.google.api.PhpSettings.encode(message.phpSettings, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                    if (message.pythonSettings != null && Object.hasOwnProperty.call(message, "pythonSettings"))
                        $root.google.api.PythonSettings.encode(message.pythonSettings, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                    if (message.nodeSettings != null && Object.hasOwnProperty.call(message, "nodeSettings"))
                        $root.google.api.NodeSettings.encode(message.nodeSettings, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                    if (message.dotnetSettings != null && Object.hasOwnProperty.call(message, "dotnetSettings"))
                        $root.google.api.DotnetSettings.encode(message.dotnetSettings, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                    if (message.rubySettings != null && Object.hasOwnProperty.call(message, "rubySettings"))
                        $root.google.api.RubySettings.encode(message.rubySettings, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                    if (message.goSettings != null && Object.hasOwnProperty.call(message, "goSettings"))
                        $root.google.api.GoSettings.encode(message.goSettings, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message, length delimited. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ClientLibrarySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.version = reader.string();
                                break;
                            }
                        case 2: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        case 3: {
                                message.restNumericEnums = reader.bool();
                                break;
                            }
                        case 21: {
                                message.javaSettings = $root.google.api.JavaSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 22: {
                                message.cppSettings = $root.google.api.CppSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 23: {
                                message.phpSettings = $root.google.api.PhpSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 24: {
                                message.pythonSettings = $root.google.api.PythonSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 25: {
                                message.nodeSettings = $root.google.api.NodeSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 26: {
                                message.dotnetSettings = $root.google.api.DotnetSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 27: {
                                message.rubySettings = $root.google.api.RubySettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 28: {
                                message.goSettings = $root.google.api.GoSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ClientLibrarySettings message.
                 * @function verify
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ClientLibrarySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        if (typeof message.restNumericEnums !== "boolean")
                            return "restNumericEnums: boolean expected";
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings")) {
                        var error = $root.google.api.JavaSettings.verify(message.javaSettings);
                        if (error)
                            return "javaSettings." + error;
                    }
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings")) {
                        var error = $root.google.api.CppSettings.verify(message.cppSettings);
                        if (error)
                            return "cppSettings." + error;
                    }
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings")) {
                        var error = $root.google.api.PhpSettings.verify(message.phpSettings);
                        if (error)
                            return "phpSettings." + error;
                    }
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings")) {
                        var error = $root.google.api.PythonSettings.verify(message.pythonSettings);
                        if (error)
                            return "pythonSettings." + error;
                    }
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings")) {
                        var error = $root.google.api.NodeSettings.verify(message.nodeSettings);
                        if (error)
                            return "nodeSettings." + error;
                    }
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings")) {
                        var error = $root.google.api.DotnetSettings.verify(message.dotnetSettings);
                        if (error)
                            return "dotnetSettings." + error;
                    }
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings")) {
                        var error = $root.google.api.RubySettings.verify(message.rubySettings);
                        if (error)
                            return "rubySettings." + error;
                    }
                    if (message.goSettings != null && message.hasOwnProperty("goSettings")) {
                        var error = $root.google.api.GoSettings.verify(message.goSettings);
                        if (error)
                            return "goSettings." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ClientLibrarySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 */
                ClientLibrarySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ClientLibrarySettings)
                        return object;
                    var message = new $root.google.api.ClientLibrarySettings();
                    if (object.version != null)
                        message.version = String(object.version);
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    if (object.restNumericEnums != null)
                        message.restNumericEnums = Boolean(object.restNumericEnums);
                    if (object.javaSettings != null) {
                        if (typeof object.javaSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.javaSettings: object expected");
                        message.javaSettings = $root.google.api.JavaSettings.fromObject(object.javaSettings);
                    }
                    if (object.cppSettings != null) {
                        if (typeof object.cppSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.cppSettings: object expected");
                        message.cppSettings = $root.google.api.CppSettings.fromObject(object.cppSettings);
                    }
                    if (object.phpSettings != null) {
                        if (typeof object.phpSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.phpSettings: object expected");
                        message.phpSettings = $root.google.api.PhpSettings.fromObject(object.phpSettings);
                    }
                    if (object.pythonSettings != null) {
                        if (typeof object.pythonSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.pythonSettings: object expected");
                        message.pythonSettings = $root.google.api.PythonSettings.fromObject(object.pythonSettings);
                    }
                    if (object.nodeSettings != null) {
                        if (typeof object.nodeSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.nodeSettings: object expected");
                        message.nodeSettings = $root.google.api.NodeSettings.fromObject(object.nodeSettings);
                    }
                    if (object.dotnetSettings != null) {
                        if (typeof object.dotnetSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.dotnetSettings: object expected");
                        message.dotnetSettings = $root.google.api.DotnetSettings.fromObject(object.dotnetSettings);
                    }
                    if (object.rubySettings != null) {
                        if (typeof object.rubySettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.rubySettings: object expected");
                        message.rubySettings = $root.google.api.RubySettings.fromObject(object.rubySettings);
                    }
                    if (object.goSettings != null) {
                        if (typeof object.goSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.goSettings: object expected");
                        message.goSettings = $root.google.api.GoSettings.fromObject(object.goSettings);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ClientLibrarySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.ClientLibrarySettings} message ClientLibrarySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ClientLibrarySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.version = "";
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                        object.restNumericEnums = false;
                        object.javaSettings = null;
                        object.cppSettings = null;
                        object.phpSettings = null;
                        object.pythonSettings = null;
                        object.nodeSettings = null;
                        object.dotnetSettings = null;
                        object.rubySettings = null;
                        object.goSettings = null;
                    }
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        object.restNumericEnums = message.restNumericEnums;
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings"))
                        object.javaSettings = $root.google.api.JavaSettings.toObject(message.javaSettings, options);
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings"))
                        object.cppSettings = $root.google.api.CppSettings.toObject(message.cppSettings, options);
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings"))
                        object.phpSettings = $root.google.api.PhpSettings.toObject(message.phpSettings, options);
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings"))
                        object.pythonSettings = $root.google.api.PythonSettings.toObject(message.pythonSettings, options);
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings"))
                        object.nodeSettings = $root.google.api.NodeSettings.toObject(message.nodeSettings, options);
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings"))
                        object.dotnetSettings = $root.google.api.DotnetSettings.toObject(message.dotnetSettings, options);
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings"))
                        object.rubySettings = $root.google.api.RubySettings.toObject(message.rubySettings, options);
                    if (message.goSettings != null && message.hasOwnProperty("goSettings"))
                        object.goSettings = $root.google.api.GoSettings.toObject(message.goSettings, options);
                    return object;
                };
    
                /**
                 * Converts this ClientLibrarySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ClientLibrarySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ClientLibrarySettings
                 * @function getTypeUrl
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ClientLibrarySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ClientLibrarySettings";
                };
    
                return ClientLibrarySettings;
            })();
    
            api.Publishing = (function() {
    
                /**
                 * Properties of a Publishing.
                 * @memberof google.api
                 * @interface IPublishing
                 * @property {Array.<google.api.IMethodSettings>|null} [methodSettings] Publishing methodSettings
                 * @property {string|null} [newIssueUri] Publishing newIssueUri
                 * @property {string|null} [documentationUri] Publishing documentationUri
                 * @property {string|null} [apiShortName] Publishing apiShortName
                 * @property {string|null} [githubLabel] Publishing githubLabel
                 * @property {Array.<string>|null} [codeownerGithubTeams] Publishing codeownerGithubTeams
                 * @property {string|null} [docTagPrefix] Publishing docTagPrefix
                 * @property {google.api.ClientLibraryOrganization|null} [organization] Publishing organization
                 * @property {Array.<google.api.IClientLibrarySettings>|null} [librarySettings] Publishing librarySettings
                 */
    
                /**
                 * Constructs a new Publishing.
                 * @memberof google.api
                 * @classdesc Represents a Publishing.
                 * @implements IPublishing
                 * @constructor
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 */
                function Publishing(properties) {
                    this.methodSettings = [];
                    this.codeownerGithubTeams = [];
                    this.librarySettings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Publishing methodSettings.
                 * @member {Array.<google.api.IMethodSettings>} methodSettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.methodSettings = $util.emptyArray;
    
                /**
                 * Publishing newIssueUri.
                 * @member {string} newIssueUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.newIssueUri = "";
    
                /**
                 * Publishing documentationUri.
                 * @member {string} documentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.documentationUri = "";
    
                /**
                 * Publishing apiShortName.
                 * @member {string} apiShortName
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.apiShortName = "";
    
                /**
                 * Publishing githubLabel.
                 * @member {string} githubLabel
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.githubLabel = "";
    
                /**
                 * Publishing codeownerGithubTeams.
                 * @member {Array.<string>} codeownerGithubTeams
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.codeownerGithubTeams = $util.emptyArray;
    
                /**
                 * Publishing docTagPrefix.
                 * @member {string} docTagPrefix
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.docTagPrefix = "";
    
                /**
                 * Publishing organization.
                 * @member {google.api.ClientLibraryOrganization} organization
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.organization = 0;
    
                /**
                 * Publishing librarySettings.
                 * @member {Array.<google.api.IClientLibrarySettings>} librarySettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.librarySettings = $util.emptyArray;
    
                /**
                 * Creates a new Publishing instance using the specified properties.
                 * @function create
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 * @returns {google.api.Publishing} Publishing instance
                 */
                Publishing.create = function create(properties) {
                    return new Publishing(properties);
                };
    
                /**
                 * Encodes the specified Publishing message. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.methodSettings != null && message.methodSettings.length)
                        for (var i = 0; i < message.methodSettings.length; ++i)
                            $root.google.api.MethodSettings.encode(message.methodSettings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.newIssueUri != null && Object.hasOwnProperty.call(message, "newIssueUri"))
                        writer.uint32(/* id 101, wireType 2 =*/810).string(message.newIssueUri);
                    if (message.documentationUri != null && Object.hasOwnProperty.call(message, "documentationUri"))
                        writer.uint32(/* id 102, wireType 2 =*/818).string(message.documentationUri);
                    if (message.apiShortName != null && Object.hasOwnProperty.call(message, "apiShortName"))
                        writer.uint32(/* id 103, wireType 2 =*/826).string(message.apiShortName);
                    if (message.githubLabel != null && Object.hasOwnProperty.call(message, "githubLabel"))
                        writer.uint32(/* id 104, wireType 2 =*/834).string(message.githubLabel);
                    if (message.codeownerGithubTeams != null && message.codeownerGithubTeams.length)
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            writer.uint32(/* id 105, wireType 2 =*/842).string(message.codeownerGithubTeams[i]);
                    if (message.docTagPrefix != null && Object.hasOwnProperty.call(message, "docTagPrefix"))
                        writer.uint32(/* id 106, wireType 2 =*/850).string(message.docTagPrefix);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 107, wireType 0 =*/856).int32(message.organization);
                    if (message.librarySettings != null && message.librarySettings.length)
                        for (var i = 0; i < message.librarySettings.length; ++i)
                            $root.google.api.ClientLibrarySettings.encode(message.librarySettings[i], writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Publishing message, length delimited. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Publishing();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.methodSettings && message.methodSettings.length))
                                    message.methodSettings = [];
                                message.methodSettings.push($root.google.api.MethodSettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 101: {
                                message.newIssueUri = reader.string();
                                break;
                            }
                        case 102: {
                                message.documentationUri = reader.string();
                                break;
                            }
                        case 103: {
                                message.apiShortName = reader.string();
                                break;
                            }
                        case 104: {
                                message.githubLabel = reader.string();
                                break;
                            }
                        case 105: {
                                if (!(message.codeownerGithubTeams && message.codeownerGithubTeams.length))
                                    message.codeownerGithubTeams = [];
                                message.codeownerGithubTeams.push(reader.string());
                                break;
                            }
                        case 106: {
                                message.docTagPrefix = reader.string();
                                break;
                            }
                        case 107: {
                                message.organization = reader.int32();
                                break;
                            }
                        case 109: {
                                if (!(message.librarySettings && message.librarySettings.length))
                                    message.librarySettings = [];
                                message.librarySettings.push($root.google.api.ClientLibrarySettings.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Publishing message.
                 * @function verify
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Publishing.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.methodSettings != null && message.hasOwnProperty("methodSettings")) {
                        if (!Array.isArray(message.methodSettings))
                            return "methodSettings: array expected";
                        for (var i = 0; i < message.methodSettings.length; ++i) {
                            var error = $root.google.api.MethodSettings.verify(message.methodSettings[i]);
                            if (error)
                                return "methodSettings." + error;
                        }
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        if (!$util.isString(message.newIssueUri))
                            return "newIssueUri: string expected";
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        if (!$util.isString(message.documentationUri))
                            return "documentationUri: string expected";
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        if (!$util.isString(message.apiShortName))
                            return "apiShortName: string expected";
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        if (!$util.isString(message.githubLabel))
                            return "githubLabel: string expected";
                    if (message.codeownerGithubTeams != null && message.hasOwnProperty("codeownerGithubTeams")) {
                        if (!Array.isArray(message.codeownerGithubTeams))
                            return "codeownerGithubTeams: array expected";
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            if (!$util.isString(message.codeownerGithubTeams[i]))
                                return "codeownerGithubTeams: string[] expected";
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        if (!$util.isString(message.docTagPrefix))
                            return "docTagPrefix: string expected";
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        switch (message.organization) {
                        default:
                            return "organization: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        }
                    if (message.librarySettings != null && message.hasOwnProperty("librarySettings")) {
                        if (!Array.isArray(message.librarySettings))
                            return "librarySettings: array expected";
                        for (var i = 0; i < message.librarySettings.length; ++i) {
                            var error = $root.google.api.ClientLibrarySettings.verify(message.librarySettings[i]);
                            if (error)
                                return "librarySettings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Publishing message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Publishing} Publishing
                 */
                Publishing.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Publishing)
                        return object;
                    var message = new $root.google.api.Publishing();
                    if (object.methodSettings) {
                        if (!Array.isArray(object.methodSettings))
                            throw TypeError(".google.api.Publishing.methodSettings: array expected");
                        message.methodSettings = [];
                        for (var i = 0; i < object.methodSettings.length; ++i) {
                            if (typeof object.methodSettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.methodSettings: object expected");
                            message.methodSettings[i] = $root.google.api.MethodSettings.fromObject(object.methodSettings[i]);
                        }
                    }
                    if (object.newIssueUri != null)
                        message.newIssueUri = String(object.newIssueUri);
                    if (object.documentationUri != null)
                        message.documentationUri = String(object.documentationUri);
                    if (object.apiShortName != null)
                        message.apiShortName = String(object.apiShortName);
                    if (object.githubLabel != null)
                        message.githubLabel = String(object.githubLabel);
                    if (object.codeownerGithubTeams) {
                        if (!Array.isArray(object.codeownerGithubTeams))
                            throw TypeError(".google.api.Publishing.codeownerGithubTeams: array expected");
                        message.codeownerGithubTeams = [];
                        for (var i = 0; i < object.codeownerGithubTeams.length; ++i)
                            message.codeownerGithubTeams[i] = String(object.codeownerGithubTeams[i]);
                    }
                    if (object.docTagPrefix != null)
                        message.docTagPrefix = String(object.docTagPrefix);
                    switch (object.organization) {
                    default:
                        if (typeof object.organization === "number") {
                            message.organization = object.organization;
                            break;
                        }
                        break;
                    case "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED":
                    case 0:
                        message.organization = 0;
                        break;
                    case "CLOUD":
                    case 1:
                        message.organization = 1;
                        break;
                    case "ADS":
                    case 2:
                        message.organization = 2;
                        break;
                    case "PHOTOS":
                    case 3:
                        message.organization = 3;
                        break;
                    case "STREET_VIEW":
                    case 4:
                        message.organization = 4;
                        break;
                    }
                    if (object.librarySettings) {
                        if (!Array.isArray(object.librarySettings))
                            throw TypeError(".google.api.Publishing.librarySettings: array expected");
                        message.librarySettings = [];
                        for (var i = 0; i < object.librarySettings.length; ++i) {
                            if (typeof object.librarySettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.librarySettings: object expected");
                            message.librarySettings[i] = $root.google.api.ClientLibrarySettings.fromObject(object.librarySettings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Publishing message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.Publishing} message Publishing
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Publishing.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.methodSettings = [];
                        object.codeownerGithubTeams = [];
                        object.librarySettings = [];
                    }
                    if (options.defaults) {
                        object.newIssueUri = "";
                        object.documentationUri = "";
                        object.apiShortName = "";
                        object.githubLabel = "";
                        object.docTagPrefix = "";
                        object.organization = options.enums === String ? "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED" : 0;
                    }
                    if (message.methodSettings && message.methodSettings.length) {
                        object.methodSettings = [];
                        for (var j = 0; j < message.methodSettings.length; ++j)
                            object.methodSettings[j] = $root.google.api.MethodSettings.toObject(message.methodSettings[j], options);
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        object.newIssueUri = message.newIssueUri;
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        object.documentationUri = message.documentationUri;
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        object.apiShortName = message.apiShortName;
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        object.githubLabel = message.githubLabel;
                    if (message.codeownerGithubTeams && message.codeownerGithubTeams.length) {
                        object.codeownerGithubTeams = [];
                        for (var j = 0; j < message.codeownerGithubTeams.length; ++j)
                            object.codeownerGithubTeams[j] = message.codeownerGithubTeams[j];
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        object.docTagPrefix = message.docTagPrefix;
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = options.enums === String ? $root.google.api.ClientLibraryOrganization[message.organization] === undefined ? message.organization : $root.google.api.ClientLibraryOrganization[message.organization] : message.organization;
                    if (message.librarySettings && message.librarySettings.length) {
                        object.librarySettings = [];
                        for (var j = 0; j < message.librarySettings.length; ++j)
                            object.librarySettings[j] = $root.google.api.ClientLibrarySettings.toObject(message.librarySettings[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Publishing to JSON.
                 * @function toJSON
                 * @memberof google.api.Publishing
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Publishing.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Publishing
                 * @function getTypeUrl
                 * @memberof google.api.Publishing
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Publishing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Publishing";
                };
    
                return Publishing;
            })();
    
            api.JavaSettings = (function() {
    
                /**
                 * Properties of a JavaSettings.
                 * @memberof google.api
                 * @interface IJavaSettings
                 * @property {string|null} [libraryPackage] JavaSettings libraryPackage
                 * @property {Object.<string,string>|null} [serviceClassNames] JavaSettings serviceClassNames
                 * @property {google.api.ICommonLanguageSettings|null} [common] JavaSettings common
                 */
    
                /**
                 * Constructs a new JavaSettings.
                 * @memberof google.api
                 * @classdesc Represents a JavaSettings.
                 * @implements IJavaSettings
                 * @constructor
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 */
                function JavaSettings(properties) {
                    this.serviceClassNames = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * JavaSettings libraryPackage.
                 * @member {string} libraryPackage
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.libraryPackage = "";
    
                /**
                 * JavaSettings serviceClassNames.
                 * @member {Object.<string,string>} serviceClassNames
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.serviceClassNames = $util.emptyObject;
    
                /**
                 * JavaSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.common = null;
    
                /**
                 * Creates a new JavaSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 * @returns {google.api.JavaSettings} JavaSettings instance
                 */
                JavaSettings.create = function create(properties) {
                    return new JavaSettings(properties);
                };
    
                /**
                 * Encodes the specified JavaSettings message. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.libraryPackage != null && Object.hasOwnProperty.call(message, "libraryPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.libraryPackage);
                    if (message.serviceClassNames != null && Object.hasOwnProperty.call(message, "serviceClassNames"))
                        for (var keys = Object.keys(message.serviceClassNames), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.serviceClassNames[keys[i]]).ldelim();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified JavaSettings message, length delimited. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.JavaSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.libraryPackage = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.serviceClassNames === $util.emptyObject)
                                    message.serviceClassNames = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.serviceClassNames[key] = value;
                                break;
                            }
                        case 3: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a JavaSettings message.
                 * @function verify
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                JavaSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        if (!$util.isString(message.libraryPackage))
                            return "libraryPackage: string expected";
                    if (message.serviceClassNames != null && message.hasOwnProperty("serviceClassNames")) {
                        if (!$util.isObject(message.serviceClassNames))
                            return "serviceClassNames: object expected";
                        var key = Object.keys(message.serviceClassNames);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.serviceClassNames[key[i]]))
                                return "serviceClassNames: string{k:string} expected";
                    }
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a JavaSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.JavaSettings} JavaSettings
                 */
                JavaSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.JavaSettings)
                        return object;
                    var message = new $root.google.api.JavaSettings();
                    if (object.libraryPackage != null)
                        message.libraryPackage = String(object.libraryPackage);
                    if (object.serviceClassNames) {
                        if (typeof object.serviceClassNames !== "object")
                            throw TypeError(".google.api.JavaSettings.serviceClassNames: object expected");
                        message.serviceClassNames = {};
                        for (var keys = Object.keys(object.serviceClassNames), i = 0; i < keys.length; ++i)
                            message.serviceClassNames[keys[i]] = String(object.serviceClassNames[keys[i]]);
                    }
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.JavaSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a JavaSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.JavaSettings} message JavaSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                JavaSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.serviceClassNames = {};
                    if (options.defaults) {
                        object.libraryPackage = "";
                        object.common = null;
                    }
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        object.libraryPackage = message.libraryPackage;
                    var keys2;
                    if (message.serviceClassNames && (keys2 = Object.keys(message.serviceClassNames)).length) {
                        object.serviceClassNames = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.serviceClassNames[keys2[j]] = message.serviceClassNames[keys2[j]];
                    }
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this JavaSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.JavaSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                JavaSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for JavaSettings
                 * @function getTypeUrl
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                JavaSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.JavaSettings";
                };
    
                return JavaSettings;
            })();
    
            api.CppSettings = (function() {
    
                /**
                 * Properties of a CppSettings.
                 * @memberof google.api
                 * @interface ICppSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] CppSettings common
                 */
    
                /**
                 * Constructs a new CppSettings.
                 * @memberof google.api
                 * @classdesc Represents a CppSettings.
                 * @implements ICppSettings
                 * @constructor
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 */
                function CppSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CppSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.CppSettings
                 * @instance
                 */
                CppSettings.prototype.common = null;
    
                /**
                 * Creates a new CppSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 * @returns {google.api.CppSettings} CppSettings instance
                 */
                CppSettings.create = function create(properties) {
                    return new CppSettings(properties);
                };
    
                /**
                 * Encodes the specified CppSettings message. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified CppSettings message, length delimited. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CppSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CppSettings message.
                 * @function verify
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CppSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a CppSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CppSettings} CppSettings
                 */
                CppSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CppSettings)
                        return object;
                    var message = new $root.google.api.CppSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.CppSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CppSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.CppSettings} message CppSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CppSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this CppSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CppSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CppSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CppSettings
                 * @function getTypeUrl
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CppSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CppSettings";
                };
    
                return CppSettings;
            })();
    
            api.PhpSettings = (function() {
    
                /**
                 * Properties of a PhpSettings.
                 * @memberof google.api
                 * @interface IPhpSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PhpSettings common
                 */
    
                /**
                 * Constructs a new PhpSettings.
                 * @memberof google.api
                 * @classdesc Represents a PhpSettings.
                 * @implements IPhpSettings
                 * @constructor
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 */
                function PhpSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PhpSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PhpSettings
                 * @instance
                 */
                PhpSettings.prototype.common = null;
    
                /**
                 * Creates a new PhpSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 * @returns {google.api.PhpSettings} PhpSettings instance
                 */
                PhpSettings.create = function create(properties) {
                    return new PhpSettings(properties);
                };
    
                /**
                 * Encodes the specified PhpSettings message. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PhpSettings message, length delimited. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PhpSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PhpSettings message.
                 * @function verify
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PhpSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PhpSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PhpSettings} PhpSettings
                 */
                PhpSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PhpSettings)
                        return object;
                    var message = new $root.google.api.PhpSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PhpSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PhpSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.PhpSettings} message PhpSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PhpSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PhpSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PhpSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PhpSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PhpSettings
                 * @function getTypeUrl
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PhpSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PhpSettings";
                };
    
                return PhpSettings;
            })();
    
            api.PythonSettings = (function() {
    
                /**
                 * Properties of a PythonSettings.
                 * @memberof google.api
                 * @interface IPythonSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PythonSettings common
                 */
    
                /**
                 * Constructs a new PythonSettings.
                 * @memberof google.api
                 * @classdesc Represents a PythonSettings.
                 * @implements IPythonSettings
                 * @constructor
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 */
                function PythonSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PythonSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PythonSettings
                 * @instance
                 */
                PythonSettings.prototype.common = null;
    
                /**
                 * Creates a new PythonSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 * @returns {google.api.PythonSettings} PythonSettings instance
                 */
                PythonSettings.create = function create(properties) {
                    return new PythonSettings(properties);
                };
    
                /**
                 * Encodes the specified PythonSettings message. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PythonSettings message, length delimited. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PythonSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PythonSettings message.
                 * @function verify
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PythonSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PythonSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PythonSettings} PythonSettings
                 */
                PythonSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PythonSettings)
                        return object;
                    var message = new $root.google.api.PythonSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PythonSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PythonSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.PythonSettings} message PythonSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PythonSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PythonSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PythonSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PythonSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PythonSettings
                 * @function getTypeUrl
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PythonSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PythonSettings";
                };
    
                return PythonSettings;
            })();
    
            api.NodeSettings = (function() {
    
                /**
                 * Properties of a NodeSettings.
                 * @memberof google.api
                 * @interface INodeSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] NodeSettings common
                 */
    
                /**
                 * Constructs a new NodeSettings.
                 * @memberof google.api
                 * @classdesc Represents a NodeSettings.
                 * @implements INodeSettings
                 * @constructor
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 */
                function NodeSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * NodeSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.NodeSettings
                 * @instance
                 */
                NodeSettings.prototype.common = null;
    
                /**
                 * Creates a new NodeSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 * @returns {google.api.NodeSettings} NodeSettings instance
                 */
                NodeSettings.create = function create(properties) {
                    return new NodeSettings(properties);
                };
    
                /**
                 * Encodes the specified NodeSettings message. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified NodeSettings message, length delimited. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.NodeSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a NodeSettings message.
                 * @function verify
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NodeSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a NodeSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.NodeSettings} NodeSettings
                 */
                NodeSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.NodeSettings)
                        return object;
                    var message = new $root.google.api.NodeSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.NodeSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a NodeSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.NodeSettings} message NodeSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NodeSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this NodeSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.NodeSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NodeSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for NodeSettings
                 * @function getTypeUrl
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                NodeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.NodeSettings";
                };
    
                return NodeSettings;
            })();
    
            api.DotnetSettings = (function() {
    
                /**
                 * Properties of a DotnetSettings.
                 * @memberof google.api
                 * @interface IDotnetSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] DotnetSettings common
                 */
    
                /**
                 * Constructs a new DotnetSettings.
                 * @memberof google.api
                 * @classdesc Represents a DotnetSettings.
                 * @implements IDotnetSettings
                 * @constructor
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 */
                function DotnetSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DotnetSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.common = null;
    
                /**
                 * Creates a new DotnetSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 * @returns {google.api.DotnetSettings} DotnetSettings instance
                 */
                DotnetSettings.create = function create(properties) {
                    return new DotnetSettings(properties);
                };
    
                /**
                 * Encodes the specified DotnetSettings message. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DotnetSettings message, length delimited. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.DotnetSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DotnetSettings message.
                 * @function verify
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DotnetSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a DotnetSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 */
                DotnetSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.DotnetSettings)
                        return object;
                    var message = new $root.google.api.DotnetSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.DotnetSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DotnetSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.DotnetSettings} message DotnetSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DotnetSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this DotnetSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.DotnetSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DotnetSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DotnetSettings
                 * @function getTypeUrl
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DotnetSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.DotnetSettings";
                };
    
                return DotnetSettings;
            })();
    
            api.RubySettings = (function() {
    
                /**
                 * Properties of a RubySettings.
                 * @memberof google.api
                 * @interface IRubySettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] RubySettings common
                 */
    
                /**
                 * Constructs a new RubySettings.
                 * @memberof google.api
                 * @classdesc Represents a RubySettings.
                 * @implements IRubySettings
                 * @constructor
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 */
                function RubySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RubySettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.RubySettings
                 * @instance
                 */
                RubySettings.prototype.common = null;
    
                /**
                 * Creates a new RubySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 * @returns {google.api.RubySettings} RubySettings instance
                 */
                RubySettings.create = function create(properties) {
                    return new RubySettings(properties);
                };
    
                /**
                 * Encodes the specified RubySettings message. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RubySettings message, length delimited. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RubySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RubySettings message.
                 * @function verify
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RubySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a RubySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RubySettings} RubySettings
                 */
                RubySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RubySettings)
                        return object;
                    var message = new $root.google.api.RubySettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.RubySettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RubySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.RubySettings} message RubySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RubySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this RubySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.RubySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RubySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RubySettings
                 * @function getTypeUrl
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RubySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RubySettings";
                };
    
                return RubySettings;
            })();
    
            api.GoSettings = (function() {
    
                /**
                 * Properties of a GoSettings.
                 * @memberof google.api
                 * @interface IGoSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] GoSettings common
                 */
    
                /**
                 * Constructs a new GoSettings.
                 * @memberof google.api
                 * @classdesc Represents a GoSettings.
                 * @implements IGoSettings
                 * @constructor
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 */
                function GoSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GoSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.GoSettings
                 * @instance
                 */
                GoSettings.prototype.common = null;
    
                /**
                 * Creates a new GoSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 * @returns {google.api.GoSettings} GoSettings instance
                 */
                GoSettings.create = function create(properties) {
                    return new GoSettings(properties);
                };
    
                /**
                 * Encodes the specified GoSettings message. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GoSettings message, length delimited. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.GoSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GoSettings message.
                 * @function verify
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GoSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a GoSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.GoSettings} GoSettings
                 */
                GoSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.GoSettings)
                        return object;
                    var message = new $root.google.api.GoSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.GoSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GoSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.GoSettings} message GoSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GoSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this GoSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.GoSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GoSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GoSettings
                 * @function getTypeUrl
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GoSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.GoSettings";
                };
    
                return GoSettings;
            })();
    
            api.MethodSettings = (function() {
    
                /**
                 * Properties of a MethodSettings.
                 * @memberof google.api
                 * @interface IMethodSettings
                 * @property {string|null} [selector] MethodSettings selector
                 * @property {google.api.MethodSettings.ILongRunning|null} [longRunning] MethodSettings longRunning
                 */
    
                /**
                 * Constructs a new MethodSettings.
                 * @memberof google.api
                 * @classdesc Represents a MethodSettings.
                 * @implements IMethodSettings
                 * @constructor
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 */
                function MethodSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodSettings selector.
                 * @member {string} selector
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.selector = "";
    
                /**
                 * MethodSettings longRunning.
                 * @member {google.api.MethodSettings.ILongRunning|null|undefined} longRunning
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.longRunning = null;
    
                /**
                 * Creates a new MethodSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 * @returns {google.api.MethodSettings} MethodSettings instance
                 */
                MethodSettings.create = function create(properties) {
                    return new MethodSettings(properties);
                };
    
                /**
                 * Encodes the specified MethodSettings message. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.longRunning != null && Object.hasOwnProperty.call(message, "longRunning"))
                        $root.google.api.MethodSettings.LongRunning.encode(message.longRunning, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodSettings message, length delimited. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.longRunning = $root.google.api.MethodSettings.LongRunning.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodSettings message.
                 * @function verify
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.longRunning != null && message.hasOwnProperty("longRunning")) {
                        var error = $root.google.api.MethodSettings.LongRunning.verify(message.longRunning);
                        if (error)
                            return "longRunning." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MethodSettings} MethodSettings
                 */
                MethodSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MethodSettings)
                        return object;
                    var message = new $root.google.api.MethodSettings();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.longRunning != null) {
                        if (typeof object.longRunning !== "object")
                            throw TypeError(".google.api.MethodSettings.longRunning: object expected");
                        message.longRunning = $root.google.api.MethodSettings.LongRunning.fromObject(object.longRunning);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.MethodSettings} message MethodSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.selector = "";
                        object.longRunning = null;
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.longRunning != null && message.hasOwnProperty("longRunning"))
                        object.longRunning = $root.google.api.MethodSettings.LongRunning.toObject(message.longRunning, options);
                    return object;
                };
    
                /**
                 * Converts this MethodSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.MethodSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodSettings
                 * @function getTypeUrl
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MethodSettings";
                };
    
                MethodSettings.LongRunning = (function() {
    
                    /**
                     * Properties of a LongRunning.
                     * @memberof google.api.MethodSettings
                     * @interface ILongRunning
                     * @property {google.protobuf.IDuration|null} [initialPollDelay] LongRunning initialPollDelay
                     * @property {number|null} [pollDelayMultiplier] LongRunning pollDelayMultiplier
                     * @property {google.protobuf.IDuration|null} [maxPollDelay] LongRunning maxPollDelay
                     * @property {google.protobuf.IDuration|null} [totalPollTimeout] LongRunning totalPollTimeout
                     */
    
                    /**
                     * Constructs a new LongRunning.
                     * @memberof google.api.MethodSettings
                     * @classdesc Represents a LongRunning.
                     * @implements ILongRunning
                     * @constructor
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     */
                    function LongRunning(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LongRunning initialPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} initialPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.initialPollDelay = null;
    
                    /**
                     * LongRunning pollDelayMultiplier.
                     * @member {number} pollDelayMultiplier
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.pollDelayMultiplier = 0;
    
                    /**
                     * LongRunning maxPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} maxPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.maxPollDelay = null;
    
                    /**
                     * LongRunning totalPollTimeout.
                     * @member {google.protobuf.IDuration|null|undefined} totalPollTimeout
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.totalPollTimeout = null;
    
                    /**
                     * Creates a new LongRunning instance using the specified properties.
                     * @function create
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning instance
                     */
                    LongRunning.create = function create(properties) {
                        return new LongRunning(properties);
                    };
    
                    /**
                     * Encodes the specified LongRunning message. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.initialPollDelay != null && Object.hasOwnProperty.call(message, "initialPollDelay"))
                            $root.google.protobuf.Duration.encode(message.initialPollDelay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pollDelayMultiplier != null && Object.hasOwnProperty.call(message, "pollDelayMultiplier"))
                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.pollDelayMultiplier);
                        if (message.maxPollDelay != null && Object.hasOwnProperty.call(message, "maxPollDelay"))
                            $root.google.protobuf.Duration.encode(message.maxPollDelay, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalPollTimeout != null && Object.hasOwnProperty.call(message, "totalPollTimeout"))
                            $root.google.protobuf.Duration.encode(message.totalPollTimeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LongRunning message, length delimited. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings.LongRunning();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.initialPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.pollDelayMultiplier = reader.float();
                                    break;
                                }
                            case 3: {
                                    message.maxPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.totalPollTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LongRunning message.
                     * @function verify
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LongRunning.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.initialPollDelay);
                            if (error)
                                return "initialPollDelay." + error;
                        }
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            if (typeof message.pollDelayMultiplier !== "number")
                                return "pollDelayMultiplier: number expected";
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.maxPollDelay);
                            if (error)
                                return "maxPollDelay." + error;
                        }
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout")) {
                            var error = $root.google.protobuf.Duration.verify(message.totalPollTimeout);
                            if (error)
                                return "totalPollTimeout." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LongRunning message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     */
                    LongRunning.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.MethodSettings.LongRunning)
                            return object;
                        var message = new $root.google.api.MethodSettings.LongRunning();
                        if (object.initialPollDelay != null) {
                            if (typeof object.initialPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.initialPollDelay: object expected");
                            message.initialPollDelay = $root.google.protobuf.Duration.fromObject(object.initialPollDelay);
                        }
                        if (object.pollDelayMultiplier != null)
                            message.pollDelayMultiplier = Number(object.pollDelayMultiplier);
                        if (object.maxPollDelay != null) {
                            if (typeof object.maxPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.maxPollDelay: object expected");
                            message.maxPollDelay = $root.google.protobuf.Duration.fromObject(object.maxPollDelay);
                        }
                        if (object.totalPollTimeout != null) {
                            if (typeof object.totalPollTimeout !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.totalPollTimeout: object expected");
                            message.totalPollTimeout = $root.google.protobuf.Duration.fromObject(object.totalPollTimeout);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LongRunning message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.LongRunning} message LongRunning
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LongRunning.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.initialPollDelay = null;
                            object.pollDelayMultiplier = 0;
                            object.maxPollDelay = null;
                            object.totalPollTimeout = null;
                        }
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay"))
                            object.initialPollDelay = $root.google.protobuf.Duration.toObject(message.initialPollDelay, options);
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            object.pollDelayMultiplier = options.json && !isFinite(message.pollDelayMultiplier) ? String(message.pollDelayMultiplier) : message.pollDelayMultiplier;
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay"))
                            object.maxPollDelay = $root.google.protobuf.Duration.toObject(message.maxPollDelay, options);
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout"))
                            object.totalPollTimeout = $root.google.protobuf.Duration.toObject(message.totalPollTimeout, options);
                        return object;
                    };
    
                    /**
                     * Converts this LongRunning to JSON.
                     * @function toJSON
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LongRunning.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LongRunning
                     * @function getTypeUrl
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LongRunning.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.MethodSettings.LongRunning";
                    };
    
                    return LongRunning;
                })();
    
                return MethodSettings;
            })();
    
            /**
             * ClientLibraryOrganization enum.
             * @name google.api.ClientLibraryOrganization
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED=0 CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED value
             * @property {number} CLOUD=1 CLOUD value
             * @property {number} ADS=2 ADS value
             * @property {number} PHOTOS=3 PHOTOS value
             * @property {number} STREET_VIEW=4 STREET_VIEW value
             */
            api.ClientLibraryOrganization = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"] = 0;
                values[valuesById[1] = "CLOUD"] = 1;
                values[valuesById[2] = "ADS"] = 2;
                values[valuesById[3] = "PHOTOS"] = 3;
                values[valuesById[4] = "STREET_VIEW"] = 4;
                return values;
            })();
    
            /**
             * ClientLibraryDestination enum.
             * @name google.api.ClientLibraryDestination
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_DESTINATION_UNSPECIFIED=0 CLIENT_LIBRARY_DESTINATION_UNSPECIFIED value
             * @property {number} GITHUB=10 GITHUB value
             * @property {number} PACKAGE_MANAGER=20 PACKAGE_MANAGER value
             */
            api.ClientLibraryDestination = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"] = 0;
                values[valuesById[10] = "GITHUB"] = 10;
                values[valuesById[20] = "PACKAGE_MANAGER"] = 20;
                return values;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] MessageOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 11, wireType 0 =*/88).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 11: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {boolean|null} [debugRedact] FieldOptions debugRedact
                 * @property {google.protobuf.FieldOptions.OptionRetention|null} [retention] FieldOptions retention
                 * @property {google.protobuf.FieldOptions.OptionTargetType|null} [target] FieldOptions target
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.debugRedact = false;
    
                /**
                 * FieldOptions retention.
                 * @member {google.protobuf.FieldOptions.OptionRetention} retention
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.retention = 0;
    
                /**
                 * FieldOptions target.
                 * @member {google.protobuf.FieldOptions.OptionTargetType} target
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.target = 0;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.debugRedact);
                    if (message.retention != null && Object.hasOwnProperty.call(message, "retention"))
                        writer.uint32(/* id 17, wireType 0 =*/136).int32(message.retention);
                    if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                        writer.uint32(/* id 18, wireType 0 =*/144).int32(message.target);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 16: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 17: {
                                message.retention = reader.int32();
                                break;
                            }
                        case 18: {
                                message.target = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        switch (message.retention) {
                        default:
                            return "retention: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.target != null && message.hasOwnProperty("target"))
                        switch (message.target) {
                        default:
                            return "target: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    switch (object.retention) {
                    default:
                        if (typeof object.retention === "number") {
                            message.retention = object.retention;
                            break;
                        }
                        break;
                    case "RETENTION_UNKNOWN":
                    case 0:
                        message.retention = 0;
                        break;
                    case "RETENTION_RUNTIME":
                    case 1:
                        message.retention = 1;
                        break;
                    case "RETENTION_SOURCE":
                    case 2:
                        message.retention = 2;
                        break;
                    }
                    switch (object.target) {
                    default:
                        if (typeof object.target === "number") {
                            message.target = object.target;
                            break;
                        }
                        break;
                    case "TARGET_TYPE_UNKNOWN":
                    case 0:
                        message.target = 0;
                        break;
                    case "TARGET_TYPE_FILE":
                    case 1:
                        message.target = 1;
                        break;
                    case "TARGET_TYPE_EXTENSION_RANGE":
                    case 2:
                        message.target = 2;
                        break;
                    case "TARGET_TYPE_MESSAGE":
                    case 3:
                        message.target = 3;
                        break;
                    case "TARGET_TYPE_FIELD":
                    case 4:
                        message.target = 4;
                        break;
                    case "TARGET_TYPE_ONEOF":
                    case 5:
                        message.target = 5;
                        break;
                    case "TARGET_TYPE_ENUM":
                    case 6:
                        message.target = 6;
                        break;
                    case "TARGET_TYPE_ENUM_ENTRY":
                    case 7:
                        message.target = 7;
                        break;
                    case "TARGET_TYPE_SERVICE":
                    case 8:
                        message.target = 8;
                        break;
                    case "TARGET_TYPE_METHOD":
                    case 9:
                        message.target = 9;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object.debugRedact = false;
                        object.retention = options.enums === String ? "RETENTION_UNKNOWN" : 0;
                        object.target = options.enums === String ? "TARGET_TYPE_UNKNOWN" : 0;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        object.retention = options.enums === String ? $root.google.protobuf.FieldOptions.OptionRetention[message.retention] === undefined ? message.retention : $root.google.protobuf.FieldOptions.OptionRetention[message.retention] : message.retention;
                    if (message.target != null && message.hasOwnProperty("target"))
                        object.target = options.enums === String ? $root.google.protobuf.FieldOptions.OptionTargetType[message.target] === undefined ? message.target : $root.google.protobuf.FieldOptions.OptionTargetType[message.target] : message.target;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                /**
                 * OptionRetention enum.
                 * @name google.protobuf.FieldOptions.OptionRetention
                 * @enum {number}
                 * @property {number} RETENTION_UNKNOWN=0 RETENTION_UNKNOWN value
                 * @property {number} RETENTION_RUNTIME=1 RETENTION_RUNTIME value
                 * @property {number} RETENTION_SOURCE=2 RETENTION_SOURCE value
                 */
                FieldOptions.OptionRetention = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "RETENTION_UNKNOWN"] = 0;
                    values[valuesById[1] = "RETENTION_RUNTIME"] = 1;
                    values[valuesById[2] = "RETENTION_SOURCE"] = 2;
                    return values;
                })();
    
                /**
                 * OptionTargetType enum.
                 * @name google.protobuf.FieldOptions.OptionTargetType
                 * @enum {number}
                 * @property {number} TARGET_TYPE_UNKNOWN=0 TARGET_TYPE_UNKNOWN value
                 * @property {number} TARGET_TYPE_FILE=1 TARGET_TYPE_FILE value
                 * @property {number} TARGET_TYPE_EXTENSION_RANGE=2 TARGET_TYPE_EXTENSION_RANGE value
                 * @property {number} TARGET_TYPE_MESSAGE=3 TARGET_TYPE_MESSAGE value
                 * @property {number} TARGET_TYPE_FIELD=4 TARGET_TYPE_FIELD value
                 * @property {number} TARGET_TYPE_ONEOF=5 TARGET_TYPE_ONEOF value
                 * @property {number} TARGET_TYPE_ENUM=6 TARGET_TYPE_ENUM value
                 * @property {number} TARGET_TYPE_ENUM_ENTRY=7 TARGET_TYPE_ENUM_ENTRY value
                 * @property {number} TARGET_TYPE_SERVICE=8 TARGET_TYPE_SERVICE value
                 * @property {number} TARGET_TYPE_METHOD=9 TARGET_TYPE_METHOD value
                 */
                FieldOptions.OptionTargetType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "TARGET_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "TARGET_TYPE_FILE"] = 1;
                    values[valuesById[2] = "TARGET_TYPE_EXTENSION_RANGE"] = 2;
                    values[valuesById[3] = "TARGET_TYPE_MESSAGE"] = 3;
                    values[valuesById[4] = "TARGET_TYPE_FIELD"] = 4;
                    values[valuesById[5] = "TARGET_TYPE_ONEOF"] = 5;
                    values[valuesById[6] = "TARGET_TYPE_ENUM"] = 6;
                    values[valuesById[7] = "TARGET_TYPE_ENUM_ENTRY"] = 7;
                    values[valuesById[8] = "TARGET_TYPE_SERVICE"] = 8;
                    values[valuesById[9] = "TARGET_TYPE_METHOD"] = 9;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] EnumOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 6: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            return protobuf;
        })();
    
        google.iam = (function() {
    
            /**
             * Namespace iam.
             * @memberof google
             * @namespace
             */
            var iam = {};
    
            iam.v1 = (function() {
    
                /**
                 * Namespace v1.
                 * @memberof google.iam
                 * @namespace
                 */
                var v1 = {};
    
                v1.IAMPolicy = (function() {
    
                    /**
                     * Constructs a new IAMPolicy service.
                     * @memberof google.iam.v1
                     * @classdesc Represents a IAMPolicy
                     * @extends $protobuf.rpc.Service
                     * @constructor
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     */
                    function IAMPolicy(rpcImpl, requestDelimited, responseDelimited) {
                        $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                    }
    
                    (IAMPolicy.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = IAMPolicy;
    
                    /**
                     * Creates new IAMPolicy service using the specified rpc implementation.
                     * @function create
                     * @memberof google.iam.v1.IAMPolicy
                     * @static
                     * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                     * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                     * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                     * @returns {IAMPolicy} RPC service. Useful where requests and/or responses are streamed.
                     */
                    IAMPolicy.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                        return new this(rpcImpl, requestDelimited, responseDelimited);
                    };
    
                    /**
                     * Callback as used by {@link google.iam.v1.IAMPolicy|setIamPolicy}.
                     * @memberof google.iam.v1.IAMPolicy
                     * @typedef SetIamPolicyCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.iam.v1.Policy} [response] Policy
                     */
    
                    /**
                     * Calls SetIamPolicy.
                     * @function setIamPolicy
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                     * @param {google.iam.v1.IAMPolicy.SetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(IAMPolicy.prototype.setIamPolicy = function setIamPolicy(request, callback) {
                        return this.rpcCall(setIamPolicy, $root.google.iam.v1.SetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                    }, "name", { value: "SetIamPolicy" });
    
                    /**
                     * Calls SetIamPolicy.
                     * @function setIamPolicy
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.ISetIamPolicyRequest} request SetIamPolicyRequest message or plain object
                     * @returns {Promise<google.iam.v1.Policy>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.iam.v1.IAMPolicy|getIamPolicy}.
                     * @memberof google.iam.v1.IAMPolicy
                     * @typedef GetIamPolicyCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.iam.v1.Policy} [response] Policy
                     */
    
                    /**
                     * Calls GetIamPolicy.
                     * @function getIamPolicy
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                     * @param {google.iam.v1.IAMPolicy.GetIamPolicyCallback} callback Node-style callback called with the error, if any, and Policy
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(IAMPolicy.prototype.getIamPolicy = function getIamPolicy(request, callback) {
                        return this.rpcCall(getIamPolicy, $root.google.iam.v1.GetIamPolicyRequest, $root.google.iam.v1.Policy, request, callback);
                    }, "name", { value: "GetIamPolicy" });
    
                    /**
                     * Calls GetIamPolicy.
                     * @function getIamPolicy
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.IGetIamPolicyRequest} request GetIamPolicyRequest message or plain object
                     * @returns {Promise<google.iam.v1.Policy>} Promise
                     * @variation 2
                     */
    
                    /**
                     * Callback as used by {@link google.iam.v1.IAMPolicy|testIamPermissions}.
                     * @memberof google.iam.v1.IAMPolicy
                     * @typedef TestIamPermissionsCallback
                     * @type {function}
                     * @param {Error|null} error Error, if any
                     * @param {google.iam.v1.TestIamPermissionsResponse} [response] TestIamPermissionsResponse
                     */
    
                    /**
                     * Calls TestIamPermissions.
                     * @function testIamPermissions
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                     * @param {google.iam.v1.IAMPolicy.TestIamPermissionsCallback} callback Node-style callback called with the error, if any, and TestIamPermissionsResponse
                     * @returns {undefined}
                     * @variation 1
                     */
                    Object.defineProperty(IAMPolicy.prototype.testIamPermissions = function testIamPermissions(request, callback) {
                        return this.rpcCall(testIamPermissions, $root.google.iam.v1.TestIamPermissionsRequest, $root.google.iam.v1.TestIamPermissionsResponse, request, callback);
                    }, "name", { value: "TestIamPermissions" });
    
                    /**
                     * Calls TestIamPermissions.
                     * @function testIamPermissions
                     * @memberof google.iam.v1.IAMPolicy
                     * @instance
                     * @param {google.iam.v1.ITestIamPermissionsRequest} request TestIamPermissionsRequest message or plain object
                     * @returns {Promise<google.iam.v1.TestIamPermissionsResponse>} Promise
                     * @variation 2
                     */
    
                    return IAMPolicy;
                })();
    
                v1.SetIamPolicyRequest = (function() {
    
                    /**
                     * Properties of a SetIamPolicyRequest.
                     * @memberof google.iam.v1
                     * @interface ISetIamPolicyRequest
                     * @property {string|null} [resource] SetIamPolicyRequest resource
                     * @property {google.iam.v1.IPolicy|null} [policy] SetIamPolicyRequest policy
                     * @property {google.protobuf.IFieldMask|null} [updateMask] SetIamPolicyRequest updateMask
                     */
    
                    /**
                     * Constructs a new SetIamPolicyRequest.
                     * @memberof google.iam.v1
                     * @classdesc Represents a SetIamPolicyRequest.
                     * @implements ISetIamPolicyRequest
                     * @constructor
                     * @param {google.iam.v1.ISetIamPolicyRequest=} [properties] Properties to set
                     */
                    function SetIamPolicyRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * SetIamPolicyRequest resource.
                     * @member {string} resource
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @instance
                     */
                    SetIamPolicyRequest.prototype.resource = "";
    
                    /**
                     * SetIamPolicyRequest policy.
                     * @member {google.iam.v1.IPolicy|null|undefined} policy
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @instance
                     */
                    SetIamPolicyRequest.prototype.policy = null;
    
                    /**
                     * SetIamPolicyRequest updateMask.
                     * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @instance
                     */
                    SetIamPolicyRequest.prototype.updateMask = null;
    
                    /**
                     * Creates a new SetIamPolicyRequest instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.ISetIamPolicyRequest=} [properties] Properties to set
                     * @returns {google.iam.v1.SetIamPolicyRequest} SetIamPolicyRequest instance
                     */
                    SetIamPolicyRequest.create = function create(properties) {
                        return new SetIamPolicyRequest(properties);
                    };
    
                    /**
                     * Encodes the specified SetIamPolicyRequest message. Does not implicitly {@link google.iam.v1.SetIamPolicyRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.ISetIamPolicyRequest} message SetIamPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetIamPolicyRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                        if (message.policy != null && Object.hasOwnProperty.call(message, "policy"))
                            $root.google.iam.v1.Policy.encode(message.policy, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                            $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified SetIamPolicyRequest message, length delimited. Does not implicitly {@link google.iam.v1.SetIamPolicyRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.ISetIamPolicyRequest} message SetIamPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    SetIamPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a SetIamPolicyRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.SetIamPolicyRequest} SetIamPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetIamPolicyRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.SetIamPolicyRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.resource = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.policy = $root.google.iam.v1.Policy.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a SetIamPolicyRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.SetIamPolicyRequest} SetIamPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    SetIamPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a SetIamPolicyRequest message.
                     * @function verify
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    SetIamPolicyRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            if (!$util.isString(message.resource))
                                return "resource: string expected";
                        if (message.policy != null && message.hasOwnProperty("policy")) {
                            var error = $root.google.iam.v1.Policy.verify(message.policy);
                            if (error)
                                return "policy." + error;
                        }
                        if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                            var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                            if (error)
                                return "updateMask." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a SetIamPolicyRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.SetIamPolicyRequest} SetIamPolicyRequest
                     */
                    SetIamPolicyRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.SetIamPolicyRequest)
                            return object;
                        var message = new $root.google.iam.v1.SetIamPolicyRequest();
                        if (object.resource != null)
                            message.resource = String(object.resource);
                        if (object.policy != null) {
                            if (typeof object.policy !== "object")
                                throw TypeError(".google.iam.v1.SetIamPolicyRequest.policy: object expected");
                            message.policy = $root.google.iam.v1.Policy.fromObject(object.policy);
                        }
                        if (object.updateMask != null) {
                            if (typeof object.updateMask !== "object")
                                throw TypeError(".google.iam.v1.SetIamPolicyRequest.updateMask: object expected");
                            message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a SetIamPolicyRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.SetIamPolicyRequest} message SetIamPolicyRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    SetIamPolicyRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.resource = "";
                            object.policy = null;
                            object.updateMask = null;
                        }
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            object.resource = message.resource;
                        if (message.policy != null && message.hasOwnProperty("policy"))
                            object.policy = $root.google.iam.v1.Policy.toObject(message.policy, options);
                        if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                            object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                        return object;
                    };
    
                    /**
                     * Converts this SetIamPolicyRequest to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    SetIamPolicyRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for SetIamPolicyRequest
                     * @function getTypeUrl
                     * @memberof google.iam.v1.SetIamPolicyRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    SetIamPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.SetIamPolicyRequest";
                    };
    
                    return SetIamPolicyRequest;
                })();
    
                v1.GetIamPolicyRequest = (function() {
    
                    /**
                     * Properties of a GetIamPolicyRequest.
                     * @memberof google.iam.v1
                     * @interface IGetIamPolicyRequest
                     * @property {string|null} [resource] GetIamPolicyRequest resource
                     * @property {google.iam.v1.IGetPolicyOptions|null} [options] GetIamPolicyRequest options
                     */
    
                    /**
                     * Constructs a new GetIamPolicyRequest.
                     * @memberof google.iam.v1
                     * @classdesc Represents a GetIamPolicyRequest.
                     * @implements IGetIamPolicyRequest
                     * @constructor
                     * @param {google.iam.v1.IGetIamPolicyRequest=} [properties] Properties to set
                     */
                    function GetIamPolicyRequest(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetIamPolicyRequest resource.
                     * @member {string} resource
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @instance
                     */
                    GetIamPolicyRequest.prototype.resource = "";
    
                    /**
                     * GetIamPolicyRequest options.
                     * @member {google.iam.v1.IGetPolicyOptions|null|undefined} options
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @instance
                     */
                    GetIamPolicyRequest.prototype.options = null;
    
                    /**
                     * Creates a new GetIamPolicyRequest instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.IGetIamPolicyRequest=} [properties] Properties to set
                     * @returns {google.iam.v1.GetIamPolicyRequest} GetIamPolicyRequest instance
                     */
                    GetIamPolicyRequest.create = function create(properties) {
                        return new GetIamPolicyRequest(properties);
                    };
    
                    /**
                     * Encodes the specified GetIamPolicyRequest message. Does not implicitly {@link google.iam.v1.GetIamPolicyRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.IGetIamPolicyRequest} message GetIamPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetIamPolicyRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.iam.v1.GetPolicyOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetIamPolicyRequest message, length delimited. Does not implicitly {@link google.iam.v1.GetIamPolicyRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.IGetIamPolicyRequest} message GetIamPolicyRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetIamPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetIamPolicyRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.GetIamPolicyRequest} GetIamPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetIamPolicyRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.GetIamPolicyRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.resource = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.options = $root.google.iam.v1.GetPolicyOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetIamPolicyRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.GetIamPolicyRequest} GetIamPolicyRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetIamPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetIamPolicyRequest message.
                     * @function verify
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetIamPolicyRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            if (!$util.isString(message.resource))
                                return "resource: string expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.iam.v1.GetPolicyOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a GetIamPolicyRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.GetIamPolicyRequest} GetIamPolicyRequest
                     */
                    GetIamPolicyRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.GetIamPolicyRequest)
                            return object;
                        var message = new $root.google.iam.v1.GetIamPolicyRequest();
                        if (object.resource != null)
                            message.resource = String(object.resource);
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.iam.v1.GetIamPolicyRequest.options: object expected");
                            message.options = $root.google.iam.v1.GetPolicyOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetIamPolicyRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {google.iam.v1.GetIamPolicyRequest} message GetIamPolicyRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetIamPolicyRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.resource = "";
                            object.options = null;
                        }
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            object.resource = message.resource;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.iam.v1.GetPolicyOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this GetIamPolicyRequest to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetIamPolicyRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetIamPolicyRequest
                     * @function getTypeUrl
                     * @memberof google.iam.v1.GetIamPolicyRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetIamPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.GetIamPolicyRequest";
                    };
    
                    return GetIamPolicyRequest;
                })();
    
                v1.TestIamPermissionsRequest = (function() {
    
                    /**
                     * Properties of a TestIamPermissionsRequest.
                     * @memberof google.iam.v1
                     * @interface ITestIamPermissionsRequest
                     * @property {string|null} [resource] TestIamPermissionsRequest resource
                     * @property {Array.<string>|null} [permissions] TestIamPermissionsRequest permissions
                     */
    
                    /**
                     * Constructs a new TestIamPermissionsRequest.
                     * @memberof google.iam.v1
                     * @classdesc Represents a TestIamPermissionsRequest.
                     * @implements ITestIamPermissionsRequest
                     * @constructor
                     * @param {google.iam.v1.ITestIamPermissionsRequest=} [properties] Properties to set
                     */
                    function TestIamPermissionsRequest(properties) {
                        this.permissions = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TestIamPermissionsRequest resource.
                     * @member {string} resource
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @instance
                     */
                    TestIamPermissionsRequest.prototype.resource = "";
    
                    /**
                     * TestIamPermissionsRequest permissions.
                     * @member {Array.<string>} permissions
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @instance
                     */
                    TestIamPermissionsRequest.prototype.permissions = $util.emptyArray;
    
                    /**
                     * Creates a new TestIamPermissionsRequest instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsRequest=} [properties] Properties to set
                     * @returns {google.iam.v1.TestIamPermissionsRequest} TestIamPermissionsRequest instance
                     */
                    TestIamPermissionsRequest.create = function create(properties) {
                        return new TestIamPermissionsRequest(properties);
                    };
    
                    /**
                     * Encodes the specified TestIamPermissionsRequest message. Does not implicitly {@link google.iam.v1.TestIamPermissionsRequest.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsRequest} message TestIamPermissionsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TestIamPermissionsRequest.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.resource);
                        if (message.permissions != null && message.permissions.length)
                            for (var i = 0; i < message.permissions.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.permissions[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TestIamPermissionsRequest message, length delimited. Does not implicitly {@link google.iam.v1.TestIamPermissionsRequest.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsRequest} message TestIamPermissionsRequest message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TestIamPermissionsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TestIamPermissionsRequest message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.TestIamPermissionsRequest} TestIamPermissionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TestIamPermissionsRequest.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.TestIamPermissionsRequest();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.resource = reader.string();
                                    break;
                                }
                            case 2: {
                                    if (!(message.permissions && message.permissions.length))
                                        message.permissions = [];
                                    message.permissions.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TestIamPermissionsRequest message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.TestIamPermissionsRequest} TestIamPermissionsRequest
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TestIamPermissionsRequest.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TestIamPermissionsRequest message.
                     * @function verify
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TestIamPermissionsRequest.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            if (!$util.isString(message.resource))
                                return "resource: string expected";
                        if (message.permissions != null && message.hasOwnProperty("permissions")) {
                            if (!Array.isArray(message.permissions))
                                return "permissions: array expected";
                            for (var i = 0; i < message.permissions.length; ++i)
                                if (!$util.isString(message.permissions[i]))
                                    return "permissions: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TestIamPermissionsRequest message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.TestIamPermissionsRequest} TestIamPermissionsRequest
                     */
                    TestIamPermissionsRequest.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.TestIamPermissionsRequest)
                            return object;
                        var message = new $root.google.iam.v1.TestIamPermissionsRequest();
                        if (object.resource != null)
                            message.resource = String(object.resource);
                        if (object.permissions) {
                            if (!Array.isArray(object.permissions))
                                throw TypeError(".google.iam.v1.TestIamPermissionsRequest.permissions: array expected");
                            message.permissions = [];
                            for (var i = 0; i < object.permissions.length; ++i)
                                message.permissions[i] = String(object.permissions[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TestIamPermissionsRequest message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {google.iam.v1.TestIamPermissionsRequest} message TestIamPermissionsRequest
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TestIamPermissionsRequest.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.permissions = [];
                        if (options.defaults)
                            object.resource = "";
                        if (message.resource != null && message.hasOwnProperty("resource"))
                            object.resource = message.resource;
                        if (message.permissions && message.permissions.length) {
                            object.permissions = [];
                            for (var j = 0; j < message.permissions.length; ++j)
                                object.permissions[j] = message.permissions[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this TestIamPermissionsRequest to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TestIamPermissionsRequest.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TestIamPermissionsRequest
                     * @function getTypeUrl
                     * @memberof google.iam.v1.TestIamPermissionsRequest
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TestIamPermissionsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.TestIamPermissionsRequest";
                    };
    
                    return TestIamPermissionsRequest;
                })();
    
                v1.TestIamPermissionsResponse = (function() {
    
                    /**
                     * Properties of a TestIamPermissionsResponse.
                     * @memberof google.iam.v1
                     * @interface ITestIamPermissionsResponse
                     * @property {Array.<string>|null} [permissions] TestIamPermissionsResponse permissions
                     */
    
                    /**
                     * Constructs a new TestIamPermissionsResponse.
                     * @memberof google.iam.v1
                     * @classdesc Represents a TestIamPermissionsResponse.
                     * @implements ITestIamPermissionsResponse
                     * @constructor
                     * @param {google.iam.v1.ITestIamPermissionsResponse=} [properties] Properties to set
                     */
                    function TestIamPermissionsResponse(properties) {
                        this.permissions = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * TestIamPermissionsResponse permissions.
                     * @member {Array.<string>} permissions
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @instance
                     */
                    TestIamPermissionsResponse.prototype.permissions = $util.emptyArray;
    
                    /**
                     * Creates a new TestIamPermissionsResponse instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsResponse=} [properties] Properties to set
                     * @returns {google.iam.v1.TestIamPermissionsResponse} TestIamPermissionsResponse instance
                     */
                    TestIamPermissionsResponse.create = function create(properties) {
                        return new TestIamPermissionsResponse(properties);
                    };
    
                    /**
                     * Encodes the specified TestIamPermissionsResponse message. Does not implicitly {@link google.iam.v1.TestIamPermissionsResponse.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsResponse} message TestIamPermissionsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TestIamPermissionsResponse.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.permissions != null && message.permissions.length)
                            for (var i = 0; i < message.permissions.length; ++i)
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.permissions[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified TestIamPermissionsResponse message, length delimited. Does not implicitly {@link google.iam.v1.TestIamPermissionsResponse.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {google.iam.v1.ITestIamPermissionsResponse} message TestIamPermissionsResponse message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    TestIamPermissionsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a TestIamPermissionsResponse message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.TestIamPermissionsResponse} TestIamPermissionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TestIamPermissionsResponse.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.TestIamPermissionsResponse();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.permissions && message.permissions.length))
                                        message.permissions = [];
                                    message.permissions.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a TestIamPermissionsResponse message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.TestIamPermissionsResponse} TestIamPermissionsResponse
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    TestIamPermissionsResponse.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a TestIamPermissionsResponse message.
                     * @function verify
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    TestIamPermissionsResponse.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.permissions != null && message.hasOwnProperty("permissions")) {
                            if (!Array.isArray(message.permissions))
                                return "permissions: array expected";
                            for (var i = 0; i < message.permissions.length; ++i)
                                if (!$util.isString(message.permissions[i]))
                                    return "permissions: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a TestIamPermissionsResponse message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.TestIamPermissionsResponse} TestIamPermissionsResponse
                     */
                    TestIamPermissionsResponse.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.TestIamPermissionsResponse)
                            return object;
                        var message = new $root.google.iam.v1.TestIamPermissionsResponse();
                        if (object.permissions) {
                            if (!Array.isArray(object.permissions))
                                throw TypeError(".google.iam.v1.TestIamPermissionsResponse.permissions: array expected");
                            message.permissions = [];
                            for (var i = 0; i < object.permissions.length; ++i)
                                message.permissions[i] = String(object.permissions[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a TestIamPermissionsResponse message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {google.iam.v1.TestIamPermissionsResponse} message TestIamPermissionsResponse
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    TestIamPermissionsResponse.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.permissions = [];
                        if (message.permissions && message.permissions.length) {
                            object.permissions = [];
                            for (var j = 0; j < message.permissions.length; ++j)
                                object.permissions[j] = message.permissions[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this TestIamPermissionsResponse to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    TestIamPermissionsResponse.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for TestIamPermissionsResponse
                     * @function getTypeUrl
                     * @memberof google.iam.v1.TestIamPermissionsResponse
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    TestIamPermissionsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.TestIamPermissionsResponse";
                    };
    
                    return TestIamPermissionsResponse;
                })();
    
                v1.GetPolicyOptions = (function() {
    
                    /**
                     * Properties of a GetPolicyOptions.
                     * @memberof google.iam.v1
                     * @interface IGetPolicyOptions
                     * @property {number|null} [requestedPolicyVersion] GetPolicyOptions requestedPolicyVersion
                     */
    
                    /**
                     * Constructs a new GetPolicyOptions.
                     * @memberof google.iam.v1
                     * @classdesc Represents a GetPolicyOptions.
                     * @implements IGetPolicyOptions
                     * @constructor
                     * @param {google.iam.v1.IGetPolicyOptions=} [properties] Properties to set
                     */
                    function GetPolicyOptions(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * GetPolicyOptions requestedPolicyVersion.
                     * @member {number} requestedPolicyVersion
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @instance
                     */
                    GetPolicyOptions.prototype.requestedPolicyVersion = 0;
    
                    /**
                     * Creates a new GetPolicyOptions instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {google.iam.v1.IGetPolicyOptions=} [properties] Properties to set
                     * @returns {google.iam.v1.GetPolicyOptions} GetPolicyOptions instance
                     */
                    GetPolicyOptions.create = function create(properties) {
                        return new GetPolicyOptions(properties);
                    };
    
                    /**
                     * Encodes the specified GetPolicyOptions message. Does not implicitly {@link google.iam.v1.GetPolicyOptions.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {google.iam.v1.IGetPolicyOptions} message GetPolicyOptions message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetPolicyOptions.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.requestedPolicyVersion != null && Object.hasOwnProperty.call(message, "requestedPolicyVersion"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.requestedPolicyVersion);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified GetPolicyOptions message, length delimited. Does not implicitly {@link google.iam.v1.GetPolicyOptions.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {google.iam.v1.IGetPolicyOptions} message GetPolicyOptions message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    GetPolicyOptions.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a GetPolicyOptions message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.GetPolicyOptions} GetPolicyOptions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetPolicyOptions.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.GetPolicyOptions();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.requestedPolicyVersion = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a GetPolicyOptions message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.GetPolicyOptions} GetPolicyOptions
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    GetPolicyOptions.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a GetPolicyOptions message.
                     * @function verify
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    GetPolicyOptions.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.requestedPolicyVersion != null && message.hasOwnProperty("requestedPolicyVersion"))
                            if (!$util.isInteger(message.requestedPolicyVersion))
                                return "requestedPolicyVersion: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a GetPolicyOptions message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.GetPolicyOptions} GetPolicyOptions
                     */
                    GetPolicyOptions.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.GetPolicyOptions)
                            return object;
                        var message = new $root.google.iam.v1.GetPolicyOptions();
                        if (object.requestedPolicyVersion != null)
                            message.requestedPolicyVersion = object.requestedPolicyVersion | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a GetPolicyOptions message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {google.iam.v1.GetPolicyOptions} message GetPolicyOptions
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    GetPolicyOptions.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults)
                            object.requestedPolicyVersion = 0;
                        if (message.requestedPolicyVersion != null && message.hasOwnProperty("requestedPolicyVersion"))
                            object.requestedPolicyVersion = message.requestedPolicyVersion;
                        return object;
                    };
    
                    /**
                     * Converts this GetPolicyOptions to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    GetPolicyOptions.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for GetPolicyOptions
                     * @function getTypeUrl
                     * @memberof google.iam.v1.GetPolicyOptions
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    GetPolicyOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.GetPolicyOptions";
                    };
    
                    return GetPolicyOptions;
                })();
    
                v1.Policy = (function() {
    
                    /**
                     * Properties of a Policy.
                     * @memberof google.iam.v1
                     * @interface IPolicy
                     * @property {number|null} [version] Policy version
                     * @property {Array.<google.iam.v1.IBinding>|null} [bindings] Policy bindings
                     * @property {Array.<google.iam.v1.IAuditConfig>|null} [auditConfigs] Policy auditConfigs
                     * @property {Uint8Array|null} [etag] Policy etag
                     */
    
                    /**
                     * Constructs a new Policy.
                     * @memberof google.iam.v1
                     * @classdesc Represents a Policy.
                     * @implements IPolicy
                     * @constructor
                     * @param {google.iam.v1.IPolicy=} [properties] Properties to set
                     */
                    function Policy(properties) {
                        this.bindings = [];
                        this.auditConfigs = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Policy version.
                     * @member {number} version
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.version = 0;
    
                    /**
                     * Policy bindings.
                     * @member {Array.<google.iam.v1.IBinding>} bindings
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.bindings = $util.emptyArray;
    
                    /**
                     * Policy auditConfigs.
                     * @member {Array.<google.iam.v1.IAuditConfig>} auditConfigs
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.auditConfigs = $util.emptyArray;
    
                    /**
                     * Policy etag.
                     * @member {Uint8Array} etag
                     * @memberof google.iam.v1.Policy
                     * @instance
                     */
                    Policy.prototype.etag = $util.newBuffer([]);
    
                    /**
                     * Creates a new Policy instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.IPolicy=} [properties] Properties to set
                     * @returns {google.iam.v1.Policy} Policy instance
                     */
                    Policy.create = function create(properties) {
                        return new Policy(properties);
                    };
    
                    /**
                     * Encodes the specified Policy message. Does not implicitly {@link google.iam.v1.Policy.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.IPolicy} message Policy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Policy.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.version);
                        if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                            writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.etag);
                        if (message.bindings != null && message.bindings.length)
                            for (var i = 0; i < message.bindings.length; ++i)
                                $root.google.iam.v1.Binding.encode(message.bindings[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.auditConfigs != null && message.auditConfigs.length)
                            for (var i = 0; i < message.auditConfigs.length; ++i)
                                $root.google.iam.v1.AuditConfig.encode(message.auditConfigs[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Policy message, length delimited. Does not implicitly {@link google.iam.v1.Policy.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.IPolicy} message Policy message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Policy.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Policy message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.Policy} Policy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Policy.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.Policy();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.version = reader.int32();
                                    break;
                                }
                            case 4: {
                                    if (!(message.bindings && message.bindings.length))
                                        message.bindings = [];
                                    message.bindings.push($root.google.iam.v1.Binding.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 6: {
                                    if (!(message.auditConfigs && message.auditConfigs.length))
                                        message.auditConfigs = [];
                                    message.auditConfigs.push($root.google.iam.v1.AuditConfig.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 3: {
                                    message.etag = reader.bytes();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Policy message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.Policy} Policy
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Policy.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Policy message.
                     * @function verify
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Policy.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.version != null && message.hasOwnProperty("version"))
                            if (!$util.isInteger(message.version))
                                return "version: integer expected";
                        if (message.bindings != null && message.hasOwnProperty("bindings")) {
                            if (!Array.isArray(message.bindings))
                                return "bindings: array expected";
                            for (var i = 0; i < message.bindings.length; ++i) {
                                var error = $root.google.iam.v1.Binding.verify(message.bindings[i]);
                                if (error)
                                    return "bindings." + error;
                            }
                        }
                        if (message.auditConfigs != null && message.hasOwnProperty("auditConfigs")) {
                            if (!Array.isArray(message.auditConfigs))
                                return "auditConfigs: array expected";
                            for (var i = 0; i < message.auditConfigs.length; ++i) {
                                var error = $root.google.iam.v1.AuditConfig.verify(message.auditConfigs[i]);
                                if (error)
                                    return "auditConfigs." + error;
                            }
                        }
                        if (message.etag != null && message.hasOwnProperty("etag"))
                            if (!(message.etag && typeof message.etag.length === "number" || $util.isString(message.etag)))
                                return "etag: buffer expected";
                        return null;
                    };
    
                    /**
                     * Creates a Policy message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.Policy} Policy
                     */
                    Policy.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.Policy)
                            return object;
                        var message = new $root.google.iam.v1.Policy();
                        if (object.version != null)
                            message.version = object.version | 0;
                        if (object.bindings) {
                            if (!Array.isArray(object.bindings))
                                throw TypeError(".google.iam.v1.Policy.bindings: array expected");
                            message.bindings = [];
                            for (var i = 0; i < object.bindings.length; ++i) {
                                if (typeof object.bindings[i] !== "object")
                                    throw TypeError(".google.iam.v1.Policy.bindings: object expected");
                                message.bindings[i] = $root.google.iam.v1.Binding.fromObject(object.bindings[i]);
                            }
                        }
                        if (object.auditConfigs) {
                            if (!Array.isArray(object.auditConfigs))
                                throw TypeError(".google.iam.v1.Policy.auditConfigs: array expected");
                            message.auditConfigs = [];
                            for (var i = 0; i < object.auditConfigs.length; ++i) {
                                if (typeof object.auditConfigs[i] !== "object")
                                    throw TypeError(".google.iam.v1.Policy.auditConfigs: object expected");
                                message.auditConfigs[i] = $root.google.iam.v1.AuditConfig.fromObject(object.auditConfigs[i]);
                            }
                        }
                        if (object.etag != null)
                            if (typeof object.etag === "string")
                                $util.base64.decode(object.etag, message.etag = $util.newBuffer($util.base64.length(object.etag)), 0);
                            else if (object.etag.length >= 0)
                                message.etag = object.etag;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Policy message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {google.iam.v1.Policy} message Policy
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Policy.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.bindings = [];
                            object.auditConfigs = [];
                        }
                        if (options.defaults) {
                            object.version = 0;
                            if (options.bytes === String)
                                object.etag = "";
                            else {
                                object.etag = [];
                                if (options.bytes !== Array)
                                    object.etag = $util.newBuffer(object.etag);
                            }
                        }
                        if (message.version != null && message.hasOwnProperty("version"))
                            object.version = message.version;
                        if (message.etag != null && message.hasOwnProperty("etag"))
                            object.etag = options.bytes === String ? $util.base64.encode(message.etag, 0, message.etag.length) : options.bytes === Array ? Array.prototype.slice.call(message.etag) : message.etag;
                        if (message.bindings && message.bindings.length) {
                            object.bindings = [];
                            for (var j = 0; j < message.bindings.length; ++j)
                                object.bindings[j] = $root.google.iam.v1.Binding.toObject(message.bindings[j], options);
                        }
                        if (message.auditConfigs && message.auditConfigs.length) {
                            object.auditConfigs = [];
                            for (var j = 0; j < message.auditConfigs.length; ++j)
                                object.auditConfigs[j] = $root.google.iam.v1.AuditConfig.toObject(message.auditConfigs[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Policy to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.Policy
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Policy.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Policy
                     * @function getTypeUrl
                     * @memberof google.iam.v1.Policy
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Policy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.Policy";
                    };
    
                    return Policy;
                })();
    
                v1.Binding = (function() {
    
                    /**
                     * Properties of a Binding.
                     * @memberof google.iam.v1
                     * @interface IBinding
                     * @property {string|null} [role] Binding role
                     * @property {Array.<string>|null} [members] Binding members
                     * @property {google.type.IExpr|null} [condition] Binding condition
                     */
    
                    /**
                     * Constructs a new Binding.
                     * @memberof google.iam.v1
                     * @classdesc Represents a Binding.
                     * @implements IBinding
                     * @constructor
                     * @param {google.iam.v1.IBinding=} [properties] Properties to set
                     */
                    function Binding(properties) {
                        this.members = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Binding role.
                     * @member {string} role
                     * @memberof google.iam.v1.Binding
                     * @instance
                     */
                    Binding.prototype.role = "";
    
                    /**
                     * Binding members.
                     * @member {Array.<string>} members
                     * @memberof google.iam.v1.Binding
                     * @instance
                     */
                    Binding.prototype.members = $util.emptyArray;
    
                    /**
                     * Binding condition.
                     * @member {google.type.IExpr|null|undefined} condition
                     * @memberof google.iam.v1.Binding
                     * @instance
                     */
                    Binding.prototype.condition = null;
    
                    /**
                     * Creates a new Binding instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.IBinding=} [properties] Properties to set
                     * @returns {google.iam.v1.Binding} Binding instance
                     */
                    Binding.create = function create(properties) {
                        return new Binding(properties);
                    };
    
                    /**
                     * Encodes the specified Binding message. Does not implicitly {@link google.iam.v1.Binding.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.IBinding} message Binding message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Binding.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.role != null && Object.hasOwnProperty.call(message, "role"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.role);
                        if (message.members != null && message.members.length)
                            for (var i = 0; i < message.members.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.members[i]);
                        if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                            $root.google.type.Expr.encode(message.condition, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Binding message, length delimited. Does not implicitly {@link google.iam.v1.Binding.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.IBinding} message Binding message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Binding.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Binding message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.Binding} Binding
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Binding.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.Binding();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.role = reader.string();
                                    break;
                                }
                            case 2: {
                                    if (!(message.members && message.members.length))
                                        message.members = [];
                                    message.members.push(reader.string());
                                    break;
                                }
                            case 3: {
                                    message.condition = $root.google.type.Expr.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Binding message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.Binding} Binding
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Binding.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Binding message.
                     * @function verify
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Binding.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.role != null && message.hasOwnProperty("role"))
                            if (!$util.isString(message.role))
                                return "role: string expected";
                        if (message.members != null && message.hasOwnProperty("members")) {
                            if (!Array.isArray(message.members))
                                return "members: array expected";
                            for (var i = 0; i < message.members.length; ++i)
                                if (!$util.isString(message.members[i]))
                                    return "members: string[] expected";
                        }
                        if (message.condition != null && message.hasOwnProperty("condition")) {
                            var error = $root.google.type.Expr.verify(message.condition);
                            if (error)
                                return "condition." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Binding message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.Binding} Binding
                     */
                    Binding.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.Binding)
                            return object;
                        var message = new $root.google.iam.v1.Binding();
                        if (object.role != null)
                            message.role = String(object.role);
                        if (object.members) {
                            if (!Array.isArray(object.members))
                                throw TypeError(".google.iam.v1.Binding.members: array expected");
                            message.members = [];
                            for (var i = 0; i < object.members.length; ++i)
                                message.members[i] = String(object.members[i]);
                        }
                        if (object.condition != null) {
                            if (typeof object.condition !== "object")
                                throw TypeError(".google.iam.v1.Binding.condition: object expected");
                            message.condition = $root.google.type.Expr.fromObject(object.condition);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Binding message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {google.iam.v1.Binding} message Binding
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Binding.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.members = [];
                        if (options.defaults) {
                            object.role = "";
                            object.condition = null;
                        }
                        if (message.role != null && message.hasOwnProperty("role"))
                            object.role = message.role;
                        if (message.members && message.members.length) {
                            object.members = [];
                            for (var j = 0; j < message.members.length; ++j)
                                object.members[j] = message.members[j];
                        }
                        if (message.condition != null && message.hasOwnProperty("condition"))
                            object.condition = $root.google.type.Expr.toObject(message.condition, options);
                        return object;
                    };
    
                    /**
                     * Converts this Binding to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.Binding
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Binding.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Binding
                     * @function getTypeUrl
                     * @memberof google.iam.v1.Binding
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Binding.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.Binding";
                    };
    
                    return Binding;
                })();
    
                v1.AuditConfig = (function() {
    
                    /**
                     * Properties of an AuditConfig.
                     * @memberof google.iam.v1
                     * @interface IAuditConfig
                     * @property {string|null} [service] AuditConfig service
                     * @property {Array.<google.iam.v1.IAuditLogConfig>|null} [auditLogConfigs] AuditConfig auditLogConfigs
                     */
    
                    /**
                     * Constructs a new AuditConfig.
                     * @memberof google.iam.v1
                     * @classdesc Represents an AuditConfig.
                     * @implements IAuditConfig
                     * @constructor
                     * @param {google.iam.v1.IAuditConfig=} [properties] Properties to set
                     */
                    function AuditConfig(properties) {
                        this.auditLogConfigs = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuditConfig service.
                     * @member {string} service
                     * @memberof google.iam.v1.AuditConfig
                     * @instance
                     */
                    AuditConfig.prototype.service = "";
    
                    /**
                     * AuditConfig auditLogConfigs.
                     * @member {Array.<google.iam.v1.IAuditLogConfig>} auditLogConfigs
                     * @memberof google.iam.v1.AuditConfig
                     * @instance
                     */
                    AuditConfig.prototype.auditLogConfigs = $util.emptyArray;
    
                    /**
                     * Creates a new AuditConfig instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.IAuditConfig=} [properties] Properties to set
                     * @returns {google.iam.v1.AuditConfig} AuditConfig instance
                     */
                    AuditConfig.create = function create(properties) {
                        return new AuditConfig(properties);
                    };
    
                    /**
                     * Encodes the specified AuditConfig message. Does not implicitly {@link google.iam.v1.AuditConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.IAuditConfig} message AuditConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.service);
                        if (message.auditLogConfigs != null && message.auditLogConfigs.length)
                            for (var i = 0; i < message.auditLogConfigs.length; ++i)
                                $root.google.iam.v1.AuditLogConfig.encode(message.auditLogConfigs[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuditConfig message, length delimited. Does not implicitly {@link google.iam.v1.AuditConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.IAuditConfig} message AuditConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuditConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.AuditConfig} AuditConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.AuditConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.service = reader.string();
                                    break;
                                }
                            case 3: {
                                    if (!(message.auditLogConfigs && message.auditLogConfigs.length))
                                        message.auditLogConfigs = [];
                                    message.auditLogConfigs.push($root.google.iam.v1.AuditLogConfig.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuditConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.AuditConfig} AuditConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuditConfig message.
                     * @function verify
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuditConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.service != null && message.hasOwnProperty("service"))
                            if (!$util.isString(message.service))
                                return "service: string expected";
                        if (message.auditLogConfigs != null && message.hasOwnProperty("auditLogConfigs")) {
                            if (!Array.isArray(message.auditLogConfigs))
                                return "auditLogConfigs: array expected";
                            for (var i = 0; i < message.auditLogConfigs.length; ++i) {
                                var error = $root.google.iam.v1.AuditLogConfig.verify(message.auditLogConfigs[i]);
                                if (error)
                                    return "auditLogConfigs." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AuditConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.AuditConfig} AuditConfig
                     */
                    AuditConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.AuditConfig)
                            return object;
                        var message = new $root.google.iam.v1.AuditConfig();
                        if (object.service != null)
                            message.service = String(object.service);
                        if (object.auditLogConfigs) {
                            if (!Array.isArray(object.auditLogConfigs))
                                throw TypeError(".google.iam.v1.AuditConfig.auditLogConfigs: array expected");
                            message.auditLogConfigs = [];
                            for (var i = 0; i < object.auditLogConfigs.length; ++i) {
                                if (typeof object.auditLogConfigs[i] !== "object")
                                    throw TypeError(".google.iam.v1.AuditConfig.auditLogConfigs: object expected");
                                message.auditLogConfigs[i] = $root.google.iam.v1.AuditLogConfig.fromObject(object.auditLogConfigs[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuditConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {google.iam.v1.AuditConfig} message AuditConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuditConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.auditLogConfigs = [];
                        if (options.defaults)
                            object.service = "";
                        if (message.service != null && message.hasOwnProperty("service"))
                            object.service = message.service;
                        if (message.auditLogConfigs && message.auditLogConfigs.length) {
                            object.auditLogConfigs = [];
                            for (var j = 0; j < message.auditLogConfigs.length; ++j)
                                object.auditLogConfigs[j] = $root.google.iam.v1.AuditLogConfig.toObject(message.auditLogConfigs[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this AuditConfig to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.AuditConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuditConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuditConfig
                     * @function getTypeUrl
                     * @memberof google.iam.v1.AuditConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuditConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.AuditConfig";
                    };
    
                    return AuditConfig;
                })();
    
                v1.AuditLogConfig = (function() {
    
                    /**
                     * Properties of an AuditLogConfig.
                     * @memberof google.iam.v1
                     * @interface IAuditLogConfig
                     * @property {google.iam.v1.AuditLogConfig.LogType|null} [logType] AuditLogConfig logType
                     * @property {Array.<string>|null} [exemptedMembers] AuditLogConfig exemptedMembers
                     */
    
                    /**
                     * Constructs a new AuditLogConfig.
                     * @memberof google.iam.v1
                     * @classdesc Represents an AuditLogConfig.
                     * @implements IAuditLogConfig
                     * @constructor
                     * @param {google.iam.v1.IAuditLogConfig=} [properties] Properties to set
                     */
                    function AuditLogConfig(properties) {
                        this.exemptedMembers = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuditLogConfig logType.
                     * @member {google.iam.v1.AuditLogConfig.LogType} logType
                     * @memberof google.iam.v1.AuditLogConfig
                     * @instance
                     */
                    AuditLogConfig.prototype.logType = 0;
    
                    /**
                     * AuditLogConfig exemptedMembers.
                     * @member {Array.<string>} exemptedMembers
                     * @memberof google.iam.v1.AuditLogConfig
                     * @instance
                     */
                    AuditLogConfig.prototype.exemptedMembers = $util.emptyArray;
    
                    /**
                     * Creates a new AuditLogConfig instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.IAuditLogConfig=} [properties] Properties to set
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig instance
                     */
                    AuditLogConfig.create = function create(properties) {
                        return new AuditLogConfig(properties);
                    };
    
                    /**
                     * Encodes the specified AuditLogConfig message. Does not implicitly {@link google.iam.v1.AuditLogConfig.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.IAuditLogConfig} message AuditLogConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditLogConfig.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.logType != null && Object.hasOwnProperty.call(message, "logType"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.logType);
                        if (message.exemptedMembers != null && message.exemptedMembers.length)
                            for (var i = 0; i < message.exemptedMembers.length; ++i)
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.exemptedMembers[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuditLogConfig message, length delimited. Does not implicitly {@link google.iam.v1.AuditLogConfig.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.IAuditLogConfig} message AuditLogConfig message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditLogConfig.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuditLogConfig message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditLogConfig.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.AuditLogConfig();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.logType = reader.int32();
                                    break;
                                }
                            case 2: {
                                    if (!(message.exemptedMembers && message.exemptedMembers.length))
                                        message.exemptedMembers = [];
                                    message.exemptedMembers.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuditLogConfig message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditLogConfig.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuditLogConfig message.
                     * @function verify
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuditLogConfig.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            switch (message.logType) {
                            default:
                                return "logType: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                                break;
                            }
                        if (message.exemptedMembers != null && message.hasOwnProperty("exemptedMembers")) {
                            if (!Array.isArray(message.exemptedMembers))
                                return "exemptedMembers: array expected";
                            for (var i = 0; i < message.exemptedMembers.length; ++i)
                                if (!$util.isString(message.exemptedMembers[i]))
                                    return "exemptedMembers: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates an AuditLogConfig message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.AuditLogConfig} AuditLogConfig
                     */
                    AuditLogConfig.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.AuditLogConfig)
                            return object;
                        var message = new $root.google.iam.v1.AuditLogConfig();
                        switch (object.logType) {
                        default:
                            if (typeof object.logType === "number") {
                                message.logType = object.logType;
                                break;
                            }
                            break;
                        case "LOG_TYPE_UNSPECIFIED":
                        case 0:
                            message.logType = 0;
                            break;
                        case "ADMIN_READ":
                        case 1:
                            message.logType = 1;
                            break;
                        case "DATA_WRITE":
                        case 2:
                            message.logType = 2;
                            break;
                        case "DATA_READ":
                        case 3:
                            message.logType = 3;
                            break;
                        }
                        if (object.exemptedMembers) {
                            if (!Array.isArray(object.exemptedMembers))
                                throw TypeError(".google.iam.v1.AuditLogConfig.exemptedMembers: array expected");
                            message.exemptedMembers = [];
                            for (var i = 0; i < object.exemptedMembers.length; ++i)
                                message.exemptedMembers[i] = String(object.exemptedMembers[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuditLogConfig message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {google.iam.v1.AuditLogConfig} message AuditLogConfig
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuditLogConfig.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.exemptedMembers = [];
                        if (options.defaults)
                            object.logType = options.enums === String ? "LOG_TYPE_UNSPECIFIED" : 0;
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            object.logType = options.enums === String ? $root.google.iam.v1.AuditLogConfig.LogType[message.logType] === undefined ? message.logType : $root.google.iam.v1.AuditLogConfig.LogType[message.logType] : message.logType;
                        if (message.exemptedMembers && message.exemptedMembers.length) {
                            object.exemptedMembers = [];
                            for (var j = 0; j < message.exemptedMembers.length; ++j)
                                object.exemptedMembers[j] = message.exemptedMembers[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this AuditLogConfig to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.AuditLogConfig
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuditLogConfig.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuditLogConfig
                     * @function getTypeUrl
                     * @memberof google.iam.v1.AuditLogConfig
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuditLogConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.AuditLogConfig";
                    };
    
                    /**
                     * LogType enum.
                     * @name google.iam.v1.AuditLogConfig.LogType
                     * @enum {number}
                     * @property {number} LOG_TYPE_UNSPECIFIED=0 LOG_TYPE_UNSPECIFIED value
                     * @property {number} ADMIN_READ=1 ADMIN_READ value
                     * @property {number} DATA_WRITE=2 DATA_WRITE value
                     * @property {number} DATA_READ=3 DATA_READ value
                     */
                    AuditLogConfig.LogType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "LOG_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADMIN_READ"] = 1;
                        values[valuesById[2] = "DATA_WRITE"] = 2;
                        values[valuesById[3] = "DATA_READ"] = 3;
                        return values;
                    })();
    
                    return AuditLogConfig;
                })();
    
                v1.PolicyDelta = (function() {
    
                    /**
                     * Properties of a PolicyDelta.
                     * @memberof google.iam.v1
                     * @interface IPolicyDelta
                     * @property {Array.<google.iam.v1.IBindingDelta>|null} [bindingDeltas] PolicyDelta bindingDeltas
                     * @property {Array.<google.iam.v1.IAuditConfigDelta>|null} [auditConfigDeltas] PolicyDelta auditConfigDeltas
                     */
    
                    /**
                     * Constructs a new PolicyDelta.
                     * @memberof google.iam.v1
                     * @classdesc Represents a PolicyDelta.
                     * @implements IPolicyDelta
                     * @constructor
                     * @param {google.iam.v1.IPolicyDelta=} [properties] Properties to set
                     */
                    function PolicyDelta(properties) {
                        this.bindingDeltas = [];
                        this.auditConfigDeltas = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * PolicyDelta bindingDeltas.
                     * @member {Array.<google.iam.v1.IBindingDelta>} bindingDeltas
                     * @memberof google.iam.v1.PolicyDelta
                     * @instance
                     */
                    PolicyDelta.prototype.bindingDeltas = $util.emptyArray;
    
                    /**
                     * PolicyDelta auditConfigDeltas.
                     * @member {Array.<google.iam.v1.IAuditConfigDelta>} auditConfigDeltas
                     * @memberof google.iam.v1.PolicyDelta
                     * @instance
                     */
                    PolicyDelta.prototype.auditConfigDeltas = $util.emptyArray;
    
                    /**
                     * Creates a new PolicyDelta instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.IPolicyDelta=} [properties] Properties to set
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta instance
                     */
                    PolicyDelta.create = function create(properties) {
                        return new PolicyDelta(properties);
                    };
    
                    /**
                     * Encodes the specified PolicyDelta message. Does not implicitly {@link google.iam.v1.PolicyDelta.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.IPolicyDelta} message PolicyDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PolicyDelta.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.bindingDeltas != null && message.bindingDeltas.length)
                            for (var i = 0; i < message.bindingDeltas.length; ++i)
                                $root.google.iam.v1.BindingDelta.encode(message.bindingDeltas[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.auditConfigDeltas != null && message.auditConfigDeltas.length)
                            for (var i = 0; i < message.auditConfigDeltas.length; ++i)
                                $root.google.iam.v1.AuditConfigDelta.encode(message.auditConfigDeltas[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified PolicyDelta message, length delimited. Does not implicitly {@link google.iam.v1.PolicyDelta.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.IPolicyDelta} message PolicyDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PolicyDelta.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a PolicyDelta message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PolicyDelta.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.PolicyDelta();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.bindingDeltas && message.bindingDeltas.length))
                                        message.bindingDeltas = [];
                                    message.bindingDeltas.push($root.google.iam.v1.BindingDelta.decode(reader, reader.uint32()));
                                    break;
                                }
                            case 2: {
                                    if (!(message.auditConfigDeltas && message.auditConfigDeltas.length))
                                        message.auditConfigDeltas = [];
                                    message.auditConfigDeltas.push($root.google.iam.v1.AuditConfigDelta.decode(reader, reader.uint32()));
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a PolicyDelta message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PolicyDelta.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a PolicyDelta message.
                     * @function verify
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PolicyDelta.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.bindingDeltas != null && message.hasOwnProperty("bindingDeltas")) {
                            if (!Array.isArray(message.bindingDeltas))
                                return "bindingDeltas: array expected";
                            for (var i = 0; i < message.bindingDeltas.length; ++i) {
                                var error = $root.google.iam.v1.BindingDelta.verify(message.bindingDeltas[i]);
                                if (error)
                                    return "bindingDeltas." + error;
                            }
                        }
                        if (message.auditConfigDeltas != null && message.hasOwnProperty("auditConfigDeltas")) {
                            if (!Array.isArray(message.auditConfigDeltas))
                                return "auditConfigDeltas: array expected";
                            for (var i = 0; i < message.auditConfigDeltas.length; ++i) {
                                var error = $root.google.iam.v1.AuditConfigDelta.verify(message.auditConfigDeltas[i]);
                                if (error)
                                    return "auditConfigDeltas." + error;
                            }
                        }
                        return null;
                    };
    
                    /**
                     * Creates a PolicyDelta message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.PolicyDelta} PolicyDelta
                     */
                    PolicyDelta.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.PolicyDelta)
                            return object;
                        var message = new $root.google.iam.v1.PolicyDelta();
                        if (object.bindingDeltas) {
                            if (!Array.isArray(object.bindingDeltas))
                                throw TypeError(".google.iam.v1.PolicyDelta.bindingDeltas: array expected");
                            message.bindingDeltas = [];
                            for (var i = 0; i < object.bindingDeltas.length; ++i) {
                                if (typeof object.bindingDeltas[i] !== "object")
                                    throw TypeError(".google.iam.v1.PolicyDelta.bindingDeltas: object expected");
                                message.bindingDeltas[i] = $root.google.iam.v1.BindingDelta.fromObject(object.bindingDeltas[i]);
                            }
                        }
                        if (object.auditConfigDeltas) {
                            if (!Array.isArray(object.auditConfigDeltas))
                                throw TypeError(".google.iam.v1.PolicyDelta.auditConfigDeltas: array expected");
                            message.auditConfigDeltas = [];
                            for (var i = 0; i < object.auditConfigDeltas.length; ++i) {
                                if (typeof object.auditConfigDeltas[i] !== "object")
                                    throw TypeError(".google.iam.v1.PolicyDelta.auditConfigDeltas: object expected");
                                message.auditConfigDeltas[i] = $root.google.iam.v1.AuditConfigDelta.fromObject(object.auditConfigDeltas[i]);
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a PolicyDelta message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {google.iam.v1.PolicyDelta} message PolicyDelta
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PolicyDelta.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.bindingDeltas = [];
                            object.auditConfigDeltas = [];
                        }
                        if (message.bindingDeltas && message.bindingDeltas.length) {
                            object.bindingDeltas = [];
                            for (var j = 0; j < message.bindingDeltas.length; ++j)
                                object.bindingDeltas[j] = $root.google.iam.v1.BindingDelta.toObject(message.bindingDeltas[j], options);
                        }
                        if (message.auditConfigDeltas && message.auditConfigDeltas.length) {
                            object.auditConfigDeltas = [];
                            for (var j = 0; j < message.auditConfigDeltas.length; ++j)
                                object.auditConfigDeltas[j] = $root.google.iam.v1.AuditConfigDelta.toObject(message.auditConfigDeltas[j], options);
                        }
                        return object;
                    };
    
                    /**
                     * Converts this PolicyDelta to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.PolicyDelta
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PolicyDelta.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for PolicyDelta
                     * @function getTypeUrl
                     * @memberof google.iam.v1.PolicyDelta
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    PolicyDelta.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.PolicyDelta";
                    };
    
                    return PolicyDelta;
                })();
    
                v1.BindingDelta = (function() {
    
                    /**
                     * Properties of a BindingDelta.
                     * @memberof google.iam.v1
                     * @interface IBindingDelta
                     * @property {google.iam.v1.BindingDelta.Action|null} [action] BindingDelta action
                     * @property {string|null} [role] BindingDelta role
                     * @property {string|null} [member] BindingDelta member
                     * @property {google.type.IExpr|null} [condition] BindingDelta condition
                     */
    
                    /**
                     * Constructs a new BindingDelta.
                     * @memberof google.iam.v1
                     * @classdesc Represents a BindingDelta.
                     * @implements IBindingDelta
                     * @constructor
                     * @param {google.iam.v1.IBindingDelta=} [properties] Properties to set
                     */
                    function BindingDelta(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * BindingDelta action.
                     * @member {google.iam.v1.BindingDelta.Action} action
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.action = 0;
    
                    /**
                     * BindingDelta role.
                     * @member {string} role
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.role = "";
    
                    /**
                     * BindingDelta member.
                     * @member {string} member
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.member = "";
    
                    /**
                     * BindingDelta condition.
                     * @member {google.type.IExpr|null|undefined} condition
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     */
                    BindingDelta.prototype.condition = null;
    
                    /**
                     * Creates a new BindingDelta instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.IBindingDelta=} [properties] Properties to set
                     * @returns {google.iam.v1.BindingDelta} BindingDelta instance
                     */
                    BindingDelta.create = function create(properties) {
                        return new BindingDelta(properties);
                    };
    
                    /**
                     * Encodes the specified BindingDelta message. Does not implicitly {@link google.iam.v1.BindingDelta.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.IBindingDelta} message BindingDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BindingDelta.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.action);
                        if (message.role != null && Object.hasOwnProperty.call(message, "role"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.role);
                        if (message.member != null && Object.hasOwnProperty.call(message, "member"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.member);
                        if (message.condition != null && Object.hasOwnProperty.call(message, "condition"))
                            $root.google.type.Expr.encode(message.condition, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified BindingDelta message, length delimited. Does not implicitly {@link google.iam.v1.BindingDelta.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.IBindingDelta} message BindingDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    BindingDelta.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a BindingDelta message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.BindingDelta} BindingDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BindingDelta.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.BindingDelta();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.action = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.role = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.member = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.condition = $root.google.type.Expr.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a BindingDelta message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.BindingDelta} BindingDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    BindingDelta.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a BindingDelta message.
                     * @function verify
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    BindingDelta.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.action != null && message.hasOwnProperty("action"))
                            switch (message.action) {
                            default:
                                return "action: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.role != null && message.hasOwnProperty("role"))
                            if (!$util.isString(message.role))
                                return "role: string expected";
                        if (message.member != null && message.hasOwnProperty("member"))
                            if (!$util.isString(message.member))
                                return "member: string expected";
                        if (message.condition != null && message.hasOwnProperty("condition")) {
                            var error = $root.google.type.Expr.verify(message.condition);
                            if (error)
                                return "condition." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a BindingDelta message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.BindingDelta} BindingDelta
                     */
                    BindingDelta.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.BindingDelta)
                            return object;
                        var message = new $root.google.iam.v1.BindingDelta();
                        switch (object.action) {
                        default:
                            if (typeof object.action === "number") {
                                message.action = object.action;
                                break;
                            }
                            break;
                        case "ACTION_UNSPECIFIED":
                        case 0:
                            message.action = 0;
                            break;
                        case "ADD":
                        case 1:
                            message.action = 1;
                            break;
                        case "REMOVE":
                        case 2:
                            message.action = 2;
                            break;
                        }
                        if (object.role != null)
                            message.role = String(object.role);
                        if (object.member != null)
                            message.member = String(object.member);
                        if (object.condition != null) {
                            if (typeof object.condition !== "object")
                                throw TypeError(".google.iam.v1.BindingDelta.condition: object expected");
                            message.condition = $root.google.type.Expr.fromObject(object.condition);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a BindingDelta message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {google.iam.v1.BindingDelta} message BindingDelta
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    BindingDelta.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.action = options.enums === String ? "ACTION_UNSPECIFIED" : 0;
                            object.role = "";
                            object.member = "";
                            object.condition = null;
                        }
                        if (message.action != null && message.hasOwnProperty("action"))
                            object.action = options.enums === String ? $root.google.iam.v1.BindingDelta.Action[message.action] === undefined ? message.action : $root.google.iam.v1.BindingDelta.Action[message.action] : message.action;
                        if (message.role != null && message.hasOwnProperty("role"))
                            object.role = message.role;
                        if (message.member != null && message.hasOwnProperty("member"))
                            object.member = message.member;
                        if (message.condition != null && message.hasOwnProperty("condition"))
                            object.condition = $root.google.type.Expr.toObject(message.condition, options);
                        return object;
                    };
    
                    /**
                     * Converts this BindingDelta to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.BindingDelta
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    BindingDelta.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for BindingDelta
                     * @function getTypeUrl
                     * @memberof google.iam.v1.BindingDelta
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    BindingDelta.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.BindingDelta";
                    };
    
                    /**
                     * Action enum.
                     * @name google.iam.v1.BindingDelta.Action
                     * @enum {number}
                     * @property {number} ACTION_UNSPECIFIED=0 ACTION_UNSPECIFIED value
                     * @property {number} ADD=1 ADD value
                     * @property {number} REMOVE=2 REMOVE value
                     */
                    BindingDelta.Action = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ACTION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADD"] = 1;
                        values[valuesById[2] = "REMOVE"] = 2;
                        return values;
                    })();
    
                    return BindingDelta;
                })();
    
                v1.AuditConfigDelta = (function() {
    
                    /**
                     * Properties of an AuditConfigDelta.
                     * @memberof google.iam.v1
                     * @interface IAuditConfigDelta
                     * @property {google.iam.v1.AuditConfigDelta.Action|null} [action] AuditConfigDelta action
                     * @property {string|null} [service] AuditConfigDelta service
                     * @property {string|null} [exemptedMember] AuditConfigDelta exemptedMember
                     * @property {string|null} [logType] AuditConfigDelta logType
                     */
    
                    /**
                     * Constructs a new AuditConfigDelta.
                     * @memberof google.iam.v1
                     * @classdesc Represents an AuditConfigDelta.
                     * @implements IAuditConfigDelta
                     * @constructor
                     * @param {google.iam.v1.IAuditConfigDelta=} [properties] Properties to set
                     */
                    function AuditConfigDelta(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * AuditConfigDelta action.
                     * @member {google.iam.v1.AuditConfigDelta.Action} action
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.action = 0;
    
                    /**
                     * AuditConfigDelta service.
                     * @member {string} service
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.service = "";
    
                    /**
                     * AuditConfigDelta exemptedMember.
                     * @member {string} exemptedMember
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.exemptedMember = "";
    
                    /**
                     * AuditConfigDelta logType.
                     * @member {string} logType
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     */
                    AuditConfigDelta.prototype.logType = "";
    
                    /**
                     * Creates a new AuditConfigDelta instance using the specified properties.
                     * @function create
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.IAuditConfigDelta=} [properties] Properties to set
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta instance
                     */
                    AuditConfigDelta.create = function create(properties) {
                        return new AuditConfigDelta(properties);
                    };
    
                    /**
                     * Encodes the specified AuditConfigDelta message. Does not implicitly {@link google.iam.v1.AuditConfigDelta.verify|verify} messages.
                     * @function encode
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.IAuditConfigDelta} message AuditConfigDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfigDelta.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.action != null && Object.hasOwnProperty.call(message, "action"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.action);
                        if (message.service != null && Object.hasOwnProperty.call(message, "service"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.service);
                        if (message.exemptedMember != null && Object.hasOwnProperty.call(message, "exemptedMember"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.exemptedMember);
                        if (message.logType != null && Object.hasOwnProperty.call(message, "logType"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.logType);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified AuditConfigDelta message, length delimited. Does not implicitly {@link google.iam.v1.AuditConfigDelta.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.IAuditConfigDelta} message AuditConfigDelta message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    AuditConfigDelta.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an AuditConfigDelta message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfigDelta.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.iam.v1.AuditConfigDelta();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.action = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.service = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.exemptedMember = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.logType = reader.string();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an AuditConfigDelta message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    AuditConfigDelta.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an AuditConfigDelta message.
                     * @function verify
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    AuditConfigDelta.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.action != null && message.hasOwnProperty("action"))
                            switch (message.action) {
                            default:
                                return "action: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        if (message.service != null && message.hasOwnProperty("service"))
                            if (!$util.isString(message.service))
                                return "service: string expected";
                        if (message.exemptedMember != null && message.hasOwnProperty("exemptedMember"))
                            if (!$util.isString(message.exemptedMember))
                                return "exemptedMember: string expected";
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            if (!$util.isString(message.logType))
                                return "logType: string expected";
                        return null;
                    };
    
                    /**
                     * Creates an AuditConfigDelta message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.iam.v1.AuditConfigDelta} AuditConfigDelta
                     */
                    AuditConfigDelta.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.iam.v1.AuditConfigDelta)
                            return object;
                        var message = new $root.google.iam.v1.AuditConfigDelta();
                        switch (object.action) {
                        default:
                            if (typeof object.action === "number") {
                                message.action = object.action;
                                break;
                            }
                            break;
                        case "ACTION_UNSPECIFIED":
                        case 0:
                            message.action = 0;
                            break;
                        case "ADD":
                        case 1:
                            message.action = 1;
                            break;
                        case "REMOVE":
                        case 2:
                            message.action = 2;
                            break;
                        }
                        if (object.service != null)
                            message.service = String(object.service);
                        if (object.exemptedMember != null)
                            message.exemptedMember = String(object.exemptedMember);
                        if (object.logType != null)
                            message.logType = String(object.logType);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an AuditConfigDelta message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {google.iam.v1.AuditConfigDelta} message AuditConfigDelta
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    AuditConfigDelta.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.action = options.enums === String ? "ACTION_UNSPECIFIED" : 0;
                            object.service = "";
                            object.exemptedMember = "";
                            object.logType = "";
                        }
                        if (message.action != null && message.hasOwnProperty("action"))
                            object.action = options.enums === String ? $root.google.iam.v1.AuditConfigDelta.Action[message.action] === undefined ? message.action : $root.google.iam.v1.AuditConfigDelta.Action[message.action] : message.action;
                        if (message.service != null && message.hasOwnProperty("service"))
                            object.service = message.service;
                        if (message.exemptedMember != null && message.hasOwnProperty("exemptedMember"))
                            object.exemptedMember = message.exemptedMember;
                        if (message.logType != null && message.hasOwnProperty("logType"))
                            object.logType = message.logType;
                        return object;
                    };
    
                    /**
                     * Converts this AuditConfigDelta to JSON.
                     * @function toJSON
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    AuditConfigDelta.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for AuditConfigDelta
                     * @function getTypeUrl
                     * @memberof google.iam.v1.AuditConfigDelta
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    AuditConfigDelta.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.iam.v1.AuditConfigDelta";
                    };
    
                    /**
                     * Action enum.
                     * @name google.iam.v1.AuditConfigDelta.Action
                     * @enum {number}
                     * @property {number} ACTION_UNSPECIFIED=0 ACTION_UNSPECIFIED value
                     * @property {number} ADD=1 ADD value
                     * @property {number} REMOVE=2 REMOVE value
                     */
                    AuditConfigDelta.Action = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "ACTION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ADD"] = 1;
                        values[valuesById[2] = "REMOVE"] = 2;
                        return values;
                    })();
    
                    return AuditConfigDelta;
                })();
    
                return v1;
            })();
    
            return iam;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.Expr = (function() {
    
                /**
                 * Properties of an Expr.
                 * @memberof google.type
                 * @interface IExpr
                 * @property {string|null} [expression] Expr expression
                 * @property {string|null} [title] Expr title
                 * @property {string|null} [description] Expr description
                 * @property {string|null} [location] Expr location
                 */
    
                /**
                 * Constructs a new Expr.
                 * @memberof google.type
                 * @classdesc Represents an Expr.
                 * @implements IExpr
                 * @constructor
                 * @param {google.type.IExpr=} [properties] Properties to set
                 */
                function Expr(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Expr expression.
                 * @member {string} expression
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.expression = "";
    
                /**
                 * Expr title.
                 * @member {string} title
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.title = "";
    
                /**
                 * Expr description.
                 * @member {string} description
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.description = "";
    
                /**
                 * Expr location.
                 * @member {string} location
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.location = "";
    
                /**
                 * Creates a new Expr instance using the specified properties.
                 * @function create
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr=} [properties] Properties to set
                 * @returns {google.type.Expr} Expr instance
                 */
                Expr.create = function create(properties) {
                    return new Expr(properties);
                };
    
                /**
                 * Encodes the specified Expr message. Does not implicitly {@link google.type.Expr.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr} message Expr message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Expr.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.expression != null && Object.hasOwnProperty.call(message, "expression"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.expression);
                    if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.title);
                    if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                    if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.location);
                    return writer;
                };
    
                /**
                 * Encodes the specified Expr message, length delimited. Does not implicitly {@link google.type.Expr.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr} message Expr message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Expr.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Expr message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Expr
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Expr} Expr
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Expr.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Expr();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.expression = reader.string();
                                break;
                            }
                        case 2: {
                                message.title = reader.string();
                                break;
                            }
                        case 3: {
                                message.description = reader.string();
                                break;
                            }
                        case 4: {
                                message.location = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Expr message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Expr
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Expr} Expr
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Expr.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Expr message.
                 * @function verify
                 * @memberof google.type.Expr
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Expr.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.expression != null && message.hasOwnProperty("expression"))
                        if (!$util.isString(message.expression))
                            return "expression: string expected";
                    if (message.title != null && message.hasOwnProperty("title"))
                        if (!$util.isString(message.title))
                            return "title: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.location != null && message.hasOwnProperty("location"))
                        if (!$util.isString(message.location))
                            return "location: string expected";
                    return null;
                };
    
                /**
                 * Creates an Expr message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Expr
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Expr} Expr
                 */
                Expr.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Expr)
                        return object;
                    var message = new $root.google.type.Expr();
                    if (object.expression != null)
                        message.expression = String(object.expression);
                    if (object.title != null)
                        message.title = String(object.title);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.location != null)
                        message.location = String(object.location);
                    return message;
                };
    
                /**
                 * Creates a plain object from an Expr message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.Expr} message Expr
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Expr.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.expression = "";
                        object.title = "";
                        object.description = "";
                        object.location = "";
                    }
                    if (message.expression != null && message.hasOwnProperty("expression"))
                        object.expression = message.expression;
                    if (message.title != null && message.hasOwnProperty("title"))
                        object.title = message.title;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.location != null && message.hasOwnProperty("location"))
                        object.location = message.location;
                    return object;
                };
    
                /**
                 * Converts this Expr to JSON.
                 * @function toJSON
                 * @memberof google.type.Expr
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Expr.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Expr
                 * @function getTypeUrl
                 * @memberof google.type.Expr
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Expr.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Expr";
                };
    
                return Expr;
            })();
    
            return type;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        return google;
    })();

    return $root;
});
