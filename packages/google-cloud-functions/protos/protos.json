{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "functions": {
              "nested": {
                "v1": {
                  "options": {
                    "go_package": "cloud.google.com/go/functions/apiv1/functionspb;functionspb",
                    "java_multiple_files": true,
                    "java_outer_classname": "FunctionsOperationsProto",
                    "java_package": "com.google.cloud.functions.v1",
                    "objc_class_prefix": "GCF",
                    "(google.api.resource_definition).type": "cloudkms.googleapis.com/CryptoKey",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}"
                  },
                  "nested": {
                    "CloudFunctionsService": {
                      "options": {
                        "(google.api.default_host)": "cloudfunctions.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "ListFunctions": {
                          "requestType": "ListFunctionsRequest",
                          "responseType": "ListFunctionsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/functions"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/functions"
                              }
                            }
                          ]
                        },
                        "GetFunction": {
                          "requestType": "GetFunctionRequest",
                          "responseType": "CloudFunction",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/functions/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/functions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "CreateFunction": {
                          "requestType": "CreateFunctionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v1/{location=projects/*/locations/*}/functions",
                            "(google.api.http).body": "function",
                            "(google.api.method_signature)": "location,function",
                            "(google.longrunning.operation_info).response_type": "CloudFunction",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadataV1"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{location=projects/*/locations/*}/functions",
                                "body": "function"
                              }
                            },
                            {
                              "(google.api.method_signature)": "location,function"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "CloudFunction",
                                "metadata_type": "OperationMetadataV1"
                              }
                            }
                          ]
                        },
                        "UpdateFunction": {
                          "requestType": "UpdateFunctionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v1/{function.name=projects/*/locations/*/functions/*}",
                            "(google.api.http).body": "function",
                            "(google.api.method_signature)": "function",
                            "(google.longrunning.operation_info).response_type": "CloudFunction",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadataV1"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v1/{function.name=projects/*/locations/*/functions/*}",
                                "body": "function"
                              }
                            },
                            {
                              "(google.api.method_signature)": "function"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "CloudFunction",
                                "metadata_type": "OperationMetadataV1"
                              }
                            }
                          ]
                        },
                        "DeleteFunction": {
                          "requestType": "DeleteFunctionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/functions/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "OperationMetadataV1"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/functions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "OperationMetadataV1"
                              }
                            }
                          ]
                        },
                        "CallFunction": {
                          "requestType": "CallFunctionRequest",
                          "responseType": "CallFunctionResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/functions/*}:call",
                            "(google.api.http).body": "*",
                            "(google.api.method_signature)": "name,data"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/functions/*}:call",
                                "body": "*"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name,data"
                            }
                          ]
                        },
                        "GenerateUploadUrl": {
                          "requestType": "GenerateUploadUrlRequest",
                          "responseType": "GenerateUploadUrlResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/functions:generateUploadUrl",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/functions:generateUploadUrl",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "GenerateDownloadUrl": {
                          "requestType": "GenerateDownloadUrlRequest",
                          "responseType": "GenerateDownloadUrlResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{name=projects/*/locations/*/functions/*}:generateDownloadUrl",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{name=projects/*/locations/*/functions/*}:generateDownloadUrl",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "SetIamPolicy": {
                          "requestType": "google.iam.v1.SetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).post": "/v1/{resource=projects/*/locations/*/functions/*}:setIamPolicy",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{resource=projects/*/locations/*/functions/*}:setIamPolicy",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "GetIamPolicy": {
                          "requestType": "google.iam.v1.GetIamPolicyRequest",
                          "responseType": "google.iam.v1.Policy",
                          "options": {
                            "(google.api.http).get": "/v1/{resource=projects/*/locations/*/functions/*}:getIamPolicy"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{resource=projects/*/locations/*/functions/*}:getIamPolicy"
                              }
                            }
                          ]
                        },
                        "TestIamPermissions": {
                          "requestType": "google.iam.v1.TestIamPermissionsRequest",
                          "responseType": "google.iam.v1.TestIamPermissionsResponse",
                          "options": {
                            "(google.api.http).post": "/v1/{resource=projects/*/locations/*/functions/*}:testIamPermissions",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{resource=projects/*/locations/*/functions/*}:testIamPermissions",
                                "body": "*"
                              }
                            }
                          ]
                        }
                      }
                    },
                    "CloudFunction": {
                      "options": {
                        "(google.api.resource).type": "cloudfunctions.googleapis.com/CloudFunction",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/functions/{function}"
                      },
                      "oneofs": {
                        "sourceCode": {
                          "oneof": [
                            "sourceArchiveUrl",
                            "sourceRepository",
                            "sourceUploadUrl"
                          ]
                        },
                        "trigger": {
                          "oneof": [
                            "httpsTrigger",
                            "eventTrigger"
                          ]
                        }
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "sourceArchiveUrl": {
                          "type": "string",
                          "id": 3
                        },
                        "sourceRepository": {
                          "type": "SourceRepository",
                          "id": 4
                        },
                        "sourceUploadUrl": {
                          "type": "string",
                          "id": 16
                        },
                        "httpsTrigger": {
                          "type": "HttpsTrigger",
                          "id": 5
                        },
                        "eventTrigger": {
                          "type": "EventTrigger",
                          "id": 6
                        },
                        "status": {
                          "type": "CloudFunctionStatus",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "entryPoint": {
                          "type": "string",
                          "id": 8
                        },
                        "runtime": {
                          "type": "string",
                          "id": 19
                        },
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 9
                        },
                        "availableMemoryMb": {
                          "type": "int32",
                          "id": 10
                        },
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 11
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "versionId": {
                          "type": "int64",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 15
                        },
                        "environmentVariables": {
                          "keyType": "string",
                          "type": "string",
                          "id": 17
                        },
                        "buildEnvironmentVariables": {
                          "keyType": "string",
                          "type": "string",
                          "id": 28
                        },
                        "network": {
                          "type": "string",
                          "id": 18
                        },
                        "maxInstances": {
                          "type": "int32",
                          "id": 20
                        },
                        "minInstances": {
                          "type": "int32",
                          "id": 32
                        },
                        "vpcConnector": {
                          "type": "string",
                          "id": 22
                        },
                        "vpcConnectorEgressSettings": {
                          "type": "VpcConnectorEgressSettings",
                          "id": 23
                        },
                        "ingressSettings": {
                          "type": "IngressSettings",
                          "id": 24
                        },
                        "kmsKeyName": {
                          "type": "string",
                          "id": 25,
                          "options": {
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                          }
                        },
                        "buildWorkerPool": {
                          "type": "string",
                          "id": 26
                        },
                        "buildId": {
                          "type": "string",
                          "id": 27,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "buildName": {
                          "type": "string",
                          "id": 33,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "secretEnvironmentVariables": {
                          "rule": "repeated",
                          "type": "SecretEnvVar",
                          "id": 29
                        },
                        "secretVolumes": {
                          "rule": "repeated",
                          "type": "SecretVolume",
                          "id": 30
                        },
                        "sourceToken": {
                          "type": "string",
                          "id": 31,
                          "options": {
                            "(google.api.field_behavior)": "INPUT_ONLY"
                          }
                        },
                        "dockerRepository": {
                          "type": "string",
                          "id": 34,
                          "options": {
                            "(google.api.resource_reference).type": "artifactregistry.googleapis.com/Repository"
                          }
                        },
                        "dockerRegistry": {
                          "type": "DockerRegistry",
                          "id": 35
                        }
                      },
                      "nested": {
                        "VpcConnectorEgressSettings": {
                          "values": {
                            "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED": 0,
                            "PRIVATE_RANGES_ONLY": 1,
                            "ALL_TRAFFIC": 2
                          }
                        },
                        "IngressSettings": {
                          "values": {
                            "INGRESS_SETTINGS_UNSPECIFIED": 0,
                            "ALLOW_ALL": 1,
                            "ALLOW_INTERNAL_ONLY": 2,
                            "ALLOW_INTERNAL_AND_GCLB": 3
                          }
                        },
                        "DockerRegistry": {
                          "values": {
                            "DOCKER_REGISTRY_UNSPECIFIED": 0,
                            "CONTAINER_REGISTRY": 1,
                            "ARTIFACT_REGISTRY": 2
                          }
                        }
                      }
                    },
                    "SourceRepository": {
                      "fields": {
                        "url": {
                          "type": "string",
                          "id": 1
                        },
                        "deployedUrl": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "HttpsTrigger": {
                      "fields": {
                        "url": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "securityLevel": {
                          "type": "SecurityLevel",
                          "id": 2
                        }
                      },
                      "nested": {
                        "SecurityLevel": {
                          "values": {
                            "SECURITY_LEVEL_UNSPECIFIED": 0,
                            "SECURE_ALWAYS": 1,
                            "SECURE_OPTIONAL": 2
                          }
                        }
                      }
                    },
                    "EventTrigger": {
                      "fields": {
                        "eventType": {
                          "type": "string",
                          "id": 1
                        },
                        "resource": {
                          "type": "string",
                          "id": 2
                        },
                        "service": {
                          "type": "string",
                          "id": 3
                        },
                        "failurePolicy": {
                          "type": "FailurePolicy",
                          "id": 5
                        }
                      }
                    },
                    "FailurePolicy": {
                      "oneofs": {
                        "action": {
                          "oneof": [
                            "retry"
                          ]
                        }
                      },
                      "fields": {
                        "retry": {
                          "type": "Retry",
                          "id": 1
                        }
                      },
                      "nested": {
                        "Retry": {
                          "fields": {}
                        }
                      }
                    },
                    "CloudFunctionStatus": {
                      "values": {
                        "CLOUD_FUNCTION_STATUS_UNSPECIFIED": 0,
                        "ACTIVE": 1,
                        "OFFLINE": 2,
                        "DEPLOY_IN_PROGRESS": 3,
                        "DELETE_IN_PROGRESS": 4,
                        "UNKNOWN": 5
                      }
                    },
                    "SecretEnvVar": {
                      "fields": {
                        "key": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "secret": {
                          "type": "string",
                          "id": 3
                        },
                        "version": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "SecretVolume": {
                      "fields": {
                        "mountPath": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "secret": {
                          "type": "string",
                          "id": 3
                        },
                        "versions": {
                          "rule": "repeated",
                          "type": "SecretVersion",
                          "id": 4
                        }
                      },
                      "nested": {
                        "SecretVersion": {
                          "fields": {
                            "version": {
                              "type": "string",
                              "id": 1
                            },
                            "path": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "CreateFunctionRequest": {
                      "fields": {
                        "location": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "function": {
                          "type": "CloudFunction",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "UpdateFunctionRequest": {
                      "fields": {
                        "function": {
                          "type": "CloudFunction",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "GetFunctionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudfunctions.googleapis.com/CloudFunction"
                          }
                        }
                      }
                    },
                    "ListFunctionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListFunctionsResponse": {
                      "fields": {
                        "functions": {
                          "rule": "repeated",
                          "type": "CloudFunction",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "DeleteFunctionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudfunctions.googleapis.com/CloudFunction"
                          }
                        }
                      }
                    },
                    "CallFunctionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudfunctions.googleapis.com/CloudFunction"
                          }
                        },
                        "data": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        }
                      }
                    },
                    "CallFunctionResponse": {
                      "fields": {
                        "executionId": {
                          "type": "string",
                          "id": 1
                        },
                        "result": {
                          "type": "string",
                          "id": 2
                        },
                        "error": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GenerateUploadUrlRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1
                        },
                        "kmsKeyName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                          }
                        }
                      }
                    },
                    "GenerateUploadUrlResponse": {
                      "fields": {
                        "uploadUrl": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "GenerateDownloadUrlRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "versionId": {
                          "type": "uint64",
                          "id": 2
                        }
                      }
                    },
                    "GenerateDownloadUrlResponse": {
                      "fields": {
                        "downloadUrl": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "OperationType": {
                      "values": {
                        "OPERATION_UNSPECIFIED": 0,
                        "CREATE_FUNCTION": 1,
                        "UPDATE_FUNCTION": 2,
                        "DELETE_FUNCTION": 3
                      }
                    },
                    "OperationMetadataV1": {
                      "fields": {
                        "target": {
                          "type": "string",
                          "id": 1
                        },
                        "type": {
                          "type": "OperationType",
                          "id": 2
                        },
                        "request": {
                          "type": "google.protobuf.Any",
                          "id": 3
                        },
                        "versionId": {
                          "type": "int64",
                          "id": 4
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 5
                        },
                        "buildId": {
                          "type": "string",
                          "id": 6
                        },
                        "sourceToken": {
                          "type": "string",
                          "id": 7
                        },
                        "buildName": {
                          "type": "string",
                          "id": 8
                        }
                      }
                    }
                  }
                },
                "v2": {
                  "options": {
                    "go_package": "cloud.google.com/go/functions/apiv2/functionspb;functionspb",
                    "java_multiple_files": true,
                    "java_outer_classname": "FunctionsProto",
                    "java_package": "com.google.cloud.functions.v2",
                    "objc_class_prefix": "GCF",
                    "(google.api.resource_definition).type": "cloudkms.googleapis.com/CryptoKey",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}"
                  },
                  "nested": {
                    "FunctionService": {
                      "options": {
                        "(google.api.default_host)": "cloudfunctions.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "GetFunction": {
                          "requestType": "GetFunctionRequest",
                          "responseType": "Function",
                          "options": {
                            "(google.api.http).get": "/v2/{name=projects/*/locations/*/functions/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{name=projects/*/locations/*/functions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFunctions": {
                          "requestType": "ListFunctionsRequest",
                          "responseType": "ListFunctionsResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/locations/*}/functions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/locations/*}/functions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateFunction": {
                          "requestType": "CreateFunctionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*/locations/*}/functions",
                            "(google.api.http).body": "function",
                            "(google.api.method_signature)": "parent,function,function_id",
                            "(google.longrunning.operation_info).response_type": "google.cloud.functions.v2.Function",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.functions.v2.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*/locations/*}/functions",
                                "body": "function"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,function,function_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.cloud.functions.v2.Function",
                                "metadata_type": "google.cloud.functions.v2.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateFunction": {
                          "requestType": "UpdateFunctionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v2/{function.name=projects/*/locations/*/functions/*}",
                            "(google.api.http).body": "function",
                            "(google.api.method_signature)": "function,update_mask",
                            "(google.longrunning.operation_info).response_type": "google.cloud.functions.v2.Function",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.functions.v2.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2/{function.name=projects/*/locations/*/functions/*}",
                                "body": "function"
                              }
                            },
                            {
                              "(google.api.method_signature)": "function,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.cloud.functions.v2.Function",
                                "metadata_type": "google.cloud.functions.v2.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFunction": {
                          "requestType": "DeleteFunctionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v2/{name=projects/*/locations/*/functions/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.functions.v2.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2/{name=projects/*/locations/*/functions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.functions.v2.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "GenerateUploadUrl": {
                          "requestType": "GenerateUploadUrlRequest",
                          "responseType": "GenerateUploadUrlResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{parent=projects/*/locations/*}/functions:generateUploadUrl",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{parent=projects/*/locations/*}/functions:generateUploadUrl",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "GenerateDownloadUrl": {
                          "requestType": "GenerateDownloadUrlRequest",
                          "responseType": "GenerateDownloadUrlResponse",
                          "options": {
                            "(google.api.http).post": "/v2/{name=projects/*/locations/*/functions/*}:generateDownloadUrl",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2/{name=projects/*/locations/*/functions/*}:generateDownloadUrl",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ListRuntimes": {
                          "requestType": "ListRuntimesRequest",
                          "responseType": "ListRuntimesResponse",
                          "options": {
                            "(google.api.http).get": "/v2/{parent=projects/*/locations/*}/runtimes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2/{parent=projects/*/locations/*}/runtimes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "Environment": {
                      "values": {
                        "ENVIRONMENT_UNSPECIFIED": 0,
                        "GEN_1": 1,
                        "GEN_2": 2
                      }
                    },
                    "Function": {
                      "options": {
                        "(google.api.resource).type": "cloudfunctions.googleapis.com/Function",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/functions/{function}",
                        "(google.api.resource).plural": "functions",
                        "(google.api.resource).singular": "function"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "buildConfig": {
                          "type": "BuildConfig",
                          "id": 3
                        },
                        "serviceConfig": {
                          "type": "ServiceConfig",
                          "id": 4
                        },
                        "eventTrigger": {
                          "type": "EventTrigger",
                          "id": 5
                        },
                        "state": {
                          "type": "State",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 8
                        },
                        "stateMessages": {
                          "rule": "repeated",
                          "type": "StateMessage",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "environment": {
                          "type": "Environment",
                          "id": 10
                        },
                        "url": {
                          "type": "string",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "kmsKeyName": {
                          "type": "string",
                          "id": 25,
                          "options": {
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "ACTIVE": 1,
                            "FAILED": 2,
                            "DEPLOYING": 3,
                            "DELETING": 4,
                            "UNKNOWN": 5
                          }
                        }
                      }
                    },
                    "StateMessage": {
                      "fields": {
                        "severity": {
                          "type": "Severity",
                          "id": 1
                        },
                        "type": {
                          "type": "string",
                          "id": 2
                        },
                        "message": {
                          "type": "string",
                          "id": 3
                        }
                      },
                      "nested": {
                        "Severity": {
                          "values": {
                            "SEVERITY_UNSPECIFIED": 0,
                            "ERROR": 1,
                            "WARNING": 2,
                            "INFO": 3
                          }
                        }
                      }
                    },
                    "StorageSource": {
                      "fields": {
                        "bucket": {
                          "type": "string",
                          "id": 1
                        },
                        "object": {
                          "type": "string",
                          "id": 2
                        },
                        "generation": {
                          "type": "int64",
                          "id": 3
                        }
                      }
                    },
                    "RepoSource": {
                      "oneofs": {
                        "revision": {
                          "oneof": [
                            "branchName",
                            "tagName",
                            "commitSha"
                          ]
                        }
                      },
                      "fields": {
                        "branchName": {
                          "type": "string",
                          "id": 3
                        },
                        "tagName": {
                          "type": "string",
                          "id": 4
                        },
                        "commitSha": {
                          "type": "string",
                          "id": 5
                        },
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "repoName": {
                          "type": "string",
                          "id": 2
                        },
                        "dir": {
                          "type": "string",
                          "id": 6
                        },
                        "invertRegex": {
                          "type": "bool",
                          "id": 7
                        }
                      }
                    },
                    "Source": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "storageSource",
                            "repoSource"
                          ]
                        }
                      },
                      "fields": {
                        "storageSource": {
                          "type": "StorageSource",
                          "id": 1
                        },
                        "repoSource": {
                          "type": "RepoSource",
                          "id": 2
                        }
                      }
                    },
                    "SourceProvenance": {
                      "fields": {
                        "resolvedStorageSource": {
                          "type": "StorageSource",
                          "id": 1
                        },
                        "resolvedRepoSource": {
                          "type": "RepoSource",
                          "id": 2
                        }
                      }
                    },
                    "BuildConfig": {
                      "fields": {
                        "build": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "cloudbuild.googleapis.com/Build"
                          }
                        },
                        "runtime": {
                          "type": "string",
                          "id": 2
                        },
                        "entryPoint": {
                          "type": "string",
                          "id": 3
                        },
                        "source": {
                          "type": "Source",
                          "id": 4
                        },
                        "sourceProvenance": {
                          "type": "SourceProvenance",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "workerPool": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.resource_reference).type": "cloudbuild.googleapis.com/WorkerPool"
                          }
                        },
                        "environmentVariables": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6
                        },
                        "dockerRegistry": {
                          "type": "DockerRegistry",
                          "id": 10
                        },
                        "dockerRepository": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.resource_reference).type": "artifactregistry.googleapis.com/Repository"
                          }
                        }
                      },
                      "nested": {
                        "DockerRegistry": {
                          "values": {
                            "DOCKER_REGISTRY_UNSPECIFIED": 0,
                            "CONTAINER_REGISTRY": 1,
                            "ARTIFACT_REGISTRY": 2
                          }
                        }
                      }
                    },
                    "ServiceConfig": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "run.googleapis.com/Service"
                          }
                        },
                        "timeoutSeconds": {
                          "type": "int32",
                          "id": 2
                        },
                        "availableMemory": {
                          "type": "string",
                          "id": 13
                        },
                        "availableCpu": {
                          "type": "string",
                          "id": 22
                        },
                        "environmentVariables": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "maxInstanceCount": {
                          "type": "int32",
                          "id": 5
                        },
                        "minInstanceCount": {
                          "type": "int32",
                          "id": 12
                        },
                        "vpcConnector": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.resource_reference).type": "vpcaccess.googleapis.com/Connector"
                          }
                        },
                        "vpcConnectorEgressSettings": {
                          "type": "VpcConnectorEgressSettings",
                          "id": 7
                        },
                        "ingressSettings": {
                          "type": "IngressSettings",
                          "id": 8
                        },
                        "uri": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 10
                        },
                        "allTrafficOnLatestRevision": {
                          "type": "bool",
                          "id": 16
                        },
                        "secretEnvironmentVariables": {
                          "rule": "repeated",
                          "type": "SecretEnvVar",
                          "id": 17
                        },
                        "secretVolumes": {
                          "rule": "repeated",
                          "type": "SecretVolume",
                          "id": 19
                        },
                        "revision": {
                          "type": "string",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "maxInstanceRequestConcurrency": {
                          "type": "int32",
                          "id": 20
                        },
                        "securityLevel": {
                          "type": "SecurityLevel",
                          "id": 21
                        }
                      },
                      "nested": {
                        "VpcConnectorEgressSettings": {
                          "values": {
                            "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED": 0,
                            "PRIVATE_RANGES_ONLY": 1,
                            "ALL_TRAFFIC": 2
                          }
                        },
                        "IngressSettings": {
                          "values": {
                            "INGRESS_SETTINGS_UNSPECIFIED": 0,
                            "ALLOW_ALL": 1,
                            "ALLOW_INTERNAL_ONLY": 2,
                            "ALLOW_INTERNAL_AND_GCLB": 3
                          }
                        },
                        "SecurityLevel": {
                          "values": {
                            "SECURITY_LEVEL_UNSPECIFIED": 0,
                            "SECURE_ALWAYS": 1,
                            "SECURE_OPTIONAL": 2
                          }
                        }
                      }
                    },
                    "SecretEnvVar": {
                      "fields": {
                        "key": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "secret": {
                          "type": "string",
                          "id": 3
                        },
                        "version": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "SecretVolume": {
                      "fields": {
                        "mountPath": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "secret": {
                          "type": "string",
                          "id": 3
                        },
                        "versions": {
                          "rule": "repeated",
                          "type": "SecretVersion",
                          "id": 4
                        }
                      },
                      "nested": {
                        "SecretVersion": {
                          "fields": {
                            "version": {
                              "type": "string",
                              "id": 1
                            },
                            "path": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "EventTrigger": {
                      "fields": {
                        "trigger": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "eventarc.googleapis.com/Trigger"
                          }
                        },
                        "triggerRegion": {
                          "type": "string",
                          "id": 2
                        },
                        "eventType": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "eventFilters": {
                          "rule": "repeated",
                          "type": "EventFilter",
                          "id": 4
                        },
                        "pubsubTopic": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "pubsub.googleapis.com/Topic"
                          }
                        },
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "retryPolicy": {
                          "type": "RetryPolicy",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "channel": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "eventarc.googleapis.com/Channel"
                          }
                        }
                      },
                      "nested": {
                        "RetryPolicy": {
                          "values": {
                            "RETRY_POLICY_UNSPECIFIED": 0,
                            "RETRY_POLICY_DO_NOT_RETRY": 1,
                            "RETRY_POLICY_RETRY": 2
                          }
                        }
                      }
                    },
                    "EventFilter": {
                      "fields": {
                        "attribute": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "value": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "operator": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GetFunctionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudfunctions.googleapis.com/Function"
                          }
                        }
                      }
                    },
                    "ListFunctionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudfunctions.googleapis.com/Function"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListFunctionsResponse": {
                      "fields": {
                        "functions": {
                          "rule": "repeated",
                          "type": "Function",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "CreateFunctionRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "function": {
                          "type": "Function",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "functionId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "UpdateFunctionRequest": {
                      "fields": {
                        "function": {
                          "type": "Function",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFunctionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudfunctions.googleapis.com/Function"
                          }
                        }
                      }
                    },
                    "GenerateUploadUrlRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "kmsKeyName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                          }
                        }
                      }
                    },
                    "GenerateUploadUrlResponse": {
                      "fields": {
                        "uploadUrl": {
                          "type": "string",
                          "id": 1
                        },
                        "storageSource": {
                          "type": "StorageSource",
                          "id": 2
                        }
                      }
                    },
                    "GenerateDownloadUrlRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudfunctions.googleapis.com/Function"
                          }
                        }
                      }
                    },
                    "GenerateDownloadUrlResponse": {
                      "fields": {
                        "downloadUrl": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "ListRuntimesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListRuntimesResponse": {
                      "fields": {
                        "runtimes": {
                          "rule": "repeated",
                          "type": "Runtime",
                          "id": 1
                        }
                      },
                      "nested": {
                        "Runtime": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 5
                            },
                            "stage": {
                              "type": "RuntimeStage",
                              "id": 2
                            },
                            "warnings": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            },
                            "environment": {
                              "type": "Environment",
                              "id": 4
                            }
                          }
                        },
                        "RuntimeStage": {
                          "values": {
                            "RUNTIME_STAGE_UNSPECIFIED": 0,
                            "DEVELOPMENT": 1,
                            "ALPHA": 2,
                            "BETA": 3,
                            "GA": 4,
                            "DEPRECATED": 5,
                            "DECOMMISSIONED": 6
                          }
                        }
                      }
                    },
                    "OperationMetadata": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "target": {
                          "type": "string",
                          "id": 3
                        },
                        "verb": {
                          "type": "string",
                          "id": 4
                        },
                        "statusDetail": {
                          "type": "string",
                          "id": 5
                        },
                        "cancelRequested": {
                          "type": "bool",
                          "id": 6
                        },
                        "apiVersion": {
                          "type": "string",
                          "id": 7
                        },
                        "requestResource": {
                          "type": "google.protobuf.Any",
                          "id": 8
                        },
                        "stages": {
                          "rule": "repeated",
                          "type": "Stage",
                          "id": 9
                        }
                      }
                    },
                    "LocationMetadata": {
                      "fields": {
                        "environments": {
                          "rule": "repeated",
                          "type": "Environment",
                          "id": 1
                        }
                      }
                    },
                    "Stage": {
                      "fields": {
                        "name": {
                          "type": "Name",
                          "id": 1
                        },
                        "message": {
                          "type": "string",
                          "id": 2
                        },
                        "state": {
                          "type": "State",
                          "id": 3
                        },
                        "resource": {
                          "type": "string",
                          "id": 4
                        },
                        "resourceUri": {
                          "type": "string",
                          "id": 5
                        },
                        "stateMessages": {
                          "rule": "repeated",
                          "type": "StateMessage",
                          "id": 6
                        }
                      },
                      "nested": {
                        "Name": {
                          "values": {
                            "NAME_UNSPECIFIED": 0,
                            "ARTIFACT_REGISTRY": 1,
                            "BUILD": 2,
                            "SERVICE": 3,
                            "TRIGGER": 4,
                            "SERVICE_ROLLBACK": 5,
                            "TRIGGER_ROLLBACK": 6
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "NOT_STARTED": 1,
                            "IN_PROGRESS": 2,
                            "COMPLETE": 3
                          }
                        }
                      }
                    }
                  }
                },
                "v2alpha": {
                  "options": {
                    "go_package": "cloud.google.com/go/functions/apiv2alpha/functionspb;functionspb",
                    "java_multiple_files": true,
                    "java_outer_classname": "FunctionsProto",
                    "java_package": "com.google.cloud.functions.v2alpha",
                    "objc_class_prefix": "GCF",
                    "(google.api.resource_definition).type": "cloudkms.googleapis.com/CryptoKey",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}"
                  },
                  "nested": {
                    "FunctionService": {
                      "options": {
                        "(google.api.default_host)": "cloudfunctions.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "GetFunction": {
                          "requestType": "GetFunctionRequest",
                          "responseType": "Function",
                          "options": {
                            "(google.api.http).get": "/v2alpha/{name=projects/*/locations/*/functions/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2alpha/{name=projects/*/locations/*/functions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFunctions": {
                          "requestType": "ListFunctionsRequest",
                          "responseType": "ListFunctionsResponse",
                          "options": {
                            "(google.api.http).get": "/v2alpha/{parent=projects/*/locations/*}/functions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2alpha/{parent=projects/*/locations/*}/functions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateFunction": {
                          "requestType": "CreateFunctionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v2alpha/{parent=projects/*/locations/*}/functions",
                            "(google.api.http).body": "function",
                            "(google.api.method_signature)": "parent,function,function_id",
                            "(google.longrunning.operation_info).response_type": "google.cloud.functions.v2alpha.Function",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.functions.v2alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2alpha/{parent=projects/*/locations/*}/functions",
                                "body": "function"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,function,function_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.cloud.functions.v2alpha.Function",
                                "metadata_type": "google.cloud.functions.v2alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateFunction": {
                          "requestType": "UpdateFunctionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v2alpha/{function.name=projects/*/locations/*/functions/*}",
                            "(google.api.http).body": "function",
                            "(google.api.method_signature)": "function,update_mask",
                            "(google.longrunning.operation_info).response_type": "google.cloud.functions.v2alpha.Function",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.functions.v2alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2alpha/{function.name=projects/*/locations/*/functions/*}",
                                "body": "function"
                              }
                            },
                            {
                              "(google.api.method_signature)": "function,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.cloud.functions.v2alpha.Function",
                                "metadata_type": "google.cloud.functions.v2alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFunction": {
                          "requestType": "DeleteFunctionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v2alpha/{name=projects/*/locations/*/functions/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.functions.v2alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2alpha/{name=projects/*/locations/*/functions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.functions.v2alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "GenerateUploadUrl": {
                          "requestType": "GenerateUploadUrlRequest",
                          "responseType": "GenerateUploadUrlResponse",
                          "options": {
                            "(google.api.http).post": "/v2alpha/{parent=projects/*/locations/*}/functions:generateUploadUrl",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2alpha/{parent=projects/*/locations/*}/functions:generateUploadUrl",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "GenerateDownloadUrl": {
                          "requestType": "GenerateDownloadUrlRequest",
                          "responseType": "GenerateDownloadUrlResponse",
                          "options": {
                            "(google.api.http).post": "/v2alpha/{name=projects/*/locations/*/functions/*}:generateDownloadUrl",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2alpha/{name=projects/*/locations/*/functions/*}:generateDownloadUrl",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ListRuntimes": {
                          "requestType": "ListRuntimesRequest",
                          "responseType": "ListRuntimesResponse",
                          "options": {
                            "(google.api.http).get": "/v2alpha/{parent=projects/*/locations/*}/runtimes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2alpha/{parent=projects/*/locations/*}/runtimes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "Environment": {
                      "values": {
                        "ENVIRONMENT_UNSPECIFIED": 0,
                        "GEN_1": 1,
                        "GEN_2": 2
                      }
                    },
                    "Function": {
                      "options": {
                        "(google.api.resource).type": "cloudfunctions.googleapis.com/Function",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/functions/{function}",
                        "(google.api.resource).plural": "functions",
                        "(google.api.resource).singular": "function"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "buildConfig": {
                          "type": "BuildConfig",
                          "id": 3
                        },
                        "serviceConfig": {
                          "type": "ServiceConfig",
                          "id": 4
                        },
                        "eventTrigger": {
                          "type": "EventTrigger",
                          "id": 5
                        },
                        "state": {
                          "type": "State",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 8
                        },
                        "stateMessages": {
                          "rule": "repeated",
                          "type": "StateMessage",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "environment": {
                          "type": "Environment",
                          "id": 10
                        },
                        "url": {
                          "type": "string",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "kmsKeyName": {
                          "type": "string",
                          "id": 25,
                          "options": {
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "ACTIVE": 1,
                            "FAILED": 2,
                            "DEPLOYING": 3,
                            "DELETING": 4,
                            "UNKNOWN": 5
                          }
                        }
                      }
                    },
                    "StateMessage": {
                      "fields": {
                        "severity": {
                          "type": "Severity",
                          "id": 1
                        },
                        "type": {
                          "type": "string",
                          "id": 2
                        },
                        "message": {
                          "type": "string",
                          "id": 3
                        }
                      },
                      "nested": {
                        "Severity": {
                          "values": {
                            "SEVERITY_UNSPECIFIED": 0,
                            "ERROR": 1,
                            "WARNING": 2,
                            "INFO": 3
                          }
                        }
                      }
                    },
                    "StorageSource": {
                      "fields": {
                        "bucket": {
                          "type": "string",
                          "id": 1
                        },
                        "object": {
                          "type": "string",
                          "id": 2
                        },
                        "generation": {
                          "type": "int64",
                          "id": 3
                        }
                      }
                    },
                    "RepoSource": {
                      "oneofs": {
                        "revision": {
                          "oneof": [
                            "branchName",
                            "tagName",
                            "commitSha"
                          ]
                        }
                      },
                      "fields": {
                        "branchName": {
                          "type": "string",
                          "id": 3
                        },
                        "tagName": {
                          "type": "string",
                          "id": 4
                        },
                        "commitSha": {
                          "type": "string",
                          "id": 5
                        },
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "repoName": {
                          "type": "string",
                          "id": 2
                        },
                        "dir": {
                          "type": "string",
                          "id": 6
                        },
                        "invertRegex": {
                          "type": "bool",
                          "id": 7
                        }
                      }
                    },
                    "Source": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "storageSource",
                            "repoSource"
                          ]
                        }
                      },
                      "fields": {
                        "storageSource": {
                          "type": "StorageSource",
                          "id": 1
                        },
                        "repoSource": {
                          "type": "RepoSource",
                          "id": 2
                        }
                      }
                    },
                    "SourceProvenance": {
                      "fields": {
                        "resolvedStorageSource": {
                          "type": "StorageSource",
                          "id": 1
                        },
                        "resolvedRepoSource": {
                          "type": "RepoSource",
                          "id": 2
                        }
                      }
                    },
                    "BuildConfig": {
                      "fields": {
                        "build": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "cloudbuild.googleapis.com/Build"
                          }
                        },
                        "runtime": {
                          "type": "string",
                          "id": 2
                        },
                        "entryPoint": {
                          "type": "string",
                          "id": 3
                        },
                        "source": {
                          "type": "Source",
                          "id": 4
                        },
                        "sourceProvenance": {
                          "type": "SourceProvenance",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "workerPool": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.resource_reference).type": "cloudbuild.googleapis.com/WorkerPool"
                          }
                        },
                        "environmentVariables": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6
                        },
                        "dockerRegistry": {
                          "type": "DockerRegistry",
                          "id": 10
                        },
                        "dockerRepository": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.resource_reference).type": "artifactregistry.googleapis.com/Repository"
                          }
                        }
                      },
                      "nested": {
                        "DockerRegistry": {
                          "values": {
                            "DOCKER_REGISTRY_UNSPECIFIED": 0,
                            "CONTAINER_REGISTRY": 1,
                            "ARTIFACT_REGISTRY": 2
                          }
                        }
                      }
                    },
                    "ServiceConfig": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "run.googleapis.com/Service"
                          }
                        },
                        "timeoutSeconds": {
                          "type": "int32",
                          "id": 2
                        },
                        "availableMemory": {
                          "type": "string",
                          "id": 13
                        },
                        "availableCpu": {
                          "type": "string",
                          "id": 22
                        },
                        "environmentVariables": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "maxInstanceCount": {
                          "type": "int32",
                          "id": 5
                        },
                        "minInstanceCount": {
                          "type": "int32",
                          "id": 12
                        },
                        "vpcConnector": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.resource_reference).type": "vpcaccess.googleapis.com/Connector"
                          }
                        },
                        "vpcConnectorEgressSettings": {
                          "type": "VpcConnectorEgressSettings",
                          "id": 7
                        },
                        "ingressSettings": {
                          "type": "IngressSettings",
                          "id": 8
                        },
                        "uri": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 10
                        },
                        "allTrafficOnLatestRevision": {
                          "type": "bool",
                          "id": 16
                        },
                        "secretEnvironmentVariables": {
                          "rule": "repeated",
                          "type": "SecretEnvVar",
                          "id": 17
                        },
                        "secretVolumes": {
                          "rule": "repeated",
                          "type": "SecretVolume",
                          "id": 19
                        },
                        "revision": {
                          "type": "string",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "maxInstanceRequestConcurrency": {
                          "type": "int32",
                          "id": 20
                        },
                        "securityLevel": {
                          "type": "SecurityLevel",
                          "id": 21
                        }
                      },
                      "nested": {
                        "VpcConnectorEgressSettings": {
                          "values": {
                            "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED": 0,
                            "PRIVATE_RANGES_ONLY": 1,
                            "ALL_TRAFFIC": 2
                          }
                        },
                        "IngressSettings": {
                          "values": {
                            "INGRESS_SETTINGS_UNSPECIFIED": 0,
                            "ALLOW_ALL": 1,
                            "ALLOW_INTERNAL_ONLY": 2,
                            "ALLOW_INTERNAL_AND_GCLB": 3
                          }
                        },
                        "SecurityLevel": {
                          "values": {
                            "SECURITY_LEVEL_UNSPECIFIED": 0,
                            "SECURE_ALWAYS": 1,
                            "SECURE_OPTIONAL": 2
                          }
                        }
                      }
                    },
                    "SecretEnvVar": {
                      "fields": {
                        "key": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "secret": {
                          "type": "string",
                          "id": 3
                        },
                        "version": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "SecretVolume": {
                      "fields": {
                        "mountPath": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "secret": {
                          "type": "string",
                          "id": 3
                        },
                        "versions": {
                          "rule": "repeated",
                          "type": "SecretVersion",
                          "id": 4
                        }
                      },
                      "nested": {
                        "SecretVersion": {
                          "fields": {
                            "version": {
                              "type": "string",
                              "id": 1
                            },
                            "path": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "EventTrigger": {
                      "fields": {
                        "trigger": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "eventarc.googleapis.com/Trigger"
                          }
                        },
                        "triggerRegion": {
                          "type": "string",
                          "id": 2
                        },
                        "eventType": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "eventFilters": {
                          "rule": "repeated",
                          "type": "EventFilter",
                          "id": 4
                        },
                        "pubsubTopic": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "pubsub.googleapis.com/Topic"
                          }
                        },
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "retryPolicy": {
                          "type": "RetryPolicy",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "channel": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "eventarc.googleapis.com/Channel"
                          }
                        }
                      },
                      "nested": {
                        "RetryPolicy": {
                          "values": {
                            "RETRY_POLICY_UNSPECIFIED": 0,
                            "RETRY_POLICY_DO_NOT_RETRY": 1,
                            "RETRY_POLICY_RETRY": 2
                          }
                        }
                      }
                    },
                    "EventFilter": {
                      "fields": {
                        "attribute": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "value": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "operator": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GetFunctionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudfunctions.googleapis.com/Function"
                          }
                        }
                      }
                    },
                    "ListFunctionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudfunctions.googleapis.com/Function"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListFunctionsResponse": {
                      "fields": {
                        "functions": {
                          "rule": "repeated",
                          "type": "Function",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "CreateFunctionRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "function": {
                          "type": "Function",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "functionId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "UpdateFunctionRequest": {
                      "fields": {
                        "function": {
                          "type": "Function",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFunctionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudfunctions.googleapis.com/Function"
                          }
                        }
                      }
                    },
                    "GenerateUploadUrlRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "kmsKeyName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                          }
                        }
                      }
                    },
                    "GenerateUploadUrlResponse": {
                      "fields": {
                        "uploadUrl": {
                          "type": "string",
                          "id": 1
                        },
                        "storageSource": {
                          "type": "StorageSource",
                          "id": 2
                        }
                      }
                    },
                    "GenerateDownloadUrlRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudfunctions.googleapis.com/Function"
                          }
                        }
                      }
                    },
                    "GenerateDownloadUrlResponse": {
                      "fields": {
                        "downloadUrl": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "ListRuntimesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListRuntimesResponse": {
                      "fields": {
                        "runtimes": {
                          "rule": "repeated",
                          "type": "Runtime",
                          "id": 1
                        }
                      },
                      "nested": {
                        "Runtime": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 5
                            },
                            "stage": {
                              "type": "RuntimeStage",
                              "id": 2
                            },
                            "warnings": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            },
                            "environment": {
                              "type": "Environment",
                              "id": 4
                            }
                          }
                        },
                        "RuntimeStage": {
                          "values": {
                            "RUNTIME_STAGE_UNSPECIFIED": 0,
                            "DEVELOPMENT": 1,
                            "ALPHA": 2,
                            "BETA": 3,
                            "GA": 4,
                            "DEPRECATED": 5,
                            "DECOMMISSIONED": 6
                          }
                        }
                      }
                    },
                    "OperationMetadata": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "target": {
                          "type": "string",
                          "id": 3
                        },
                        "verb": {
                          "type": "string",
                          "id": 4
                        },
                        "statusDetail": {
                          "type": "string",
                          "id": 5
                        },
                        "cancelRequested": {
                          "type": "bool",
                          "id": 6
                        },
                        "apiVersion": {
                          "type": "string",
                          "id": 7
                        },
                        "requestResource": {
                          "type": "google.protobuf.Any",
                          "id": 8
                        },
                        "stages": {
                          "rule": "repeated",
                          "type": "Stage",
                          "id": 9
                        }
                      }
                    },
                    "LocationMetadata": {
                      "fields": {
                        "environments": {
                          "rule": "repeated",
                          "type": "Environment",
                          "id": 1
                        }
                      }
                    },
                    "Stage": {
                      "fields": {
                        "name": {
                          "type": "Name",
                          "id": 1
                        },
                        "message": {
                          "type": "string",
                          "id": 2
                        },
                        "state": {
                          "type": "State",
                          "id": 3
                        },
                        "resource": {
                          "type": "string",
                          "id": 4
                        },
                        "resourceUri": {
                          "type": "string",
                          "id": 5
                        },
                        "stateMessages": {
                          "rule": "repeated",
                          "type": "StateMessage",
                          "id": 6
                        }
                      },
                      "nested": {
                        "Name": {
                          "values": {
                            "NAME_UNSPECIFIED": 0,
                            "ARTIFACT_REGISTRY": 1,
                            "BUILD": 2,
                            "SERVICE": 3,
                            "TRIGGER": 4,
                            "SERVICE_ROLLBACK": 5,
                            "TRIGGER_ROLLBACK": 6
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "NOT_STARTED": 1,
                            "IN_PROGRESS": 2,
                            "COMPLETE": 3
                          }
                        }
                      }
                    }
                  }
                },
                "v2beta": {
                  "options": {
                    "go_package": "cloud.google.com/go/functions/apiv2beta/functionspb;functionspb",
                    "java_multiple_files": true,
                    "java_outer_classname": "FunctionsProto",
                    "java_package": "com.google.cloud.functions.v2beta",
                    "objc_class_prefix": "GCF",
                    "(google.api.resource_definition).type": "cloudkms.googleapis.com/CryptoKey",
                    "(google.api.resource_definition).pattern": "projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}"
                  },
                  "nested": {
                    "FunctionService": {
                      "options": {
                        "(google.api.default_host)": "cloudfunctions.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "GetFunction": {
                          "requestType": "GetFunctionRequest",
                          "responseType": "Function",
                          "options": {
                            "(google.api.http).get": "/v2beta/{name=projects/*/locations/*/functions/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2beta/{name=projects/*/locations/*/functions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListFunctions": {
                          "requestType": "ListFunctionsRequest",
                          "responseType": "ListFunctionsResponse",
                          "options": {
                            "(google.api.http).get": "/v2beta/{parent=projects/*/locations/*}/functions",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2beta/{parent=projects/*/locations/*}/functions"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "CreateFunction": {
                          "requestType": "CreateFunctionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).post": "/v2beta/{parent=projects/*/locations/*}/functions",
                            "(google.api.http).body": "function",
                            "(google.api.method_signature)": "parent,function,function_id",
                            "(google.longrunning.operation_info).response_type": "google.cloud.functions.v2beta.Function",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.functions.v2beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta/{parent=projects/*/locations/*}/functions",
                                "body": "function"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,function,function_id"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.cloud.functions.v2beta.Function",
                                "metadata_type": "google.cloud.functions.v2beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "UpdateFunction": {
                          "requestType": "UpdateFunctionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).patch": "/v2beta/{function.name=projects/*/locations/*/functions/*}",
                            "(google.api.http).body": "function",
                            "(google.api.method_signature)": "function,update_mask",
                            "(google.longrunning.operation_info).response_type": "google.cloud.functions.v2beta.Function",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.functions.v2beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "patch": "/v2beta/{function.name=projects/*/locations/*/functions/*}",
                                "body": "function"
                              }
                            },
                            {
                              "(google.api.method_signature)": "function,update_mask"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.cloud.functions.v2beta.Function",
                                "metadata_type": "google.cloud.functions.v2beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "DeleteFunction": {
                          "requestType": "DeleteFunctionRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v2beta/{name=projects/*/locations/*/functions/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.functions.v2beta.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v2beta/{name=projects/*/locations/*/functions/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.functions.v2beta.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "GenerateUploadUrl": {
                          "requestType": "GenerateUploadUrlRequest",
                          "responseType": "GenerateUploadUrlResponse",
                          "options": {
                            "(google.api.http).post": "/v2beta/{parent=projects/*/locations/*}/functions:generateUploadUrl",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta/{parent=projects/*/locations/*}/functions:generateUploadUrl",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "GenerateDownloadUrl": {
                          "requestType": "GenerateDownloadUrlRequest",
                          "responseType": "GenerateDownloadUrlResponse",
                          "options": {
                            "(google.api.http).post": "/v2beta/{name=projects/*/locations/*/functions/*}:generateDownloadUrl",
                            "(google.api.http).body": "*"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v2beta/{name=projects/*/locations/*/functions/*}:generateDownloadUrl",
                                "body": "*"
                              }
                            }
                          ]
                        },
                        "ListRuntimes": {
                          "requestType": "ListRuntimesRequest",
                          "responseType": "ListRuntimesResponse",
                          "options": {
                            "(google.api.http).get": "/v2beta/{parent=projects/*/locations/*}/runtimes",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v2beta/{parent=projects/*/locations/*}/runtimes"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "Environment": {
                      "values": {
                        "ENVIRONMENT_UNSPECIFIED": 0,
                        "GEN_1": 1,
                        "GEN_2": 2
                      }
                    },
                    "Function": {
                      "options": {
                        "(google.api.resource).type": "cloudfunctions.googleapis.com/Function",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/functions/{function}",
                        "(google.api.resource).plural": "functions",
                        "(google.api.resource).singular": "function"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "description": {
                          "type": "string",
                          "id": 2
                        },
                        "buildConfig": {
                          "type": "BuildConfig",
                          "id": 3
                        },
                        "serviceConfig": {
                          "type": "ServiceConfig",
                          "id": 4
                        },
                        "eventTrigger": {
                          "type": "EventTrigger",
                          "id": 5
                        },
                        "state": {
                          "type": "State",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 8
                        },
                        "stateMessages": {
                          "rule": "repeated",
                          "type": "StateMessage",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "environment": {
                          "type": "Environment",
                          "id": 10
                        },
                        "url": {
                          "type": "string",
                          "id": 14,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "kmsKeyName": {
                          "type": "string",
                          "id": 25,
                          "options": {
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                          }
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "ACTIVE": 1,
                            "FAILED": 2,
                            "DEPLOYING": 3,
                            "DELETING": 4,
                            "UNKNOWN": 5
                          }
                        }
                      }
                    },
                    "StateMessage": {
                      "fields": {
                        "severity": {
                          "type": "Severity",
                          "id": 1
                        },
                        "type": {
                          "type": "string",
                          "id": 2
                        },
                        "message": {
                          "type": "string",
                          "id": 3
                        }
                      },
                      "nested": {
                        "Severity": {
                          "values": {
                            "SEVERITY_UNSPECIFIED": 0,
                            "ERROR": 1,
                            "WARNING": 2,
                            "INFO": 3
                          }
                        }
                      }
                    },
                    "StorageSource": {
                      "fields": {
                        "bucket": {
                          "type": "string",
                          "id": 1
                        },
                        "object": {
                          "type": "string",
                          "id": 2
                        },
                        "generation": {
                          "type": "int64",
                          "id": 3
                        }
                      }
                    },
                    "RepoSource": {
                      "oneofs": {
                        "revision": {
                          "oneof": [
                            "branchName",
                            "tagName",
                            "commitSha"
                          ]
                        }
                      },
                      "fields": {
                        "branchName": {
                          "type": "string",
                          "id": 3
                        },
                        "tagName": {
                          "type": "string",
                          "id": 4
                        },
                        "commitSha": {
                          "type": "string",
                          "id": 5
                        },
                        "projectId": {
                          "type": "string",
                          "id": 1
                        },
                        "repoName": {
                          "type": "string",
                          "id": 2
                        },
                        "dir": {
                          "type": "string",
                          "id": 6
                        },
                        "invertRegex": {
                          "type": "bool",
                          "id": 7
                        }
                      }
                    },
                    "Source": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "storageSource",
                            "repoSource"
                          ]
                        }
                      },
                      "fields": {
                        "storageSource": {
                          "type": "StorageSource",
                          "id": 1
                        },
                        "repoSource": {
                          "type": "RepoSource",
                          "id": 2
                        }
                      }
                    },
                    "SourceProvenance": {
                      "fields": {
                        "resolvedStorageSource": {
                          "type": "StorageSource",
                          "id": 1
                        },
                        "resolvedRepoSource": {
                          "type": "RepoSource",
                          "id": 2
                        }
                      }
                    },
                    "BuildConfig": {
                      "fields": {
                        "build": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "cloudbuild.googleapis.com/Build"
                          }
                        },
                        "runtime": {
                          "type": "string",
                          "id": 2
                        },
                        "entryPoint": {
                          "type": "string",
                          "id": 3
                        },
                        "source": {
                          "type": "Source",
                          "id": 4
                        },
                        "sourceProvenance": {
                          "type": "SourceProvenance",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "workerPool": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.resource_reference).type": "cloudbuild.googleapis.com/WorkerPool"
                          }
                        },
                        "environmentVariables": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6
                        },
                        "dockerRegistry": {
                          "type": "DockerRegistry",
                          "id": 10
                        },
                        "dockerRepository": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.resource_reference).type": "artifactregistry.googleapis.com/Repository"
                          }
                        }
                      },
                      "nested": {
                        "DockerRegistry": {
                          "values": {
                            "DOCKER_REGISTRY_UNSPECIFIED": 0,
                            "CONTAINER_REGISTRY": 1,
                            "ARTIFACT_REGISTRY": 2
                          }
                        }
                      }
                    },
                    "ServiceConfig": {
                      "fields": {
                        "service": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "run.googleapis.com/Service"
                          }
                        },
                        "timeoutSeconds": {
                          "type": "int32",
                          "id": 2
                        },
                        "availableMemory": {
                          "type": "string",
                          "id": 13
                        },
                        "availableCpu": {
                          "type": "string",
                          "id": 22
                        },
                        "environmentVariables": {
                          "keyType": "string",
                          "type": "string",
                          "id": 4
                        },
                        "maxInstanceCount": {
                          "type": "int32",
                          "id": 5
                        },
                        "minInstanceCount": {
                          "type": "int32",
                          "id": 12
                        },
                        "vpcConnector": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.resource_reference).type": "vpcaccess.googleapis.com/Connector"
                          }
                        },
                        "vpcConnectorEgressSettings": {
                          "type": "VpcConnectorEgressSettings",
                          "id": 7
                        },
                        "ingressSettings": {
                          "type": "IngressSettings",
                          "id": 8
                        },
                        "uri": {
                          "type": "string",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 10
                        },
                        "allTrafficOnLatestRevision": {
                          "type": "bool",
                          "id": 16
                        },
                        "secretEnvironmentVariables": {
                          "rule": "repeated",
                          "type": "SecretEnvVar",
                          "id": 17
                        },
                        "secretVolumes": {
                          "rule": "repeated",
                          "type": "SecretVolume",
                          "id": 19
                        },
                        "revision": {
                          "type": "string",
                          "id": 18,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "maxInstanceRequestConcurrency": {
                          "type": "int32",
                          "id": 20
                        },
                        "securityLevel": {
                          "type": "SecurityLevel",
                          "id": 21
                        }
                      },
                      "nested": {
                        "VpcConnectorEgressSettings": {
                          "values": {
                            "VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED": 0,
                            "PRIVATE_RANGES_ONLY": 1,
                            "ALL_TRAFFIC": 2
                          }
                        },
                        "IngressSettings": {
                          "values": {
                            "INGRESS_SETTINGS_UNSPECIFIED": 0,
                            "ALLOW_ALL": 1,
                            "ALLOW_INTERNAL_ONLY": 2,
                            "ALLOW_INTERNAL_AND_GCLB": 3
                          }
                        },
                        "SecurityLevel": {
                          "values": {
                            "SECURITY_LEVEL_UNSPECIFIED": 0,
                            "SECURE_ALWAYS": 1,
                            "SECURE_OPTIONAL": 2
                          }
                        }
                      }
                    },
                    "SecretEnvVar": {
                      "fields": {
                        "key": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "secret": {
                          "type": "string",
                          "id": 3
                        },
                        "version": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "SecretVolume": {
                      "fields": {
                        "mountPath": {
                          "type": "string",
                          "id": 1
                        },
                        "projectId": {
                          "type": "string",
                          "id": 2
                        },
                        "secret": {
                          "type": "string",
                          "id": 3
                        },
                        "versions": {
                          "rule": "repeated",
                          "type": "SecretVersion",
                          "id": 4
                        }
                      },
                      "nested": {
                        "SecretVersion": {
                          "fields": {
                            "version": {
                              "type": "string",
                              "id": 1
                            },
                            "path": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "EventTrigger": {
                      "fields": {
                        "trigger": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY",
                            "(google.api.resource_reference).type": "eventarc.googleapis.com/Trigger"
                          }
                        },
                        "triggerRegion": {
                          "type": "string",
                          "id": 2
                        },
                        "eventType": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "eventFilters": {
                          "rule": "repeated",
                          "type": "EventFilter",
                          "id": 4
                        },
                        "pubsubTopic": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "pubsub.googleapis.com/Topic"
                          }
                        },
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "retryPolicy": {
                          "type": "RetryPolicy",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "channel": {
                          "type": "string",
                          "id": 8,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL",
                            "(google.api.resource_reference).type": "eventarc.googleapis.com/Channel"
                          }
                        }
                      },
                      "nested": {
                        "RetryPolicy": {
                          "values": {
                            "RETRY_POLICY_UNSPECIFIED": 0,
                            "RETRY_POLICY_DO_NOT_RETRY": 1,
                            "RETRY_POLICY_RETRY": 2
                          }
                        }
                      }
                    },
                    "EventFilter": {
                      "fields": {
                        "attribute": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "value": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "operator": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GetFunctionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudfunctions.googleapis.com/Function"
                          }
                        }
                      }
                    },
                    "ListFunctionsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "cloudfunctions.googleapis.com/Function"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "ListFunctionsResponse": {
                      "fields": {
                        "functions": {
                          "rule": "repeated",
                          "type": "Function",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "CreateFunctionRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "function": {
                          "type": "Function",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "functionId": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "UpdateFunctionRequest": {
                      "fields": {
                        "function": {
                          "type": "Function",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "updateMask": {
                          "type": "google.protobuf.FieldMask",
                          "id": 2
                        }
                      }
                    },
                    "DeleteFunctionRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudfunctions.googleapis.com/Function"
                          }
                        }
                      }
                    },
                    "GenerateUploadUrlRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "kmsKeyName": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.resource_reference).type": "cloudkms.googleapis.com/CryptoKey"
                          }
                        }
                      }
                    },
                    "GenerateUploadUrlResponse": {
                      "fields": {
                        "uploadUrl": {
                          "type": "string",
                          "id": 1
                        },
                        "storageSource": {
                          "type": "StorageSource",
                          "id": 2
                        }
                      }
                    },
                    "GenerateDownloadUrlRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "cloudfunctions.googleapis.com/Function"
                          }
                        }
                      }
                    },
                    "GenerateDownloadUrlResponse": {
                      "fields": {
                        "downloadUrl": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    },
                    "ListRuntimesRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "locations.googleapis.com/Location"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ListRuntimesResponse": {
                      "fields": {
                        "runtimes": {
                          "rule": "repeated",
                          "type": "Runtime",
                          "id": 1
                        }
                      },
                      "nested": {
                        "Runtime": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            },
                            "displayName": {
                              "type": "string",
                              "id": 5
                            },
                            "stage": {
                              "type": "RuntimeStage",
                              "id": 2
                            },
                            "warnings": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 3
                            },
                            "environment": {
                              "type": "Environment",
                              "id": 4
                            }
                          }
                        },
                        "RuntimeStage": {
                          "values": {
                            "RUNTIME_STAGE_UNSPECIFIED": 0,
                            "DEVELOPMENT": 1,
                            "ALPHA": 2,
                            "BETA": 3,
                            "GA": 4,
                            "DEPRECATED": 5,
                            "DECOMMISSIONED": 6
                          }
                        }
                      }
                    },
                    "OperationMetadata": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "target": {
                          "type": "string",
                          "id": 3
                        },
                        "verb": {
                          "type": "string",
                          "id": 4
                        },
                        "statusDetail": {
                          "type": "string",
                          "id": 5
                        },
                        "cancelRequested": {
                          "type": "bool",
                          "id": 6
                        },
                        "apiVersion": {
                          "type": "string",
                          "id": 7
                        },
                        "requestResource": {
                          "type": "google.protobuf.Any",
                          "id": 8
                        },
                        "stages": {
                          "rule": "repeated",
                          "type": "Stage",
                          "id": 9
                        }
                      }
                    },
                    "LocationMetadata": {
                      "fields": {
                        "environments": {
                          "rule": "repeated",
                          "type": "Environment",
                          "id": 1
                        }
                      }
                    },
                    "Stage": {
                      "fields": {
                        "name": {
                          "type": "Name",
                          "id": 1
                        },
                        "message": {
                          "type": "string",
                          "id": 2
                        },
                        "state": {
                          "type": "State",
                          "id": 3
                        },
                        "resource": {
                          "type": "string",
                          "id": 4
                        },
                        "resourceUri": {
                          "type": "string",
                          "id": 5
                        },
                        "stateMessages": {
                          "rule": "repeated",
                          "type": "StateMessage",
                          "id": 6
                        }
                      },
                      "nested": {
                        "Name": {
                          "values": {
                            "NAME_UNSPECIFIED": 0,
                            "ARTIFACT_REGISTRY": 1,
                            "BUILD": 2,
                            "SERVICE": 3,
                            "TRIGGER": 4,
                            "SERVICE_ROLLBACK": 5,
                            "TRIGGER_ROLLBACK": 6
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "NOT_STARTED": 1,
                            "IN_PROGRESS": 2,
                            "COMPLETE": 3
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ResourceProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "target": {
                  "type": "OptionTargetType",
                  "id": 18
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "FieldMask": {
              "fields": {
                "paths": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 1
                }
              }
            },
            "Empty": {
              "fields": {}
            }
          }
        },
        "iam": {
          "nested": {
            "v1": {
              "options": {
                "cc_enable_arenas": true,
                "csharp_namespace": "Google.Cloud.Iam.V1",
                "go_package": "google.golang.org/genproto/googleapis/iam/v1;iam",
                "java_multiple_files": true,
                "java_outer_classname": "PolicyProto",
                "java_package": "com.google.iam.v1",
                "php_namespace": "Google\\Cloud\\Iam\\V1"
              },
              "nested": {
                "IAMPolicy": {
                  "options": {
                    "(google.api.default_host)": "iam-meta-api.googleapis.com"
                  },
                  "methods": {
                    "SetIamPolicy": {
                      "requestType": "SetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:setIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:setIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "GetIamPolicy": {
                      "requestType": "GetIamPolicyRequest",
                      "responseType": "Policy",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:getIamPolicy",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:getIamPolicy",
                            "body": "*"
                          }
                        }
                      ]
                    },
                    "TestIamPermissions": {
                      "requestType": "TestIamPermissionsRequest",
                      "responseType": "TestIamPermissionsResponse",
                      "options": {
                        "(google.api.http).post": "/v1/{resource=**}:testIamPermissions",
                        "(google.api.http).body": "*"
                      },
                      "parsedOptions": [
                        {
                          "(google.api.http)": {
                            "post": "/v1/{resource=**}:testIamPermissions",
                            "body": "*"
                          }
                        }
                      ]
                    }
                  }
                },
                "SetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "policy": {
                      "type": "Policy",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    },
                    "updateMask": {
                      "type": "google.protobuf.FieldMask",
                      "id": 3
                    }
                  }
                },
                "GetIamPolicyRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "options": {
                      "type": "GetPolicyOptions",
                      "id": 2
                    }
                  }
                },
                "TestIamPermissionsRequest": {
                  "fields": {
                    "resource": {
                      "type": "string",
                      "id": 1,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED",
                        "(google.api.resource_reference).type": "*"
                      }
                    },
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2,
                      "options": {
                        "(google.api.field_behavior)": "REQUIRED"
                      }
                    }
                  }
                },
                "TestIamPermissionsResponse": {
                  "fields": {
                    "permissions": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 1
                    }
                  }
                },
                "GetPolicyOptions": {
                  "fields": {
                    "requestedPolicyVersion": {
                      "type": "int32",
                      "id": 1
                    }
                  }
                },
                "Policy": {
                  "fields": {
                    "version": {
                      "type": "int32",
                      "id": 1
                    },
                    "bindings": {
                      "rule": "repeated",
                      "type": "Binding",
                      "id": 4
                    },
                    "auditConfigs": {
                      "rule": "repeated",
                      "type": "AuditConfig",
                      "id": 6
                    },
                    "etag": {
                      "type": "bytes",
                      "id": 3
                    }
                  }
                },
                "Binding": {
                  "fields": {
                    "role": {
                      "type": "string",
                      "id": 1
                    },
                    "members": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 3
                    }
                  }
                },
                "AuditConfig": {
                  "fields": {
                    "service": {
                      "type": "string",
                      "id": 1
                    },
                    "auditLogConfigs": {
                      "rule": "repeated",
                      "type": "AuditLogConfig",
                      "id": 3
                    }
                  }
                },
                "AuditLogConfig": {
                  "fields": {
                    "logType": {
                      "type": "LogType",
                      "id": 1
                    },
                    "exemptedMembers": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 2
                    }
                  },
                  "nested": {
                    "LogType": {
                      "values": {
                        "LOG_TYPE_UNSPECIFIED": 0,
                        "ADMIN_READ": 1,
                        "DATA_WRITE": 2,
                        "DATA_READ": 3
                      }
                    }
                  }
                },
                "PolicyDelta": {
                  "fields": {
                    "bindingDeltas": {
                      "rule": "repeated",
                      "type": "BindingDelta",
                      "id": 1
                    },
                    "auditConfigDeltas": {
                      "rule": "repeated",
                      "type": "AuditConfigDelta",
                      "id": 2
                    }
                  }
                },
                "BindingDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "role": {
                      "type": "string",
                      "id": 2
                    },
                    "member": {
                      "type": "string",
                      "id": 3
                    },
                    "condition": {
                      "type": "google.type.Expr",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                },
                "AuditConfigDelta": {
                  "fields": {
                    "action": {
                      "type": "Action",
                      "id": 1
                    },
                    "service": {
                      "type": "string",
                      "id": 2
                    },
                    "exemptedMember": {
                      "type": "string",
                      "id": 3
                    },
                    "logType": {
                      "type": "string",
                      "id": 4
                    }
                  },
                  "nested": {
                    "Action": {
                      "values": {
                        "ACTION_UNSPECIFIED": 0,
                        "ADD": 1,
                        "REMOVE": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "type": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/type/expr;expr",
            "java_multiple_files": true,
            "java_outer_classname": "ExprProto",
            "java_package": "com.google.type",
            "objc_class_prefix": "GTP"
          },
          "nested": {
            "Expr": {
              "fields": {
                "expression": {
                  "type": "string",
                  "id": 1
                },
                "title": {
                  "type": "string",
                  "id": 2
                },
                "description": {
                  "type": "string",
                  "id": 3
                },
                "location": {
                  "type": "string",
                  "id": 4
                }
              }
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "google.golang.org/genproto/googleapis/longrunning;longrunning",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        }
      }
    }
  }
}