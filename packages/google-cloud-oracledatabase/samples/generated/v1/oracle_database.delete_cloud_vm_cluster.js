// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(name) {
  // [START oracledatabase_v1_generated_OracleDatabase_DeleteCloudVmCluster_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The name of the Cloud VM Cluster in the following format:
   *  projects/{project}/locations/{location}/cloudVmClusters/{cloud_vm_cluster}.
   */
  // const name = 'abc123'
  /**
   *  Optional. An optional ID to identify the request. This value is used to
   *  identify duplicate requests. If you make a request with the same request ID
   *  and the original request is still in progress or completed, the server
   *  ignores the second request. This prevents clients from
   *  accidentally creating duplicate commitments.
   *  The request ID must be a valid UUID with the exception that zero UUID is
   *  not supported (00000000-0000-0000-0000-000000000000).
   */
  // const requestId = 'abc123'
  /**
   *  Optional. If set to true, all child resources for the VM Cluster will be
   *  deleted. A VM Cluster can only be deleted once all its child resources have
   *  been deleted.
   */
  // const force = true

  // Imports the Oracledatabase library
  const {OracleDatabaseClient} = require('@google-cloud/oracledatabase').v1;

  // Instantiates a client
  const oracledatabaseClient = new OracleDatabaseClient();

  async function callDeleteCloudVmCluster() {
    // Construct request
    const request = {
      name,
    };

    // Run request
    const [operation] = await oracledatabaseClient.deleteCloudVmCluster(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  callDeleteCloudVmCluster();
  // [END oracledatabase_v1_generated_OracleDatabase_DeleteCloudVmCluster_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
