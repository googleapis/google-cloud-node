{
  "nested": {
    "google": {
      "nested": {
        "cloud": {
          "nested": {
            "batch": {
              "nested": {
                "v1": {
                  "options": {
                    "csharp_namespace": "Google.Cloud.Batch.V1",
                    "go_package": "cloud.google.com/go/batch/apiv1/batchpb;batchpb",
                    "java_multiple_files": true,
                    "java_outer_classname": "VolumeProto",
                    "java_package": "com.google.cloud.batch.v1",
                    "objc_class_prefix": "GCB",
                    "php_namespace": "Google\\Cloud\\Batch\\V1",
                    "ruby_package": "Google::Cloud::Batch::V1"
                  },
                  "nested": {
                    "BatchService": {
                      "options": {
                        "(google.api.default_host)": "batch.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateJob": {
                          "requestType": "CreateJobRequest",
                          "responseType": "Job",
                          "options": {
                            "(google.api.http).post": "/v1/{parent=projects/*/locations/*}/jobs",
                            "(google.api.http).body": "job",
                            "(google.api.method_signature)": "parent,job,job_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1/{parent=projects/*/locations/*}/jobs",
                                "body": "job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,job,job_id"
                            }
                          ]
                        },
                        "GetJob": {
                          "requestType": "GetJobRequest",
                          "responseType": "Job",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/jobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/jobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "DeleteJob": {
                          "requestType": "DeleteJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1/{name=projects/*/locations/*/jobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.batch.v1.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1/{name=projects/*/locations/*/jobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.batch.v1.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListJobs": {
                          "requestType": "ListJobsRequest",
                          "responseType": "ListJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*}/jobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*}/jobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetTask": {
                          "requestType": "GetTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).get": "/v1/{name=projects/*/locations/*/jobs/*/taskGroups/*/tasks/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{name=projects/*/locations/*/jobs/*/taskGroups/*/tasks/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListTasks": {
                          "requestType": "ListTasksRequest",
                          "responseType": "ListTasksResponse",
                          "options": {
                            "(google.api.http).get": "/v1/{parent=projects/*/locations/*/jobs/*/taskGroups/*}/tasks",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1/{parent=projects/*/locations/*/jobs/*/taskGroups/*}/tasks"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "batch.googleapis.com/Job"
                          }
                        },
                        "jobId": {
                          "type": "string",
                          "id": 2
                        },
                        "job": {
                          "type": "Job",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GetJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "batch.googleapis.com/Job"
                          }
                        }
                      }
                    },
                    "DeleteJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "reason": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListJobsResponse": {
                      "fields": {
                        "jobs": {
                          "rule": "repeated",
                          "type": "Job",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListTasksRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "batch.googleapis.com/TaskGroup"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ListTasksResponse": {
                      "fields": {
                        "tasks": {
                          "rule": "repeated",
                          "type": "Task",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "batch.googleapis.com/Task"
                          }
                        }
                      }
                    },
                    "OperationMetadata": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "target": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "verb": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "statusMessage": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "requestedCancellation": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "apiVersion": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Job": {
                      "options": {
                        "(google.api.resource).type": "batch.googleapis.com/Job",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/jobs/{job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "priority": {
                          "type": "int64",
                          "id": 3
                        },
                        "taskGroups": {
                          "rule": "repeated",
                          "type": "TaskGroup",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "allocationPolicy": {
                          "type": "AllocationPolicy",
                          "id": 7
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 8
                        },
                        "status": {
                          "type": "JobStatus",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "logsPolicy": {
                          "type": "LogsPolicy",
                          "id": 13
                        },
                        "notifications": {
                          "rule": "repeated",
                          "type": "JobNotification",
                          "id": 14
                        }
                      }
                    },
                    "LogsPolicy": {
                      "fields": {
                        "destination": {
                          "type": "Destination",
                          "id": 1
                        },
                        "logsPath": {
                          "type": "string",
                          "id": 2
                        }
                      },
                      "nested": {
                        "Destination": {
                          "values": {
                            "DESTINATION_UNSPECIFIED": 0,
                            "CLOUD_LOGGING": 1,
                            "PATH": 2
                          }
                        }
                      }
                    },
                    "JobStatus": {
                      "fields": {
                        "state": {
                          "type": "State",
                          "id": 1
                        },
                        "statusEvents": {
                          "rule": "repeated",
                          "type": "StatusEvent",
                          "id": 2
                        },
                        "taskGroups": {
                          "keyType": "string",
                          "type": "TaskGroupStatus",
                          "id": 4
                        },
                        "runDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 5
                        }
                      },
                      "nested": {
                        "InstanceStatus": {
                          "fields": {
                            "machineType": {
                              "type": "string",
                              "id": 1
                            },
                            "provisioningModel": {
                              "type": "AllocationPolicy.ProvisioningModel",
                              "id": 2
                            },
                            "taskPack": {
                              "type": "int64",
                              "id": 3
                            },
                            "bootDisk": {
                              "type": "AllocationPolicy.Disk",
                              "id": 4
                            }
                          }
                        },
                        "TaskGroupStatus": {
                          "fields": {
                            "counts": {
                              "keyType": "string",
                              "type": "int64",
                              "id": 1
                            },
                            "instances": {
                              "rule": "repeated",
                              "type": "InstanceStatus",
                              "id": 2
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "QUEUED": 1,
                            "SCHEDULED": 2,
                            "RUNNING": 3,
                            "SUCCEEDED": 4,
                            "FAILED": 5,
                            "DELETION_IN_PROGRESS": 6
                          }
                        }
                      }
                    },
                    "JobNotification": {
                      "fields": {
                        "pubsubTopic": {
                          "type": "string",
                          "id": 1
                        },
                        "message": {
                          "type": "Message",
                          "id": 2
                        }
                      },
                      "nested": {
                        "Message": {
                          "fields": {
                            "type": {
                              "type": "Type",
                              "id": 1
                            },
                            "newJobState": {
                              "type": "JobStatus.State",
                              "id": 2
                            },
                            "newTaskState": {
                              "type": "TaskStatus.State",
                              "id": 3
                            }
                          }
                        },
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "JOB_STATE_CHANGED": 1,
                            "TASK_STATE_CHANGED": 2
                          }
                        }
                      }
                    },
                    "AllocationPolicy": {
                      "fields": {
                        "location": {
                          "type": "LocationPolicy",
                          "id": 1
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "InstancePolicyOrTemplate",
                          "id": 8
                        },
                        "serviceAccount": {
                          "type": "ServiceAccount",
                          "id": 9
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6
                        },
                        "network": {
                          "type": "NetworkPolicy",
                          "id": 7
                        },
                        "placement": {
                          "type": "PlacementPolicy",
                          "id": 10
                        }
                      },
                      "nested": {
                        "LocationPolicy": {
                          "fields": {
                            "allowedLocations": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            }
                          }
                        },
                        "Disk": {
                          "oneofs": {
                            "dataSource": {
                              "oneof": [
                                "image",
                                "snapshot"
                              ]
                            }
                          },
                          "fields": {
                            "image": {
                              "type": "string",
                              "id": 4
                            },
                            "snapshot": {
                              "type": "string",
                              "id": 5
                            },
                            "type": {
                              "type": "string",
                              "id": 1
                            },
                            "sizeGb": {
                              "type": "int64",
                              "id": 2
                            },
                            "diskInterface": {
                              "type": "string",
                              "id": 6
                            }
                          }
                        },
                        "AttachedDisk": {
                          "oneofs": {
                            "attached": {
                              "oneof": [
                                "newDisk",
                                "existingDisk"
                              ]
                            }
                          },
                          "fields": {
                            "newDisk": {
                              "type": "Disk",
                              "id": 1
                            },
                            "existingDisk": {
                              "type": "string",
                              "id": 2
                            },
                            "deviceName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "Accelerator": {
                          "fields": {
                            "type": {
                              "type": "string",
                              "id": 1
                            },
                            "count": {
                              "type": "int64",
                              "id": 2
                            },
                            "installGpuDrivers": {
                              "type": "bool",
                              "id": 3,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "driverVersion": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "InstancePolicy": {
                          "fields": {
                            "machineType": {
                              "type": "string",
                              "id": 2
                            },
                            "minCpuPlatform": {
                              "type": "string",
                              "id": 3
                            },
                            "provisioningModel": {
                              "type": "ProvisioningModel",
                              "id": 4
                            },
                            "accelerators": {
                              "rule": "repeated",
                              "type": "Accelerator",
                              "id": 5
                            },
                            "bootDisk": {
                              "type": "Disk",
                              "id": 8
                            },
                            "disks": {
                              "rule": "repeated",
                              "type": "AttachedDisk",
                              "id": 6
                            }
                          }
                        },
                        "InstancePolicyOrTemplate": {
                          "oneofs": {
                            "policyTemplate": {
                              "oneof": [
                                "policy",
                                "instanceTemplate"
                              ]
                            }
                          },
                          "fields": {
                            "policy": {
                              "type": "InstancePolicy",
                              "id": 1
                            },
                            "instanceTemplate": {
                              "type": "string",
                              "id": 2
                            },
                            "installGpuDrivers": {
                              "type": "bool",
                              "id": 3
                            }
                          }
                        },
                        "NetworkInterface": {
                          "fields": {
                            "network": {
                              "type": "string",
                              "id": 1
                            },
                            "subnetwork": {
                              "type": "string",
                              "id": 2
                            },
                            "noExternalIpAddress": {
                              "type": "bool",
                              "id": 3
                            }
                          }
                        },
                        "NetworkPolicy": {
                          "fields": {
                            "networkInterfaces": {
                              "rule": "repeated",
                              "type": "NetworkInterface",
                              "id": 1
                            }
                          }
                        },
                        "PlacementPolicy": {
                          "fields": {
                            "collocation": {
                              "type": "string",
                              "id": 1
                            },
                            "maxDistance": {
                              "type": "int64",
                              "id": 2
                            }
                          }
                        },
                        "ProvisioningModel": {
                          "values": {
                            "PROVISIONING_MODEL_UNSPECIFIED": 0,
                            "STANDARD": 1,
                            "SPOT": 2,
                            "PREEMPTIBLE": 3
                          }
                        }
                      }
                    },
                    "TaskGroup": {
                      "options": {
                        "(google.api.resource).type": "batch.googleapis.com/TaskGroup",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/jobs/{job}/taskGroups/{task_group}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "taskSpec": {
                          "type": "TaskSpec",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "taskCount": {
                          "type": "int64",
                          "id": 4
                        },
                        "parallelism": {
                          "type": "int64",
                          "id": 5
                        },
                        "schedulingPolicy": {
                          "type": "SchedulingPolicy",
                          "id": 6
                        },
                        "taskEnvironments": {
                          "rule": "repeated",
                          "type": "Environment",
                          "id": 9
                        },
                        "taskCountPerNode": {
                          "type": "int64",
                          "id": 10
                        },
                        "requireHostsFile": {
                          "type": "bool",
                          "id": 11
                        },
                        "permissiveSsh": {
                          "type": "bool",
                          "id": 12
                        }
                      },
                      "nested": {
                        "SchedulingPolicy": {
                          "values": {
                            "SCHEDULING_POLICY_UNSPECIFIED": 0,
                            "AS_SOON_AS_POSSIBLE": 1,
                            "IN_ORDER": 2
                          }
                        }
                      }
                    },
                    "ServiceAccount": {
                      "fields": {
                        "email": {
                          "type": "string",
                          "id": 1
                        },
                        "scopes": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ComputeResource": {
                      "fields": {
                        "cpuMilli": {
                          "type": "int64",
                          "id": 1
                        },
                        "memoryMib": {
                          "type": "int64",
                          "id": 2
                        },
                        "bootDiskMib": {
                          "type": "int64",
                          "id": 4
                        }
                      }
                    },
                    "StatusEvent": {
                      "fields": {
                        "type": {
                          "type": "string",
                          "id": 3
                        },
                        "description": {
                          "type": "string",
                          "id": 1
                        },
                        "eventTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "taskExecution": {
                          "type": "TaskExecution",
                          "id": 4
                        },
                        "taskState": {
                          "type": "TaskStatus.State",
                          "id": 5
                        }
                      }
                    },
                    "TaskExecution": {
                      "fields": {
                        "exitCode": {
                          "type": "int32",
                          "id": 1
                        }
                      }
                    },
                    "TaskStatus": {
                      "fields": {
                        "state": {
                          "type": "State",
                          "id": 1
                        },
                        "statusEvents": {
                          "rule": "repeated",
                          "type": "StatusEvent",
                          "id": 2
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "PENDING": 1,
                            "ASSIGNED": 2,
                            "RUNNING": 3,
                            "FAILED": 4,
                            "SUCCEEDED": 5,
                            "UNEXECUTED": 6
                          }
                        }
                      }
                    },
                    "Runnable": {
                      "oneofs": {
                        "executable": {
                          "oneof": [
                            "container",
                            "script",
                            "barrier"
                          ]
                        }
                      },
                      "fields": {
                        "container": {
                          "type": "Container",
                          "id": 1
                        },
                        "script": {
                          "type": "Script",
                          "id": 2
                        },
                        "barrier": {
                          "type": "Barrier",
                          "id": 6
                        },
                        "ignoreExitStatus": {
                          "type": "bool",
                          "id": 3
                        },
                        "background": {
                          "type": "bool",
                          "id": 4
                        },
                        "alwaysRun": {
                          "type": "bool",
                          "id": 5
                        },
                        "environment": {
                          "type": "Environment",
                          "id": 7
                        },
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 8
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 9
                        }
                      },
                      "nested": {
                        "Container": {
                          "fields": {
                            "imageUri": {
                              "type": "string",
                              "id": 1
                            },
                            "commands": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "entrypoint": {
                              "type": "string",
                              "id": 3
                            },
                            "volumes": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 7
                            },
                            "options": {
                              "type": "string",
                              "id": 8
                            },
                            "blockExternalNetwork": {
                              "type": "bool",
                              "id": 9
                            },
                            "username": {
                              "type": "string",
                              "id": 10
                            },
                            "password": {
                              "type": "string",
                              "id": 11
                            }
                          }
                        },
                        "Script": {
                          "oneofs": {
                            "command": {
                              "oneof": [
                                "path",
                                "text"
                              ]
                            }
                          },
                          "fields": {
                            "path": {
                              "type": "string",
                              "id": 1
                            },
                            "text": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "Barrier": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "TaskSpec": {
                      "fields": {
                        "runnables": {
                          "rule": "repeated",
                          "type": "Runnable",
                          "id": 8
                        },
                        "computeResource": {
                          "type": "ComputeResource",
                          "id": 3
                        },
                        "maxRunDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 4
                        },
                        "maxRetryCount": {
                          "type": "int32",
                          "id": 5
                        },
                        "lifecyclePolicies": {
                          "rule": "repeated",
                          "type": "LifecyclePolicy",
                          "id": 9
                        },
                        "environments": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "volumes": {
                          "rule": "repeated",
                          "type": "Volume",
                          "id": 7
                        },
                        "environment": {
                          "type": "Environment",
                          "id": 10
                        }
                      }
                    },
                    "LifecyclePolicy": {
                      "fields": {
                        "action": {
                          "type": "Action",
                          "id": 1
                        },
                        "actionCondition": {
                          "type": "ActionCondition",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ActionCondition": {
                          "fields": {
                            "exitCodes": {
                              "rule": "repeated",
                              "type": "int32",
                              "id": 1
                            }
                          }
                        },
                        "Action": {
                          "values": {
                            "ACTION_UNSPECIFIED": 0,
                            "RETRY_TASK": 1,
                            "FAIL_TASK": 2
                          }
                        }
                      }
                    },
                    "Task": {
                      "options": {
                        "(google.api.resource).type": "batch.googleapis.com/Task",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/jobs/{job}/taskGroups/{task_group}/tasks/{task}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "status": {
                          "type": "TaskStatus",
                          "id": 2
                        }
                      }
                    },
                    "Environment": {
                      "fields": {
                        "variables": {
                          "keyType": "string",
                          "type": "string",
                          "id": 1
                        },
                        "secretVariables": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "encryptedVariables": {
                          "type": "KMSEnvMap",
                          "id": 3
                        }
                      },
                      "nested": {
                        "KMSEnvMap": {
                          "fields": {
                            "keyName": {
                              "type": "string",
                              "id": 1
                            },
                            "cipherText": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "Volume": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "nfs",
                            "gcs",
                            "deviceName"
                          ]
                        }
                      },
                      "fields": {
                        "nfs": {
                          "type": "NFS",
                          "id": 1
                        },
                        "gcs": {
                          "type": "GCS",
                          "id": 3
                        },
                        "deviceName": {
                          "type": "string",
                          "id": 6
                        },
                        "mountPath": {
                          "type": "string",
                          "id": 4
                        },
                        "mountOptions": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "NFS": {
                      "fields": {
                        "server": {
                          "type": "string",
                          "id": 1
                        },
                        "remotePath": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "GCS": {
                      "fields": {
                        "remotePath": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    }
                  }
                },
                "v1alpha": {
                  "options": {
                    "csharp_namespace": "Google.Cloud.Batch.V1Alpha",
                    "go_package": "cloud.google.com/go/batch/apiv1alpha/batchpb;batchpb",
                    "java_multiple_files": true,
                    "java_outer_classname": "VolumeProto",
                    "java_package": "com.google.cloud.batch.v1alpha",
                    "objc_class_prefix": "GCB",
                    "php_namespace": "Google\\Cloud\\Batch\\V1alpha",
                    "ruby_package": "Google::Cloud::Batch::V1alpha"
                  },
                  "nested": {
                    "BatchService": {
                      "options": {
                        "(google.api.default_host)": "batch.googleapis.com",
                        "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform"
                      },
                      "methods": {
                        "CreateJob": {
                          "requestType": "CreateJobRequest",
                          "responseType": "Job",
                          "options": {
                            "(google.api.http).post": "/v1alpha/{parent=projects/*/locations/*}/jobs",
                            "(google.api.http).body": "job",
                            "(google.api.method_signature)": "parent,job,job_id"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "post": "/v1alpha/{parent=projects/*/locations/*}/jobs",
                                "body": "job"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent,job,job_id"
                            }
                          ]
                        },
                        "GetJob": {
                          "requestType": "GetJobRequest",
                          "responseType": "Job",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{name=projects/*/locations/*/jobs/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{name=projects/*/locations/*/jobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "DeleteJob": {
                          "requestType": "DeleteJobRequest",
                          "responseType": "google.longrunning.Operation",
                          "options": {
                            "(google.api.http).delete": "/v1alpha/{name=projects/*/locations/*/jobs/*}",
                            "(google.api.method_signature)": "name",
                            "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                            "(google.longrunning.operation_info).metadata_type": "google.cloud.batch.v1alpha.OperationMetadata"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "delete": "/v1alpha/{name=projects/*/locations/*/jobs/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            },
                            {
                              "(google.longrunning.operation_info)": {
                                "response_type": "google.protobuf.Empty",
                                "metadata_type": "google.cloud.batch.v1alpha.OperationMetadata"
                              }
                            }
                          ]
                        },
                        "ListJobs": {
                          "requestType": "ListJobsRequest",
                          "responseType": "ListJobsResponse",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{parent=projects/*/locations/*}/jobs",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{parent=projects/*/locations/*}/jobs"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        },
                        "GetTask": {
                          "requestType": "GetTaskRequest",
                          "responseType": "Task",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{name=projects/*/locations/*/jobs/*/taskGroups/*/tasks/*}",
                            "(google.api.method_signature)": "name"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{name=projects/*/locations/*/jobs/*/taskGroups/*/tasks/*}"
                              }
                            },
                            {
                              "(google.api.method_signature)": "name"
                            }
                          ]
                        },
                        "ListTasks": {
                          "requestType": "ListTasksRequest",
                          "responseType": "ListTasksResponse",
                          "options": {
                            "(google.api.http).get": "/v1alpha/{parent=projects/*/locations/*/jobs/*/taskGroups/*}/tasks",
                            "(google.api.method_signature)": "parent"
                          },
                          "parsedOptions": [
                            {
                              "(google.api.http)": {
                                "get": "/v1alpha/{parent=projects/*/locations/*/jobs/*/taskGroups/*}/tasks"
                              }
                            },
                            {
                              "(google.api.method_signature)": "parent"
                            }
                          ]
                        }
                      }
                    },
                    "CreateJobRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).child_type": "batch.googleapis.com/Job"
                          }
                        },
                        "jobId": {
                          "type": "string",
                          "id": 2
                        },
                        "job": {
                          "type": "Job",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "GetJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "batch.googleapis.com/Job"
                          }
                        }
                      }
                    },
                    "DeleteJobRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "reason": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "requestId": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "ListJobsRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1
                        },
                        "filter": {
                          "type": "string",
                          "id": 4
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 2
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListJobsResponse": {
                      "fields": {
                        "jobs": {
                          "rule": "repeated",
                          "type": "Job",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "ListTasksRequest": {
                      "fields": {
                        "parent": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "batch.googleapis.com/TaskGroup"
                          }
                        },
                        "filter": {
                          "type": "string",
                          "id": 2
                        },
                        "orderBy": {
                          "type": "string",
                          "id": 5
                        },
                        "pageSize": {
                          "type": "int32",
                          "id": 3
                        },
                        "pageToken": {
                          "type": "string",
                          "id": 4
                        }
                      }
                    },
                    "ListTasksResponse": {
                      "fields": {
                        "tasks": {
                          "rule": "repeated",
                          "type": "Task",
                          "id": 1
                        },
                        "nextPageToken": {
                          "type": "string",
                          "id": 2
                        },
                        "unreachable": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3
                        }
                      }
                    },
                    "GetTaskRequest": {
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED",
                            "(google.api.resource_reference).type": "batch.googleapis.com/Task"
                          }
                        }
                      }
                    },
                    "OperationMetadata": {
                      "fields": {
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "endTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "target": {
                          "type": "string",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "verb": {
                          "type": "string",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "statusMessage": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "requestedCancellation": {
                          "type": "bool",
                          "id": 6,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "apiVersion": {
                          "type": "string",
                          "id": 7,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        }
                      }
                    },
                    "Job": {
                      "options": {
                        "(google.api.resource).type": "batch.googleapis.com/Job",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/jobs/{job}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "uid": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "priority": {
                          "type": "int64",
                          "id": 3
                        },
                        "taskGroups": {
                          "rule": "repeated",
                          "type": "TaskGroup",
                          "id": 4,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "schedulingPolicy": {
                          "type": "SchedulingPolicy",
                          "id": 5
                        },
                        "dependencies": {
                          "rule": "repeated",
                          "type": "JobDependency",
                          "id": 6
                        },
                        "allocationPolicy": {
                          "type": "AllocationPolicy",
                          "id": 7
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 8
                        },
                        "status": {
                          "type": "JobStatus",
                          "id": 9,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "notification": {
                          "type": "JobNotification",
                          "id": 10,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "createTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 11,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "updateTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 12,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "logsPolicy": {
                          "type": "LogsPolicy",
                          "id": 13
                        },
                        "notifications": {
                          "rule": "repeated",
                          "type": "JobNotification",
                          "id": 14
                        }
                      },
                      "nested": {
                        "SchedulingPolicy": {
                          "values": {
                            "SCHEDULING_POLICY_UNSPECIFIED": 0,
                            "AS_SOON_AS_POSSIBLE": 1
                          }
                        }
                      }
                    },
                    "LogsPolicy": {
                      "fields": {
                        "destination": {
                          "type": "Destination",
                          "id": 1
                        },
                        "logsPath": {
                          "type": "string",
                          "id": 2
                        }
                      },
                      "nested": {
                        "Destination": {
                          "values": {
                            "DESTINATION_UNSPECIFIED": 0,
                            "CLOUD_LOGGING": 1,
                            "PATH": 2
                          }
                        }
                      }
                    },
                    "JobDependency": {
                      "fields": {
                        "items": {
                          "keyType": "string",
                          "type": "Type",
                          "id": 1
                        }
                      },
                      "nested": {
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "SUCCEEDED": 1,
                            "FAILED": 2,
                            "FINISHED": 3
                          }
                        }
                      }
                    },
                    "JobStatus": {
                      "fields": {
                        "state": {
                          "type": "State",
                          "id": 1
                        },
                        "statusEvents": {
                          "rule": "repeated",
                          "type": "StatusEvent",
                          "id": 2
                        },
                        "taskGroups": {
                          "keyType": "string",
                          "type": "TaskGroupStatus",
                          "id": 4
                        },
                        "runDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 5
                        },
                        "resourceUsage": {
                          "type": "ResourceUsage",
                          "id": 6
                        }
                      },
                      "nested": {
                        "InstanceStatus": {
                          "fields": {
                            "machineType": {
                              "type": "string",
                              "id": 1
                            },
                            "provisioningModel": {
                              "type": "AllocationPolicy.ProvisioningModel",
                              "id": 2
                            },
                            "taskPack": {
                              "type": "int64",
                              "id": 3
                            },
                            "bootDisk": {
                              "type": "AllocationPolicy.Disk",
                              "id": 4
                            }
                          }
                        },
                        "TaskGroupStatus": {
                          "fields": {
                            "counts": {
                              "keyType": "string",
                              "type": "int64",
                              "id": 1
                            },
                            "instances": {
                              "rule": "repeated",
                              "type": "InstanceStatus",
                              "id": 2
                            }
                          }
                        },
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "QUEUED": 1,
                            "SCHEDULED": 2,
                            "RUNNING": 3,
                            "SUCCEEDED": 4,
                            "FAILED": 5,
                            "DELETION_IN_PROGRESS": 6
                          }
                        }
                      }
                    },
                    "ResourceUsage": {
                      "fields": {
                        "coreHours": {
                          "type": "double",
                          "id": 1
                        }
                      }
                    },
                    "JobNotification": {
                      "fields": {
                        "pubsubTopic": {
                          "type": "string",
                          "id": 1
                        },
                        "message": {
                          "type": "Message",
                          "id": 2
                        }
                      },
                      "nested": {
                        "Message": {
                          "fields": {
                            "type": {
                              "type": "Type",
                              "id": 1
                            },
                            "newJobState": {
                              "type": "JobStatus.State",
                              "id": 2
                            },
                            "newTaskState": {
                              "type": "TaskStatus.State",
                              "id": 3
                            }
                          }
                        },
                        "Type": {
                          "values": {
                            "TYPE_UNSPECIFIED": 0,
                            "JOB_STATE_CHANGED": 1,
                            "TASK_STATE_CHANGED": 2
                          }
                        }
                      }
                    },
                    "AllocationPolicy": {
                      "fields": {
                        "location": {
                          "type": "LocationPolicy",
                          "id": 1
                        },
                        "instance": {
                          "type": "InstancePolicy",
                          "id": 2,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "instances": {
                          "rule": "repeated",
                          "type": "InstancePolicyOrTemplate",
                          "id": 8
                        },
                        "instanceTemplates": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 3,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "provisioningModels": {
                          "rule": "repeated",
                          "type": "ProvisioningModel",
                          "id": 4,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "serviceAccountEmail": {
                          "type": "string",
                          "id": 5,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "serviceAccount": {
                          "type": "ServiceAccount",
                          "id": 9
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6
                        },
                        "network": {
                          "type": "NetworkPolicy",
                          "id": 7
                        },
                        "placement": {
                          "type": "PlacementPolicy",
                          "id": 10
                        }
                      },
                      "nested": {
                        "LocationPolicy": {
                          "fields": {
                            "allowedLocations": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1
                            },
                            "deniedLocations": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "Disk": {
                          "oneofs": {
                            "dataSource": {
                              "oneof": [
                                "image",
                                "snapshot"
                              ]
                            }
                          },
                          "fields": {
                            "image": {
                              "type": "string",
                              "id": 4
                            },
                            "snapshot": {
                              "type": "string",
                              "id": 5
                            },
                            "type": {
                              "type": "string",
                              "id": 1
                            },
                            "sizeGb": {
                              "type": "int64",
                              "id": 2
                            },
                            "diskInterface": {
                              "type": "string",
                              "id": 6
                            }
                          }
                        },
                        "AttachedDisk": {
                          "oneofs": {
                            "attached": {
                              "oneof": [
                                "newDisk",
                                "existingDisk"
                              ]
                            }
                          },
                          "fields": {
                            "newDisk": {
                              "type": "Disk",
                              "id": 1
                            },
                            "existingDisk": {
                              "type": "string",
                              "id": 2
                            },
                            "deviceName": {
                              "type": "string",
                              "id": 3
                            }
                          }
                        },
                        "Accelerator": {
                          "fields": {
                            "type": {
                              "type": "string",
                              "id": 1
                            },
                            "count": {
                              "type": "int64",
                              "id": 2
                            },
                            "installGpuDrivers": {
                              "type": "bool",
                              "id": 3,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "driverVersion": {
                              "type": "string",
                              "id": 4,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "InstancePolicy": {
                          "fields": {
                            "allowedMachineTypes": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 1,
                              "options": {
                                "deprecated": true
                              }
                            },
                            "machineType": {
                              "type": "string",
                              "id": 2
                            },
                            "minCpuPlatform": {
                              "type": "string",
                              "id": 3
                            },
                            "provisioningModel": {
                              "type": "ProvisioningModel",
                              "id": 4
                            },
                            "accelerators": {
                              "rule": "repeated",
                              "type": "Accelerator",
                              "id": 5
                            },
                            "bootDisk": {
                              "type": "Disk",
                              "id": 8
                            },
                            "disks": {
                              "rule": "repeated",
                              "type": "AttachedDisk",
                              "id": 6
                            },
                            "reservation": {
                              "type": "string",
                              "id": 7
                            }
                          }
                        },
                        "InstancePolicyOrTemplate": {
                          "oneofs": {
                            "policyTemplate": {
                              "oneof": [
                                "policy",
                                "instanceTemplate"
                              ]
                            }
                          },
                          "fields": {
                            "policy": {
                              "type": "InstancePolicy",
                              "id": 1
                            },
                            "instanceTemplate": {
                              "type": "string",
                              "id": 2
                            },
                            "installGpuDrivers": {
                              "type": "bool",
                              "id": 3
                            }
                          }
                        },
                        "NetworkInterface": {
                          "fields": {
                            "network": {
                              "type": "string",
                              "id": 1
                            },
                            "subnetwork": {
                              "type": "string",
                              "id": 2
                            },
                            "noExternalIpAddress": {
                              "type": "bool",
                              "id": 3
                            }
                          }
                        },
                        "NetworkPolicy": {
                          "fields": {
                            "networkInterfaces": {
                              "rule": "repeated",
                              "type": "NetworkInterface",
                              "id": 1
                            }
                          }
                        },
                        "PlacementPolicy": {
                          "fields": {
                            "collocation": {
                              "type": "string",
                              "id": 1
                            },
                            "maxDistance": {
                              "type": "int64",
                              "id": 2
                            }
                          }
                        },
                        "ProvisioningModel": {
                          "values": {
                            "PROVISIONING_MODEL_UNSPECIFIED": 0,
                            "STANDARD": 1,
                            "SPOT": 2,
                            "PREEMPTIBLE": 3
                          }
                        }
                      }
                    },
                    "TaskGroup": {
                      "options": {
                        "(google.api.resource).type": "batch.googleapis.com/TaskGroup",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/jobs/{job}/taskGroups/{task_group}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1,
                          "options": {
                            "(google.api.field_behavior)": "OUTPUT_ONLY"
                          }
                        },
                        "taskSpec": {
                          "type": "TaskSpec",
                          "id": 3,
                          "options": {
                            "(google.api.field_behavior)": "REQUIRED"
                          }
                        },
                        "taskCount": {
                          "type": "int64",
                          "id": 4
                        },
                        "parallelism": {
                          "type": "int64",
                          "id": 5
                        },
                        "schedulingPolicy": {
                          "type": "SchedulingPolicy",
                          "id": 6
                        },
                        "allocationPolicy": {
                          "type": "AllocationPolicy",
                          "id": 7
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 8
                        },
                        "taskEnvironments": {
                          "rule": "repeated",
                          "type": "Environment",
                          "id": 9
                        },
                        "taskCountPerNode": {
                          "type": "int64",
                          "id": 10
                        },
                        "requireHostsFile": {
                          "type": "bool",
                          "id": 11
                        },
                        "permissiveSsh": {
                          "type": "bool",
                          "id": 12
                        }
                      },
                      "nested": {
                        "SchedulingPolicy": {
                          "values": {
                            "SCHEDULING_POLICY_UNSPECIFIED": 0,
                            "AS_SOON_AS_POSSIBLE": 1,
                            "IN_ORDER": 2
                          }
                        }
                      }
                    },
                    "ServiceAccount": {
                      "fields": {
                        "email": {
                          "type": "string",
                          "id": 1
                        },
                        "scopes": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "ComputeResource": {
                      "fields": {
                        "cpuMilli": {
                          "type": "int64",
                          "id": 1
                        },
                        "memoryMib": {
                          "type": "int64",
                          "id": 2
                        },
                        "gpuCount": {
                          "type": "int64",
                          "id": 3
                        },
                        "bootDiskMib": {
                          "type": "int64",
                          "id": 4
                        }
                      }
                    },
                    "StatusEvent": {
                      "fields": {
                        "type": {
                          "type": "string",
                          "id": 3
                        },
                        "description": {
                          "type": "string",
                          "id": 1
                        },
                        "eventTime": {
                          "type": "google.protobuf.Timestamp",
                          "id": 2
                        },
                        "taskExecution": {
                          "type": "TaskExecution",
                          "id": 4
                        },
                        "taskState": {
                          "type": "TaskStatus.State",
                          "id": 5
                        }
                      }
                    },
                    "TaskExecution": {
                      "fields": {
                        "exitCode": {
                          "type": "int32",
                          "id": 1
                        },
                        "stderrSnippet": {
                          "type": "string",
                          "id": 2,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        }
                      }
                    },
                    "TaskStatus": {
                      "fields": {
                        "state": {
                          "type": "State",
                          "id": 1
                        },
                        "statusEvents": {
                          "rule": "repeated",
                          "type": "StatusEvent",
                          "id": 2
                        },
                        "resourceUsage": {
                          "type": "TaskResourceUsage",
                          "id": 3
                        }
                      },
                      "nested": {
                        "State": {
                          "values": {
                            "STATE_UNSPECIFIED": 0,
                            "PENDING": 1,
                            "ASSIGNED": 2,
                            "RUNNING": 3,
                            "FAILED": 4,
                            "SUCCEEDED": 5,
                            "UNEXECUTED": 6
                          }
                        }
                      }
                    },
                    "TaskResourceUsage": {
                      "fields": {
                        "coreHours": {
                          "type": "double",
                          "id": 1
                        }
                      }
                    },
                    "Runnable": {
                      "oneofs": {
                        "executable": {
                          "oneof": [
                            "container",
                            "script",
                            "barrier"
                          ]
                        }
                      },
                      "fields": {
                        "container": {
                          "type": "Container",
                          "id": 1
                        },
                        "script": {
                          "type": "Script",
                          "id": 2
                        },
                        "barrier": {
                          "type": "Barrier",
                          "id": 6
                        },
                        "displayName": {
                          "type": "string",
                          "id": 10,
                          "options": {
                            "(google.api.field_behavior)": "OPTIONAL"
                          }
                        },
                        "ignoreExitStatus": {
                          "type": "bool",
                          "id": 3
                        },
                        "background": {
                          "type": "bool",
                          "id": 4
                        },
                        "alwaysRun": {
                          "type": "bool",
                          "id": 5
                        },
                        "environment": {
                          "type": "Environment",
                          "id": 7
                        },
                        "timeout": {
                          "type": "google.protobuf.Duration",
                          "id": 8
                        },
                        "labels": {
                          "keyType": "string",
                          "type": "string",
                          "id": 9
                        }
                      },
                      "nested": {
                        "Container": {
                          "fields": {
                            "imageUri": {
                              "type": "string",
                              "id": 1
                            },
                            "commands": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 2
                            },
                            "entrypoint": {
                              "type": "string",
                              "id": 3
                            },
                            "volumes": {
                              "rule": "repeated",
                              "type": "string",
                              "id": 7
                            },
                            "options": {
                              "type": "string",
                              "id": 8
                            },
                            "blockExternalNetwork": {
                              "type": "bool",
                              "id": 9
                            },
                            "username": {
                              "type": "string",
                              "id": 10
                            },
                            "password": {
                              "type": "string",
                              "id": 11
                            },
                            "enableImageStreaming": {
                              "type": "bool",
                              "id": 12,
                              "options": {
                                "(google.api.field_behavior)": "OPTIONAL"
                              }
                            }
                          }
                        },
                        "Script": {
                          "oneofs": {
                            "command": {
                              "oneof": [
                                "path",
                                "text"
                              ]
                            }
                          },
                          "fields": {
                            "path": {
                              "type": "string",
                              "id": 1
                            },
                            "text": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        },
                        "Barrier": {
                          "fields": {
                            "name": {
                              "type": "string",
                              "id": 1
                            }
                          }
                        }
                      }
                    },
                    "TaskSpec": {
                      "fields": {
                        "runnables": {
                          "rule": "repeated",
                          "type": "Runnable",
                          "id": 8
                        },
                        "computeResource": {
                          "type": "ComputeResource",
                          "id": 3
                        },
                        "maxRunDuration": {
                          "type": "google.protobuf.Duration",
                          "id": 4
                        },
                        "maxRetryCount": {
                          "type": "int32",
                          "id": 5
                        },
                        "lifecyclePolicies": {
                          "rule": "repeated",
                          "type": "LifecyclePolicy",
                          "id": 9
                        },
                        "environments": {
                          "keyType": "string",
                          "type": "string",
                          "id": 6,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "volumes": {
                          "rule": "repeated",
                          "type": "Volume",
                          "id": 7
                        },
                        "environment": {
                          "type": "Environment",
                          "id": 10
                        }
                      }
                    },
                    "LifecyclePolicy": {
                      "fields": {
                        "action": {
                          "type": "Action",
                          "id": 1
                        },
                        "actionCondition": {
                          "type": "ActionCondition",
                          "id": 2
                        }
                      },
                      "nested": {
                        "ActionCondition": {
                          "fields": {
                            "exitCodes": {
                              "rule": "repeated",
                              "type": "int32",
                              "id": 1
                            }
                          }
                        },
                        "Action": {
                          "values": {
                            "ACTION_UNSPECIFIED": 0,
                            "RETRY_TASK": 1,
                            "FAIL_TASK": 2
                          }
                        }
                      }
                    },
                    "Task": {
                      "options": {
                        "(google.api.resource).type": "batch.googleapis.com/Task",
                        "(google.api.resource).pattern": "projects/{project}/locations/{location}/jobs/{job}/taskGroups/{task_group}/tasks/{task}"
                      },
                      "fields": {
                        "name": {
                          "type": "string",
                          "id": 1
                        },
                        "status": {
                          "type": "TaskStatus",
                          "id": 2
                        }
                      }
                    },
                    "Environment": {
                      "fields": {
                        "variables": {
                          "keyType": "string",
                          "type": "string",
                          "id": 1
                        },
                        "secretVariables": {
                          "keyType": "string",
                          "type": "string",
                          "id": 2
                        },
                        "encryptedVariables": {
                          "type": "KMSEnvMap",
                          "id": 3
                        }
                      },
                      "nested": {
                        "KMSEnvMap": {
                          "fields": {
                            "keyName": {
                              "type": "string",
                              "id": 1
                            },
                            "cipherText": {
                              "type": "string",
                              "id": 2
                            }
                          }
                        }
                      }
                    },
                    "Volume": {
                      "oneofs": {
                        "source": {
                          "oneof": [
                            "nfs",
                            "pd",
                            "gcs",
                            "deviceName"
                          ]
                        }
                      },
                      "fields": {
                        "nfs": {
                          "type": "NFS",
                          "id": 1
                        },
                        "pd": {
                          "type": "PD",
                          "id": 2,
                          "options": {
                            "deprecated": true
                          }
                        },
                        "gcs": {
                          "type": "GCS",
                          "id": 3
                        },
                        "deviceName": {
                          "type": "string",
                          "id": 6
                        },
                        "mountPath": {
                          "type": "string",
                          "id": 4
                        },
                        "mountOptions": {
                          "rule": "repeated",
                          "type": "string",
                          "id": 5
                        }
                      }
                    },
                    "NFS": {
                      "fields": {
                        "server": {
                          "type": "string",
                          "id": 1
                        },
                        "remotePath": {
                          "type": "string",
                          "id": 2
                        }
                      }
                    },
                    "PD": {
                      "fields": {
                        "disk": {
                          "type": "string",
                          "id": 1
                        },
                        "device": {
                          "type": "string",
                          "id": 2
                        },
                        "existing": {
                          "type": "bool",
                          "id": 3,
                          "options": {
                            "deprecated": true
                          }
                        }
                      }
                    },
                    "GCS": {
                      "fields": {
                        "remotePath": {
                          "type": "string",
                          "id": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "api": {
          "options": {
            "go_package": "google.golang.org/genproto/googleapis/api/annotations;annotations",
            "java_multiple_files": true,
            "java_outer_classname": "ResourceProto",
            "java_package": "com.google.api",
            "objc_class_prefix": "GAPI",
            "cc_enable_arenas": true
          },
          "nested": {
            "http": {
              "type": "HttpRule",
              "id": 72295728,
              "extend": "google.protobuf.MethodOptions"
            },
            "Http": {
              "fields": {
                "rules": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 1
                },
                "fullyDecodeReservedExpansion": {
                  "type": "bool",
                  "id": 2
                }
              }
            },
            "HttpRule": {
              "oneofs": {
                "pattern": {
                  "oneof": [
                    "get",
                    "put",
                    "post",
                    "delete",
                    "patch",
                    "custom"
                  ]
                }
              },
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "get": {
                  "type": "string",
                  "id": 2
                },
                "put": {
                  "type": "string",
                  "id": 3
                },
                "post": {
                  "type": "string",
                  "id": 4
                },
                "delete": {
                  "type": "string",
                  "id": 5
                },
                "patch": {
                  "type": "string",
                  "id": 6
                },
                "custom": {
                  "type": "CustomHttpPattern",
                  "id": 8
                },
                "body": {
                  "type": "string",
                  "id": 7
                },
                "responseBody": {
                  "type": "string",
                  "id": 12
                },
                "additionalBindings": {
                  "rule": "repeated",
                  "type": "HttpRule",
                  "id": 11
                }
              }
            },
            "CustomHttpPattern": {
              "fields": {
                "kind": {
                  "type": "string",
                  "id": 1
                },
                "path": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "methodSignature": {
              "rule": "repeated",
              "type": "string",
              "id": 1051,
              "extend": "google.protobuf.MethodOptions"
            },
            "defaultHost": {
              "type": "string",
              "id": 1049,
              "extend": "google.protobuf.ServiceOptions"
            },
            "oauthScopes": {
              "type": "string",
              "id": 1050,
              "extend": "google.protobuf.ServiceOptions"
            },
            "CommonLanguageSettings": {
              "fields": {
                "referenceDocsUri": {
                  "type": "string",
                  "id": 1,
                  "options": {
                    "deprecated": true
                  }
                },
                "destinations": {
                  "rule": "repeated",
                  "type": "ClientLibraryDestination",
                  "id": 2
                }
              }
            },
            "ClientLibrarySettings": {
              "fields": {
                "version": {
                  "type": "string",
                  "id": 1
                },
                "launchStage": {
                  "type": "LaunchStage",
                  "id": 2
                },
                "restNumericEnums": {
                  "type": "bool",
                  "id": 3
                },
                "javaSettings": {
                  "type": "JavaSettings",
                  "id": 21
                },
                "cppSettings": {
                  "type": "CppSettings",
                  "id": 22
                },
                "phpSettings": {
                  "type": "PhpSettings",
                  "id": 23
                },
                "pythonSettings": {
                  "type": "PythonSettings",
                  "id": 24
                },
                "nodeSettings": {
                  "type": "NodeSettings",
                  "id": 25
                },
                "dotnetSettings": {
                  "type": "DotnetSettings",
                  "id": 26
                },
                "rubySettings": {
                  "type": "RubySettings",
                  "id": 27
                },
                "goSettings": {
                  "type": "GoSettings",
                  "id": 28
                }
              }
            },
            "Publishing": {
              "fields": {
                "methodSettings": {
                  "rule": "repeated",
                  "type": "MethodSettings",
                  "id": 2
                },
                "newIssueUri": {
                  "type": "string",
                  "id": 101
                },
                "documentationUri": {
                  "type": "string",
                  "id": 102
                },
                "apiShortName": {
                  "type": "string",
                  "id": 103
                },
                "githubLabel": {
                  "type": "string",
                  "id": 104
                },
                "codeownerGithubTeams": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 105
                },
                "docTagPrefix": {
                  "type": "string",
                  "id": 106
                },
                "organization": {
                  "type": "ClientLibraryOrganization",
                  "id": 107
                },
                "librarySettings": {
                  "rule": "repeated",
                  "type": "ClientLibrarySettings",
                  "id": 109
                }
              }
            },
            "JavaSettings": {
              "fields": {
                "libraryPackage": {
                  "type": "string",
                  "id": 1
                },
                "serviceClassNames": {
                  "keyType": "string",
                  "type": "string",
                  "id": 2
                },
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 3
                }
              }
            },
            "CppSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PhpSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "PythonSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "NodeSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "DotnetSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "RubySettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "GoSettings": {
              "fields": {
                "common": {
                  "type": "CommonLanguageSettings",
                  "id": 1
                }
              }
            },
            "MethodSettings": {
              "fields": {
                "selector": {
                  "type": "string",
                  "id": 1
                },
                "longRunning": {
                  "type": "LongRunning",
                  "id": 2
                }
              },
              "nested": {
                "LongRunning": {
                  "fields": {
                    "initialPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 1
                    },
                    "pollDelayMultiplier": {
                      "type": "float",
                      "id": 2
                    },
                    "maxPollDelay": {
                      "type": "google.protobuf.Duration",
                      "id": 3
                    },
                    "totalPollTimeout": {
                      "type": "google.protobuf.Duration",
                      "id": 4
                    }
                  }
                }
              }
            },
            "ClientLibraryOrganization": {
              "values": {
                "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED": 0,
                "CLOUD": 1,
                "ADS": 2,
                "PHOTOS": 3,
                "STREET_VIEW": 4
              }
            },
            "ClientLibraryDestination": {
              "values": {
                "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED": 0,
                "GITHUB": 10,
                "PACKAGE_MANAGER": 20
              }
            },
            "LaunchStage": {
              "values": {
                "LAUNCH_STAGE_UNSPECIFIED": 0,
                "UNIMPLEMENTED": 6,
                "PRELAUNCH": 7,
                "EARLY_ACCESS": 1,
                "ALPHA": 2,
                "BETA": 3,
                "GA": 4,
                "DEPRECATED": 5
              }
            },
            "fieldBehavior": {
              "rule": "repeated",
              "type": "google.api.FieldBehavior",
              "id": 1052,
              "extend": "google.protobuf.FieldOptions"
            },
            "FieldBehavior": {
              "values": {
                "FIELD_BEHAVIOR_UNSPECIFIED": 0,
                "OPTIONAL": 1,
                "REQUIRED": 2,
                "OUTPUT_ONLY": 3,
                "INPUT_ONLY": 4,
                "IMMUTABLE": 5,
                "UNORDERED_LIST": 6,
                "NON_EMPTY_DEFAULT": 7
              }
            },
            "resourceReference": {
              "type": "google.api.ResourceReference",
              "id": 1055,
              "extend": "google.protobuf.FieldOptions"
            },
            "resourceDefinition": {
              "rule": "repeated",
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.FileOptions"
            },
            "resource": {
              "type": "google.api.ResourceDescriptor",
              "id": 1053,
              "extend": "google.protobuf.MessageOptions"
            },
            "ResourceDescriptor": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "pattern": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 2
                },
                "nameField": {
                  "type": "string",
                  "id": 3
                },
                "history": {
                  "type": "History",
                  "id": 4
                },
                "plural": {
                  "type": "string",
                  "id": 5
                },
                "singular": {
                  "type": "string",
                  "id": 6
                },
                "style": {
                  "rule": "repeated",
                  "type": "Style",
                  "id": 10
                }
              },
              "nested": {
                "History": {
                  "values": {
                    "HISTORY_UNSPECIFIED": 0,
                    "ORIGINALLY_SINGLE_PATTERN": 1,
                    "FUTURE_MULTI_PATTERN": 2
                  }
                },
                "Style": {
                  "values": {
                    "STYLE_UNSPECIFIED": 0,
                    "DECLARATIVE_FRIENDLY": 1
                  }
                }
              }
            },
            "ResourceReference": {
              "fields": {
                "type": {
                  "type": "string",
                  "id": 1
                },
                "childType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "protobuf": {
          "options": {
            "go_package": "google.golang.org/protobuf/types/descriptorpb",
            "java_package": "com.google.protobuf",
            "java_outer_classname": "DescriptorProtos",
            "csharp_namespace": "Google.Protobuf.Reflection",
            "objc_class_prefix": "GPB",
            "cc_enable_arenas": true,
            "optimize_for": "SPEED"
          },
          "nested": {
            "FileDescriptorSet": {
              "fields": {
                "file": {
                  "rule": "repeated",
                  "type": "FileDescriptorProto",
                  "id": 1
                }
              }
            },
            "FileDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "package": {
                  "type": "string",
                  "id": 2
                },
                "dependency": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 3
                },
                "publicDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 10,
                  "options": {
                    "packed": false
                  }
                },
                "weakDependency": {
                  "rule": "repeated",
                  "type": "int32",
                  "id": 11,
                  "options": {
                    "packed": false
                  }
                },
                "messageType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 4
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 5
                },
                "service": {
                  "rule": "repeated",
                  "type": "ServiceDescriptorProto",
                  "id": 6
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 7
                },
                "options": {
                  "type": "FileOptions",
                  "id": 8
                },
                "sourceCodeInfo": {
                  "type": "SourceCodeInfo",
                  "id": 9
                },
                "syntax": {
                  "type": "string",
                  "id": 12
                },
                "edition": {
                  "type": "string",
                  "id": 13
                }
              }
            },
            "DescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "field": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 2
                },
                "extension": {
                  "rule": "repeated",
                  "type": "FieldDescriptorProto",
                  "id": 6
                },
                "nestedType": {
                  "rule": "repeated",
                  "type": "DescriptorProto",
                  "id": 3
                },
                "enumType": {
                  "rule": "repeated",
                  "type": "EnumDescriptorProto",
                  "id": 4
                },
                "extensionRange": {
                  "rule": "repeated",
                  "type": "ExtensionRange",
                  "id": 5
                },
                "oneofDecl": {
                  "rule": "repeated",
                  "type": "OneofDescriptorProto",
                  "id": 8
                },
                "options": {
                  "type": "MessageOptions",
                  "id": 7
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "ReservedRange",
                  "id": 9
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 10
                }
              },
              "nested": {
                "ExtensionRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    },
                    "options": {
                      "type": "ExtensionRangeOptions",
                      "id": 3
                    }
                  }
                },
                "ReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "ExtensionRangeOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "FieldDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 3
                },
                "label": {
                  "type": "Label",
                  "id": 4
                },
                "type": {
                  "type": "Type",
                  "id": 5
                },
                "typeName": {
                  "type": "string",
                  "id": 6
                },
                "extendee": {
                  "type": "string",
                  "id": 2
                },
                "defaultValue": {
                  "type": "string",
                  "id": 7
                },
                "oneofIndex": {
                  "type": "int32",
                  "id": 9
                },
                "jsonName": {
                  "type": "string",
                  "id": 10
                },
                "options": {
                  "type": "FieldOptions",
                  "id": 8
                },
                "proto3Optional": {
                  "type": "bool",
                  "id": 17
                }
              },
              "nested": {
                "Type": {
                  "values": {
                    "TYPE_DOUBLE": 1,
                    "TYPE_FLOAT": 2,
                    "TYPE_INT64": 3,
                    "TYPE_UINT64": 4,
                    "TYPE_INT32": 5,
                    "TYPE_FIXED64": 6,
                    "TYPE_FIXED32": 7,
                    "TYPE_BOOL": 8,
                    "TYPE_STRING": 9,
                    "TYPE_GROUP": 10,
                    "TYPE_MESSAGE": 11,
                    "TYPE_BYTES": 12,
                    "TYPE_UINT32": 13,
                    "TYPE_ENUM": 14,
                    "TYPE_SFIXED32": 15,
                    "TYPE_SFIXED64": 16,
                    "TYPE_SINT32": 17,
                    "TYPE_SINT64": 18
                  }
                },
                "Label": {
                  "values": {
                    "LABEL_OPTIONAL": 1,
                    "LABEL_REQUIRED": 2,
                    "LABEL_REPEATED": 3
                  }
                }
              }
            },
            "OneofDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "options": {
                  "type": "OneofOptions",
                  "id": 2
                }
              }
            },
            "EnumDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "rule": "repeated",
                  "type": "EnumValueDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "EnumOptions",
                  "id": 3
                },
                "reservedRange": {
                  "rule": "repeated",
                  "type": "EnumReservedRange",
                  "id": 4
                },
                "reservedName": {
                  "rule": "repeated",
                  "type": "string",
                  "id": 5
                }
              },
              "nested": {
                "EnumReservedRange": {
                  "fields": {
                    "start": {
                      "type": "int32",
                      "id": 1
                    },
                    "end": {
                      "type": "int32",
                      "id": 2
                    }
                  }
                }
              }
            },
            "EnumValueDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "number": {
                  "type": "int32",
                  "id": 2
                },
                "options": {
                  "type": "EnumValueOptions",
                  "id": 3
                }
              }
            },
            "ServiceDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "method": {
                  "rule": "repeated",
                  "type": "MethodDescriptorProto",
                  "id": 2
                },
                "options": {
                  "type": "ServiceOptions",
                  "id": 3
                }
              }
            },
            "MethodDescriptorProto": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "inputType": {
                  "type": "string",
                  "id": 2
                },
                "outputType": {
                  "type": "string",
                  "id": 3
                },
                "options": {
                  "type": "MethodOptions",
                  "id": 4
                },
                "clientStreaming": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "serverStreaming": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "default": false
                  }
                }
              }
            },
            "FileOptions": {
              "fields": {
                "javaPackage": {
                  "type": "string",
                  "id": 1
                },
                "javaOuterClassname": {
                  "type": "string",
                  "id": 8
                },
                "javaMultipleFiles": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "javaGenerateEqualsAndHash": {
                  "type": "bool",
                  "id": 20,
                  "options": {
                    "deprecated": true
                  }
                },
                "javaStringCheckUtf8": {
                  "type": "bool",
                  "id": 27,
                  "options": {
                    "default": false
                  }
                },
                "optimizeFor": {
                  "type": "OptimizeMode",
                  "id": 9,
                  "options": {
                    "default": "SPEED"
                  }
                },
                "goPackage": {
                  "type": "string",
                  "id": 11
                },
                "ccGenericServices": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "javaGenericServices": {
                  "type": "bool",
                  "id": 17,
                  "options": {
                    "default": false
                  }
                },
                "pyGenericServices": {
                  "type": "bool",
                  "id": 18,
                  "options": {
                    "default": false
                  }
                },
                "phpGenericServices": {
                  "type": "bool",
                  "id": 42,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 23,
                  "options": {
                    "default": false
                  }
                },
                "ccEnableArenas": {
                  "type": "bool",
                  "id": 31,
                  "options": {
                    "default": true
                  }
                },
                "objcClassPrefix": {
                  "type": "string",
                  "id": 36
                },
                "csharpNamespace": {
                  "type": "string",
                  "id": 37
                },
                "swiftPrefix": {
                  "type": "string",
                  "id": 39
                },
                "phpClassPrefix": {
                  "type": "string",
                  "id": 40
                },
                "phpNamespace": {
                  "type": "string",
                  "id": 41
                },
                "phpMetadataNamespace": {
                  "type": "string",
                  "id": 44
                },
                "rubyPackage": {
                  "type": "string",
                  "id": 45
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  38,
                  38
                ]
              ],
              "nested": {
                "OptimizeMode": {
                  "values": {
                    "SPEED": 1,
                    "CODE_SIZE": 2,
                    "LITE_RUNTIME": 3
                  }
                }
              }
            },
            "MessageOptions": {
              "fields": {
                "messageSetWireFormat": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "noStandardDescriptorAccessor": {
                  "type": "bool",
                  "id": 2,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "mapEntry": {
                  "type": "bool",
                  "id": 7
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 11,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ],
                [
                  5,
                  5
                ],
                [
                  6,
                  6
                ],
                [
                  8,
                  8
                ],
                [
                  9,
                  9
                ]
              ]
            },
            "FieldOptions": {
              "fields": {
                "ctype": {
                  "type": "CType",
                  "id": 1,
                  "options": {
                    "default": "STRING"
                  }
                },
                "packed": {
                  "type": "bool",
                  "id": 2
                },
                "jstype": {
                  "type": "JSType",
                  "id": 6,
                  "options": {
                    "default": "JS_NORMAL"
                  }
                },
                "lazy": {
                  "type": "bool",
                  "id": 5,
                  "options": {
                    "default": false
                  }
                },
                "unverifiedLazy": {
                  "type": "bool",
                  "id": 15,
                  "options": {
                    "default": false
                  }
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "weak": {
                  "type": "bool",
                  "id": 10,
                  "options": {
                    "default": false
                  }
                },
                "debugRedact": {
                  "type": "bool",
                  "id": 16,
                  "options": {
                    "default": false
                  }
                },
                "retention": {
                  "type": "OptionRetention",
                  "id": 17
                },
                "target": {
                  "type": "OptionTargetType",
                  "id": 18
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  4,
                  4
                ]
              ],
              "nested": {
                "CType": {
                  "values": {
                    "STRING": 0,
                    "CORD": 1,
                    "STRING_PIECE": 2
                  }
                },
                "JSType": {
                  "values": {
                    "JS_NORMAL": 0,
                    "JS_STRING": 1,
                    "JS_NUMBER": 2
                  }
                },
                "OptionRetention": {
                  "values": {
                    "RETENTION_UNKNOWN": 0,
                    "RETENTION_RUNTIME": 1,
                    "RETENTION_SOURCE": 2
                  }
                },
                "OptionTargetType": {
                  "values": {
                    "TARGET_TYPE_UNKNOWN": 0,
                    "TARGET_TYPE_FILE": 1,
                    "TARGET_TYPE_EXTENSION_RANGE": 2,
                    "TARGET_TYPE_MESSAGE": 3,
                    "TARGET_TYPE_FIELD": 4,
                    "TARGET_TYPE_ONEOF": 5,
                    "TARGET_TYPE_ENUM": 6,
                    "TARGET_TYPE_ENUM_ENTRY": 7,
                    "TARGET_TYPE_SERVICE": 8,
                    "TARGET_TYPE_METHOD": 9
                  }
                }
              }
            },
            "OneofOptions": {
              "fields": {
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "EnumOptions": {
              "fields": {
                "allowAlias": {
                  "type": "bool",
                  "id": 2
                },
                "deprecated": {
                  "type": "bool",
                  "id": 3,
                  "options": {
                    "default": false
                  }
                },
                "deprecatedLegacyJsonFieldConflicts": {
                  "type": "bool",
                  "id": 6,
                  "options": {
                    "deprecated": true
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "reserved": [
                [
                  5,
                  5
                ]
              ]
            },
            "EnumValueOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 1,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "ServiceOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ]
            },
            "MethodOptions": {
              "fields": {
                "deprecated": {
                  "type": "bool",
                  "id": 33,
                  "options": {
                    "default": false
                  }
                },
                "idempotencyLevel": {
                  "type": "IdempotencyLevel",
                  "id": 34,
                  "options": {
                    "default": "IDEMPOTENCY_UNKNOWN"
                  }
                },
                "uninterpretedOption": {
                  "rule": "repeated",
                  "type": "UninterpretedOption",
                  "id": 999
                }
              },
              "extensions": [
                [
                  1000,
                  536870911
                ]
              ],
              "nested": {
                "IdempotencyLevel": {
                  "values": {
                    "IDEMPOTENCY_UNKNOWN": 0,
                    "NO_SIDE_EFFECTS": 1,
                    "IDEMPOTENT": 2
                  }
                }
              }
            },
            "UninterpretedOption": {
              "fields": {
                "name": {
                  "rule": "repeated",
                  "type": "NamePart",
                  "id": 2
                },
                "identifierValue": {
                  "type": "string",
                  "id": 3
                },
                "positiveIntValue": {
                  "type": "uint64",
                  "id": 4
                },
                "negativeIntValue": {
                  "type": "int64",
                  "id": 5
                },
                "doubleValue": {
                  "type": "double",
                  "id": 6
                },
                "stringValue": {
                  "type": "bytes",
                  "id": 7
                },
                "aggregateValue": {
                  "type": "string",
                  "id": 8
                }
              },
              "nested": {
                "NamePart": {
                  "fields": {
                    "namePart": {
                      "rule": "required",
                      "type": "string",
                      "id": 1
                    },
                    "isExtension": {
                      "rule": "required",
                      "type": "bool",
                      "id": 2
                    }
                  }
                }
              }
            },
            "SourceCodeInfo": {
              "fields": {
                "location": {
                  "rule": "repeated",
                  "type": "Location",
                  "id": 1
                }
              },
              "nested": {
                "Location": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "span": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 2
                    },
                    "leadingComments": {
                      "type": "string",
                      "id": 3
                    },
                    "trailingComments": {
                      "type": "string",
                      "id": 4
                    },
                    "leadingDetachedComments": {
                      "rule": "repeated",
                      "type": "string",
                      "id": 6
                    }
                  }
                }
              }
            },
            "GeneratedCodeInfo": {
              "fields": {
                "annotation": {
                  "rule": "repeated",
                  "type": "Annotation",
                  "id": 1
                }
              },
              "nested": {
                "Annotation": {
                  "fields": {
                    "path": {
                      "rule": "repeated",
                      "type": "int32",
                      "id": 1
                    },
                    "sourceFile": {
                      "type": "string",
                      "id": 2
                    },
                    "begin": {
                      "type": "int32",
                      "id": 3
                    },
                    "end": {
                      "type": "int32",
                      "id": 4
                    },
                    "semantic": {
                      "type": "Semantic",
                      "id": 5
                    }
                  },
                  "nested": {
                    "Semantic": {
                      "values": {
                        "NONE": 0,
                        "SET": 1,
                        "ALIAS": 2
                      }
                    }
                  }
                }
              }
            },
            "Duration": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Timestamp": {
              "fields": {
                "seconds": {
                  "type": "int64",
                  "id": 1
                },
                "nanos": {
                  "type": "int32",
                  "id": 2
                }
              }
            },
            "Any": {
              "fields": {
                "type_url": {
                  "type": "string",
                  "id": 1
                },
                "value": {
                  "type": "bytes",
                  "id": 2
                }
              }
            },
            "Empty": {
              "fields": {}
            }
          }
        },
        "longrunning": {
          "options": {
            "cc_enable_arenas": true,
            "csharp_namespace": "Google.LongRunning",
            "go_package": "google.golang.org/genproto/googleapis/longrunning;longrunning",
            "java_multiple_files": true,
            "java_outer_classname": "OperationsProto",
            "java_package": "com.google.longrunning",
            "php_namespace": "Google\\LongRunning"
          },
          "nested": {
            "operationInfo": {
              "type": "google.longrunning.OperationInfo",
              "id": 1049,
              "extend": "google.protobuf.MethodOptions"
            },
            "Operations": {
              "options": {
                "(google.api.default_host)": "longrunning.googleapis.com"
              },
              "methods": {
                "ListOperations": {
                  "requestType": "ListOperationsRequest",
                  "responseType": "ListOperationsResponse",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations}",
                    "(google.api.method_signature)": "name,filter"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name,filter"
                    }
                  ]
                },
                "GetOperation": {
                  "requestType": "GetOperationRequest",
                  "responseType": "Operation",
                  "options": {
                    "(google.api.http).get": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "get": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "DeleteOperation": {
                  "requestType": "DeleteOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).delete": "/v1/{name=operations/**}",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "delete": "/v1/{name=operations/**}"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "CancelOperation": {
                  "requestType": "CancelOperationRequest",
                  "responseType": "google.protobuf.Empty",
                  "options": {
                    "(google.api.http).post": "/v1/{name=operations/**}:cancel",
                    "(google.api.http).body": "*",
                    "(google.api.method_signature)": "name"
                  },
                  "parsedOptions": [
                    {
                      "(google.api.http)": {
                        "post": "/v1/{name=operations/**}:cancel",
                        "body": "*"
                      }
                    },
                    {
                      "(google.api.method_signature)": "name"
                    }
                  ]
                },
                "WaitOperation": {
                  "requestType": "WaitOperationRequest",
                  "responseType": "Operation"
                }
              }
            },
            "Operation": {
              "oneofs": {
                "result": {
                  "oneof": [
                    "error",
                    "response"
                  ]
                }
              },
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "metadata": {
                  "type": "google.protobuf.Any",
                  "id": 2
                },
                "done": {
                  "type": "bool",
                  "id": 3
                },
                "error": {
                  "type": "google.rpc.Status",
                  "id": 4
                },
                "response": {
                  "type": "google.protobuf.Any",
                  "id": 5
                }
              }
            },
            "GetOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "ListOperationsRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 4
                },
                "filter": {
                  "type": "string",
                  "id": 1
                },
                "pageSize": {
                  "type": "int32",
                  "id": 2
                },
                "pageToken": {
                  "type": "string",
                  "id": 3
                }
              }
            },
            "ListOperationsResponse": {
              "fields": {
                "operations": {
                  "rule": "repeated",
                  "type": "Operation",
                  "id": 1
                },
                "nextPageToken": {
                  "type": "string",
                  "id": 2
                }
              }
            },
            "CancelOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "DeleteOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                }
              }
            },
            "WaitOperationRequest": {
              "fields": {
                "name": {
                  "type": "string",
                  "id": 1
                },
                "timeout": {
                  "type": "google.protobuf.Duration",
                  "id": 2
                }
              }
            },
            "OperationInfo": {
              "fields": {
                "responseType": {
                  "type": "string",
                  "id": 1
                },
                "metadataType": {
                  "type": "string",
                  "id": 2
                }
              }
            }
          }
        },
        "rpc": {
          "options": {
            "cc_enable_arenas": true,
            "go_package": "google.golang.org/genproto/googleapis/rpc/status;status",
            "java_multiple_files": true,
            "java_outer_classname": "StatusProto",
            "java_package": "com.google.rpc",
            "objc_class_prefix": "RPC"
          },
          "nested": {
            "Status": {
              "fields": {
                "code": {
                  "type": "int32",
                  "id": 1
                },
                "message": {
                  "type": "string",
                  "id": 2
                },
                "details": {
                  "rule": "repeated",
                  "type": "google.protobuf.Any",
                  "id": 3
                }
              }
            }
          }
        }
      }
    }
  }
}