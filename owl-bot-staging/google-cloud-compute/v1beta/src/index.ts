// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

import * as v1beta from './v1beta';
const AcceleratorTypesClient = v1beta.AcceleratorTypesClient;
type AcceleratorTypesClient = v1beta.AcceleratorTypesClient;
const AddressesClient = v1beta.AddressesClient;
type AddressesClient = v1beta.AddressesClient;
const AdviceClient = v1beta.AdviceClient;
type AdviceClient = v1beta.AdviceClient;
const AutoscalersClient = v1beta.AutoscalersClient;
type AutoscalersClient = v1beta.AutoscalersClient;
const BackendBucketsClient = v1beta.BackendBucketsClient;
type BackendBucketsClient = v1beta.BackendBucketsClient;
const BackendServicesClient = v1beta.BackendServicesClient;
type BackendServicesClient = v1beta.BackendServicesClient;
const CrossSiteNetworksClient = v1beta.CrossSiteNetworksClient;
type CrossSiteNetworksClient = v1beta.CrossSiteNetworksClient;
const DisksClient = v1beta.DisksClient;
type DisksClient = v1beta.DisksClient;
const DiskSettingsServiceClient = v1beta.DiskSettingsServiceClient;
type DiskSettingsServiceClient = v1beta.DiskSettingsServiceClient;
const DiskTypesClient = v1beta.DiskTypesClient;
type DiskTypesClient = v1beta.DiskTypesClient;
const ExternalVpnGatewaysClient = v1beta.ExternalVpnGatewaysClient;
type ExternalVpnGatewaysClient = v1beta.ExternalVpnGatewaysClient;
const FirewallPoliciesClient = v1beta.FirewallPoliciesClient;
type FirewallPoliciesClient = v1beta.FirewallPoliciesClient;
const FirewallsClient = v1beta.FirewallsClient;
type FirewallsClient = v1beta.FirewallsClient;
const ForwardingRulesClient = v1beta.ForwardingRulesClient;
type ForwardingRulesClient = v1beta.ForwardingRulesClient;
const FutureReservationsClient = v1beta.FutureReservationsClient;
type FutureReservationsClient = v1beta.FutureReservationsClient;
const GlobalAddressesClient = v1beta.GlobalAddressesClient;
type GlobalAddressesClient = v1beta.GlobalAddressesClient;
const GlobalForwardingRulesClient = v1beta.GlobalForwardingRulesClient;
type GlobalForwardingRulesClient = v1beta.GlobalForwardingRulesClient;
const GlobalNetworkEndpointGroupsClient = v1beta.GlobalNetworkEndpointGroupsClient;
type GlobalNetworkEndpointGroupsClient = v1beta.GlobalNetworkEndpointGroupsClient;
const GlobalOperationsClient = v1beta.GlobalOperationsClient;
type GlobalOperationsClient = v1beta.GlobalOperationsClient;
const GlobalOrganizationOperationsClient = v1beta.GlobalOrganizationOperationsClient;
type GlobalOrganizationOperationsClient = v1beta.GlobalOrganizationOperationsClient;
const GlobalPublicDelegatedPrefixesClient = v1beta.GlobalPublicDelegatedPrefixesClient;
type GlobalPublicDelegatedPrefixesClient = v1beta.GlobalPublicDelegatedPrefixesClient;
const HealthChecksClient = v1beta.HealthChecksClient;
type HealthChecksClient = v1beta.HealthChecksClient;
const ImageFamilyViewsClient = v1beta.ImageFamilyViewsClient;
type ImageFamilyViewsClient = v1beta.ImageFamilyViewsClient;
const ImagesClient = v1beta.ImagesClient;
type ImagesClient = v1beta.ImagesClient;
const InstanceGroupManagerResizeRequestsClient = v1beta.InstanceGroupManagerResizeRequestsClient;
type InstanceGroupManagerResizeRequestsClient = v1beta.InstanceGroupManagerResizeRequestsClient;
const InstanceGroupManagersClient = v1beta.InstanceGroupManagersClient;
type InstanceGroupManagersClient = v1beta.InstanceGroupManagersClient;
const InstanceGroupsClient = v1beta.InstanceGroupsClient;
type InstanceGroupsClient = v1beta.InstanceGroupsClient;
const InstancesClient = v1beta.InstancesClient;
type InstancesClient = v1beta.InstancesClient;
const InstanceSettingsServiceClient = v1beta.InstanceSettingsServiceClient;
type InstanceSettingsServiceClient = v1beta.InstanceSettingsServiceClient;
const InstanceTemplatesClient = v1beta.InstanceTemplatesClient;
type InstanceTemplatesClient = v1beta.InstanceTemplatesClient;
const InstantSnapshotsClient = v1beta.InstantSnapshotsClient;
type InstantSnapshotsClient = v1beta.InstantSnapshotsClient;
const InterconnectAttachmentGroupsClient = v1beta.InterconnectAttachmentGroupsClient;
type InterconnectAttachmentGroupsClient = v1beta.InterconnectAttachmentGroupsClient;
const InterconnectAttachmentsClient = v1beta.InterconnectAttachmentsClient;
type InterconnectAttachmentsClient = v1beta.InterconnectAttachmentsClient;
const InterconnectGroupsClient = v1beta.InterconnectGroupsClient;
type InterconnectGroupsClient = v1beta.InterconnectGroupsClient;
const InterconnectLocationsClient = v1beta.InterconnectLocationsClient;
type InterconnectLocationsClient = v1beta.InterconnectLocationsClient;
const InterconnectRemoteLocationsClient = v1beta.InterconnectRemoteLocationsClient;
type InterconnectRemoteLocationsClient = v1beta.InterconnectRemoteLocationsClient;
const InterconnectsClient = v1beta.InterconnectsClient;
type InterconnectsClient = v1beta.InterconnectsClient;
const LicenseCodesClient = v1beta.LicenseCodesClient;
type LicenseCodesClient = v1beta.LicenseCodesClient;
const LicensesClient = v1beta.LicensesClient;
type LicensesClient = v1beta.LicensesClient;
const MachineImagesClient = v1beta.MachineImagesClient;
type MachineImagesClient = v1beta.MachineImagesClient;
const MachineTypesClient = v1beta.MachineTypesClient;
type MachineTypesClient = v1beta.MachineTypesClient;
const NetworkAttachmentsClient = v1beta.NetworkAttachmentsClient;
type NetworkAttachmentsClient = v1beta.NetworkAttachmentsClient;
const NetworkEdgeSecurityServicesClient = v1beta.NetworkEdgeSecurityServicesClient;
type NetworkEdgeSecurityServicesClient = v1beta.NetworkEdgeSecurityServicesClient;
const NetworkEndpointGroupsClient = v1beta.NetworkEndpointGroupsClient;
type NetworkEndpointGroupsClient = v1beta.NetworkEndpointGroupsClient;
const NetworkFirewallPoliciesClient = v1beta.NetworkFirewallPoliciesClient;
type NetworkFirewallPoliciesClient = v1beta.NetworkFirewallPoliciesClient;
const NetworkProfilesClient = v1beta.NetworkProfilesClient;
type NetworkProfilesClient = v1beta.NetworkProfilesClient;
const NetworksClient = v1beta.NetworksClient;
type NetworksClient = v1beta.NetworksClient;
const NodeGroupsClient = v1beta.NodeGroupsClient;
type NodeGroupsClient = v1beta.NodeGroupsClient;
const NodeTemplatesClient = v1beta.NodeTemplatesClient;
type NodeTemplatesClient = v1beta.NodeTemplatesClient;
const NodeTypesClient = v1beta.NodeTypesClient;
type NodeTypesClient = v1beta.NodeTypesClient;
const OrganizationSecurityPoliciesClient = v1beta.OrganizationSecurityPoliciesClient;
type OrganizationSecurityPoliciesClient = v1beta.OrganizationSecurityPoliciesClient;
const PacketMirroringsClient = v1beta.PacketMirroringsClient;
type PacketMirroringsClient = v1beta.PacketMirroringsClient;
const PreviewFeaturesClient = v1beta.PreviewFeaturesClient;
type PreviewFeaturesClient = v1beta.PreviewFeaturesClient;
const ProjectsClient = v1beta.ProjectsClient;
type ProjectsClient = v1beta.ProjectsClient;
const PublicAdvertisedPrefixesClient = v1beta.PublicAdvertisedPrefixesClient;
type PublicAdvertisedPrefixesClient = v1beta.PublicAdvertisedPrefixesClient;
const PublicDelegatedPrefixesClient = v1beta.PublicDelegatedPrefixesClient;
type PublicDelegatedPrefixesClient = v1beta.PublicDelegatedPrefixesClient;
const RegionAutoscalersClient = v1beta.RegionAutoscalersClient;
type RegionAutoscalersClient = v1beta.RegionAutoscalersClient;
const RegionBackendServicesClient = v1beta.RegionBackendServicesClient;
type RegionBackendServicesClient = v1beta.RegionBackendServicesClient;
const RegionCommitmentsClient = v1beta.RegionCommitmentsClient;
type RegionCommitmentsClient = v1beta.RegionCommitmentsClient;
const RegionDisksClient = v1beta.RegionDisksClient;
type RegionDisksClient = v1beta.RegionDisksClient;
const RegionDiskSettingsClient = v1beta.RegionDiskSettingsClient;
type RegionDiskSettingsClient = v1beta.RegionDiskSettingsClient;
const RegionDiskTypesClient = v1beta.RegionDiskTypesClient;
type RegionDiskTypesClient = v1beta.RegionDiskTypesClient;
const RegionHealthChecksClient = v1beta.RegionHealthChecksClient;
type RegionHealthChecksClient = v1beta.RegionHealthChecksClient;
const RegionHealthCheckServicesClient = v1beta.RegionHealthCheckServicesClient;
type RegionHealthCheckServicesClient = v1beta.RegionHealthCheckServicesClient;
const RegionInstanceGroupManagerResizeRequestsClient = v1beta.RegionInstanceGroupManagerResizeRequestsClient;
type RegionInstanceGroupManagerResizeRequestsClient = v1beta.RegionInstanceGroupManagerResizeRequestsClient;
const RegionInstanceGroupManagersClient = v1beta.RegionInstanceGroupManagersClient;
type RegionInstanceGroupManagersClient = v1beta.RegionInstanceGroupManagersClient;
const RegionInstanceGroupsClient = v1beta.RegionInstanceGroupsClient;
type RegionInstanceGroupsClient = v1beta.RegionInstanceGroupsClient;
const RegionInstancesClient = v1beta.RegionInstancesClient;
type RegionInstancesClient = v1beta.RegionInstancesClient;
const RegionInstanceTemplatesClient = v1beta.RegionInstanceTemplatesClient;
type RegionInstanceTemplatesClient = v1beta.RegionInstanceTemplatesClient;
const RegionInstantSnapshotsClient = v1beta.RegionInstantSnapshotsClient;
type RegionInstantSnapshotsClient = v1beta.RegionInstantSnapshotsClient;
const RegionMultiMigsClient = v1beta.RegionMultiMigsClient;
type RegionMultiMigsClient = v1beta.RegionMultiMigsClient;
const RegionNetworkEndpointGroupsClient = v1beta.RegionNetworkEndpointGroupsClient;
type RegionNetworkEndpointGroupsClient = v1beta.RegionNetworkEndpointGroupsClient;
const RegionNetworkFirewallPoliciesClient = v1beta.RegionNetworkFirewallPoliciesClient;
type RegionNetworkFirewallPoliciesClient = v1beta.RegionNetworkFirewallPoliciesClient;
const RegionNotificationEndpointsClient = v1beta.RegionNotificationEndpointsClient;
type RegionNotificationEndpointsClient = v1beta.RegionNotificationEndpointsClient;
const RegionOperationsClient = v1beta.RegionOperationsClient;
type RegionOperationsClient = v1beta.RegionOperationsClient;
const RegionsClient = v1beta.RegionsClient;
type RegionsClient = v1beta.RegionsClient;
const RegionSecurityPoliciesClient = v1beta.RegionSecurityPoliciesClient;
type RegionSecurityPoliciesClient = v1beta.RegionSecurityPoliciesClient;
const RegionSnapshotsClient = v1beta.RegionSnapshotsClient;
type RegionSnapshotsClient = v1beta.RegionSnapshotsClient;
const RegionSnapshotSettingsClient = v1beta.RegionSnapshotSettingsClient;
type RegionSnapshotSettingsClient = v1beta.RegionSnapshotSettingsClient;
const RegionSslCertificatesClient = v1beta.RegionSslCertificatesClient;
type RegionSslCertificatesClient = v1beta.RegionSslCertificatesClient;
const RegionSslPoliciesClient = v1beta.RegionSslPoliciesClient;
type RegionSslPoliciesClient = v1beta.RegionSslPoliciesClient;
const RegionTargetHttpProxiesClient = v1beta.RegionTargetHttpProxiesClient;
type RegionTargetHttpProxiesClient = v1beta.RegionTargetHttpProxiesClient;
const RegionTargetHttpsProxiesClient = v1beta.RegionTargetHttpsProxiesClient;
type RegionTargetHttpsProxiesClient = v1beta.RegionTargetHttpsProxiesClient;
const RegionTargetTcpProxiesClient = v1beta.RegionTargetTcpProxiesClient;
type RegionTargetTcpProxiesClient = v1beta.RegionTargetTcpProxiesClient;
const RegionUrlMapsClient = v1beta.RegionUrlMapsClient;
type RegionUrlMapsClient = v1beta.RegionUrlMapsClient;
const RegionZonesClient = v1beta.RegionZonesClient;
type RegionZonesClient = v1beta.RegionZonesClient;
const ReservationBlocksClient = v1beta.ReservationBlocksClient;
type ReservationBlocksClient = v1beta.ReservationBlocksClient;
const ReservationsClient = v1beta.ReservationsClient;
type ReservationsClient = v1beta.ReservationsClient;
const ResourcePoliciesClient = v1beta.ResourcePoliciesClient;
type ResourcePoliciesClient = v1beta.ResourcePoliciesClient;
const RoutersClient = v1beta.RoutersClient;
type RoutersClient = v1beta.RoutersClient;
const RoutesClient = v1beta.RoutesClient;
type RoutesClient = v1beta.RoutesClient;
const SecurityPoliciesClient = v1beta.SecurityPoliciesClient;
type SecurityPoliciesClient = v1beta.SecurityPoliciesClient;
const ServiceAttachmentsClient = v1beta.ServiceAttachmentsClient;
type ServiceAttachmentsClient = v1beta.ServiceAttachmentsClient;
const SnapshotsClient = v1beta.SnapshotsClient;
type SnapshotsClient = v1beta.SnapshotsClient;
const SnapshotSettingsServiceClient = v1beta.SnapshotSettingsServiceClient;
type SnapshotSettingsServiceClient = v1beta.SnapshotSettingsServiceClient;
const SslCertificatesClient = v1beta.SslCertificatesClient;
type SslCertificatesClient = v1beta.SslCertificatesClient;
const SslPoliciesClient = v1beta.SslPoliciesClient;
type SslPoliciesClient = v1beta.SslPoliciesClient;
const StoragePoolsClient = v1beta.StoragePoolsClient;
type StoragePoolsClient = v1beta.StoragePoolsClient;
const StoragePoolTypesClient = v1beta.StoragePoolTypesClient;
type StoragePoolTypesClient = v1beta.StoragePoolTypesClient;
const SubnetworksClient = v1beta.SubnetworksClient;
type SubnetworksClient = v1beta.SubnetworksClient;
const TargetGrpcProxiesClient = v1beta.TargetGrpcProxiesClient;
type TargetGrpcProxiesClient = v1beta.TargetGrpcProxiesClient;
const TargetHttpProxiesClient = v1beta.TargetHttpProxiesClient;
type TargetHttpProxiesClient = v1beta.TargetHttpProxiesClient;
const TargetHttpsProxiesClient = v1beta.TargetHttpsProxiesClient;
type TargetHttpsProxiesClient = v1beta.TargetHttpsProxiesClient;
const TargetInstancesClient = v1beta.TargetInstancesClient;
type TargetInstancesClient = v1beta.TargetInstancesClient;
const TargetPoolsClient = v1beta.TargetPoolsClient;
type TargetPoolsClient = v1beta.TargetPoolsClient;
const TargetSslProxiesClient = v1beta.TargetSslProxiesClient;
type TargetSslProxiesClient = v1beta.TargetSslProxiesClient;
const TargetTcpProxiesClient = v1beta.TargetTcpProxiesClient;
type TargetTcpProxiesClient = v1beta.TargetTcpProxiesClient;
const TargetVpnGatewaysClient = v1beta.TargetVpnGatewaysClient;
type TargetVpnGatewaysClient = v1beta.TargetVpnGatewaysClient;
const UrlMapsClient = v1beta.UrlMapsClient;
type UrlMapsClient = v1beta.UrlMapsClient;
const VpnGatewaysClient = v1beta.VpnGatewaysClient;
type VpnGatewaysClient = v1beta.VpnGatewaysClient;
const VpnTunnelsClient = v1beta.VpnTunnelsClient;
type VpnTunnelsClient = v1beta.VpnTunnelsClient;
const WireGroupsClient = v1beta.WireGroupsClient;
type WireGroupsClient = v1beta.WireGroupsClient;
const ZoneOperationsClient = v1beta.ZoneOperationsClient;
type ZoneOperationsClient = v1beta.ZoneOperationsClient;
const ZonesClient = v1beta.ZonesClient;
type ZonesClient = v1beta.ZonesClient;
export {v1beta, AcceleratorTypesClient, AddressesClient, AdviceClient, AutoscalersClient, BackendBucketsClient, BackendServicesClient, CrossSiteNetworksClient, DisksClient, DiskSettingsServiceClient, DiskTypesClient, ExternalVpnGatewaysClient, FirewallPoliciesClient, FirewallsClient, ForwardingRulesClient, FutureReservationsClient, GlobalAddressesClient, GlobalForwardingRulesClient, GlobalNetworkEndpointGroupsClient, GlobalOperationsClient, GlobalOrganizationOperationsClient, GlobalPublicDelegatedPrefixesClient, HealthChecksClient, ImageFamilyViewsClient, ImagesClient, InstanceGroupManagerResizeRequestsClient, InstanceGroupManagersClient, InstanceGroupsClient, InstancesClient, InstanceSettingsServiceClient, InstanceTemplatesClient, InstantSnapshotsClient, InterconnectAttachmentGroupsClient, InterconnectAttachmentsClient, InterconnectGroupsClient, InterconnectLocationsClient, InterconnectRemoteLocationsClient, InterconnectsClient, LicenseCodesClient, LicensesClient, MachineImagesClient, MachineTypesClient, NetworkAttachmentsClient, NetworkEdgeSecurityServicesClient, NetworkEndpointGroupsClient, NetworkFirewallPoliciesClient, NetworkProfilesClient, NetworksClient, NodeGroupsClient, NodeTemplatesClient, NodeTypesClient, OrganizationSecurityPoliciesClient, PacketMirroringsClient, PreviewFeaturesClient, ProjectsClient, PublicAdvertisedPrefixesClient, PublicDelegatedPrefixesClient, RegionAutoscalersClient, RegionBackendServicesClient, RegionCommitmentsClient, RegionDisksClient, RegionDiskSettingsClient, RegionDiskTypesClient, RegionHealthChecksClient, RegionHealthCheckServicesClient, RegionInstanceGroupManagerResizeRequestsClient, RegionInstanceGroupManagersClient, RegionInstanceGroupsClient, RegionInstancesClient, RegionInstanceTemplatesClient, RegionInstantSnapshotsClient, RegionMultiMigsClient, RegionNetworkEndpointGroupsClient, RegionNetworkFirewallPoliciesClient, RegionNotificationEndpointsClient, RegionOperationsClient, RegionsClient, RegionSecurityPoliciesClient, RegionSnapshotsClient, RegionSnapshotSettingsClient, RegionSslCertificatesClient, RegionSslPoliciesClient, RegionTargetHttpProxiesClient, RegionTargetHttpsProxiesClient, RegionTargetTcpProxiesClient, RegionUrlMapsClient, RegionZonesClient, ReservationBlocksClient, ReservationsClient, ResourcePoliciesClient, RoutersClient, RoutesClient, SecurityPoliciesClient, ServiceAttachmentsClient, SnapshotsClient, SnapshotSettingsServiceClient, SslCertificatesClient, SslPoliciesClient, StoragePoolsClient, StoragePoolTypesClient, SubnetworksClient, TargetGrpcProxiesClient, TargetHttpProxiesClient, TargetHttpsProxiesClient, TargetInstancesClient, TargetPoolsClient, TargetSslProxiesClient, TargetTcpProxiesClient, TargetVpnGatewaysClient, UrlMapsClient, VpnGatewaysClient, VpnTunnelsClient, WireGroupsClient, ZoneOperationsClient, ZonesClient};
export default {v1beta, AcceleratorTypesClient, AddressesClient, AdviceClient, AutoscalersClient, BackendBucketsClient, BackendServicesClient, CrossSiteNetworksClient, DisksClient, DiskSettingsServiceClient, DiskTypesClient, ExternalVpnGatewaysClient, FirewallPoliciesClient, FirewallsClient, ForwardingRulesClient, FutureReservationsClient, GlobalAddressesClient, GlobalForwardingRulesClient, GlobalNetworkEndpointGroupsClient, GlobalOperationsClient, GlobalOrganizationOperationsClient, GlobalPublicDelegatedPrefixesClient, HealthChecksClient, ImageFamilyViewsClient, ImagesClient, InstanceGroupManagerResizeRequestsClient, InstanceGroupManagersClient, InstanceGroupsClient, InstancesClient, InstanceSettingsServiceClient, InstanceTemplatesClient, InstantSnapshotsClient, InterconnectAttachmentGroupsClient, InterconnectAttachmentsClient, InterconnectGroupsClient, InterconnectLocationsClient, InterconnectRemoteLocationsClient, InterconnectsClient, LicenseCodesClient, LicensesClient, MachineImagesClient, MachineTypesClient, NetworkAttachmentsClient, NetworkEdgeSecurityServicesClient, NetworkEndpointGroupsClient, NetworkFirewallPoliciesClient, NetworkProfilesClient, NetworksClient, NodeGroupsClient, NodeTemplatesClient, NodeTypesClient, OrganizationSecurityPoliciesClient, PacketMirroringsClient, PreviewFeaturesClient, ProjectsClient, PublicAdvertisedPrefixesClient, PublicDelegatedPrefixesClient, RegionAutoscalersClient, RegionBackendServicesClient, RegionCommitmentsClient, RegionDisksClient, RegionDiskSettingsClient, RegionDiskTypesClient, RegionHealthChecksClient, RegionHealthCheckServicesClient, RegionInstanceGroupManagerResizeRequestsClient, RegionInstanceGroupManagersClient, RegionInstanceGroupsClient, RegionInstancesClient, RegionInstanceTemplatesClient, RegionInstantSnapshotsClient, RegionMultiMigsClient, RegionNetworkEndpointGroupsClient, RegionNetworkFirewallPoliciesClient, RegionNotificationEndpointsClient, RegionOperationsClient, RegionsClient, RegionSecurityPoliciesClient, RegionSnapshotsClient, RegionSnapshotSettingsClient, RegionSslCertificatesClient, RegionSslPoliciesClient, RegionTargetHttpProxiesClient, RegionTargetHttpsProxiesClient, RegionTargetTcpProxiesClient, RegionUrlMapsClient, RegionZonesClient, ReservationBlocksClient, ReservationsClient, ResourcePoliciesClient, RoutersClient, RoutesClient, SecurityPoliciesClient, ServiceAttachmentsClient, SnapshotsClient, SnapshotSettingsServiceClient, SslCertificatesClient, SslPoliciesClient, StoragePoolsClient, StoragePoolTypesClient, SubnetworksClient, TargetGrpcProxiesClient, TargetHttpProxiesClient, TargetHttpsProxiesClient, TargetInstancesClient, TargetPoolsClient, TargetSslProxiesClient, TargetTcpProxiesClient, TargetVpnGatewaysClient, UrlMapsClient, VpnGatewaysClient, VpnTunnelsClient, WireGroupsClient, ZoneOperationsClient, ZonesClient};
import * as protos from '../protos/protos';
export {protos}
