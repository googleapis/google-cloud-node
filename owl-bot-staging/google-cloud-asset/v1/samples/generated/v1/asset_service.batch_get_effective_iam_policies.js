// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(scope, names) {
  // [START cloudasset_v1_generated_AssetService_BatchGetEffectiveIamPolicies_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Only IAM policies on or below the scope will be returned.
   *  This can only be an organization number (such as "organizations/123"), a
   *  folder number (such as "folders/123"), a project ID (such as
   *  "projects/my-project-id"), or a project number (such as "projects/12345").
   *  To know how to get organization id, visit here
   *   (https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id).
   *  To know how to get folder or project id, visit here
   *   (https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects).
   */
  // const scope = 'abc123'
  /**
   *  Required. The names refer to the full_resource_names 
   *  (https://cloud.google.com/asset-inventory/docs/resource-name-format)
   *  of searchable asset
   *  types (https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types).
   *  A maximum of 20 resources' effective policies can be retrieved in a batch.
   */
  // const names = 'abc123'

  // Imports the Asset library
  const {AssetServiceClient} = require('@google-cloud/asset').v1;

  // Instantiates a client
  const assetClient = new AssetServiceClient();

  async function callBatchGetEffectiveIamPolicies() {
    // Construct request
    const request = {
      scope,
      names,
    };

    // Run request
    const response = await assetClient.batchGetEffectiveIamPolicies(request);
    console.log(response);
  }

  callBatchGetEffectiveIamPolicies();
  // [END cloudasset_v1_generated_AssetService_BatchGetEffectiveIamPolicies_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
