// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(location, filter) {
  // [START contactcenterinsights_v1_generated_ContactCenterInsights_QueryMetrics_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The location of the data.
   *  "projects/{project}/locations/{location}"
   */
  // const location = 'abc123'
  /**
   *  Required. Filter to select a subset of conversations to compute the
   *  metrics. Must specify a window of the conversation create time to compute
   *  the metrics. The returned metrics will be from the range DATE(starting
   *  create time), DATE(ending create time)).
   */
  // const filter = 'abc123'
  /**
   *  The time granularity of each data point in the time series.
   *  Defaults to NONE if this field is unspecified.
   */
  // const timeGranularity = {}
  /**
   *  The dimensions that determine the grouping key for the query. Defaults to
   *  no dimension if this field is unspecified. If a dimension is specified,
   *  its key must also be specified. Each dimension's key must be unique.
   *  If a time granularity is also specified, metric values in the dimension
   *  will be bucketed by this granularity.
   *  Up to one dimension is supported for now.
   */
  // const dimensions = [1,2,3,4]
  /**
   *  Measures to return. Defaults to all measures if this field is unspecified.
   *  A valid mask should traverse from the `measure` field from the response.
   *  For example, a path from a measure mask to get the conversation count is
   *  "conversation_measure.count".
   */
  // const measureMask = {}

  // Imports the Contactcenterinsights library
  const {ContactCenterInsightsClient} = require('@google-cloud/contact-center-insights').v1;

  // Instantiates a client
  const contactcenterinsightsClient = new ContactCenterInsightsClient();

  async function callQueryMetrics() {
    // Construct request
    const request = {
      location,
      filter,
    };

    // Run request
    const [operation] = await contactcenterinsightsClient.queryMetrics(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  callQueryMetrics();
  // [END contactcenterinsights_v1_generated_ContactCenterInsights_QueryMetrics_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
