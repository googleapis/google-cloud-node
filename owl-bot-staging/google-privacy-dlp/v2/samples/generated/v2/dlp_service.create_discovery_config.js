// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent, discoveryConfig) {
  // [START dlp_v2_generated_DlpService_CreateDiscoveryConfig_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. Parent resource name.
   *  The format of this value varies depending on the scope of the request
   *  (project or organization):
   *  + Projects scope:
   *    `projects/{project_id}/locations/{location_id}`
   *  + Organizations scope:
   *    `organizations/{org_id}/locations/{location_id}`
   *  The following example `parent` string specifies a parent project with the
   *  identifier `example-project`, and specifies the `europe-west3` location
   *  for processing data:
   *      parent=projects/example-project/locations/europe-west3
   */
  // const parent = 'abc123'
  /**
   *  Required. The DiscoveryConfig to create.
   */
  // const discoveryConfig = {}
  /**
   *  The config ID can contain uppercase and lowercase letters,
   *  numbers, and hyphens; that is, it must match the regular
   *  expression: `[a-zA-Z\d-_]+`. The maximum length is 100
   *  characters. Can be empty to allow the system to generate one.
   */
  // const configId = 'abc123'

  // Imports the Dlp library
  const {DlpServiceClient} = require('@google-cloud/dlp').v2;

  // Instantiates a client
  const dlpClient = new DlpServiceClient();

  async function callCreateDiscoveryConfig() {
    // Construct request
    const request = {
      parent,
      discoveryConfig,
    };

    // Run request
    const response = await dlpClient.createDiscoveryConfig(request);
    console.log(response);
  }

  callCreateDiscoveryConfig();
  // [END dlp_v2_generated_DlpService_CreateDiscoveryConfig_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
