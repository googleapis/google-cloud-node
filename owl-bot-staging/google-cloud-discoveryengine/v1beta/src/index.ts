// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

import * as v1beta from './v1beta';
const CompletionServiceClient = v1beta.CompletionServiceClient;
type CompletionServiceClient = v1beta.CompletionServiceClient;
const ControlServiceClient = v1beta.ControlServiceClient;
type ControlServiceClient = v1beta.ControlServiceClient;
const ConversationalSearchServiceClient = v1beta.ConversationalSearchServiceClient;
type ConversationalSearchServiceClient = v1beta.ConversationalSearchServiceClient;
const DataStoreServiceClient = v1beta.DataStoreServiceClient;
type DataStoreServiceClient = v1beta.DataStoreServiceClient;
const DocumentServiceClient = v1beta.DocumentServiceClient;
type DocumentServiceClient = v1beta.DocumentServiceClient;
const EngineServiceClient = v1beta.EngineServiceClient;
type EngineServiceClient = v1beta.EngineServiceClient;
const EvaluationServiceClient = v1beta.EvaluationServiceClient;
type EvaluationServiceClient = v1beta.EvaluationServiceClient;
const GroundedGenerationServiceClient = v1beta.GroundedGenerationServiceClient;
type GroundedGenerationServiceClient = v1beta.GroundedGenerationServiceClient;
const ProjectServiceClient = v1beta.ProjectServiceClient;
type ProjectServiceClient = v1beta.ProjectServiceClient;
const RankServiceClient = v1beta.RankServiceClient;
type RankServiceClient = v1beta.RankServiceClient;
const RecommendationServiceClient = v1beta.RecommendationServiceClient;
type RecommendationServiceClient = v1beta.RecommendationServiceClient;
const SampleQueryServiceClient = v1beta.SampleQueryServiceClient;
type SampleQueryServiceClient = v1beta.SampleQueryServiceClient;
const SampleQuerySetServiceClient = v1beta.SampleQuerySetServiceClient;
type SampleQuerySetServiceClient = v1beta.SampleQuerySetServiceClient;
const SchemaServiceClient = v1beta.SchemaServiceClient;
type SchemaServiceClient = v1beta.SchemaServiceClient;
const SearchServiceClient = v1beta.SearchServiceClient;
type SearchServiceClient = v1beta.SearchServiceClient;
const SearchTuningServiceClient = v1beta.SearchTuningServiceClient;
type SearchTuningServiceClient = v1beta.SearchTuningServiceClient;
const ServingConfigServiceClient = v1beta.ServingConfigServiceClient;
type ServingConfigServiceClient = v1beta.ServingConfigServiceClient;
const SiteSearchEngineServiceClient = v1beta.SiteSearchEngineServiceClient;
type SiteSearchEngineServiceClient = v1beta.SiteSearchEngineServiceClient;
const UserEventServiceClient = v1beta.UserEventServiceClient;
type UserEventServiceClient = v1beta.UserEventServiceClient;
export {v1beta, CompletionServiceClient, ControlServiceClient, ConversationalSearchServiceClient, DataStoreServiceClient, DocumentServiceClient, EngineServiceClient, EvaluationServiceClient, GroundedGenerationServiceClient, ProjectServiceClient, RankServiceClient, RecommendationServiceClient, SampleQueryServiceClient, SampleQuerySetServiceClient, SchemaServiceClient, SearchServiceClient, SearchTuningServiceClient, ServingConfigServiceClient, SiteSearchEngineServiceClient, UserEventServiceClient};
export default {v1beta, CompletionServiceClient, ControlServiceClient, ConversationalSearchServiceClient, DataStoreServiceClient, DocumentServiceClient, EngineServiceClient, EvaluationServiceClient, GroundedGenerationServiceClient, ProjectServiceClient, RankServiceClient, RecommendationServiceClient, SampleQueryServiceClient, SampleQuerySetServiceClient, SchemaServiceClient, SearchServiceClient, SearchTuningServiceClient, ServingConfigServiceClient, SiteSearchEngineServiceClient, UserEventServiceClient};
import * as protos from '../protos/protos';
export {protos}
