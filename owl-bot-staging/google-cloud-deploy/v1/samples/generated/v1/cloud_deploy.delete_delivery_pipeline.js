// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(name) {
  // [START clouddeploy_v1_generated_CloudDeploy_DeleteDeliveryPipeline_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The name of the `DeliveryPipeline` to delete. Format should be
   *  projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}.
   */
  // const name = 'abc123'
  /**
   *  Optional. A request ID to identify requests. Specify a unique request ID
   *  so that if you must retry your request, the server will know to ignore
   *  the request if it has already been completed. The server will guarantee
   *  that for at least 60 minutes after the first request.
   *  For example, consider a situation where you make an initial request and the
   *  request times out. If you make the request again with the same request ID,
   *  the server can check if original operation with the same request ID was
   *  received, and if so, will ignore the second request. This prevents clients
   *  from accidentally creating duplicate commitments.
   *  The request ID must be a valid UUID with the exception that zero UUID is
   *  not supported (00000000-0000-0000-0000-000000000000).
   */
  // const requestId = 'abc123'
  /**
   *  Optional. If set to true, then deleting an already deleted or non-existing
   *  `DeliveryPipeline` will succeed.
   */
  // const allowMissing = true
  /**
   *  Optional. If set, validate the request and preview the review, but do not actually
   *  post it.
   */
  // const validateOnly = true
  /**
   *  Optional. If set to true, all child resources under this pipeline will also be
   *  deleted. Otherwise, the request will only work if the pipeline has
   *  no child resources.
   */
  // const force = true
  /**
   *  Optional. This checksum is computed by the server based on the value of other
   *  fields, and may be sent on update and delete requests to ensure the
   *  client has an up-to-date value before proceeding.
   */
  // const etag = 'abc123'

  // Imports the Deploy library
  const {CloudDeployClient} = require('@google-cloud/deploy').v1;

  // Instantiates a client
  const deployClient = new CloudDeployClient();

  async function callDeleteDeliveryPipeline() {
    // Construct request
    const request = {
      name,
    };

    // Run request
    const [operation] = await deployClient.deleteDeliveryPipeline(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  callDeleteDeliveryPipeline();
  // [END clouddeploy_v1_generated_CloudDeploy_DeleteDeliveryPipeline_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
