// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(name, query) {
  // [START generativelanguage_v1beta_generated_RetrieverService_QueryCorpus_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The name of the `Corpus` to query.
   *  Example: `corpora/my-corpus-123`
   */
  // const name = 'abc123'
  /**
   *  Required. Query string to perform semantic search.
   */
  // const query = 'abc123'
  /**
   *  Optional. Filter for `Chunk` and `Document` metadata. Each `MetadataFilter`
   *  object should correspond to a unique key. Multiple `MetadataFilter` objects
   *  are joined by logical "AND"s.
   *  Example query at document level:
   *  (year >= 2020 OR year < 2010) AND (genre = drama OR genre = action)
   *  `MetadataFilter` object list:
   *   metadata_filters = 
   *   {key = "document.custom_metadata.year"
   *    conditions = {int_value = 2020, operation = GREATER_EQUAL},
   *                  {int_value = 2010, operation = LESS} },
   *   {key = "document.custom_metadata.year"
   *    conditions = {int_value = 2020, operation = GREATER_EQUAL},
   *                  {int_value = 2010, operation = LESS} },
   *   {key = "document.custom_metadata.genre"
   *    conditions = {string_value = "drama", operation = EQUAL},
   *                  {string_value = "action", operation = EQUAL} } 
   *  Example query at chunk level for a numeric range of values:
   *  (year > 2015 AND year <= 2020)
   *  `MetadataFilter` object list:
   *   metadata_filters = 
   *   {key = "chunk.custom_metadata.year"
   *    conditions = {int_value = 2015, operation = GREATER} },
   *   {key = "chunk.custom_metadata.year"
   *    conditions = {int_value = 2020, operation = LESS_EQUAL} } 
   *  Note: "AND"s for the same key are only supported for numeric values. String
   *  values only support "OR"s for the same key.
   */
  // const metadataFilters = [1,2,3,4]
  /**
   *  Optional. The maximum number of `Chunk`s to return.
   *  The service may return fewer `Chunk`s.
   *  If unspecified, at most 10 `Chunk`s will be returned.
   *  The maximum specified result count is 100.
   */
  // const resultsCount = 1234

  // Imports the Generativelanguage library
  const {RetrieverServiceClient} = require('@google-ai/generativelanguage').v1beta;

  // Instantiates a client
  const generativelanguageClient = new RetrieverServiceClient();

  async function callQueryCorpus() {
    // Construct request
    const request = {
      name,
      query,
    };

    // Run request
    const response = await generativelanguageClient.queryCorpus(request);
    console.log(response);
  }

  callQueryCorpus();
  // [END generativelanguage_v1beta_generated_RetrieverService_QueryCorpus_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
