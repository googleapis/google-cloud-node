// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(tunedModel) {
  // [START generativelanguage_v1beta3_generated_ModelService_CreateTunedModel_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Optional. The unique id for the tuned model if specified.
   *  This value should be up to 40 characters, the first character must be a
   *  letter, the last could be a letter or a number. The id must match the
   *  regular expression: [a-z]([a-z0-9-]{0,38}[a-z0-9])?.
   */
  // const tunedModelId = 'abc123'
  /**
   *  Required. The tuned model to create.
   */
  // const tunedModel = {}

  // Imports the Generativelanguage library
  const {ModelServiceClient} = require('@google-ai/generativelanguage').v1beta3;

  // Instantiates a client
  const generativelanguageClient = new ModelServiceClient();

  async function callCreateTunedModel() {
    // Construct request
    const request = {
      tunedModel,
    };

    // Run request
    const [operation] = await generativelanguageClient.createTunedModel(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  callCreateTunedModel();
  // [END generativelanguage_v1beta3_generated_ModelService_CreateTunedModel_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
