// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(name) {
  // [START recaptchaenterprise_v1_generated_RecaptchaEnterpriseService_AnnotateAssessment_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The resource name of the Assessment, in the format
   *  `projects/{project}/assessments/{assessment}`.
   */
  // const name = 'abc123'
  /**
   *  Optional. The annotation that will be assigned to the Event. This field can
   *  be left empty to provide reasons that apply to an event without concluding
   *  whether the event is legitimate or fraudulent.
   */
  // const annotation = {}
  /**
   *  Optional. Reasons for the annotation that are assigned to the event.
   */
  // const reasons = [1,2,3,4]
  /**
   *  Optional. A stable account identifier to apply to the assessment. This is
   *  an alternative to setting `account_id` in `CreateAssessment`, for example
   *  when a stable account identifier is not yet known in the initial request.
   */
  // const accountId = 'abc123'
  /**
   *  Optional. A stable hashed account identifier to apply to the assessment.
   *  This is an alternative to setting `hashed_account_id` in
   *  `CreateAssessment`, for example when a stable account identifier is not yet
   *  known in the initial request.
   */
  // const hashedAccountId = Buffer.from('string')
  /**
   *  Optional. If the assessment is part of a payment transaction, provide
   *  details on payment lifecycle events that occur in the transaction.
   */
  // const transactionEvent = {}

  // Imports the Recaptchaenterprise library
  const {RecaptchaEnterpriseServiceClient} = require('@google-cloud/recaptcha-enterprise').v1;

  // Instantiates a client
  const recaptchaenterpriseClient = new RecaptchaEnterpriseServiceClient();

  async function callAnnotateAssessment() {
    // Construct request
    const request = {
      name,
    };

    // Run request
    const response = await recaptchaenterpriseClient.annotateAssessment(request);
    console.log(response);
  }

  callAnnotateAssessment();
  // [END recaptchaenterprise_v1_generated_RecaptchaEnterpriseService_AnnotateAssessment_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
