// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(name) {
  // [START monitoring_v3_generated_NotificationChannelService_GetNotificationChannelVerificationCode_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The notification channel for which a verification code is to be
   *  generated and retrieved. This must name a channel that is already verified;
   *  if the specified channel is not verified, the request will fail.
   */
  // const name = 'abc123'
  /**
   *  The desired expiration time. If specified, the API will guarantee that
   *  the returned code will not be valid after the specified timestamp;
   *  however, the API cannot guarantee that the returned code will be
   *  valid for at least as long as the requested time (the API puts an upper
   *  bound on the amount of time for which a code may be valid). If omitted,
   *  a default expiration will be used, which may be less than the max
   *  permissible expiration (so specifying an expiration may extend the
   *  code's lifetime over omitting an expiration, even though the API does
   *  impose an upper limit on the maximum expiration that is permitted).
   */
  // const expireTime = {}

  // Imports the Monitoring library
  const {NotificationChannelServiceClient} = require('@google-cloud/monitoring').v3;

  // Instantiates a client
  const monitoringClient = new NotificationChannelServiceClient();

  async function callGetNotificationChannelVerificationCode() {
    // Construct request
    const request = {
      name,
    };

    // Run request
    const response = await monitoringClient.getNotificationChannelVerificationCode(request);
    console.log(response);
  }

  callGetNotificationChannelVerificationCode();
  // [END monitoring_v3_generated_NotificationChannelService_GetNotificationChannelVerificationCode_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
