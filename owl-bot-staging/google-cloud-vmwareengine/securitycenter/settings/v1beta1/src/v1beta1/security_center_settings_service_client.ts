// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback, GaxCall} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1beta1/security_center_settings_service_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './security_center_settings_service_client_config.json';
const version = require('../../../package.json').version;

/**
 *  ## API Overview
 *
 *  The SecurityCenterSettingsService is a sub-api of
 *  `securitycenter.googleapis.com`. The service provides methods to manage
 *  Security Center Settings, and Component Settings for GCP organizations,
 *  folders, projects, and clusters.
 * @class
 * @memberof v1beta1
 */
export class SecurityCenterSettingsServiceClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  securityCenterSettingsServiceStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of SecurityCenterSettingsServiceClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new SecurityCenterSettingsServiceClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof SecurityCenterSettingsServiceClient;
    const servicePath = opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(opts?.servicePath || opts?.apiEndpoint);
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest' ) {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      folderComponentSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/components/{component}/settings'
      ),
      folderSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'folders/{folder}/settings'
      ),
      organizationPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}'
      ),
      organizationComponentSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/components/{component}/settings'
      ),
      organizationSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/settings'
      ),
      projectComponentSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/components/{component}/settings'
      ),
      projectLocationClusterComponentSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings'
      ),
      projectLocationClusterSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/clusters/{cluster}/settings'
      ),
      projectRegionClusterComponentSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings'
      ),
      projectRegionClusterSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/regions/{region}/clusters/{cluster}/settings'
      ),
      projectSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/settings'
      ),
      projectZoneClusterComponentSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings'
      ),
      projectZoneClusterSettingsPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/zones/{zone}/clusters/{cluster}/settings'
      ),
      serviceAccountPathTemplate: new this._gaxModule.PathTemplate(
        'organizations/{organization}/serviceAccount'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listDetectors:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'detectors'),
      listComponents:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'components')
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.securityCenterSettingsServiceStub) {
      return this.securityCenterSettingsServiceStub;
    }

    // Put together the "service stub" for
    // google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService.
    this.securityCenterSettingsServiceStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.securitycenter.settings.v1beta1.SecurityCenterSettingsService,
        this._opts, this._providedCustomServicePath) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const securityCenterSettingsServiceStubMethods =
        ['getServiceAccount', 'getSettings', 'updateSettings', 'resetSettings', 'batchGetSettings', 'calculateEffectiveSettings', 'batchCalculateEffectiveSettings', 'getComponentSettings', 'updateComponentSettings', 'resetComponentSettings', 'calculateEffectiveComponentSettings', 'listDetectors', 'listComponents'];
    for (const methodName of securityCenterSettingsServiceStubMethods) {
      const callPromise = this.securityCenterSettingsServiceStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const descriptor =
        this.descriptors.page[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.securityCenterSettingsServiceStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'securitycenter.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'securitycenter.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-platform'
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
/**
 * Retrieves the organizations service account, if it exists, otherwise it
 * creates the organization service account. This API is idempotent and
 * will only create a service account once. On subsequent calls it will
 * return the previously created service account.  SHA, SCC and CTD Infra
 * Automation will use this SA.  This SA will not have any permissions when
 * created.  The UI will provision this via IAM or the user will using
 * their own internal process. This API only creates SAs on the organization.
 * Folders are not supported and projects will use per-project SAs associated
 * with APIs enabled on a project. This API will be called by the UX
 * onboarding workflow.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The relative resource name of the service account resource.
 *   Format:
 *    * `organizations/{organization}/serviceAccount`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ServiceAccount]{@link google.cloud.securitycenter.settings.v1beta1.ServiceAccount}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.get_service_account.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_GetServiceAccount_async
 */
  getServiceAccount(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IGetServiceAccountRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IServiceAccount,
        protos.google.cloud.securitycenter.settings.v1beta1.IGetServiceAccountRequest|undefined, {}|undefined
      ]>;
  getServiceAccount(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IGetServiceAccountRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IServiceAccount,
          protos.google.cloud.securitycenter.settings.v1beta1.IGetServiceAccountRequest|null|undefined,
          {}|null|undefined>): void;
  getServiceAccount(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IGetServiceAccountRequest,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IServiceAccount,
          protos.google.cloud.securitycenter.settings.v1beta1.IGetServiceAccountRequest|null|undefined,
          {}|null|undefined>): void;
  getServiceAccount(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IGetServiceAccountRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IServiceAccount,
          protos.google.cloud.securitycenter.settings.v1beta1.IGetServiceAccountRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IServiceAccount,
          protos.google.cloud.securitycenter.settings.v1beta1.IGetServiceAccountRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IServiceAccount,
        protos.google.cloud.securitycenter.settings.v1beta1.IGetServiceAccountRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.getServiceAccount(request, options, callback);
  }
/**
 * Gets the Settings.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the settings to retrieve.
 *   Formats:
 *    * `organizations/{organization}/settings`
 *    * `folders/{folder}/settings`
 *    * `projects/{project}/settings`
 *    * `projects/{project}/locations/{location}/clusters/{cluster}/settings`
 *    * `projects/{project}/regions/{region}/clusters/{cluster}/settings`
 *    * `projects/{project}/zones/{zone}/clusters/{cluster}/settings`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Settings]{@link google.cloud.securitycenter.settings.v1beta1.Settings}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.get_settings.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_GetSettings_async
 */
  getSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IGetSettingsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
        protos.google.cloud.securitycenter.settings.v1beta1.IGetSettingsRequest|undefined, {}|undefined
      ]>;
  getSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IGetSettingsRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IGetSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  getSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IGetSettingsRequest,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IGetSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  getSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IGetSettingsRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IGetSettingsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IGetSettingsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
        protos.google.cloud.securitycenter.settings.v1beta1.IGetSettingsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.getSettings(request, options, callback);
  }
/**
 * Updates the Settings.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.securitycenter.settings.v1beta1.Settings} request.settings
 *   Required. The settings to update.
 *
 *   The settings' `name` field is used to identify the settings to be updated.
 *   Formats:
 *    * `organizations/{organization}/settings`
 *    * `folders/{folder}/settings`
 *    * `projects/{project}/settings`
 *    * `projects/{project}/locations/{location}/clusters/{cluster}/settings`
 *    * `projects/{project}/regions/{region}/clusters/{cluster}/settings`
 *    * `projects/{project}/zones/{zone}/clusters/{cluster}/settings`
 * @param {google.protobuf.FieldMask} request.updateMask
 *   The list of fields to be updated on the settings.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Settings]{@link google.cloud.securitycenter.settings.v1beta1.Settings}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.update_settings.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_UpdateSettings_async
 */
  updateSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IUpdateSettingsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
        protos.google.cloud.securitycenter.settings.v1beta1.IUpdateSettingsRequest|undefined, {}|undefined
      ]>;
  updateSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IUpdateSettingsRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IUpdateSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  updateSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IUpdateSettingsRequest,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IUpdateSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  updateSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IUpdateSettingsRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IUpdateSettingsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IUpdateSettingsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
        protos.google.cloud.securitycenter.settings.v1beta1.IUpdateSettingsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'settings.name': request.settings!.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.updateSettings(request, options, callback);
  }
/**
 * Reset the organization, folder or project's settings and return
 * the settings of just that resource to the default.
 *
 * Settings are present at the organization, folder, project, and cluster
 * levels. Using Reset on a sub-organization level will remove that resource's
 * override and result in the parent's settings being used (eg: if Reset on a
 * cluster, project settings will be used).
 *
 * Using Reset on organization will remove the override that was set and
 * result in default settings being used.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the settings to reset.
 *   Formats:
 *    * `organizations/{organization}/settings`
 *    * `folders/{folder}/settings`
 *    * `projects/{project}/settings`
 *    * `projects/{project}/locations/{location}/clusters/{cluster}/settings`
 *    * `projects/{project}/regions/{region}/clusters/{cluster}/settings`
 *    * `projects/{project}/zones/{zone}/clusters/{cluster}/settings`
 * @param {string} request.etag
 *   A fingerprint used for optimistic concurrency. If none is provided,
 *   then the existing settings will be blindly overwritten.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.reset_settings.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_ResetSettings_async
 */
  resetSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IResetSettingsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.securitycenter.settings.v1beta1.IResetSettingsRequest|undefined, {}|undefined
      ]>;
  resetSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IResetSettingsRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycenter.settings.v1beta1.IResetSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  resetSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IResetSettingsRequest,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycenter.settings.v1beta1.IResetSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  resetSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IResetSettingsRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycenter.settings.v1beta1.IResetSettingsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycenter.settings.v1beta1.IResetSettingsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.securitycenter.settings.v1beta1.IResetSettingsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.resetSettings(request, options, callback);
  }
/**
 * Gets a list of settings.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The relative resource name of the organization shared by all of the
 *   settings being retrieved.
 *   Format:
 *    * `organizations/{organization}`
 * @param {string[]} request.names
 *   The names of the settings to retrieve.
 *   A maximum of 1000 settings can be retrieved in a batch.
 *   Formats:
 *    * `organizations/{organization}/settings`
 *    * `folders/{folder}/settings`
 *    * `projects/{project}/settings`
 *    * `projects/{project}/locations/{location}/clusters/{cluster}/settings`
 *    * `projects/{project}/regions/{region}/clusters/{cluster}/settings`
 *    * `projects/{project}/zones/{zone}/clusters/{cluster}/settings`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [BatchGetSettingsResponse]{@link google.cloud.securitycenter.settings.v1beta1.BatchGetSettingsResponse}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.batch_get_settings.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_BatchGetSettings_async
 */
  batchGetSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsResponse,
        protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsRequest|undefined, {}|undefined
      ]>;
  batchGetSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsResponse,
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  batchGetSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsRequest,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsResponse,
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  batchGetSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsResponse,
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsResponse,
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsResponse,
        protos.google.cloud.securitycenter.settings.v1beta1.IBatchGetSettingsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.batchGetSettings(request, options, callback);
  }
/**
 * CalculateEffectiveSettings looks up all of the Security Center
 * Settings resources in the GCP resource hierarchy, and calculates the
 * effective settings on that resource by applying the following rules:
 *  * Settings provided closer to the target resource take precedence over
 *    those further away (e.g. folder will override organization level
 *    settings).
 *  * Product defaults can be overridden at org, folder, project, and cluster
 *  levels.
 *  * Detectors will be filtered out if they belong to a billing tier the
 *  customer
 *    has not configured.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the effective settings to retrieve.
 *   Formats:
 *    * `organizations/{organization}/effectiveSettings`
 *    * `folders/{folder}/effectiveSettings`
 *    * `projects/{project}/effectiveSettings`
 *    * `projects/{project}/locations/{location}/clusters/{cluster}/effectiveSettings`
 *    * `projects/{project}/regions/{region}/clusters/{cluster}/effectiveSettings`
 *    * `projects/{project}/zones/{zone}/clusters/{cluster}/effectiveSettings`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Settings]{@link google.cloud.securitycenter.settings.v1beta1.Settings}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.calculate_effective_settings.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_CalculateEffectiveSettings_async
 */
  calculateEffectiveSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveSettingsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
        protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveSettingsRequest|undefined, {}|undefined
      ]>;
  calculateEffectiveSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveSettingsRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
          protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  calculateEffectiveSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveSettingsRequest,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
          protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  calculateEffectiveSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveSettingsRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
          protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveSettingsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
          protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveSettingsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.ISettings,
        protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveSettingsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.calculateEffectiveSettings(request, options, callback);
  }
/**
 * Gets a list of effective settings.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The relative resource name of the organization shared by all of the
 *   settings being retrieved.
 *   Format:
 *    * `organizations/{organization}`
 * @param {number[]} request.requests
 *   The requests specifying the effective settings to retrieve.
 *   A maximum of 1000 effective settings can be retrieved in a batch.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [BatchCalculateEffectiveSettingsResponse]{@link google.cloud.securitycenter.settings.v1beta1.BatchCalculateEffectiveSettingsResponse}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.batch_calculate_effective_settings.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_BatchCalculateEffectiveSettings_async
 */
  batchCalculateEffectiveSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsResponse,
        protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsRequest|undefined, {}|undefined
      ]>;
  batchCalculateEffectiveSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsResponse,
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  batchCalculateEffectiveSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsRequest,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsResponse,
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  batchCalculateEffectiveSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsResponse,
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsResponse,
          protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsResponse,
        protos.google.cloud.securitycenter.settings.v1beta1.IBatchCalculateEffectiveSettingsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.batchCalculateEffectiveSettings(request, options, callback);
  }
/**
 * Gets the Component Settings.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The component settings to retrieve.
 *
 *   Formats:
 *    * `organizations/{organization}/components/{component}/settings`
 *    * `folders/{folder}/components/{component}/settings`
 *    * `projects/{project}/components/{component}/settings`
 *    * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
 *    * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
 *    * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ComponentSettings]{@link google.cloud.securitycenter.settings.v1beta1.ComponentSettings}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.get_component_settings.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_GetComponentSettings_async
 */
  getComponentSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IGetComponentSettingsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
        protos.google.cloud.securitycenter.settings.v1beta1.IGetComponentSettingsRequest|undefined, {}|undefined
      ]>;
  getComponentSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IGetComponentSettingsRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IGetComponentSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  getComponentSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IGetComponentSettingsRequest,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IGetComponentSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  getComponentSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IGetComponentSettingsRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IGetComponentSettingsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IGetComponentSettingsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
        protos.google.cloud.securitycenter.settings.v1beta1.IGetComponentSettingsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.getComponentSettings(request, options, callback);
  }
/**
 * Updates the Component Settings.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.securitycenter.settings.v1beta1.ComponentSettings} request.componentSettings
 *   Required. The component settings to update.
 *
 *   The component settings' `name` field is used to identify the component
 *   settings to be updated. Formats:
 *    * `organizations/{organization}/components/{component}/settings`
 *    * `folders/{folder}/components/{component}/settings`
 *    * `projects/{project}/components/{component}/settings`
 *    * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
 *    * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
 *    * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
 * @param {google.protobuf.FieldMask} request.updateMask
 *   The list of fields to be updated on the component settings resource.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ComponentSettings]{@link google.cloud.securitycenter.settings.v1beta1.ComponentSettings}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.update_component_settings.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_UpdateComponentSettings_async
 */
  updateComponentSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IUpdateComponentSettingsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
        protos.google.cloud.securitycenter.settings.v1beta1.IUpdateComponentSettingsRequest|undefined, {}|undefined
      ]>;
  updateComponentSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IUpdateComponentSettingsRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IUpdateComponentSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  updateComponentSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IUpdateComponentSettingsRequest,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IUpdateComponentSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  updateComponentSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IUpdateComponentSettingsRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IUpdateComponentSettingsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
          protos.google.cloud.securitycenter.settings.v1beta1.IUpdateComponentSettingsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
        protos.google.cloud.securitycenter.settings.v1beta1.IUpdateComponentSettingsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'component_settings.name': request.componentSettings!.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.updateComponentSettings(request, options, callback);
  }
/**
 * Reset the organization, folder or project's component settings and return
 * the settings to the default. Settings are present at the
 * organization, folder and project levels. Using Reset for a folder or
 * project will remove the override that was set and result in the
 * organization-level settings being used.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The component settings to reset.
 *
 *   Formats:
 *    * `organizations/{organization}/components/{component}/settings`
 *    * `folders/{folder}/components/{component}/settings`
 *    * `projects/{project}/components/{component}/settings`
 *    * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
 *    * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
 *    * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
 * @param {string} request.etag
 *   An fingerprint used for optimistic concurrency. If none is provided,
 *   then the existing settings will be blindly overwritten.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.reset_component_settings.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_ResetComponentSettings_async
 */
  resetComponentSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IResetComponentSettingsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.securitycenter.settings.v1beta1.IResetComponentSettingsRequest|undefined, {}|undefined
      ]>;
  resetComponentSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IResetComponentSettingsRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycenter.settings.v1beta1.IResetComponentSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  resetComponentSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IResetComponentSettingsRequest,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycenter.settings.v1beta1.IResetComponentSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  resetComponentSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IResetComponentSettingsRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycenter.settings.v1beta1.IResetComponentSettingsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.securitycenter.settings.v1beta1.IResetComponentSettingsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.securitycenter.settings.v1beta1.IResetComponentSettingsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.resetComponentSettings(request, options, callback);
  }
/**
 * Gets the Effective Component Settings.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The effective component settings to retrieve.
 *
 *   Formats:
 *    * `organizations/{organization}/components/{component}/settings`
 *    * `folders/{folder}/components/{component}/settings`
 *    * `projects/{project}/components/{component}/settings`
 *    * `projects/{project}/locations/{location}/clusters/{cluster}/components/{component}/settings`
 *    * `projects/{project}/regions/{region}/clusters/{cluster}/components/{component}/settings`
 *    * `projects/{project}/zones/{zone}/clusters/{cluster}/components/{component}/settings`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ComponentSettings]{@link google.cloud.securitycenter.settings.v1beta1.ComponentSettings}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.calculate_effective_component_settings.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_CalculateEffectiveComponentSettings_async
 */
  calculateEffectiveComponentSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveComponentSettingsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
        protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveComponentSettingsRequest|undefined, {}|undefined
      ]>;
  calculateEffectiveComponentSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveComponentSettingsRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
          protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveComponentSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  calculateEffectiveComponentSettings(
      request: protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveComponentSettingsRequest,
      callback: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
          protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveComponentSettingsRequest|null|undefined,
          {}|null|undefined>): void;
  calculateEffectiveComponentSettings(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveComponentSettingsRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
          protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveComponentSettingsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
          protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveComponentSettingsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IComponentSettings,
        protos.google.cloud.securitycenter.settings.v1beta1.ICalculateEffectiveComponentSettingsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.calculateEffectiveComponentSettings(request, options, callback);
  }

 /**
 * Retrieves an unordered list of available detectors.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of detectors.
 *   Format:
 *    * `organizations/{organization}`
 * @param {string} request.filter
 *   Filters to apply on the response. Filters can be applied on:
 *    * components
 *    * labels
 *    * billing tiers
 *
 *   Component filters will retrieve only detectors for the components
 *   specified. Label filters will retrieve only detectors that match one of the
 *   labels specified. Billing tier filters will retrieve only detectors for
 *   that billing tier.
 *
 *   The filters
 * @param {number} request.pageSize
 *   The maximum number of detectors to return. The service may return fewer
 *   than this value. If unspecified, at most 100 detectors will be returned.
 *   The maximum value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListDetectors` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListDetectors` must
 *   match the call that provided the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [Detector]{@link google.cloud.securitycenter.settings.v1beta1.Detector}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listDetectorsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listDetectors(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IDetector[],
        protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsRequest|null,
        protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsResponse
      ]>;
  listDetectors(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsRequest,
          protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsResponse|null|undefined,
          protos.google.cloud.securitycenter.settings.v1beta1.IDetector>): void;
  listDetectors(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsRequest,
      callback: PaginationCallback<
          protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsRequest,
          protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsResponse|null|undefined,
          protos.google.cloud.securitycenter.settings.v1beta1.IDetector>): void;
  listDetectors(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsRequest,
          protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsResponse|null|undefined,
          protos.google.cloud.securitycenter.settings.v1beta1.IDetector>,
      callback?: PaginationCallback<
          protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsRequest,
          protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsResponse|null|undefined,
          protos.google.cloud.securitycenter.settings.v1beta1.IDetector>):
      Promise<[
        protos.google.cloud.securitycenter.settings.v1beta1.IDetector[],
        protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsRequest|null,
        protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listDetectors(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of detectors.
 *   Format:
 *    * `organizations/{organization}`
 * @param {string} request.filter
 *   Filters to apply on the response. Filters can be applied on:
 *    * components
 *    * labels
 *    * billing tiers
 *
 *   Component filters will retrieve only detectors for the components
 *   specified. Label filters will retrieve only detectors that match one of the
 *   labels specified. Billing tier filters will retrieve only detectors for
 *   that billing tier.
 *
 *   The filters
 * @param {number} request.pageSize
 *   The maximum number of detectors to return. The service may return fewer
 *   than this value. If unspecified, at most 100 detectors will be returned.
 *   The maximum value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListDetectors` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListDetectors` must
 *   match the call that provided the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [Detector]{@link google.cloud.securitycenter.settings.v1beta1.Detector} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listDetectorsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listDetectorsStream(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listDetectors'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listDetectors.createStream(
      this.innerApiCalls.listDetectors as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listDetectors`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of detectors.
 *   Format:
 *    * `organizations/{organization}`
 * @param {string} request.filter
 *   Filters to apply on the response. Filters can be applied on:
 *    * components
 *    * labels
 *    * billing tiers
 *
 *   Component filters will retrieve only detectors for the components
 *   specified. Label filters will retrieve only detectors that match one of the
 *   labels specified. Billing tier filters will retrieve only detectors for
 *   that billing tier.
 *
 *   The filters
 * @param {number} request.pageSize
 *   The maximum number of detectors to return. The service may return fewer
 *   than this value. If unspecified, at most 100 detectors will be returned.
 *   The maximum value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListDetectors` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListDetectors` must
 *   match the call that provided the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [Detector]{@link google.cloud.securitycenter.settings.v1beta1.Detector}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.list_detectors.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_ListDetectors_async
 */
  listDetectorsAsync(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IListDetectorsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.securitycenter.settings.v1beta1.IDetector>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listDetectors'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listDetectors.asyncIterate(
      this.innerApiCalls['listDetectors'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.securitycenter.settings.v1beta1.IDetector>;
  }
 /**
 * Retrieves an unordered list of available SCC components.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of components.
 *   Format:
 *    * `organizations/{organization}`
 * @param {number} request.pageSize
 *   The maximum number of components to return. The service may return fewer
 *   than this value. If unspecified, at most 100 components will be returned.
 *   The maximum value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListComponents` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListComponents` must
 *   match the call that provided the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of string.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listComponentsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listComponents(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsRequest,
      options?: CallOptions):
      Promise<[
        string[],
        protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsRequest|null,
        protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsResponse
      ]>;
  listComponents(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsRequest,
          protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsResponse|null|undefined,
          string>): void;
  listComponents(
      request: protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsRequest,
      callback: PaginationCallback<
          protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsRequest,
          protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsResponse|null|undefined,
          string>): void;
  listComponents(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsRequest,
          protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsResponse|null|undefined,
          string>,
      callback?: PaginationCallback<
          protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsRequest,
          protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsResponse|null|undefined,
          string>):
      Promise<[
        string[],
        protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsRequest|null,
        protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listComponents(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of components.
 *   Format:
 *    * `organizations/{organization}`
 * @param {number} request.pageSize
 *   The maximum number of components to return. The service may return fewer
 *   than this value. If unspecified, at most 100 components will be returned.
 *   The maximum value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListComponents` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListComponents` must
 *   match the call that provided the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing string on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listComponentsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listComponentsStream(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listComponents'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listComponents.createStream(
      this.innerApiCalls.listComponents as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listComponents`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of components.
 *   Format:
 *    * `organizations/{organization}`
 * @param {number} request.pageSize
 *   The maximum number of components to return. The service may return fewer
 *   than this value. If unspecified, at most 100 components will be returned.
 *   The maximum value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListComponents` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListComponents` must
 *   match the call that provided the page token.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   string. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1beta1/security_center_settings_service.list_components.js</caption>
 * region_tag:securitycenter_v1beta1_generated_SecurityCenterSettingsService_ListComponents_async
 */
  listComponentsAsync(
      request?: protos.google.cloud.securitycenter.settings.v1beta1.IListComponentsRequest,
      options?: CallOptions):
    AsyncIterable<string>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listComponents'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listComponents.asyncIterate(
      this.innerApiCalls['listComponents'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<string>;
  }
  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified folderComponentSettings resource name string.
   *
   * @param {string} folder
   * @param {string} component
   * @returns {string} Resource name string.
   */
  folderComponentSettingsPath(folder:string,component:string) {
    return this.pathTemplates.folderComponentSettingsPathTemplate.render({
      folder: folder,
      component: component,
    });
  }

  /**
   * Parse the folder from FolderComponentSettings resource.
   *
   * @param {string} folderComponentSettingsName
   *   A fully-qualified path representing folder_component_settings resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderComponentSettingsName(folderComponentSettingsName: string) {
    return this.pathTemplates.folderComponentSettingsPathTemplate.match(folderComponentSettingsName).folder;
  }

  /**
   * Parse the component from FolderComponentSettings resource.
   *
   * @param {string} folderComponentSettingsName
   *   A fully-qualified path representing folder_component_settings resource.
   * @returns {string} A string representing the component.
   */
  matchComponentFromFolderComponentSettingsName(folderComponentSettingsName: string) {
    return this.pathTemplates.folderComponentSettingsPathTemplate.match(folderComponentSettingsName).component;
  }

  /**
   * Return a fully-qualified folderSettings resource name string.
   *
   * @param {string} folder
   * @returns {string} Resource name string.
   */
  folderSettingsPath(folder:string) {
    return this.pathTemplates.folderSettingsPathTemplate.render({
      folder: folder,
    });
  }

  /**
   * Parse the folder from FolderSettings resource.
   *
   * @param {string} folderSettingsName
   *   A fully-qualified path representing folder_settings resource.
   * @returns {string} A string representing the folder.
   */
  matchFolderFromFolderSettingsName(folderSettingsName: string) {
    return this.pathTemplates.folderSettingsPathTemplate.match(folderSettingsName).folder;
  }

  /**
   * Return a fully-qualified organization resource name string.
   *
   * @param {string} organization
   * @returns {string} Resource name string.
   */
  organizationPath(organization:string) {
    return this.pathTemplates.organizationPathTemplate.render({
      organization: organization,
    });
  }

  /**
   * Parse the organization from Organization resource.
   *
   * @param {string} organizationName
   *   A fully-qualified path representing Organization resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationName(organizationName: string) {
    return this.pathTemplates.organizationPathTemplate.match(organizationName).organization;
  }

  /**
   * Return a fully-qualified organizationComponentSettings resource name string.
   *
   * @param {string} organization
   * @param {string} component
   * @returns {string} Resource name string.
   */
  organizationComponentSettingsPath(organization:string,component:string) {
    return this.pathTemplates.organizationComponentSettingsPathTemplate.render({
      organization: organization,
      component: component,
    });
  }

  /**
   * Parse the organization from OrganizationComponentSettings resource.
   *
   * @param {string} organizationComponentSettingsName
   *   A fully-qualified path representing organization_component_settings resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationComponentSettingsName(organizationComponentSettingsName: string) {
    return this.pathTemplates.organizationComponentSettingsPathTemplate.match(organizationComponentSettingsName).organization;
  }

  /**
   * Parse the component from OrganizationComponentSettings resource.
   *
   * @param {string} organizationComponentSettingsName
   *   A fully-qualified path representing organization_component_settings resource.
   * @returns {string} A string representing the component.
   */
  matchComponentFromOrganizationComponentSettingsName(organizationComponentSettingsName: string) {
    return this.pathTemplates.organizationComponentSettingsPathTemplate.match(organizationComponentSettingsName).component;
  }

  /**
   * Return a fully-qualified organizationSettings resource name string.
   *
   * @param {string} organization
   * @returns {string} Resource name string.
   */
  organizationSettingsPath(organization:string) {
    return this.pathTemplates.organizationSettingsPathTemplate.render({
      organization: organization,
    });
  }

  /**
   * Parse the organization from OrganizationSettings resource.
   *
   * @param {string} organizationSettingsName
   *   A fully-qualified path representing organization_settings resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromOrganizationSettingsName(organizationSettingsName: string) {
    return this.pathTemplates.organizationSettingsPathTemplate.match(organizationSettingsName).organization;
  }

  /**
   * Return a fully-qualified projectComponentSettings resource name string.
   *
   * @param {string} project
   * @param {string} component
   * @returns {string} Resource name string.
   */
  projectComponentSettingsPath(project:string,component:string) {
    return this.pathTemplates.projectComponentSettingsPathTemplate.render({
      project: project,
      component: component,
    });
  }

  /**
   * Parse the project from ProjectComponentSettings resource.
   *
   * @param {string} projectComponentSettingsName
   *   A fully-qualified path representing project_component_settings resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectComponentSettingsName(projectComponentSettingsName: string) {
    return this.pathTemplates.projectComponentSettingsPathTemplate.match(projectComponentSettingsName).project;
  }

  /**
   * Parse the component from ProjectComponentSettings resource.
   *
   * @param {string} projectComponentSettingsName
   *   A fully-qualified path representing project_component_settings resource.
   * @returns {string} A string representing the component.
   */
  matchComponentFromProjectComponentSettingsName(projectComponentSettingsName: string) {
    return this.pathTemplates.projectComponentSettingsPathTemplate.match(projectComponentSettingsName).component;
  }

  /**
   * Return a fully-qualified projectLocationClusterComponentSettings resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} cluster
   * @param {string} component
   * @returns {string} Resource name string.
   */
  projectLocationClusterComponentSettingsPath(project:string,location:string,cluster:string,component:string) {
    return this.pathTemplates.projectLocationClusterComponentSettingsPathTemplate.render({
      project: project,
      location: location,
      cluster: cluster,
      component: component,
    });
  }

  /**
   * Parse the project from ProjectLocationClusterComponentSettings resource.
   *
   * @param {string} projectLocationClusterComponentSettingsName
   *   A fully-qualified path representing project_location_cluster_component_settings resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationClusterComponentSettingsName(projectLocationClusterComponentSettingsName: string) {
    return this.pathTemplates.projectLocationClusterComponentSettingsPathTemplate.match(projectLocationClusterComponentSettingsName).project;
  }

  /**
   * Parse the location from ProjectLocationClusterComponentSettings resource.
   *
   * @param {string} projectLocationClusterComponentSettingsName
   *   A fully-qualified path representing project_location_cluster_component_settings resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationClusterComponentSettingsName(projectLocationClusterComponentSettingsName: string) {
    return this.pathTemplates.projectLocationClusterComponentSettingsPathTemplate.match(projectLocationClusterComponentSettingsName).location;
  }

  /**
   * Parse the cluster from ProjectLocationClusterComponentSettings resource.
   *
   * @param {string} projectLocationClusterComponentSettingsName
   *   A fully-qualified path representing project_location_cluster_component_settings resource.
   * @returns {string} A string representing the cluster.
   */
  matchClusterFromProjectLocationClusterComponentSettingsName(projectLocationClusterComponentSettingsName: string) {
    return this.pathTemplates.projectLocationClusterComponentSettingsPathTemplate.match(projectLocationClusterComponentSettingsName).cluster;
  }

  /**
   * Parse the component from ProjectLocationClusterComponentSettings resource.
   *
   * @param {string} projectLocationClusterComponentSettingsName
   *   A fully-qualified path representing project_location_cluster_component_settings resource.
   * @returns {string} A string representing the component.
   */
  matchComponentFromProjectLocationClusterComponentSettingsName(projectLocationClusterComponentSettingsName: string) {
    return this.pathTemplates.projectLocationClusterComponentSettingsPathTemplate.match(projectLocationClusterComponentSettingsName).component;
  }

  /**
   * Return a fully-qualified projectLocationClusterSettings resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} cluster
   * @returns {string} Resource name string.
   */
  projectLocationClusterSettingsPath(project:string,location:string,cluster:string) {
    return this.pathTemplates.projectLocationClusterSettingsPathTemplate.render({
      project: project,
      location: location,
      cluster: cluster,
    });
  }

  /**
   * Parse the project from ProjectLocationClusterSettings resource.
   *
   * @param {string} projectLocationClusterSettingsName
   *   A fully-qualified path representing project_location_cluster_settings resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationClusterSettingsName(projectLocationClusterSettingsName: string) {
    return this.pathTemplates.projectLocationClusterSettingsPathTemplate.match(projectLocationClusterSettingsName).project;
  }

  /**
   * Parse the location from ProjectLocationClusterSettings resource.
   *
   * @param {string} projectLocationClusterSettingsName
   *   A fully-qualified path representing project_location_cluster_settings resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationClusterSettingsName(projectLocationClusterSettingsName: string) {
    return this.pathTemplates.projectLocationClusterSettingsPathTemplate.match(projectLocationClusterSettingsName).location;
  }

  /**
   * Parse the cluster from ProjectLocationClusterSettings resource.
   *
   * @param {string} projectLocationClusterSettingsName
   *   A fully-qualified path representing project_location_cluster_settings resource.
   * @returns {string} A string representing the cluster.
   */
  matchClusterFromProjectLocationClusterSettingsName(projectLocationClusterSettingsName: string) {
    return this.pathTemplates.projectLocationClusterSettingsPathTemplate.match(projectLocationClusterSettingsName).cluster;
  }

  /**
   * Return a fully-qualified projectRegionClusterComponentSettings resource name string.
   *
   * @param {string} project
   * @param {string} region
   * @param {string} cluster
   * @param {string} component
   * @returns {string} Resource name string.
   */
  projectRegionClusterComponentSettingsPath(project:string,region:string,cluster:string,component:string) {
    return this.pathTemplates.projectRegionClusterComponentSettingsPathTemplate.render({
      project: project,
      region: region,
      cluster: cluster,
      component: component,
    });
  }

  /**
   * Parse the project from ProjectRegionClusterComponentSettings resource.
   *
   * @param {string} projectRegionClusterComponentSettingsName
   *   A fully-qualified path representing project_region_cluster_component_settings resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectRegionClusterComponentSettingsName(projectRegionClusterComponentSettingsName: string) {
    return this.pathTemplates.projectRegionClusterComponentSettingsPathTemplate.match(projectRegionClusterComponentSettingsName).project;
  }

  /**
   * Parse the region from ProjectRegionClusterComponentSettings resource.
   *
   * @param {string} projectRegionClusterComponentSettingsName
   *   A fully-qualified path representing project_region_cluster_component_settings resource.
   * @returns {string} A string representing the region.
   */
  matchRegionFromProjectRegionClusterComponentSettingsName(projectRegionClusterComponentSettingsName: string) {
    return this.pathTemplates.projectRegionClusterComponentSettingsPathTemplate.match(projectRegionClusterComponentSettingsName).region;
  }

  /**
   * Parse the cluster from ProjectRegionClusterComponentSettings resource.
   *
   * @param {string} projectRegionClusterComponentSettingsName
   *   A fully-qualified path representing project_region_cluster_component_settings resource.
   * @returns {string} A string representing the cluster.
   */
  matchClusterFromProjectRegionClusterComponentSettingsName(projectRegionClusterComponentSettingsName: string) {
    return this.pathTemplates.projectRegionClusterComponentSettingsPathTemplate.match(projectRegionClusterComponentSettingsName).cluster;
  }

  /**
   * Parse the component from ProjectRegionClusterComponentSettings resource.
   *
   * @param {string} projectRegionClusterComponentSettingsName
   *   A fully-qualified path representing project_region_cluster_component_settings resource.
   * @returns {string} A string representing the component.
   */
  matchComponentFromProjectRegionClusterComponentSettingsName(projectRegionClusterComponentSettingsName: string) {
    return this.pathTemplates.projectRegionClusterComponentSettingsPathTemplate.match(projectRegionClusterComponentSettingsName).component;
  }

  /**
   * Return a fully-qualified projectRegionClusterSettings resource name string.
   *
   * @param {string} project
   * @param {string} region
   * @param {string} cluster
   * @returns {string} Resource name string.
   */
  projectRegionClusterSettingsPath(project:string,region:string,cluster:string) {
    return this.pathTemplates.projectRegionClusterSettingsPathTemplate.render({
      project: project,
      region: region,
      cluster: cluster,
    });
  }

  /**
   * Parse the project from ProjectRegionClusterSettings resource.
   *
   * @param {string} projectRegionClusterSettingsName
   *   A fully-qualified path representing project_region_cluster_settings resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectRegionClusterSettingsName(projectRegionClusterSettingsName: string) {
    return this.pathTemplates.projectRegionClusterSettingsPathTemplate.match(projectRegionClusterSettingsName).project;
  }

  /**
   * Parse the region from ProjectRegionClusterSettings resource.
   *
   * @param {string} projectRegionClusterSettingsName
   *   A fully-qualified path representing project_region_cluster_settings resource.
   * @returns {string} A string representing the region.
   */
  matchRegionFromProjectRegionClusterSettingsName(projectRegionClusterSettingsName: string) {
    return this.pathTemplates.projectRegionClusterSettingsPathTemplate.match(projectRegionClusterSettingsName).region;
  }

  /**
   * Parse the cluster from ProjectRegionClusterSettings resource.
   *
   * @param {string} projectRegionClusterSettingsName
   *   A fully-qualified path representing project_region_cluster_settings resource.
   * @returns {string} A string representing the cluster.
   */
  matchClusterFromProjectRegionClusterSettingsName(projectRegionClusterSettingsName: string) {
    return this.pathTemplates.projectRegionClusterSettingsPathTemplate.match(projectRegionClusterSettingsName).cluster;
  }

  /**
   * Return a fully-qualified projectSettings resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  projectSettingsPath(project:string) {
    return this.pathTemplates.projectSettingsPathTemplate.render({
      project: project,
    });
  }

  /**
   * Parse the project from ProjectSettings resource.
   *
   * @param {string} projectSettingsName
   *   A fully-qualified path representing project_settings resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectSettingsName(projectSettingsName: string) {
    return this.pathTemplates.projectSettingsPathTemplate.match(projectSettingsName).project;
  }

  /**
   * Return a fully-qualified projectZoneClusterComponentSettings resource name string.
   *
   * @param {string} project
   * @param {string} zone
   * @param {string} cluster
   * @param {string} component
   * @returns {string} Resource name string.
   */
  projectZoneClusterComponentSettingsPath(project:string,zone:string,cluster:string,component:string) {
    return this.pathTemplates.projectZoneClusterComponentSettingsPathTemplate.render({
      project: project,
      zone: zone,
      cluster: cluster,
      component: component,
    });
  }

  /**
   * Parse the project from ProjectZoneClusterComponentSettings resource.
   *
   * @param {string} projectZoneClusterComponentSettingsName
   *   A fully-qualified path representing project_zone_cluster_component_settings resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectZoneClusterComponentSettingsName(projectZoneClusterComponentSettingsName: string) {
    return this.pathTemplates.projectZoneClusterComponentSettingsPathTemplate.match(projectZoneClusterComponentSettingsName).project;
  }

  /**
   * Parse the zone from ProjectZoneClusterComponentSettings resource.
   *
   * @param {string} projectZoneClusterComponentSettingsName
   *   A fully-qualified path representing project_zone_cluster_component_settings resource.
   * @returns {string} A string representing the zone.
   */
  matchZoneFromProjectZoneClusterComponentSettingsName(projectZoneClusterComponentSettingsName: string) {
    return this.pathTemplates.projectZoneClusterComponentSettingsPathTemplate.match(projectZoneClusterComponentSettingsName).zone;
  }

  /**
   * Parse the cluster from ProjectZoneClusterComponentSettings resource.
   *
   * @param {string} projectZoneClusterComponentSettingsName
   *   A fully-qualified path representing project_zone_cluster_component_settings resource.
   * @returns {string} A string representing the cluster.
   */
  matchClusterFromProjectZoneClusterComponentSettingsName(projectZoneClusterComponentSettingsName: string) {
    return this.pathTemplates.projectZoneClusterComponentSettingsPathTemplate.match(projectZoneClusterComponentSettingsName).cluster;
  }

  /**
   * Parse the component from ProjectZoneClusterComponentSettings resource.
   *
   * @param {string} projectZoneClusterComponentSettingsName
   *   A fully-qualified path representing project_zone_cluster_component_settings resource.
   * @returns {string} A string representing the component.
   */
  matchComponentFromProjectZoneClusterComponentSettingsName(projectZoneClusterComponentSettingsName: string) {
    return this.pathTemplates.projectZoneClusterComponentSettingsPathTemplate.match(projectZoneClusterComponentSettingsName).component;
  }

  /**
   * Return a fully-qualified projectZoneClusterSettings resource name string.
   *
   * @param {string} project
   * @param {string} zone
   * @param {string} cluster
   * @returns {string} Resource name string.
   */
  projectZoneClusterSettingsPath(project:string,zone:string,cluster:string) {
    return this.pathTemplates.projectZoneClusterSettingsPathTemplate.render({
      project: project,
      zone: zone,
      cluster: cluster,
    });
  }

  /**
   * Parse the project from ProjectZoneClusterSettings resource.
   *
   * @param {string} projectZoneClusterSettingsName
   *   A fully-qualified path representing project_zone_cluster_settings resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectZoneClusterSettingsName(projectZoneClusterSettingsName: string) {
    return this.pathTemplates.projectZoneClusterSettingsPathTemplate.match(projectZoneClusterSettingsName).project;
  }

  /**
   * Parse the zone from ProjectZoneClusterSettings resource.
   *
   * @param {string} projectZoneClusterSettingsName
   *   A fully-qualified path representing project_zone_cluster_settings resource.
   * @returns {string} A string representing the zone.
   */
  matchZoneFromProjectZoneClusterSettingsName(projectZoneClusterSettingsName: string) {
    return this.pathTemplates.projectZoneClusterSettingsPathTemplate.match(projectZoneClusterSettingsName).zone;
  }

  /**
   * Parse the cluster from ProjectZoneClusterSettings resource.
   *
   * @param {string} projectZoneClusterSettingsName
   *   A fully-qualified path representing project_zone_cluster_settings resource.
   * @returns {string} A string representing the cluster.
   */
  matchClusterFromProjectZoneClusterSettingsName(projectZoneClusterSettingsName: string) {
    return this.pathTemplates.projectZoneClusterSettingsPathTemplate.match(projectZoneClusterSettingsName).cluster;
  }

  /**
   * Return a fully-qualified serviceAccount resource name string.
   *
   * @param {string} organization
   * @returns {string} Resource name string.
   */
  serviceAccountPath(organization:string) {
    return this.pathTemplates.serviceAccountPathTemplate.render({
      organization: organization,
    });
  }

  /**
   * Parse the organization from ServiceAccount resource.
   *
   * @param {string} serviceAccountName
   *   A fully-qualified path representing ServiceAccount resource.
   * @returns {string} A string representing the organization.
   */
  matchOrganizationFromServiceAccountName(serviceAccountName: string) {
    return this.pathTemplates.serviceAccountPathTemplate.match(serviceAccountName).organization;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.securityCenterSettingsServiceStub && !this._terminated) {
      return this.securityCenterSettingsServiceStub.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
