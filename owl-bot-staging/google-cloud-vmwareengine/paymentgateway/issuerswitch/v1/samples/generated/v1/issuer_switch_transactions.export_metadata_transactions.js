// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **



'use strict';

function main(parent) {
  // [START issuerswitch_v1_generated_IssuerSwitchTransactions_ExportMetadataTransactions_async]
  /**
   * This snippet has been automatically generated and should be regarded as a code template only.
   * It will require modifications to work.
   * It may require correct/in-range values for request initialization.
   * TODO(developer): Uncomment these variables before running the sample.
   */
  /**
   *  Required. The parent resource for the transactions. The format is
   *  `projects/{project}`.
   */
  // const parent = 'abc123'
  /**
   *  API type of the metadata transaction API. The possible values for API type
   *  are
   *  * BALANCE
   *  * CHECK_STATUS
   *  * HEART_BEAT
   *  * INITIATE_REGISTRATION
   *  * LIST_ACCOUNTS
   *  * UPDATE_CREDENTIALS
   *  * VALIDATE_REGISTRATION
   *  If no API type is specified, records of all the above API types will be
   *  exported.
   */
  // const apiType = {}
  /**
   *  The start time for the query.
   */
  // const startTime = {}
  /**
   *  The end time for the query.
   */
  // const endTime = {}

  // Imports the Issuerswitch library
  const {IssuerSwitchTransactionsClient} = require('@google-cloud/issuerswitch').v1;

  // Instantiates a client
  const issuerswitchClient = new IssuerSwitchTransactionsClient();

  async function callExportMetadataTransactions() {
    // Construct request
    const request = {
      parent,
    };

    // Run request
    const [operation] = await issuerswitchClient.exportMetadataTransactions(request);
    const [response] = await operation.promise();
    console.log(response);
  }

  callExportMetadataTransactions();
  // [END issuerswitch_v1_generated_IssuerSwitchTransactions_ExportMetadataTransactions_async]
}

process.on('unhandledRejection', err => {
  console.error(err.message);
  process.exitCode = 1;
});
main(...process.argv.slice(2));
