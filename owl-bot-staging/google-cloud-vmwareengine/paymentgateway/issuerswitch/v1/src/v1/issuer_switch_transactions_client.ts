// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {Callback, CallOptions, Descriptors, ClientOptions, GrpcClientOptions, LROperation, PaginationCallback, GaxCall} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1/issuer_switch_transactions_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './issuer_switch_transactions_client_config.json';
const version = require('../../../package.json').version;

/**
 *  Lists and exports transactions processed by the issuer switch.
 * @class
 * @memberof v1
 */
export class IssuerSwitchTransactionsClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  operationsClient: gax.OperationsClient;
  issuerSwitchTransactionsStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of IssuerSwitchTransactionsClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new IssuerSwitchTransactionsClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof IssuerSwitchTransactionsClient;
    const servicePath = opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(opts?.servicePath || opts?.apiEndpoint);
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest' ) {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      complaintPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/complaints/{complaint}'
      ),
      complaintTransactionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/complaintTransactions/{transaction}'
      ),
      disputePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/disputes/{dispute}'
      ),
      financialTransactionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/financialTransactions/{transaction}'
      ),
      mandateTransactionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/mandateTransactions/{transaction}'
      ),
      metadataTransactionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/metadataTransactions/{transaction}'
      ),
      projectPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}'
      ),
      rulePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/rules/{rule}'
      ),
      ruleMetadataPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/rules/{rule}/metadata/{metadata}'
      ),
      ruleMetadataValuePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/rules/{rule}/metadata/{metadata}/values/{value}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listMetadataTransactions:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'metadataTransactions'),
      listFinancialTransactions:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'financialTransactions'),
      listMandateTransactions:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'mandateTransactions'),
      listComplaintTransactions:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'complaintTransactions')
    };

    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);
    // This API contains "long-running operations", which return a
    // an Operation object that allows for tracking of the operation,
    // rather than holding a request open.
    const lroOptions: GrpcClientOptions = {
      auth: this.auth,
      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined
    };
    if (opts.fallback === 'rest') {
      lroOptions.protoJson = protoFilesRoot;
      lroOptions.httpRules = [{selector: 'google.longrunning.Operations.GetOperation',get: '/v1/{name=projects/*/operations/*}',},{selector: 'google.longrunning.Operations.ListOperations',get: '/v1/{name=projects/*}/operations',}];
    }
    this.operationsClient = this._gaxModule.lro(lroOptions).operationsClient(opts);
    const exportFinancialTransactionsResponse = protoFilesRoot.lookup(
      '.google.cloud.paymentgateway.issuerswitch.v1.ExportFinancialTransactionsResponse') as gax.protobuf.Type;
    const exportFinancialTransactionsMetadata = protoFilesRoot.lookup(
      '.google.cloud.paymentgateway.issuerswitch.v1.ExportFinancialTransactionsMetadata') as gax.protobuf.Type;
    const exportMetadataTransactionsResponse = protoFilesRoot.lookup(
      '.google.cloud.paymentgateway.issuerswitch.v1.ExportMetadataTransactionsResponse') as gax.protobuf.Type;
    const exportMetadataTransactionsMetadata = protoFilesRoot.lookup(
      '.google.cloud.paymentgateway.issuerswitch.v1.ExportMetadataTransactionsMetadata') as gax.protobuf.Type;
    const exportMandateTransactionsResponse = protoFilesRoot.lookup(
      '.google.cloud.paymentgateway.issuerswitch.v1.ExportMandateTransactionsResponse') as gax.protobuf.Type;
    const exportMandateTransactionsMetadata = protoFilesRoot.lookup(
      '.google.cloud.paymentgateway.issuerswitch.v1.ExportMandateTransactionsMetadata') as gax.protobuf.Type;
    const exportComplaintTransactionsResponse = protoFilesRoot.lookup(
      '.google.cloud.paymentgateway.issuerswitch.v1.ExportComplaintTransactionsResponse') as gax.protobuf.Type;
    const exportComplaintTransactionsMetadata = protoFilesRoot.lookup(
      '.google.cloud.paymentgateway.issuerswitch.v1.ExportComplaintTransactionsMetadata') as gax.protobuf.Type;

    this.descriptors.longrunning = {
      exportFinancialTransactions: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        exportFinancialTransactionsResponse.decode.bind(exportFinancialTransactionsResponse),
        exportFinancialTransactionsMetadata.decode.bind(exportFinancialTransactionsMetadata)),
      exportMetadataTransactions: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        exportMetadataTransactionsResponse.decode.bind(exportMetadataTransactionsResponse),
        exportMetadataTransactionsMetadata.decode.bind(exportMetadataTransactionsMetadata)),
      exportMandateTransactions: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        exportMandateTransactionsResponse.decode.bind(exportMandateTransactionsResponse),
        exportMandateTransactionsMetadata.decode.bind(exportMandateTransactionsMetadata)),
      exportComplaintTransactions: new this._gaxModule.LongrunningDescriptor(
        this.operationsClient,
        exportComplaintTransactionsResponse.decode.bind(exportComplaintTransactionsResponse),
        exportComplaintTransactionsMetadata.decode.bind(exportComplaintTransactionsMetadata))
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.cloud.paymentgateway.issuerswitch.v1.IssuerSwitchTransactions', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.issuerSwitchTransactionsStub) {
      return this.issuerSwitchTransactionsStub;
    }

    // Put together the "service stub" for
    // google.cloud.paymentgateway.issuerswitch.v1.IssuerSwitchTransactions.
    this.issuerSwitchTransactionsStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.cloud.paymentgateway.issuerswitch.v1.IssuerSwitchTransactions') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.paymentgateway.issuerswitch.v1.IssuerSwitchTransactions,
        this._opts, this._providedCustomServicePath) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const issuerSwitchTransactionsStubMethods =
        ['listMetadataTransactions', 'listFinancialTransactions', 'listMandateTransactions', 'listComplaintTransactions', 'exportFinancialTransactions', 'exportMetadataTransactions', 'exportMandateTransactions', 'exportComplaintTransactions'];
    for (const methodName of issuerSwitchTransactionsStubMethods) {
      const callPromise = this.issuerSwitchTransactionsStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const descriptor =
        this.descriptors.page[methodName] ||
        this.descriptors.longrunning[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.issuerSwitchTransactionsStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'issuerswitch.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'issuerswitch.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-platform'
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------

/**
 * Export financial transactions received within the specified time range as a
 * file into a configured target location. The returned `Operation` type has
 * the following method-specific fields:
 *
 * - `metadata`: {@link google.cloud.paymentgateway.issuerswitch.v1.ExportFinancialTransactionsMetadata|ExportFinancialTransactionsMetadata}
 * - `response`: {@link google.cloud.paymentgateway.issuerswitch.v1.ExportFinancialTransactionsResponse|ExportFinancialTransactionsResponse}
 *
 * The exported file will be in the standard CSV format where each row in the
 * file represents a transaction. The file has the following fields in order:
 *
 * 1. `TransactionID`
 *     * **Min Length** - 35 characters
 *     * **Max Length** - 35 characters
 *     * **Description** - UPI transaction ID.
 * 1. `TransactionType`
 *     * **Min Length** - 22 characters
 *     * **Max Length** - 25 characters
 *     * **Description** - Type of the transaction. This will be one of
 *     `TRANSACTION_TYPE_CREDIT`, `TRANSACTION_TYPE_DEBIT` or
 *     `TRANSACTION_TYPE_REVERSAL`.
 * 1. `TransactionSubType`
 *     * **Min Length** - 3 characters
 *     * **Max Length** - 7 characters
 *     * **Description** - Subtype of the transaction. This will be one of
 *     `COLLECT`, or `PAY`.
 * 1. `RequestReceivedTimestamp`
 *     * **Min Length** - 20 characters
 *     * **Max Length** - 20 characters
 *     * **Description** - Timestamp (in UTC) indicating when the transaction
 *     API request was received by the issuer switch. The format will be as
 *     per RFC-3339. Example : 2022-11-22T23:00:05Z
 * 1. `CreationTime`
 *     * **Min Length** - 20 characters
 *     * **Max Length** - 20 characters
 *     * **Description** - Timestamp (in UTC) indicating when the issuer
 *     switch created the transaction resource for processing the transaction.
 *     The format will be as per RFC-3339. Example : 2022-11-22T23:00:05Z
 * 1. `State`
 *     * **Min Length** - 6 characters
 *     * **Max Length** - 9 characters
 *     * **Description** - State of the transaction. This will be one of
 *     `FAILED`, `SUCCEEDED`, or `TIMED_OUT`.
 * 1. `RRN`
 *     * **Min Length** - 12 characters
 *     * **Max Length** - 12 characters
 *     * **Description** - Retrieval reference number associated with the
 *     transaction.
 * 1. `PayerVPA`
 *     * **Min Length** - 3 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Virtual Payment Address (VPA) of the payer.
 * 1. `PayerMobileNumber`
 *     * **Min Length** - 12 characters
 *     * **Max Length** - 12 characters
 *     * **Description** - Mobile number of the payer.
 * 1. `PayerIFSC`
 *     * **Min Length** - 11 characters
 *     * **Max Length** - 11 characters
 *     * **Description** - IFSC of the payer's bank account.
 * 1. `PayerAccountNumber`
 *     * **Min Length** - 1 characters
 *     * **Max Length** - 30 characters
 *     * **Description** - Payer's bank account number.
 * 1. `PayerAccountType`
 *     * **Min Length** - 3 characters
 *     * **Max Length** - 7 characters
 *     * **Description** - Payer's bank account type. This will be one of
 *     `SAVINGS`, `DEFAULT`, `CURRENT`, `NRE`, `NRO`, `PPIWALLET`,
 *     `BANKWALLET`, `CREDIT`, `SOD`, or `UOD`.
 * 1. `PayeeVPA`
 *     * **Min Length** - 3 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Virtual Payment Address (VPA) of the payee.
 * 1. `PayeeMobileNumber`
 *     * **Min Length** - 12 characters
 *     * **Max Length** - 12 characters
 *     * **Description** - Payee's mobile number.
 * 1. `PayeeIFSC`
 *     * **Min Length** - 11 characters
 *     * **Max Length** - 11 characters
 *     * **Description** - IFSC of the payee's bank account.
 * 1. `PayeeAccountNumber`
 *     * **Min Length** - 1 characters
 *     * **Max Length** - 30 characters
 *     * **Description** - Payee's bank account number.
 * 1 `PayeeAccountType`
 *     * **Min Length** - 3 characters
 *     * **Max Length** - 10 characters
 *     * **Description** - Payee's bank account type. This will be one of
 *     `SAVINGS`, `DEFAULT`, `CURRENT`, `NRE`, `NRO`, `PPIWALLET`,
 *     `BANKWALLET`, `CREDIT`, `SOD`, or `UOD`.
 * 1. `PayeeMerchantID`
 *     * **Min Length** - 1 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Payee's merchant ID, only if the payee is a
 *     merchant.
 * 1. `PayeeMerchantName`
 *     * **Min Length** - 1 characters
 *     * **Max Length** - 99 characters
 *     * **Description** - Payee's merchant name, only if the payee is a
 *     merchant.
 * 1. `PayeeMCC`
 *     * **Min Length** - 4 characters
 *     * **Max Length** - 4 characters
 *     * **Description** - Payee's Merchant Category Code (MCC), only if the
 *     payee is a merchant.
 * 1. `Currency`
 *     * **Min Length** - 3 characters
 *     * **Max Length** - 3 characters
 *     * **Description** - Currency of the amount involved in the transaction.
 *     The currency codes are defined in ISO 4217.
 * 1. `Amount`
 *     * **Description** - Amount involved in the transaction.
 * 1. `BankAdapterRequestIDs`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 2,000 characters
 *     * **Description** - List of Request IDs (colon separated) used when
 *     invoking the Bank Adapter APIs for fulfilling a transaction request.
 * 1. `ErrorCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Error code of a failed transaction.
 * 1. `ErrorMessage`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 10,000 characters
 *     * **Description** - Error description for a failed transaction.
 * 1. `UPIErrorCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 3 characters
 *     * **Description** - Error code as per the UPI specification. The issuer
 *     switch maps the ErrorCode to an appropriate error code that complies
 *     with the UPI specification.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource for the transactions. The format is
 *   `projects/{project}`.
 * @param {google.cloud.paymentgateway.issuerswitch.v1.TransactionType} request.transactionType
 *   Transaction type for the financial transaction API. The possible values for
 *   transaction type are
 *
 *   * TRANSACTION_TYPE_CREDIT
 *   * TRANSACTION_TYPE_DEBIT
 *   * TRANSACTION_TYPE_REVERSAL
 *
 *   If no transaction type is specified, records of all the above transaction
 *   types will be exported.
 * @param {google.protobuf.Timestamp} request.startTime
 *   The start time for the query.
 * @param {google.protobuf.Timestamp} request.endTime
 *   The end time for the query.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_transactions.export_financial_transactions.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchTransactions_ExportFinancialTransactions_async
 */
  exportFinancialTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  exportFinancialTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  exportFinancialTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsRequest,
      callback: Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  exportFinancialTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportFinancialTransactionsMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.exportFinancialTransactions(request, options, callback);
  }
/**
 * Check the status of the long running operation returned by `exportFinancialTransactions()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_transactions.export_financial_transactions.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchTransactions_ExportFinancialTransactions_async
 */
  async checkExportFinancialTransactionsProgress(name: string): Promise<LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.ExportFinancialTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.ExportFinancialTransactionsMetadata>>{
    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.exportFinancialTransactions, this._gaxModule.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.ExportFinancialTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.ExportFinancialTransactionsMetadata>;
  }
/**
 * Export metadata transactions received within the specified time range as a
 * file into a configured target location. The returned `Operation` type has
 * the following method-specific fields:
 *
 * - `metadata`: {@link google.cloud.paymentgateway.issuerswitch.v1.ExportMetadataTransactionsMetadata|ExportMetadataTransactionsMetadata}
 * - `response`: {@link google.cloud.paymentgateway.issuerswitch.v1.ExportMetadataTransactionsResponse|ExportMetadataTransactionsResponse}
 *
 * The exported file will be in the standard CSV format where each row in the
 * file represents a transaction. The file has the following fields in order:
 *
 * 1. `TransactionID`
 *     * **Min Length** - 35 characters
 *     * **Max Length** - 35 characters
 *     * **Description** - UPI transaction ID.
 * 1. `APIType`
 *     * **Description** - The transaction's API type. The value will be of
 *     the {@link google.cloud.paymentgateway.issuerswitch.v1.ApiType|ApiType} enum.
 * 1. `TransactionType`
 *     * **Description** - Type of the transaction. The value will be of the
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} enum.
 * 1. `RequestReceivedTimestamp`
 *     * **Min Length** - 20 characters
 *     * **Max Length** - 20 characters
 *     * **Description** - Timestamp (in UTC) indicating when the transaction
 *     API request was received by the issuer switch. The format will be as
 *     per RFC-3339. Example : 2022-11-22T23:00:05Z
 * 1. `CreationTime`
 *     * **Min Length** - 20 characters
 *     * **Max Length** - 20 characters
 *     * **Description** - Timestamp (in UTC) indicating when the issuer
 *     switch created the transaction resource for processing the transaction.
 *     The format will be as per RFC-3339. Example : 2022-11-22T23:00:05Z
 * 1. `State`
 *     * **Min Length** - 6 characters
 *     * **Max Length** - 9 characters
 *     * **Description** - State of the transaction. This will be one of
 *     `FAILED`, `SUCCEEDED`, or `TIMED_OUT`.
 * 1. `OriginVPA`
 *     * **Min Length** - 3 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Virtual Payment Address (VPA) of the originator of
 *     the transaction.
 * 1. `BankAdapterRequestIDs`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 2,000 characters
 *     * **Description** - List of Request IDs (colon separated) used when
 *     invoking the Bank Adapter APIs for fulfilling a transaction request.
 * 1. `ErrorCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Error code of the failed transaction.
 * 1. `ErrorMessage`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 10,000 characters
 *     * **Description** - Error description for the failed transaction.
 * 1. `UPIErrorCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 3 characters
 *     * **Description** - Error code as per the UPI specification. The issuer
 *     switch maps the ErrorCode to an appropriate error code that complies
 *     with the UPI specification.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource for the transactions. The format is
 *   `projects/{project}`.
 * @param {google.cloud.paymentgateway.issuerswitch.v1.ApiType} request.apiType
 *   API type of the metadata transaction API. The possible values for API type
 *   are
 *
 *   * BALANCE
 *   * CHECK_STATUS
 *   * HEART_BEAT
 *   * INITIATE_REGISTRATION
 *   * LIST_ACCOUNTS
 *   * UPDATE_CREDENTIALS
 *   * VALIDATE_REGISTRATION
 *
 *   If no API type is specified, records of all the above API types will be
 *   exported.
 * @param {google.protobuf.Timestamp} request.startTime
 *   The start time for the query.
 * @param {google.protobuf.Timestamp} request.endTime
 *   The end time for the query.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_transactions.export_metadata_transactions.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchTransactions_ExportMetadataTransactions_async
 */
  exportMetadataTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  exportMetadataTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  exportMetadataTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsRequest,
      callback: Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  exportMetadataTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMetadataTransactionsMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.exportMetadataTransactions(request, options, callback);
  }
/**
 * Check the status of the long running operation returned by `exportMetadataTransactions()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_transactions.export_metadata_transactions.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchTransactions_ExportMetadataTransactions_async
 */
  async checkExportMetadataTransactionsProgress(name: string): Promise<LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.ExportMetadataTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.ExportMetadataTransactionsMetadata>>{
    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.exportMetadataTransactions, this._gaxModule.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.ExportMetadataTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.ExportMetadataTransactionsMetadata>;
  }
/**
 * Export mandate transactions received within the specified time range as a
 * file into a configured target location. The returned `Operation` type has
 * the following method-specific fields:
 *
 * - `metadata`: {@link google.cloud.paymentgateway.issuerswitch.v1.ExportMandateTransactionsMetadata|ExportMandateTransactionsMetadata}
 * - `response`: {@link google.cloud.paymentgateway.issuerswitch.v1.ExportMandateTransactionsResponse|ExportMandateTransactionsResponse}
 *
 * The exported file will be in the standard CSV format where each row in the
 * file represents a transaction. The file has the following fields in order:
 *
 * 1. `TransactionID`
 *     * **Min Length** - 35 characters
 *     * **Max Length** - 35 characters
 *     * **Description** - UPI transaction ID.
 * 1. `UniqueMandateNumber`
 *     * **Min Length** - 3 characters
 *     * **Max Length** - 70 characters
 *     * **Description** - UPI Unique Mandate Number.
 * 1. `TransactionType`
 *     * **Min Length** - 23 characters
 *     * **Max Length** - 23 characters
 *     * **Description** - Type of the transaction. This will be one of
 *     `TRANSACTION_TYPE_CREATE`, `TRANSACTION_TYPE_REVOKE` or
 *     `TRANSACTION_TYPE_UPDATE`.
 * 1. `RequestReceivedTimestamp`
 *     * **Min Length** - 20 characters
 *     * **Max Length** - 20 characters
 *     * **Description** - Timestamp (in UTC) indicating when the mandate
 *     API request was received by the issuer switch. The format will be as
 *     per RFC-3339. Example : 2022-11-22T23:00:05Z
 * 1. `CreationTime`
 *     * **Min Length** - 20 characters
 *     * **Max Length** - 20 characters
 *     * **Description** - Timestamp (in UTC) indicating when the issuer
 *     switch created the transaction resource for processing the transaction.
 *     The format will be as per RFC-3339. Example : 2022-11-22T23:00:05Z
 * 1. `State`
 *     * **Min Length** - 6 characters
 *     * **Max Length** - 9 characters
 *     * **Description** - State of the transaction. This will be one of
 *     `FAILED`, `SUCCEEDED`, or `TIMED_OUT`.
 * 1. `PayerVPA`
 *     * **Min Length** - 3 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Virtual Payment Address (VPA) of the payer.
 * 1. `PayerMobileNumber`
 *     * **Min Length** - 12 characters
 *     * **Max Length** - 12 characters
 *     * **Description** - Mobile number of the payer.
 * 1. `PayeeVPA`
 *     * **Min Length** - 3 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Virtual Payment Address (VPA) of the payee.
 * 1. `PayeeMobileNumber`
 *     * **Min Length** - 12 characters
 *     * **Max Length** - 12 characters
 *     * **Description** - Mobile number of the payee.
 * 1. `PayeeMerchantID`
 *     * **Min Length** - 1 characters
 *     * **Max Length** - 30 characters
 *     * **Description** - Payee's merchant ID, only if the payee is a
 *     merchant
 * 1. `Amount`
 *     * **Description** - Amount specified in the mandate.
 * 1. `RecurrencePattern`
 *     * **Description** - Reccurence pattern of the mandate. The value will
 *     be of the {@link google.cloud.paymentgateway.issuerswitch.v1.MandateTransaction.RecurrencePatternType|MandateTransaction.RecurrencePatternType} enum.
 * 1. `RecurrenceRuleType`
 *     * **Description** - Reccurrence rule type of the mandate. The value
 *     will be of the {@link google.cloud.paymentgateway.issuerswitch.v1.MandateTransaction.RecurrenceRuleType|MandateTransaction.RecurrenceRuleType} enum.
 * 1. `RecurrenceRuleValue`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 2 characters
 *     * **Description** - Recurrence rule value of the mandate. This will be
 *     an integer between 1 and 31.
 * 1. `Revokeable`
 *     * **Min Length** - 4 characters
 *     * **Max Length** - 5 characters
 *     * **Description** - Boolean value specifying if the mandate is
 *     revokable.
 * 1. `StartDate`
 *     * **Min Length** - 10 characters
 *     * **Max Length** - 10 characters
 *     * **Description** - The start date of the mandate in `YYYY-MM-DD`
 *     format.
 * 1. `EndDate`
 *     * **Min Length** - 10 characters
 *     * **Max Length** - 10 characters
 *     * **Description** - The end date of the mandate in `YYYY-MM-DD` format.
 * 1. `AmountRuleType`
 *     * **Description** - The amount rule of the mandate. The value will be
 *     of the {@link google.cloud.paymentgateway.issuerswitch.v1.MandateTransaction.AmountRuleType|MandateTransaction.AmountRuleType} enum.
 * 1. `ApprovalReference`
 *     * **Min Length** - 6 characters
 *     * **Max Length** - 9 characters
 *     * **Description** - The block funds reference generated by the bank, if
 *     funds have been blocked for the mandate. This column will have a value
 *     only when the RecurrencePattern is ONETIME.
 * 1. `BlockFunds`
 *     * **Min Length** - 4 characters
 *     * **Max Length** - 5 characters
 *     * **Description** - Boolean value specifying if the mandate transaction
 *     requested to block funds.
 * 1. `LastUpdateTime`
 *     * **Min Length** - 20 characters
 *     * **Max Length** - 20 characters
 *     * **Description** - Timestamp (in UTC) indicating when was the last
 *     modification made to the mandate. The format will be as per RFC-3339.
 *     Example : 2022-11-22T23:00:05Z
 * 1. `BankAdapterRequestIDs`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 2,000 characters
 *     * **Description** - List of Request IDs (colon separated) used when
 *     invoking the Bank Adapter APIs for fulfilling a transaction request.
 * 1. `ErrorCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Error code of the failed transaction.
 * 1. `ErrorMessage`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 10,000 characters
 *     * **Description** - Error description for the failed transaction.
 * 1. `UPIErrorCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 3 characters
 *     * **Description** - Error code as per the UPI specification. The issuer
 *     switch maps the ErrorCode to an appropriate error code that complies
 *     with the UPI specification.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource for the transactions. The format is
 *   `projects/{project}`.
 * @param {google.cloud.paymentgateway.issuerswitch.v1.TransactionType} request.transactionType
 *   Transaction type for the mandate transaction API.  The possible values for
 *   transaction type are
 *
 *   * TRANSACTION_TYPE_CREATE
 *   * TRANSACTION_TYPE_REVOKE
 *   * TRANSACTION_TYPE_UPDATE
 *
 *   If no transaction type is specified, records of all the above transaction
 *   types will be exported.
 * @param {google.protobuf.Timestamp} request.startTime
 *   The start time for the query.
 * @param {google.protobuf.Timestamp} request.endTime
 *   The end time for the query.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_transactions.export_mandate_transactions.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchTransactions_ExportMandateTransactions_async
 */
  exportMandateTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  exportMandateTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  exportMandateTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsRequest,
      callback: Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  exportMandateTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportMandateTransactionsMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.exportMandateTransactions(request, options, callback);
  }
/**
 * Check the status of the long running operation returned by `exportMandateTransactions()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_transactions.export_mandate_transactions.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchTransactions_ExportMandateTransactions_async
 */
  async checkExportMandateTransactionsProgress(name: string): Promise<LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.ExportMandateTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.ExportMandateTransactionsMetadata>>{
    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.exportMandateTransactions, this._gaxModule.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.ExportMandateTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.ExportMandateTransactionsMetadata>;
  }
/**
 * Export complaint transactions received within the specified time range as a
 * file into a configured target location. The returned `Operation` type has
 * the following method-specific fields:
 *
 * - `metadata`: {@link google.cloud.paymentgateway.issuerswitch.v1.ExportComplaintTransactionsMetadata|ExportComplaintTransactionsMetadata}
 * - `response`: {@link google.cloud.paymentgateway.issuerswitch.v1.ExportComplaintTransactionsResponse|ExportComplaintTransactionsResponse}
 *
 * The exported file will be in the standard CSV format where each row in the
 * file represents a transaction. The file has the following fields in order:
 *
 * 1. `TransactionID`
 *     * **Min Length** - 35 characters
 *     * **Max Length** - 35 characters
 *     * **Description** - UPI transaction ID.
 * 1. `TransactionType`
 *     * **Min Length** - 23 characters
 *     * **Max Length** - 30 characters
 *     * **Description** - Type of the transaction. This will be one of
 *     `TRANSACTION_TYPE_CHECK_STATUS`, `TRANSACTION_TYPE_COMPLAINT`,
 *     `TRANSACTION_TYPE_REVERSAL`, `TRANSACTION_TYPE_DISPUTE`,
 *     `TRANSACTION_TYPE_REFUND`, or `TRANSACTION_TYPE_STATUS_UPDATE`.
 * 1. `CreationTime`
 *     * **Min Length** - 20 characters
 *     * **Max Length** - 20 characters
 *     * **Description** - Timestamp (in UTC) indicating when the issuer
 *     switch created the transaction resource for processing the transaction.
 *     The format will be as per RFC-3339. Example : 2022-11-22T23:00:05Z
 * 1: `State`
 *     * **Min Length** - 6 characters
 *     * **Max Length** - 9 characters
 *     * **Description** - State of the transaction. This will be one of
 *     `FAILED`, `SUCCEEDED`, or `TIMED_OUT`.
 * 1. `OriginalRRN`
 *     * **Min Length** - 12 characters
 *     * **Max Length** - 12 characters
 *     * **Description** - Retrieval reference number of the original payment
 *     transaction.
 * 1. `BankType`
 *     * **Min Length** - 8 characters
 *     * **Max Length** - 11 characters
 *     * **Description** - The subtype of the transaction based on the bank
 *     involved. This will be one of `BENEFICIARY`, or `REMITTER`.
 * 1. `OriginalTransactionID`
 *     * **Min Length** - 35 characters
 *     * **Max Length** - 35 characters
 *     * **Description** - Transaction ID of the original unresolved
 *     transaction.
 * 1. `RaiseComplaintAdjFlag`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Indicates the type of action to raise the
 *     complaint.
 * 1. `RaiseComplaintAdjCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Indicates the reason of action to raise the
 *     complaint.
 * 1. `ResolveComplaintAdjFlag`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Indicates the type of action to resolve the
 *     complaint.
 * 1. `ResolveComplaintAdjCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Indicates the reason of action to resolve the
 *     complaint.
 * 1. `RaiseDisputeAdjFlag`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Indicates the type of action to raise the dispute.
 * 1. `RaiseDisputeAdjCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Indicates the reason of action to raise the
 *     dispute.
 * 1. `ResolveDisputeAdjFlag`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Indicates the type of action to resolve the
 *     dispute.
 * 1. `ResolveDisputeAdjCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Indicates the reason of action to resolve the
 *     dispute.
 * 1. `Amount`
 *     * **Description** - Amount to be resolved.
 * 1. `CurrentCycle`
 *     * **Min Length** - 4 characters
 *     * **Max Length** - 5 characters
 *     * **Description** - Boolean value specifying if the complaint / dispute
 *     belongs to current settlement cycle or not.
 * 1. `CRN`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Defines the Complaint Reference number.
 * 1. `AdjTime`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Indicates the time when the resolution was done.
 * 1. `RespAdjFlag`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Indicates the response category type.
 * 1. `RespAdjCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Indicates the response reason used.
 * 1. `AdjRemarks`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Indicates the additional remarks for the complaint
 *     / dispute.
 * 1. `BankAdapterRequestIDs`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 2,000 characters
 *     * **Description** - List of Request IDs (colon separated) used when
 *     invoking the Bank Adapter APIs for fulfilling a transaction request.
 * 1. `ErrorCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 255 characters
 *     * **Description** - Error code of the failed transaction.
 * 1. `ErrorMessage`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 10,000 characters
 *     * **Description** - Error description for the failed transaction.
 * 1. `UPIErrorCode`
 *     * **Min Length** - 0 characters
 *     * **Max Length** - 3 characters
 *     * **Description** - Error code as per the UPI specification. The issuer
 *     switch service maps the ErrorCode to an appropriate error code that
 *     complies with the UPI specification.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource for the transactions. The format is
 *   `projects/{project}`.
 * @param {google.cloud.paymentgateway.issuerswitch.v1.TransactionType} request.transactionType
 *   Transaction type for the complaint transaction API. The possible values for
 *   transaction type are
 *
 *   * TRANSACTION_TYPE_CHECK_STATUS
 *   * TRANSACTION_TYPE_COMPLAINT
 *   * TRANSACTION_TYPE_DISPUTE
 *   * TRANSACTION_TYPE_REFUND
 *   * TRANSACTION_TYPE_REVERSAL
 *   * TRANSACTION_TYPE_STATUS_UPDATE
 *
 *   If no transaction type is specified, records of all the above transaction
 *   types will be exported.
 * @param {google.protobuf.Timestamp} request.startTime
 *   The start time for the query.
 * @param {google.protobuf.Timestamp} request.endTime
 *   The end time for the query.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing
 *   a long running operation. Its `promise()` method returns a promise
 *   you can `await` for.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_transactions.export_complaint_transactions.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchTransactions_ExportComplaintTransactions_async
 */
  exportComplaintTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsRequest,
      options?: CallOptions):
      Promise<[
        LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>;
  exportComplaintTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsRequest,
      options: CallOptions,
      callback: Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  exportComplaintTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsRequest,
      callback: Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>): void;
  exportComplaintTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsRequest,
      optionsOrCallback?: CallOptions|Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsMetadata>,
          protos.google.longrunning.IOperation|null|undefined,
          {}|null|undefined>):
      Promise<[
        LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.IExportComplaintTransactionsMetadata>,
        protos.google.longrunning.IOperation|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.exportComplaintTransactions(request, options, callback);
  }
/**
 * Check the status of the long running operation returned by `exportComplaintTransactions()`.
 * @param {String} name
 *   The operation name that will be passed.
 * @returns {Promise} - The promise which resolves to an object.
 *   The decoded operation object has result and metadata field to get information from.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_transactions.export_complaint_transactions.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchTransactions_ExportComplaintTransactions_async
 */
  async checkExportComplaintTransactionsProgress(name: string): Promise<LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.ExportComplaintTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.ExportComplaintTransactionsMetadata>>{
    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({name});
    const [operation] = await this.operationsClient.getOperation(request);
    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.exportComplaintTransactions, this._gaxModule.createDefaultBackoffSettings());
    return decodeOperation as LROperation<protos.google.cloud.paymentgateway.issuerswitch.v1.ExportComplaintTransactionsResponse, protos.google.cloud.paymentgateway.issuerswitch.v1.ExportComplaintTransactionsMetadata>;
  }
 /**
 * List metadata transactions that satisfy the specified filter criteria.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of transactions to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 1,
 *   at most 50 transactions will be returned. The maximum value is 1000; values
 *   above 1000 will be coerced to 1000. While paginating, you can specify a new
 *   page size parameter for each page of transactions to be listed.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListMetadataTransactions` call.
 *   Specify this parameter to retrieve the next page of transactions.
 *
 *   When paginating, you must specify only the `page_token` parameter. The
 *   filter that was specified in the initial call to the
 *   `ListMetadataTransactions` method that returned the page token will be
 *   reused for all further calls where the page token parameter is specified.
 * @param {string} request.filter
 *   An expression that filters the list of metadata transactions.
 *
 *   A filter expression consists of a field name, a comparison
 *   operator, and a value for filtering. The value must be a string, a
 *   number, or a boolean. The comparison operator must be one of: `<`, `>` or
 *   `=`. Filters are not case sensitive.
 *
 *   The following fields in the `MetadataTransaction` are eligible for
 *   filtering:
 *
 *     * `apiType` - The API type of the metadata transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.ApiType|ApiType} values. Allowed comparison operators: `=`.
 *     * `transactionType` - The transaction type of the metadata transaction.
 *     Must be one of {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} values. Allowed comparison
 *     operators: `=`.
 *     * `transactionID` - The UPI transaction ID of the metadata transaction.
 *     Allowed comparison operators: `=`.
 *     * `originVPA` - The VPA of the orignitator of a metadata transaction.
 *     Allowed comparison operators: `=`.
 *     * `createTime` - The time at which the transaction was created
 *     (received) by the issuer switch. The value should be in
 *     the format `YYYY-MM-DDTHH:MM:SSZ`. Allowed comparison operators: `>`,
 *     `<`.
 *     * `state` - The state of the transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionInfo.State|TransactionInfo.State} values. Allowed comparison operators: `=`.
 *     * `errorCode` - Use this filter to list financial transactions which
 *     have failed a particular error code. Allowed comparison operators:
 *     `=`.
 *     * `bankAdapterRequestID` - Request ID used when invoking the Bank
 *     Adapter API for fulfilling a transaction request. Allowed comparison
 *     operators: `=`.
 *
 *   You can combine multiple expressions by enclosing each expression in
 *   parentheses. Expressions are combined with AND logic. No other logical
 *   operators are supported.
 *
 *   Here are a few examples:
 *
 *     * `apiType = LIST_ACCOUNTS` -  - The API type is _LIST_ACCOUNTS_.
 *     * `state = SUCCEEDED` - The transaction's state is _SUCCEEDED_.
 *     * `(apiType = LIST_ACCOUNTS) AND (create_time <
 *     \"2021-08-15T14:50:00Z\")` - The API type is _LIST_ACCOUNTS_ and
 *     the transaction was received before _2021-08-15 14:50:00 UTC_.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [MetadataTransaction]{@link google.cloud.paymentgateway.issuerswitch.v1.MetadataTransaction}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listMetadataTransactionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listMetadataTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IMetadataTransaction[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsResponse
      ]>;
  listMetadataTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IMetadataTransaction>): void;
  listMetadataTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsRequest,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IMetadataTransaction>): void;
  listMetadataTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IMetadataTransaction>,
      callback?: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IMetadataTransaction>):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IMetadataTransaction[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listMetadataTransactions(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of transactions to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 1,
 *   at most 50 transactions will be returned. The maximum value is 1000; values
 *   above 1000 will be coerced to 1000. While paginating, you can specify a new
 *   page size parameter for each page of transactions to be listed.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListMetadataTransactions` call.
 *   Specify this parameter to retrieve the next page of transactions.
 *
 *   When paginating, you must specify only the `page_token` parameter. The
 *   filter that was specified in the initial call to the
 *   `ListMetadataTransactions` method that returned the page token will be
 *   reused for all further calls where the page token parameter is specified.
 * @param {string} request.filter
 *   An expression that filters the list of metadata transactions.
 *
 *   A filter expression consists of a field name, a comparison
 *   operator, and a value for filtering. The value must be a string, a
 *   number, or a boolean. The comparison operator must be one of: `<`, `>` or
 *   `=`. Filters are not case sensitive.
 *
 *   The following fields in the `MetadataTransaction` are eligible for
 *   filtering:
 *
 *     * `apiType` - The API type of the metadata transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.ApiType|ApiType} values. Allowed comparison operators: `=`.
 *     * `transactionType` - The transaction type of the metadata transaction.
 *     Must be one of {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} values. Allowed comparison
 *     operators: `=`.
 *     * `transactionID` - The UPI transaction ID of the metadata transaction.
 *     Allowed comparison operators: `=`.
 *     * `originVPA` - The VPA of the orignitator of a metadata transaction.
 *     Allowed comparison operators: `=`.
 *     * `createTime` - The time at which the transaction was created
 *     (received) by the issuer switch. The value should be in
 *     the format `YYYY-MM-DDTHH:MM:SSZ`. Allowed comparison operators: `>`,
 *     `<`.
 *     * `state` - The state of the transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionInfo.State|TransactionInfo.State} values. Allowed comparison operators: `=`.
 *     * `errorCode` - Use this filter to list financial transactions which
 *     have failed a particular error code. Allowed comparison operators:
 *     `=`.
 *     * `bankAdapterRequestID` - Request ID used when invoking the Bank
 *     Adapter API for fulfilling a transaction request. Allowed comparison
 *     operators: `=`.
 *
 *   You can combine multiple expressions by enclosing each expression in
 *   parentheses. Expressions are combined with AND logic. No other logical
 *   operators are supported.
 *
 *   Here are a few examples:
 *
 *     * `apiType = LIST_ACCOUNTS` -  - The API type is _LIST_ACCOUNTS_.
 *     * `state = SUCCEEDED` - The transaction's state is _SUCCEEDED_.
 *     * `(apiType = LIST_ACCOUNTS) AND (create_time <
 *     \"2021-08-15T14:50:00Z\")` - The API type is _LIST_ACCOUNTS_ and
 *     the transaction was received before _2021-08-15 14:50:00 UTC_.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [MetadataTransaction]{@link google.cloud.paymentgateway.issuerswitch.v1.MetadataTransaction} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listMetadataTransactionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listMetadataTransactionsStream(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listMetadataTransactions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listMetadataTransactions.createStream(
      this.innerApiCalls.listMetadataTransactions as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listMetadataTransactions`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of transactions to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 1,
 *   at most 50 transactions will be returned. The maximum value is 1000; values
 *   above 1000 will be coerced to 1000. While paginating, you can specify a new
 *   page size parameter for each page of transactions to be listed.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListMetadataTransactions` call.
 *   Specify this parameter to retrieve the next page of transactions.
 *
 *   When paginating, you must specify only the `page_token` parameter. The
 *   filter that was specified in the initial call to the
 *   `ListMetadataTransactions` method that returned the page token will be
 *   reused for all further calls where the page token parameter is specified.
 * @param {string} request.filter
 *   An expression that filters the list of metadata transactions.
 *
 *   A filter expression consists of a field name, a comparison
 *   operator, and a value for filtering. The value must be a string, a
 *   number, or a boolean. The comparison operator must be one of: `<`, `>` or
 *   `=`. Filters are not case sensitive.
 *
 *   The following fields in the `MetadataTransaction` are eligible for
 *   filtering:
 *
 *     * `apiType` - The API type of the metadata transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.ApiType|ApiType} values. Allowed comparison operators: `=`.
 *     * `transactionType` - The transaction type of the metadata transaction.
 *     Must be one of {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} values. Allowed comparison
 *     operators: `=`.
 *     * `transactionID` - The UPI transaction ID of the metadata transaction.
 *     Allowed comparison operators: `=`.
 *     * `originVPA` - The VPA of the orignitator of a metadata transaction.
 *     Allowed comparison operators: `=`.
 *     * `createTime` - The time at which the transaction was created
 *     (received) by the issuer switch. The value should be in
 *     the format `YYYY-MM-DDTHH:MM:SSZ`. Allowed comparison operators: `>`,
 *     `<`.
 *     * `state` - The state of the transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionInfo.State|TransactionInfo.State} values. Allowed comparison operators: `=`.
 *     * `errorCode` - Use this filter to list financial transactions which
 *     have failed a particular error code. Allowed comparison operators:
 *     `=`.
 *     * `bankAdapterRequestID` - Request ID used when invoking the Bank
 *     Adapter API for fulfilling a transaction request. Allowed comparison
 *     operators: `=`.
 *
 *   You can combine multiple expressions by enclosing each expression in
 *   parentheses. Expressions are combined with AND logic. No other logical
 *   operators are supported.
 *
 *   Here are a few examples:
 *
 *     * `apiType = LIST_ACCOUNTS` -  - The API type is _LIST_ACCOUNTS_.
 *     * `state = SUCCEEDED` - The transaction's state is _SUCCEEDED_.
 *     * `(apiType = LIST_ACCOUNTS) AND (create_time <
 *     \"2021-08-15T14:50:00Z\")` - The API type is _LIST_ACCOUNTS_ and
 *     the transaction was received before _2021-08-15 14:50:00 UTC_.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [MetadataTransaction]{@link google.cloud.paymentgateway.issuerswitch.v1.MetadataTransaction}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_transactions.list_metadata_transactions.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchTransactions_ListMetadataTransactions_async
 */
  listMetadataTransactionsAsync(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListMetadataTransactionsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IMetadataTransaction>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listMetadataTransactions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listMetadataTransactions.asyncIterate(
      this.innerApiCalls['listMetadataTransactions'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IMetadataTransaction>;
  }
 /**
 * List financial transactions that satisfy specified filter criteria.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of transactions to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 1,
 *   at most 50 transactions will be returned. The maximum value is 1000; values
 *   above 1000 will be coerced to 1000. While paginating, you can specify a new
 *   page size parameter for each page of transactions to be listed.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListFinancialTransactions` call.
 *   Specify this parameter to retrieve the next page of transactions.
 *
 *   When paginating, you must specify only the `page_token` parameter. The
 *   filter that was specified in the initial call to the
 *   `ListFinancialTransactions` method that returned the page token will be
 *   reused for all further calls where the page token parameter is specified.
 * @param {string} request.filter
 *   An expression that filters the list of financial transactions.
 *
 *   A filter expression consists of a field name, a comparison operator, and
 *   a value for filtering. The value must be a string, a number, or a
 *   boolean. The comparison operator must be one of: `<`, `>`, or `=`.
 *   Filters are not case sensitive.
 *
 *   The following fields in the `FinancialTransaction` are eligible for
 *   filtering:
 *
 *     * `transactionType` - The transaction type of the financial
 *     transaction. Must be one of {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} values. For financial
 *     transactions, only valid transaction types are `TRANSACTION_TYPE_CREDIT`,
 *     `TRANSACTION_TYPE_DEBIT` and `TRANSACTION_TYPE_REVERSAL`. Allowed
 *     comparison operators: `=`.
 *     * `transactionID` - The UPI transaction ID of the financial
 *     transaction. Allowed comparison operators: `=`.
 *     * `RRN` - The retrieval reference number of the transaction. Allowed
 *     comparison operators: `=`.
 *     * `payerVPA` - The VPA of the payer in a financial transaction. Allowed
 *     comparison operators: `=`.
 *     * `payeeVPA` - The VPA of the payee in a financial transaction. Allowed
 *     comparison operators: `=`.
 *     * `payerMobileNumber` - The mobile number of the payer in a financial
 *        transaction. Allowed comparison operators: `=`.
 *     * `payeeMobileNumber` - The mobile number of the payee in a financial
 *        transaction. Allowed comparison operators: `=`.
 *     * `payeeMerchantId` - The merchant id of the payee in a financial
 *        transaction. Allowed comparison operators: `=`.
 *     * `createTime` - The time at which the transaction was created
 *     (received) by the issuer switch. The value should be in
 *     the format `YYYY-MM-DDTHH:MM:SSZ`. Allowed comparison operators: `>`,
 *     `<`.
 *     * `state` - The state of the transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionInfo.State|TransactionInfo.State} values. Allowed comparison operators: `=`.
 *     * `errorCode` - Use this filter to list financial transactions which
 *     have failed a particular error code. Allowed comparison operators: `=`.
 *     * `bankAdapterRequestID` - Request ID used when invoking the Bank
 *     Adapter API for fulfilling a transaction request. Allowed comparison
 *     operators: `=`.
 *
 *   You can combine multiple expressions by enclosing each expression in
 *   parentheses. Expressions are combined with AND logic. No other logical
 *   operators are supported.
 *
 *   Here are a few examples:
 *
 *     * `transactionType = CREDIT` - The transaction type is _CREDIT_.
 *     * `state = SUCCEEDED` - The transaction's state is _SUCCEEDED_.
 *     * `payerVpa = example@okbank` - The VPA of the payer is the string
 *     _example@okbank_.
 *     * `(transactionType = DEBIT) AND (createTime < "2021-08-15T14:50:00Z")`
 *     - The transaction type is _DEBIT_ and the transaction was received
 *     before _2021-08-15 14:50:00 UTC_.
 *     * `createTime > "2021-08-15T14:50:00Z" AND createTime <
 *     "2021-08-16T14:50:00Z"` - The transaction was received between
 *     _2021-08-15 14:50:00 UTC_ and _2021-08-16 14:50:00 UTC_.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [FinancialTransaction]{@link google.cloud.paymentgateway.issuerswitch.v1.FinancialTransaction}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listFinancialTransactionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listFinancialTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IFinancialTransaction[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsResponse
      ]>;
  listFinancialTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IFinancialTransaction>): void;
  listFinancialTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsRequest,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IFinancialTransaction>): void;
  listFinancialTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IFinancialTransaction>,
      callback?: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IFinancialTransaction>):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IFinancialTransaction[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listFinancialTransactions(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of transactions to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 1,
 *   at most 50 transactions will be returned. The maximum value is 1000; values
 *   above 1000 will be coerced to 1000. While paginating, you can specify a new
 *   page size parameter for each page of transactions to be listed.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListFinancialTransactions` call.
 *   Specify this parameter to retrieve the next page of transactions.
 *
 *   When paginating, you must specify only the `page_token` parameter. The
 *   filter that was specified in the initial call to the
 *   `ListFinancialTransactions` method that returned the page token will be
 *   reused for all further calls where the page token parameter is specified.
 * @param {string} request.filter
 *   An expression that filters the list of financial transactions.
 *
 *   A filter expression consists of a field name, a comparison operator, and
 *   a value for filtering. The value must be a string, a number, or a
 *   boolean. The comparison operator must be one of: `<`, `>`, or `=`.
 *   Filters are not case sensitive.
 *
 *   The following fields in the `FinancialTransaction` are eligible for
 *   filtering:
 *
 *     * `transactionType` - The transaction type of the financial
 *     transaction. Must be one of {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} values. For financial
 *     transactions, only valid transaction types are `TRANSACTION_TYPE_CREDIT`,
 *     `TRANSACTION_TYPE_DEBIT` and `TRANSACTION_TYPE_REVERSAL`. Allowed
 *     comparison operators: `=`.
 *     * `transactionID` - The UPI transaction ID of the financial
 *     transaction. Allowed comparison operators: `=`.
 *     * `RRN` - The retrieval reference number of the transaction. Allowed
 *     comparison operators: `=`.
 *     * `payerVPA` - The VPA of the payer in a financial transaction. Allowed
 *     comparison operators: `=`.
 *     * `payeeVPA` - The VPA of the payee in a financial transaction. Allowed
 *     comparison operators: `=`.
 *     * `payerMobileNumber` - The mobile number of the payer in a financial
 *        transaction. Allowed comparison operators: `=`.
 *     * `payeeMobileNumber` - The mobile number of the payee in a financial
 *        transaction. Allowed comparison operators: `=`.
 *     * `payeeMerchantId` - The merchant id of the payee in a financial
 *        transaction. Allowed comparison operators: `=`.
 *     * `createTime` - The time at which the transaction was created
 *     (received) by the issuer switch. The value should be in
 *     the format `YYYY-MM-DDTHH:MM:SSZ`. Allowed comparison operators: `>`,
 *     `<`.
 *     * `state` - The state of the transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionInfo.State|TransactionInfo.State} values. Allowed comparison operators: `=`.
 *     * `errorCode` - Use this filter to list financial transactions which
 *     have failed a particular error code. Allowed comparison operators: `=`.
 *     * `bankAdapterRequestID` - Request ID used when invoking the Bank
 *     Adapter API for fulfilling a transaction request. Allowed comparison
 *     operators: `=`.
 *
 *   You can combine multiple expressions by enclosing each expression in
 *   parentheses. Expressions are combined with AND logic. No other logical
 *   operators are supported.
 *
 *   Here are a few examples:
 *
 *     * `transactionType = CREDIT` - The transaction type is _CREDIT_.
 *     * `state = SUCCEEDED` - The transaction's state is _SUCCEEDED_.
 *     * `payerVpa = example@okbank` - The VPA of the payer is the string
 *     _example@okbank_.
 *     * `(transactionType = DEBIT) AND (createTime < "2021-08-15T14:50:00Z")`
 *     - The transaction type is _DEBIT_ and the transaction was received
 *     before _2021-08-15 14:50:00 UTC_.
 *     * `createTime > "2021-08-15T14:50:00Z" AND createTime <
 *     "2021-08-16T14:50:00Z"` - The transaction was received between
 *     _2021-08-15 14:50:00 UTC_ and _2021-08-16 14:50:00 UTC_.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [FinancialTransaction]{@link google.cloud.paymentgateway.issuerswitch.v1.FinancialTransaction} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listFinancialTransactionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listFinancialTransactionsStream(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listFinancialTransactions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listFinancialTransactions.createStream(
      this.innerApiCalls.listFinancialTransactions as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listFinancialTransactions`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of transactions to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 1,
 *   at most 50 transactions will be returned. The maximum value is 1000; values
 *   above 1000 will be coerced to 1000. While paginating, you can specify a new
 *   page size parameter for each page of transactions to be listed.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListFinancialTransactions` call.
 *   Specify this parameter to retrieve the next page of transactions.
 *
 *   When paginating, you must specify only the `page_token` parameter. The
 *   filter that was specified in the initial call to the
 *   `ListFinancialTransactions` method that returned the page token will be
 *   reused for all further calls where the page token parameter is specified.
 * @param {string} request.filter
 *   An expression that filters the list of financial transactions.
 *
 *   A filter expression consists of a field name, a comparison operator, and
 *   a value for filtering. The value must be a string, a number, or a
 *   boolean. The comparison operator must be one of: `<`, `>`, or `=`.
 *   Filters are not case sensitive.
 *
 *   The following fields in the `FinancialTransaction` are eligible for
 *   filtering:
 *
 *     * `transactionType` - The transaction type of the financial
 *     transaction. Must be one of {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} values. For financial
 *     transactions, only valid transaction types are `TRANSACTION_TYPE_CREDIT`,
 *     `TRANSACTION_TYPE_DEBIT` and `TRANSACTION_TYPE_REVERSAL`. Allowed
 *     comparison operators: `=`.
 *     * `transactionID` - The UPI transaction ID of the financial
 *     transaction. Allowed comparison operators: `=`.
 *     * `RRN` - The retrieval reference number of the transaction. Allowed
 *     comparison operators: `=`.
 *     * `payerVPA` - The VPA of the payer in a financial transaction. Allowed
 *     comparison operators: `=`.
 *     * `payeeVPA` - The VPA of the payee in a financial transaction. Allowed
 *     comparison operators: `=`.
 *     * `payerMobileNumber` - The mobile number of the payer in a financial
 *        transaction. Allowed comparison operators: `=`.
 *     * `payeeMobileNumber` - The mobile number of the payee in a financial
 *        transaction. Allowed comparison operators: `=`.
 *     * `payeeMerchantId` - The merchant id of the payee in a financial
 *        transaction. Allowed comparison operators: `=`.
 *     * `createTime` - The time at which the transaction was created
 *     (received) by the issuer switch. The value should be in
 *     the format `YYYY-MM-DDTHH:MM:SSZ`. Allowed comparison operators: `>`,
 *     `<`.
 *     * `state` - The state of the transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionInfo.State|TransactionInfo.State} values. Allowed comparison operators: `=`.
 *     * `errorCode` - Use this filter to list financial transactions which
 *     have failed a particular error code. Allowed comparison operators: `=`.
 *     * `bankAdapterRequestID` - Request ID used when invoking the Bank
 *     Adapter API for fulfilling a transaction request. Allowed comparison
 *     operators: `=`.
 *
 *   You can combine multiple expressions by enclosing each expression in
 *   parentheses. Expressions are combined with AND logic. No other logical
 *   operators are supported.
 *
 *   Here are a few examples:
 *
 *     * `transactionType = CREDIT` - The transaction type is _CREDIT_.
 *     * `state = SUCCEEDED` - The transaction's state is _SUCCEEDED_.
 *     * `payerVpa = example@okbank` - The VPA of the payer is the string
 *     _example@okbank_.
 *     * `(transactionType = DEBIT) AND (createTime < "2021-08-15T14:50:00Z")`
 *     - The transaction type is _DEBIT_ and the transaction was received
 *     before _2021-08-15 14:50:00 UTC_.
 *     * `createTime > "2021-08-15T14:50:00Z" AND createTime <
 *     "2021-08-16T14:50:00Z"` - The transaction was received between
 *     _2021-08-15 14:50:00 UTC_ and _2021-08-16 14:50:00 UTC_.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [FinancialTransaction]{@link google.cloud.paymentgateway.issuerswitch.v1.FinancialTransaction}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_transactions.list_financial_transactions.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchTransactions_ListFinancialTransactions_async
 */
  listFinancialTransactionsAsync(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListFinancialTransactionsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IFinancialTransaction>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listFinancialTransactions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listFinancialTransactions.asyncIterate(
      this.innerApiCalls['listFinancialTransactions'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IFinancialTransaction>;
  }
 /**
 * List mandate transactions that satisfy specified filter criteria.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of transactions to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 1,
 *   at most 50 transactions will be returned. The maximum value is 1000; values
 *   above 1000 will be coerced to 1000. While paginating, you can specify a new
 *   page size parameter for each page of transactions to be listed.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListMandateTransactions` call.
 *   Specify this parameter to retrieve the next page of transactions.
 *
 *   When paginating, you must specify only the `page_token` parameter. The
 *   filter that was specified in the initial call to the
 *   `ListMandateTransactions` method that returned the page token will be
 *   reused for all further calls where the page token parameter is specified.
 * @param {string} request.filter
 *   An expression that filters the list of mandate transactions.
 *
 *   A filter expression consists of a field name, a comparison operator, and
 *   a value for filtering. The value must be a string, a number, or a
 *   boolean. The comparison operator must be one of: `<`, `>`, or `=`.
 *   Filters are not case sensitive.
 *
 *   The following fields in the `Mandate` are eligible for
 *   filtering:
 *
 *     * `uniqueMandateNumber` - UPI Unique Mandate Number (UMN). Allowed
 *     comparison operators: `=`.
 *     * `transactionID` - The transaction ID of the mandate transaction.
 *     Allowed comparison operators: `=`.
 *     * `transactionType` - The transaction type of the mandate
 *     transaction. Must be one of {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} values. For mandate
 *     transactions, only valid transaction types are
 *     `TRANSACTION_TYPE_CREATE`, `TRANSACTION_TYPE_REVOKE` and
 *     `TRANSACTION_TYPE_UPDATE`. Allowed comparison operators: `=`.
 *     * `payerVPA` - The VPA of the payer in a mandate transaction. Allowed
 *     comparison operators: `=`.
 *     * `payeeVPA` - The VPA of the payee in a mandate transaction. Allowed
 *     comparison operators: `=`.
 *     * `payeeMerchantID` - The merchant ID of the payee in a mandate
 *     transaction. Allowed comparison operators: `=`.
 *     * `payerMobileNumber` - The mobile number of the payer in a mandate
 *     transaction. Allowed comparison operators: `=`.
 *     * `payeeMobileNumber` - The mobile number of the payee in a mandate
 *     transaction. Allowed comparison operators: `=`.
 *     * `createTime` - The time at which the transaction was created
 *     (received) by the issuer switch. The value should be in
 *     the format `YYYY-MM-DDTHH:MM:SSZ`. Allowed comparison
 *     operators: `>`, `<`.
 *     * `state` - The state of the transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionInfo.State|TransactionInfo.State} values. Allowed comparison operators: `=`.
 *     * `recurrencePattern` - The recurrence pattern of the mandate. Must be
 *     one of {@link google.cloud.paymentgateway.issuerswitch.v1.MandateTransaction.RecurrencePatternType|MandateTransaction.RecurrencePatternType} values. Allowed
 *     comparison operators: `=`.
 *     * `startDate` - The start date of the mandate. The value should be in
 *     the format `YYYY-MM-DD`. Allowed comparison operators: `<` and `>`.
 *     * `endDate` - The end date of the mandate. The value should be in
 *     the format `YYYY-MM-DD`. Allowed comparison operators: `<` and `>`.
 *     * `errorCode` - Use this filter to list mandate transactions which
 *     have failed a particular error code. Allowed comparison
 *     operators: `=`.
 *     * `bankAdapterRequestID` - Request ID used when invoking the Bank
 *     Adapter API for fulfilling a transaction request. Allowed comparison
 *     operators: `=`.
 *   You can combine multiple expressions by enclosing each expression in
 *   parentheses. Expressions are combined with AND logic. No other logical
 *   operators are supported.
 *
 *   Here are a few examples:
 *     * `recurrencePattern = MONTHLY` - The recurrence pattern type is
 *     monthly.
 *     * `state = SUCCEEDED` - The transaction's state is _SUCCEEDED_.
 *     * `payerVPA = example@okbank` - The VPA of the payer is the string
 *     _example@okbank_.
 *     * `(payerVPA = example@okbank) AND (createTime <
 *     "2021-08-15T14:50:00Z")`
 *     - The payer VPA example@okbank and the transaction was received
 *     before _2021-08-15 14:50:00 UTC_.
 *     * `createTime > "2021-08-15T14:50:00Z" AND createTime <
 *     "2021-08-16T14:50:00Z"` - The transaction was received between
 *     _2021-08-15 14:50:00 UTC_ and _2021-08-16 14:50:00 UTC_.
 *     * `startDate > "2021-08-15" AND startDate < "2021-08-17"` - The start
 *     date for mandate is between _2021-08-15_ and _2021-08-17_.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [MandateTransaction]{@link google.cloud.paymentgateway.issuerswitch.v1.MandateTransaction}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listMandateTransactionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listMandateTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IMandateTransaction[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsResponse
      ]>;
  listMandateTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IMandateTransaction>): void;
  listMandateTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsRequest,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IMandateTransaction>): void;
  listMandateTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IMandateTransaction>,
      callback?: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IMandateTransaction>):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IMandateTransaction[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listMandateTransactions(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of transactions to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 1,
 *   at most 50 transactions will be returned. The maximum value is 1000; values
 *   above 1000 will be coerced to 1000. While paginating, you can specify a new
 *   page size parameter for each page of transactions to be listed.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListMandateTransactions` call.
 *   Specify this parameter to retrieve the next page of transactions.
 *
 *   When paginating, you must specify only the `page_token` parameter. The
 *   filter that was specified in the initial call to the
 *   `ListMandateTransactions` method that returned the page token will be
 *   reused for all further calls where the page token parameter is specified.
 * @param {string} request.filter
 *   An expression that filters the list of mandate transactions.
 *
 *   A filter expression consists of a field name, a comparison operator, and
 *   a value for filtering. The value must be a string, a number, or a
 *   boolean. The comparison operator must be one of: `<`, `>`, or `=`.
 *   Filters are not case sensitive.
 *
 *   The following fields in the `Mandate` are eligible for
 *   filtering:
 *
 *     * `uniqueMandateNumber` - UPI Unique Mandate Number (UMN). Allowed
 *     comparison operators: `=`.
 *     * `transactionID` - The transaction ID of the mandate transaction.
 *     Allowed comparison operators: `=`.
 *     * `transactionType` - The transaction type of the mandate
 *     transaction. Must be one of {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} values. For mandate
 *     transactions, only valid transaction types are
 *     `TRANSACTION_TYPE_CREATE`, `TRANSACTION_TYPE_REVOKE` and
 *     `TRANSACTION_TYPE_UPDATE`. Allowed comparison operators: `=`.
 *     * `payerVPA` - The VPA of the payer in a mandate transaction. Allowed
 *     comparison operators: `=`.
 *     * `payeeVPA` - The VPA of the payee in a mandate transaction. Allowed
 *     comparison operators: `=`.
 *     * `payeeMerchantID` - The merchant ID of the payee in a mandate
 *     transaction. Allowed comparison operators: `=`.
 *     * `payerMobileNumber` - The mobile number of the payer in a mandate
 *     transaction. Allowed comparison operators: `=`.
 *     * `payeeMobileNumber` - The mobile number of the payee in a mandate
 *     transaction. Allowed comparison operators: `=`.
 *     * `createTime` - The time at which the transaction was created
 *     (received) by the issuer switch. The value should be in
 *     the format `YYYY-MM-DDTHH:MM:SSZ`. Allowed comparison
 *     operators: `>`, `<`.
 *     * `state` - The state of the transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionInfo.State|TransactionInfo.State} values. Allowed comparison operators: `=`.
 *     * `recurrencePattern` - The recurrence pattern of the mandate. Must be
 *     one of {@link google.cloud.paymentgateway.issuerswitch.v1.MandateTransaction.RecurrencePatternType|MandateTransaction.RecurrencePatternType} values. Allowed
 *     comparison operators: `=`.
 *     * `startDate` - The start date of the mandate. The value should be in
 *     the format `YYYY-MM-DD`. Allowed comparison operators: `<` and `>`.
 *     * `endDate` - The end date of the mandate. The value should be in
 *     the format `YYYY-MM-DD`. Allowed comparison operators: `<` and `>`.
 *     * `errorCode` - Use this filter to list mandate transactions which
 *     have failed a particular error code. Allowed comparison
 *     operators: `=`.
 *     * `bankAdapterRequestID` - Request ID used when invoking the Bank
 *     Adapter API for fulfilling a transaction request. Allowed comparison
 *     operators: `=`.
 *   You can combine multiple expressions by enclosing each expression in
 *   parentheses. Expressions are combined with AND logic. No other logical
 *   operators are supported.
 *
 *   Here are a few examples:
 *     * `recurrencePattern = MONTHLY` - The recurrence pattern type is
 *     monthly.
 *     * `state = SUCCEEDED` - The transaction's state is _SUCCEEDED_.
 *     * `payerVPA = example@okbank` - The VPA of the payer is the string
 *     _example@okbank_.
 *     * `(payerVPA = example@okbank) AND (createTime <
 *     "2021-08-15T14:50:00Z")`
 *     - The payer VPA example@okbank and the transaction was received
 *     before _2021-08-15 14:50:00 UTC_.
 *     * `createTime > "2021-08-15T14:50:00Z" AND createTime <
 *     "2021-08-16T14:50:00Z"` - The transaction was received between
 *     _2021-08-15 14:50:00 UTC_ and _2021-08-16 14:50:00 UTC_.
 *     * `startDate > "2021-08-15" AND startDate < "2021-08-17"` - The start
 *     date for mandate is between _2021-08-15_ and _2021-08-17_.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [MandateTransaction]{@link google.cloud.paymentgateway.issuerswitch.v1.MandateTransaction} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listMandateTransactionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listMandateTransactionsStream(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listMandateTransactions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listMandateTransactions.createStream(
      this.innerApiCalls.listMandateTransactions as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listMandateTransactions`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of transactions to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 1,
 *   at most 50 transactions will be returned. The maximum value is 1000; values
 *   above 1000 will be coerced to 1000. While paginating, you can specify a new
 *   page size parameter for each page of transactions to be listed.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListMandateTransactions` call.
 *   Specify this parameter to retrieve the next page of transactions.
 *
 *   When paginating, you must specify only the `page_token` parameter. The
 *   filter that was specified in the initial call to the
 *   `ListMandateTransactions` method that returned the page token will be
 *   reused for all further calls where the page token parameter is specified.
 * @param {string} request.filter
 *   An expression that filters the list of mandate transactions.
 *
 *   A filter expression consists of a field name, a comparison operator, and
 *   a value for filtering. The value must be a string, a number, or a
 *   boolean. The comparison operator must be one of: `<`, `>`, or `=`.
 *   Filters are not case sensitive.
 *
 *   The following fields in the `Mandate` are eligible for
 *   filtering:
 *
 *     * `uniqueMandateNumber` - UPI Unique Mandate Number (UMN). Allowed
 *     comparison operators: `=`.
 *     * `transactionID` - The transaction ID of the mandate transaction.
 *     Allowed comparison operators: `=`.
 *     * `transactionType` - The transaction type of the mandate
 *     transaction. Must be one of {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} values. For mandate
 *     transactions, only valid transaction types are
 *     `TRANSACTION_TYPE_CREATE`, `TRANSACTION_TYPE_REVOKE` and
 *     `TRANSACTION_TYPE_UPDATE`. Allowed comparison operators: `=`.
 *     * `payerVPA` - The VPA of the payer in a mandate transaction. Allowed
 *     comparison operators: `=`.
 *     * `payeeVPA` - The VPA of the payee in a mandate transaction. Allowed
 *     comparison operators: `=`.
 *     * `payeeMerchantID` - The merchant ID of the payee in a mandate
 *     transaction. Allowed comparison operators: `=`.
 *     * `payerMobileNumber` - The mobile number of the payer in a mandate
 *     transaction. Allowed comparison operators: `=`.
 *     * `payeeMobileNumber` - The mobile number of the payee in a mandate
 *     transaction. Allowed comparison operators: `=`.
 *     * `createTime` - The time at which the transaction was created
 *     (received) by the issuer switch. The value should be in
 *     the format `YYYY-MM-DDTHH:MM:SSZ`. Allowed comparison
 *     operators: `>`, `<`.
 *     * `state` - The state of the transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionInfo.State|TransactionInfo.State} values. Allowed comparison operators: `=`.
 *     * `recurrencePattern` - The recurrence pattern of the mandate. Must be
 *     one of {@link google.cloud.paymentgateway.issuerswitch.v1.MandateTransaction.RecurrencePatternType|MandateTransaction.RecurrencePatternType} values. Allowed
 *     comparison operators: `=`.
 *     * `startDate` - The start date of the mandate. The value should be in
 *     the format `YYYY-MM-DD`. Allowed comparison operators: `<` and `>`.
 *     * `endDate` - The end date of the mandate. The value should be in
 *     the format `YYYY-MM-DD`. Allowed comparison operators: `<` and `>`.
 *     * `errorCode` - Use this filter to list mandate transactions which
 *     have failed a particular error code. Allowed comparison
 *     operators: `=`.
 *     * `bankAdapterRequestID` - Request ID used when invoking the Bank
 *     Adapter API for fulfilling a transaction request. Allowed comparison
 *     operators: `=`.
 *   You can combine multiple expressions by enclosing each expression in
 *   parentheses. Expressions are combined with AND logic. No other logical
 *   operators are supported.
 *
 *   Here are a few examples:
 *     * `recurrencePattern = MONTHLY` - The recurrence pattern type is
 *     monthly.
 *     * `state = SUCCEEDED` - The transaction's state is _SUCCEEDED_.
 *     * `payerVPA = example@okbank` - The VPA of the payer is the string
 *     _example@okbank_.
 *     * `(payerVPA = example@okbank) AND (createTime <
 *     "2021-08-15T14:50:00Z")`
 *     - The payer VPA example@okbank and the transaction was received
 *     before _2021-08-15 14:50:00 UTC_.
 *     * `createTime > "2021-08-15T14:50:00Z" AND createTime <
 *     "2021-08-16T14:50:00Z"` - The transaction was received between
 *     _2021-08-15 14:50:00 UTC_ and _2021-08-16 14:50:00 UTC_.
 *     * `startDate > "2021-08-15" AND startDate < "2021-08-17"` - The start
 *     date for mandate is between _2021-08-15_ and _2021-08-17_.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [MandateTransaction]{@link google.cloud.paymentgateway.issuerswitch.v1.MandateTransaction}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_transactions.list_mandate_transactions.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchTransactions_ListMandateTransactions_async
 */
  listMandateTransactionsAsync(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListMandateTransactionsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IMandateTransaction>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listMandateTransactions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listMandateTransactions.asyncIterate(
      this.innerApiCalls['listMandateTransactions'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IMandateTransaction>;
  }
 /**
 * List complaint transactions that satisfy specified filter criteria.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of transactions to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 1,
 *   at most 50 transactions will be returned. The maximum value is 1000; values
 *   above 1000 will be coerced to 1000. While paginating, you can specify a new
 *   page size parameter for each page of transactions to be listed.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListComplaintTransactions` call.
 *   Specify this parameter to retrieve the next page of transactions.
 *
 *   When paginating, you must specify only the `page_token` parameter. The
 *   filter that was specified in the initial call to the
 *   `ListComplaintTransactions` method that returned the page token will be
 *   reused for all further calls where the page token parameter is specified.
 * @param {string} request.filter
 *   An expression that filters the list of complaint transactions.
 *
 *   A filter expression consists of a field name, a comparison operator, and
 *   a value for filtering. The value must be a string, a number, or a
 *   boolean. The comparison operator must be one of: `<`, `>`, or `=`.
 *   Filters are not case sensitive.
 *
 *   The following fields in the `Complaint` are eligible for
 *   filtering:
 *
 *     * `transactionID` - The transaction ID of the complaint transaction.
 *     Allowed comparison operators: `=`.
 *     * `transactionType` - The transaction type of the complaint
 *     transaction. Must be one of {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} values. For complaint
 *     transactions, only valid transaction types are
 *    `TRANSACTION_TYPE_CHECK_STATUS`, `TRANSACTION_TYPE_COMPLAINT`,
 *    `TRANSACTION_TYPE_REVERSAL`, `TRANSACTION_TYPE_DISPUTE`,
 *    `TRANSACTION_TYPE_REFUND` or `TRANSACTION_TYPE_STATUS_UPDATE`. Allowed
 *     comparison operators: `=`.
 *     * `originalRRN` - The retrieval reference number of the original
 *     transaction for which complaint / dispute was raised / resolved. Allowed
 *     comparison operators: `=`.
 *     * `createTime` - The time at which the transaction was created
 *     (received) by the issuer switch. The value should be in
 *     the format `YYYY-MM-DDTHH:MM:SSZ`. Allowed comparison
 *     operators: `>`, `<`.
 *     * `state` - The state of the transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionInfo.State|TransactionInfo.State} values. Allowed comparison operators: `=`.
 *     * `errorCode` - Use this filter to list complaint transactions which
 *     have failed a particular error code. Allowed comparison
 *     operators: `=`.
 *   You can combine multiple expressions by enclosing each expression in
 *   parentheses. Expressions are combined with AND logic. No other logical
 *   operators are supported.
 *
 *   Here are a few examples:
 *
 *     * `state = SUCCEEDED` - The transaction's state is _SUCCEEDED_.
 *     * (createTime < "2021-08-15T14:50:00Z")`
 *     - The transaction was received before _2021-08-15 14:50:00 UTC_.
 *     * `createTime > "2021-08-15T14:50:00Z" AND createTime <
 *     "2021-08-16T14:50:00Z"` - The transaction was received between
 *     _2021-08-15 14:50:00 UTC_ and _2021-08-16 14:50:00 UTC_.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [ComplaintTransaction]{@link google.cloud.paymentgateway.issuerswitch.v1.ComplaintTransaction}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listComplaintTransactionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listComplaintTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IComplaintTransaction[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsResponse
      ]>;
  listComplaintTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IComplaintTransaction>): void;
  listComplaintTransactions(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsRequest,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IComplaintTransaction>): void;
  listComplaintTransactions(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IComplaintTransaction>,
      callback?: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IComplaintTransaction>):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IComplaintTransaction[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listComplaintTransactions(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of transactions to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 1,
 *   at most 50 transactions will be returned. The maximum value is 1000; values
 *   above 1000 will be coerced to 1000. While paginating, you can specify a new
 *   page size parameter for each page of transactions to be listed.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListComplaintTransactions` call.
 *   Specify this parameter to retrieve the next page of transactions.
 *
 *   When paginating, you must specify only the `page_token` parameter. The
 *   filter that was specified in the initial call to the
 *   `ListComplaintTransactions` method that returned the page token will be
 *   reused for all further calls where the page token parameter is specified.
 * @param {string} request.filter
 *   An expression that filters the list of complaint transactions.
 *
 *   A filter expression consists of a field name, a comparison operator, and
 *   a value for filtering. The value must be a string, a number, or a
 *   boolean. The comparison operator must be one of: `<`, `>`, or `=`.
 *   Filters are not case sensitive.
 *
 *   The following fields in the `Complaint` are eligible for
 *   filtering:
 *
 *     * `transactionID` - The transaction ID of the complaint transaction.
 *     Allowed comparison operators: `=`.
 *     * `transactionType` - The transaction type of the complaint
 *     transaction. Must be one of {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} values. For complaint
 *     transactions, only valid transaction types are
 *    `TRANSACTION_TYPE_CHECK_STATUS`, `TRANSACTION_TYPE_COMPLAINT`,
 *    `TRANSACTION_TYPE_REVERSAL`, `TRANSACTION_TYPE_DISPUTE`,
 *    `TRANSACTION_TYPE_REFUND` or `TRANSACTION_TYPE_STATUS_UPDATE`. Allowed
 *     comparison operators: `=`.
 *     * `originalRRN` - The retrieval reference number of the original
 *     transaction for which complaint / dispute was raised / resolved. Allowed
 *     comparison operators: `=`.
 *     * `createTime` - The time at which the transaction was created
 *     (received) by the issuer switch. The value should be in
 *     the format `YYYY-MM-DDTHH:MM:SSZ`. Allowed comparison
 *     operators: `>`, `<`.
 *     * `state` - The state of the transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionInfo.State|TransactionInfo.State} values. Allowed comparison operators: `=`.
 *     * `errorCode` - Use this filter to list complaint transactions which
 *     have failed a particular error code. Allowed comparison
 *     operators: `=`.
 *   You can combine multiple expressions by enclosing each expression in
 *   parentheses. Expressions are combined with AND logic. No other logical
 *   operators are supported.
 *
 *   Here are a few examples:
 *
 *     * `state = SUCCEEDED` - The transaction's state is _SUCCEEDED_.
 *     * (createTime < "2021-08-15T14:50:00Z")`
 *     - The transaction was received before _2021-08-15 14:50:00 UTC_.
 *     * `createTime > "2021-08-15T14:50:00Z" AND createTime <
 *     "2021-08-16T14:50:00Z"` - The transaction was received between
 *     _2021-08-15 14:50:00 UTC_ and _2021-08-16 14:50:00 UTC_.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [ComplaintTransaction]{@link google.cloud.paymentgateway.issuerswitch.v1.ComplaintTransaction} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listComplaintTransactionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listComplaintTransactionsStream(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listComplaintTransactions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listComplaintTransactions.createStream(
      this.innerApiCalls.listComplaintTransactions as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listComplaintTransactions`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of transactions to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 1,
 *   at most 50 transactions will be returned. The maximum value is 1000; values
 *   above 1000 will be coerced to 1000. While paginating, you can specify a new
 *   page size parameter for each page of transactions to be listed.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListComplaintTransactions` call.
 *   Specify this parameter to retrieve the next page of transactions.
 *
 *   When paginating, you must specify only the `page_token` parameter. The
 *   filter that was specified in the initial call to the
 *   `ListComplaintTransactions` method that returned the page token will be
 *   reused for all further calls where the page token parameter is specified.
 * @param {string} request.filter
 *   An expression that filters the list of complaint transactions.
 *
 *   A filter expression consists of a field name, a comparison operator, and
 *   a value for filtering. The value must be a string, a number, or a
 *   boolean. The comparison operator must be one of: `<`, `>`, or `=`.
 *   Filters are not case sensitive.
 *
 *   The following fields in the `Complaint` are eligible for
 *   filtering:
 *
 *     * `transactionID` - The transaction ID of the complaint transaction.
 *     Allowed comparison operators: `=`.
 *     * `transactionType` - The transaction type of the complaint
 *     transaction. Must be one of {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionType|TransactionType} values. For complaint
 *     transactions, only valid transaction types are
 *    `TRANSACTION_TYPE_CHECK_STATUS`, `TRANSACTION_TYPE_COMPLAINT`,
 *    `TRANSACTION_TYPE_REVERSAL`, `TRANSACTION_TYPE_DISPUTE`,
 *    `TRANSACTION_TYPE_REFUND` or `TRANSACTION_TYPE_STATUS_UPDATE`. Allowed
 *     comparison operators: `=`.
 *     * `originalRRN` - The retrieval reference number of the original
 *     transaction for which complaint / dispute was raised / resolved. Allowed
 *     comparison operators: `=`.
 *     * `createTime` - The time at which the transaction was created
 *     (received) by the issuer switch. The value should be in
 *     the format `YYYY-MM-DDTHH:MM:SSZ`. Allowed comparison
 *     operators: `>`, `<`.
 *     * `state` - The state of the transaction. Must be one of
 *     {@link google.cloud.paymentgateway.issuerswitch.v1.TransactionInfo.State|TransactionInfo.State} values. Allowed comparison operators: `=`.
 *     * `errorCode` - Use this filter to list complaint transactions which
 *     have failed a particular error code. Allowed comparison
 *     operators: `=`.
 *   You can combine multiple expressions by enclosing each expression in
 *   parentheses. Expressions are combined with AND logic. No other logical
 *   operators are supported.
 *
 *   Here are a few examples:
 *
 *     * `state = SUCCEEDED` - The transaction's state is _SUCCEEDED_.
 *     * (createTime < "2021-08-15T14:50:00Z")`
 *     - The transaction was received before _2021-08-15 14:50:00 UTC_.
 *     * `createTime > "2021-08-15T14:50:00Z" AND createTime <
 *     "2021-08-16T14:50:00Z"` - The transaction was received between
 *     _2021-08-15 14:50:00 UTC_ and _2021-08-16 14:50:00 UTC_.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [ComplaintTransaction]{@link google.cloud.paymentgateway.issuerswitch.v1.ComplaintTransaction}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_transactions.list_complaint_transactions.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchTransactions_ListComplaintTransactions_async
 */
  listComplaintTransactionsAsync(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListComplaintTransactionsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IComplaintTransaction>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listComplaintTransactions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listComplaintTransactions.asyncIterate(
      this.innerApiCalls['listComplaintTransactions'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IComplaintTransaction>;
  }
/**
   * Gets the latest state of a long-running operation.  Clients can use this
   * method to poll the operation result at intervals as recommended by the API
   * service.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   *   details.
   * @param {function(?Error, ?Object)=} callback
   *   The function which will be called with the result of the API call.
   *
   *   The second parameter to the callback is an object representing
   * [google.longrunning.Operation]{@link
   * external:"google.longrunning.Operation"}.
   * @return {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing
   * [google.longrunning.Operation]{@link
   * external:"google.longrunning.Operation"}. The promise has a method named
   * "cancel" which cancels the ongoing API call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * const name = '';
   * const [response] = await client.getOperation({name});
   * // doThingsWith(response)
   * ```
   */
  getOperation(
    request: protos.google.longrunning.GetOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.longrunning.Operation,
          protos.google.longrunning.GetOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.longrunning.Operation,
      protos.google.longrunning.GetOperationRequest,
      {} | null | undefined
    >
  ): Promise<[protos.google.longrunning.Operation]> {
    return this.operationsClient.getOperation(request, options, callback);
  }
  /**
   * Lists operations that match the specified filter in the request. If the
   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.
   *
   * For-await-of syntax is used with the iterable to recursively get response element on-demand.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation collection.
   * @param {string} request.filter - The standard list filter.
   * @param {number=} request.pageSize -
   *   The maximum number of resources contained in the underlying API
   *   response. If page streaming is performed per-resource, this
   *   parameter does not affect the return value. If page streaming is
   *   performed per-page, this determines the maximum number of
   *   resources in a page.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   *   e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   *   details.
   * @returns {Object}
   *   An iterable Object that conforms to @link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * for await (const response of client.listOperationsAsync(request));
   * // doThingsWith(response)
   * ```
   */
  listOperationsAsync(
    request: protos.google.longrunning.ListOperationsRequest,
    options?: gax.CallOptions
  ): AsyncIterable<protos.google.longrunning.ListOperationsResponse> {
    return this.operationsClient.listOperationsAsync(request, options);
  }
  /**
   * Starts asynchronous cancellation on a long-running operation.  The server
   * makes a best effort to cancel the operation, but success is not
   * guaranteed.  If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
   * {@link Operations.GetOperation} or
   * other methods to check whether the cancellation succeeded or whether the
   * operation completed despite cancellation. On successful cancellation,
   * the operation is not deleted; instead, it becomes an operation with
   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of
   * 1, corresponding to `Code.CANCELLED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be cancelled.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.cancelOperation({name: ''});
   * ```
   */
   cancelOperation(
    request: protos.google.longrunning.CancelOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.CancelOperationRequest,
          {} | undefined | null
        >,
    callback?: Callback<
      protos.google.longrunning.CancelOperationRequest,
      protos.google.protobuf.Empty,
      {} | undefined | null
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.cancelOperation(request, options, callback);
  }

  /**
   * Deletes a long-running operation. This method indicates that the client is
   * no longer interested in the operation result. It does not cancel the
   * operation. If the server doesn't support this method, it returns
   * `google.rpc.Code.UNIMPLEMENTED`.
   *
   * @param {Object} request - The request object that will be sent.
   * @param {string} request.name - The name of the operation resource to be deleted.
   * @param {Object=} options
   *   Optional parameters. You can override the default settings for this call,
   * e.g, timeout, retries, paginations, etc. See [gax.CallOptions]{@link
   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions} for the
   * details.
   * @param {function(?Error)=} callback
   *   The function which will be called with the result of the API call.
   * @return {Promise} - The promise which resolves when API call finishes.
   *   The promise has a method named "cancel" which cancels the ongoing API
   * call.
   *
   * @example
   * ```
   * const client = longrunning.operationsClient();
   * await client.deleteOperation({name: ''});
   * ```
   */
  deleteOperation(
    request: protos.google.longrunning.DeleteOperationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          protos.google.protobuf.Empty,
          protos.google.longrunning.DeleteOperationRequest,
          {} | null | undefined
        >,
    callback?: Callback<
      protos.google.protobuf.Empty,
      protos.google.longrunning.DeleteOperationRequest,
      {} | null | undefined
    >
  ): Promise<protos.google.protobuf.Empty> {
    return this.operationsClient.deleteOperation(request, options, callback);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified complaint resource name string.
   *
   * @param {string} project
   * @param {string} complaint
   * @returns {string} Resource name string.
   */
  complaintPath(project:string,complaint:string) {
    return this.pathTemplates.complaintPathTemplate.render({
      project: project,
      complaint: complaint,
    });
  }

  /**
   * Parse the project from Complaint resource.
   *
   * @param {string} complaintName
   *   A fully-qualified path representing Complaint resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromComplaintName(complaintName: string) {
    return this.pathTemplates.complaintPathTemplate.match(complaintName).project;
  }

  /**
   * Parse the complaint from Complaint resource.
   *
   * @param {string} complaintName
   *   A fully-qualified path representing Complaint resource.
   * @returns {string} A string representing the complaint.
   */
  matchComplaintFromComplaintName(complaintName: string) {
    return this.pathTemplates.complaintPathTemplate.match(complaintName).complaint;
  }

  /**
   * Return a fully-qualified complaintTransaction resource name string.
   *
   * @param {string} project
   * @param {string} transaction
   * @returns {string} Resource name string.
   */
  complaintTransactionPath(project:string,transaction:string) {
    return this.pathTemplates.complaintTransactionPathTemplate.render({
      project: project,
      transaction: transaction,
    });
  }

  /**
   * Parse the project from ComplaintTransaction resource.
   *
   * @param {string} complaintTransactionName
   *   A fully-qualified path representing ComplaintTransaction resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromComplaintTransactionName(complaintTransactionName: string) {
    return this.pathTemplates.complaintTransactionPathTemplate.match(complaintTransactionName).project;
  }

  /**
   * Parse the transaction from ComplaintTransaction resource.
   *
   * @param {string} complaintTransactionName
   *   A fully-qualified path representing ComplaintTransaction resource.
   * @returns {string} A string representing the transaction.
   */
  matchTransactionFromComplaintTransactionName(complaintTransactionName: string) {
    return this.pathTemplates.complaintTransactionPathTemplate.match(complaintTransactionName).transaction;
  }

  /**
   * Return a fully-qualified dispute resource name string.
   *
   * @param {string} project
   * @param {string} dispute
   * @returns {string} Resource name string.
   */
  disputePath(project:string,dispute:string) {
    return this.pathTemplates.disputePathTemplate.render({
      project: project,
      dispute: dispute,
    });
  }

  /**
   * Parse the project from Dispute resource.
   *
   * @param {string} disputeName
   *   A fully-qualified path representing Dispute resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDisputeName(disputeName: string) {
    return this.pathTemplates.disputePathTemplate.match(disputeName).project;
  }

  /**
   * Parse the dispute from Dispute resource.
   *
   * @param {string} disputeName
   *   A fully-qualified path representing Dispute resource.
   * @returns {string} A string representing the dispute.
   */
  matchDisputeFromDisputeName(disputeName: string) {
    return this.pathTemplates.disputePathTemplate.match(disputeName).dispute;
  }

  /**
   * Return a fully-qualified financialTransaction resource name string.
   *
   * @param {string} project
   * @param {string} transaction
   * @returns {string} Resource name string.
   */
  financialTransactionPath(project:string,transaction:string) {
    return this.pathTemplates.financialTransactionPathTemplate.render({
      project: project,
      transaction: transaction,
    });
  }

  /**
   * Parse the project from FinancialTransaction resource.
   *
   * @param {string} financialTransactionName
   *   A fully-qualified path representing FinancialTransaction resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromFinancialTransactionName(financialTransactionName: string) {
    return this.pathTemplates.financialTransactionPathTemplate.match(financialTransactionName).project;
  }

  /**
   * Parse the transaction from FinancialTransaction resource.
   *
   * @param {string} financialTransactionName
   *   A fully-qualified path representing FinancialTransaction resource.
   * @returns {string} A string representing the transaction.
   */
  matchTransactionFromFinancialTransactionName(financialTransactionName: string) {
    return this.pathTemplates.financialTransactionPathTemplate.match(financialTransactionName).transaction;
  }

  /**
   * Return a fully-qualified mandateTransaction resource name string.
   *
   * @param {string} project
   * @param {string} transaction
   * @returns {string} Resource name string.
   */
  mandateTransactionPath(project:string,transaction:string) {
    return this.pathTemplates.mandateTransactionPathTemplate.render({
      project: project,
      transaction: transaction,
    });
  }

  /**
   * Parse the project from MandateTransaction resource.
   *
   * @param {string} mandateTransactionName
   *   A fully-qualified path representing MandateTransaction resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromMandateTransactionName(mandateTransactionName: string) {
    return this.pathTemplates.mandateTransactionPathTemplate.match(mandateTransactionName).project;
  }

  /**
   * Parse the transaction from MandateTransaction resource.
   *
   * @param {string} mandateTransactionName
   *   A fully-qualified path representing MandateTransaction resource.
   * @returns {string} A string representing the transaction.
   */
  matchTransactionFromMandateTransactionName(mandateTransactionName: string) {
    return this.pathTemplates.mandateTransactionPathTemplate.match(mandateTransactionName).transaction;
  }

  /**
   * Return a fully-qualified metadataTransaction resource name string.
   *
   * @param {string} project
   * @param {string} transaction
   * @returns {string} Resource name string.
   */
  metadataTransactionPath(project:string,transaction:string) {
    return this.pathTemplates.metadataTransactionPathTemplate.render({
      project: project,
      transaction: transaction,
    });
  }

  /**
   * Parse the project from MetadataTransaction resource.
   *
   * @param {string} metadataTransactionName
   *   A fully-qualified path representing MetadataTransaction resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromMetadataTransactionName(metadataTransactionName: string) {
    return this.pathTemplates.metadataTransactionPathTemplate.match(metadataTransactionName).project;
  }

  /**
   * Parse the transaction from MetadataTransaction resource.
   *
   * @param {string} metadataTransactionName
   *   A fully-qualified path representing MetadataTransaction resource.
   * @returns {string} A string representing the transaction.
   */
  matchTransactionFromMetadataTransactionName(metadataTransactionName: string) {
    return this.pathTemplates.metadataTransactionPathTemplate.match(metadataTransactionName).transaction;
  }

  /**
   * Return a fully-qualified project resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  projectPath(project:string) {
    return this.pathTemplates.projectPathTemplate.render({
      project: project,
    });
  }

  /**
   * Parse the project from Project resource.
   *
   * @param {string} projectName
   *   A fully-qualified path representing Project resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectName(projectName: string) {
    return this.pathTemplates.projectPathTemplate.match(projectName).project;
  }

  /**
   * Return a fully-qualified rule resource name string.
   *
   * @param {string} project
   * @param {string} rule
   * @returns {string} Resource name string.
   */
  rulePath(project:string,rule:string) {
    return this.pathTemplates.rulePathTemplate.render({
      project: project,
      rule: rule,
    });
  }

  /**
   * Parse the project from Rule resource.
   *
   * @param {string} ruleName
   *   A fully-qualified path representing Rule resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromRuleName(ruleName: string) {
    return this.pathTemplates.rulePathTemplate.match(ruleName).project;
  }

  /**
   * Parse the rule from Rule resource.
   *
   * @param {string} ruleName
   *   A fully-qualified path representing Rule resource.
   * @returns {string} A string representing the rule.
   */
  matchRuleFromRuleName(ruleName: string) {
    return this.pathTemplates.rulePathTemplate.match(ruleName).rule;
  }

  /**
   * Return a fully-qualified ruleMetadata resource name string.
   *
   * @param {string} project
   * @param {string} rule
   * @param {string} metadata
   * @returns {string} Resource name string.
   */
  ruleMetadataPath(project:string,rule:string,metadata:string) {
    return this.pathTemplates.ruleMetadataPathTemplate.render({
      project: project,
      rule: rule,
      metadata: metadata,
    });
  }

  /**
   * Parse the project from RuleMetadata resource.
   *
   * @param {string} ruleMetadataName
   *   A fully-qualified path representing RuleMetadata resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromRuleMetadataName(ruleMetadataName: string) {
    return this.pathTemplates.ruleMetadataPathTemplate.match(ruleMetadataName).project;
  }

  /**
   * Parse the rule from RuleMetadata resource.
   *
   * @param {string} ruleMetadataName
   *   A fully-qualified path representing RuleMetadata resource.
   * @returns {string} A string representing the rule.
   */
  matchRuleFromRuleMetadataName(ruleMetadataName: string) {
    return this.pathTemplates.ruleMetadataPathTemplate.match(ruleMetadataName).rule;
  }

  /**
   * Parse the metadata from RuleMetadata resource.
   *
   * @param {string} ruleMetadataName
   *   A fully-qualified path representing RuleMetadata resource.
   * @returns {string} A string representing the metadata.
   */
  matchMetadataFromRuleMetadataName(ruleMetadataName: string) {
    return this.pathTemplates.ruleMetadataPathTemplate.match(ruleMetadataName).metadata;
  }

  /**
   * Return a fully-qualified ruleMetadataValue resource name string.
   *
   * @param {string} project
   * @param {string} rule
   * @param {string} metadata
   * @param {string} value
   * @returns {string} Resource name string.
   */
  ruleMetadataValuePath(project:string,rule:string,metadata:string,value:string) {
    return this.pathTemplates.ruleMetadataValuePathTemplate.render({
      project: project,
      rule: rule,
      metadata: metadata,
      value: value,
    });
  }

  /**
   * Parse the project from RuleMetadataValue resource.
   *
   * @param {string} ruleMetadataValueName
   *   A fully-qualified path representing RuleMetadataValue resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromRuleMetadataValueName(ruleMetadataValueName: string) {
    return this.pathTemplates.ruleMetadataValuePathTemplate.match(ruleMetadataValueName).project;
  }

  /**
   * Parse the rule from RuleMetadataValue resource.
   *
   * @param {string} ruleMetadataValueName
   *   A fully-qualified path representing RuleMetadataValue resource.
   * @returns {string} A string representing the rule.
   */
  matchRuleFromRuleMetadataValueName(ruleMetadataValueName: string) {
    return this.pathTemplates.ruleMetadataValuePathTemplate.match(ruleMetadataValueName).rule;
  }

  /**
   * Parse the metadata from RuleMetadataValue resource.
   *
   * @param {string} ruleMetadataValueName
   *   A fully-qualified path representing RuleMetadataValue resource.
   * @returns {string} A string representing the metadata.
   */
  matchMetadataFromRuleMetadataValueName(ruleMetadataValueName: string) {
    return this.pathTemplates.ruleMetadataValuePathTemplate.match(ruleMetadataValueName).metadata;
  }

  /**
   * Parse the value from RuleMetadataValue resource.
   *
   * @param {string} ruleMetadataValueName
   *   A fully-qualified path representing RuleMetadataValue resource.
   * @returns {string} A string representing the value.
   */
  matchValueFromRuleMetadataValueName(ruleMetadataValueName: string) {
    return this.pathTemplates.ruleMetadataValuePathTemplate.match(ruleMetadataValueName).value;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.issuerSwitchTransactionsStub && !this._terminated) {
      return this.issuerSwitchTransactionsStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.operationsClient.close();
      });
    }
    return Promise.resolve();
  }
}
