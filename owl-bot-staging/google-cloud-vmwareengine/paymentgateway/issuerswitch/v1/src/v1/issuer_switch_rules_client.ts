// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback, GaxCall} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1/issuer_switch_rules_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './issuer_switch_rules_client_config.json';
const version = require('../../../package.json').version;

/**
 *  Manages rules used by the issuer switch's rules engine.
 * @class
 * @memberof v1
 */
export class IssuerSwitchRulesClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  pathTemplates: {[name: string]: gax.PathTemplate};
  issuerSwitchRulesStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of IssuerSwitchRulesClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new IssuerSwitchRulesClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof IssuerSwitchRulesClient;
    const servicePath = opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(opts?.servicePath || opts?.apiEndpoint);
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest' ) {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      complaintPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/complaints/{complaint}'
      ),
      complaintTransactionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/complaintTransactions/{transaction}'
      ),
      disputePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/disputes/{dispute}'
      ),
      financialTransactionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/financialTransactions/{transaction}'
      ),
      mandateTransactionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/mandateTransactions/{transaction}'
      ),
      metadataTransactionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/metadataTransactions/{transaction}'
      ),
      projectPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}'
      ),
      rulePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/rules/{rule}'
      ),
      ruleMetadataPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/rules/{rule}/metadata/{metadata}'
      ),
      ruleMetadataValuePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/rules/{rule}/metadata/{metadata}/values/{value}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listRules:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'rules'),
      listRuleMetadata:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'ruleMetadata'),
      listRuleMetadataValues:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'ruleMetadataValues')
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.cloud.paymentgateway.issuerswitch.v1.IssuerSwitchRules', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.issuerSwitchRulesStub) {
      return this.issuerSwitchRulesStub;
    }

    // Put together the "service stub" for
    // google.cloud.paymentgateway.issuerswitch.v1.IssuerSwitchRules.
    this.issuerSwitchRulesStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.cloud.paymentgateway.issuerswitch.v1.IssuerSwitchRules') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.paymentgateway.issuerswitch.v1.IssuerSwitchRules,
        this._opts, this._providedCustomServicePath) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const issuerSwitchRulesStubMethods =
        ['listRules', 'listRuleMetadata', 'listRuleMetadataValues', 'batchCreateRuleMetadataValues', 'batchDeleteRuleMetadataValues'];
    for (const methodName of issuerSwitchRulesStubMethods) {
      const callPromise = this.issuerSwitchRulesStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const descriptor =
        this.descriptors.page[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.issuerSwitchRulesStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'issuerswitch.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'issuerswitch.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-platform'
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
/**
 * Create (add) multiple values to the list of values under the specified rule
 * metadata resource.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   The parent resource shared by all ruleMetadataValue being created. The
 *   format is `projects/{project}/rules/{rule}/metadata/{metadata}`. The
 *   {@link google.cloud.paymentgateway.issuerswitch.v1.CreateRuleMetadataValueRequest.parent|CreateRuleMetadataValueRequest.parent} field in the
 *   {@link google.cloud.paymentgateway.issuerswitch.v1.CreateRuleMetadataValueRequest|CreateRuleMetadataValueRequest} messages contained in this request must
 *   match this field.
 * @param {number[]} request.requests
 *   Required. The request message specifying the resources to create.
 *   A maximum of 1000 RuleMetadataValues can be created in a batch.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [BatchCreateRuleMetadataValuesResponse]{@link google.cloud.paymentgateway.issuerswitch.v1.BatchCreateRuleMetadataValuesResponse}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_rules.batch_create_rule_metadata_values.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchRules_BatchCreateRuleMetadataValues_async
 */
  batchCreateRuleMetadataValues(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesResponse,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesRequest|undefined, {}|undefined
      ]>;
  batchCreateRuleMetadataValues(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesResponse,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesRequest|null|undefined,
          {}|null|undefined>): void;
  batchCreateRuleMetadataValues(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesRequest,
      callback: Callback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesResponse,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesRequest|null|undefined,
          {}|null|undefined>): void;
  batchCreateRuleMetadataValues(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesResponse,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesResponse,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesResponse,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchCreateRuleMetadataValuesRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.batchCreateRuleMetadataValues(request, options, callback);
  }
/**
 * Delete (remove) multiple values from the list of values under the specified
 * rules metadata resource.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   The parent resource shared by all RuleMetadataValues being deleted. The
 *   format is `projects/{project}/rules/{rule}/metadata/{metadata}`. If this is
 *   set, the parent of all of the RuleMetadataValues specified in the
 *   list of names must match this field.
 * @param {string[]} request.names
 *   Required. The names of the rule metadata values to delete.
 *   A maximum of 1000 RuleMetadataValue can be deleted in a batch.
 *   Format: projects/{project}/rules/{rule}/metadata/{metadata}/values/{value}
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_rules.batch_delete_rule_metadata_values.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchRules_BatchDeleteRuleMetadataValues_async
 */
  batchDeleteRuleMetadataValues(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchDeleteRuleMetadataValuesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchDeleteRuleMetadataValuesRequest|undefined, {}|undefined
      ]>;
  batchDeleteRuleMetadataValues(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchDeleteRuleMetadataValuesRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchDeleteRuleMetadataValuesRequest|null|undefined,
          {}|null|undefined>): void;
  batchDeleteRuleMetadataValues(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchDeleteRuleMetadataValuesRequest,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchDeleteRuleMetadataValuesRequest|null|undefined,
          {}|null|undefined>): void;
  batchDeleteRuleMetadataValues(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchDeleteRuleMetadataValuesRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchDeleteRuleMetadataValuesRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchDeleteRuleMetadataValuesRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IBatchDeleteRuleMetadataValuesRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.batchDeleteRuleMetadataValues(request, options, callback);
  }

 /**
 * List all rules that are applied on transactions by the issuer switch. Rules
 * can be filtered on API type and transaction type.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource must have the format of `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of rules to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 50,
 *   at most 50 rules will be returned. The maximum value is 1000; values above
 *   1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListRulesRequest` call.
 *   Specify this parameter to retrieve the next page of rules.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [Rule]{@link google.cloud.paymentgateway.issuerswitch.v1.Rule}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listRulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listRules(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IRule[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesResponse
      ]>;
  listRules(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IRule>): void;
  listRules(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesRequest,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IRule>): void;
  listRules(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IRule>,
      callback?: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IRule>):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IRule[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listRules(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource must have the format of `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of rules to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 50,
 *   at most 50 rules will be returned. The maximum value is 1000; values above
 *   1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListRulesRequest` call.
 *   Specify this parameter to retrieve the next page of rules.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [Rule]{@link google.cloud.paymentgateway.issuerswitch.v1.Rule} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listRulesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listRulesStream(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listRules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listRules.createStream(
      this.innerApiCalls.listRules as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listRules`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource must have the format of `projects/{project}`.
 * @param {number} request.pageSize
 *   The maximum number of rules to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 50,
 *   at most 50 rules will be returned. The maximum value is 1000; values above
 *   1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListRulesRequest` call.
 *   Specify this parameter to retrieve the next page of rules.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [Rule]{@link google.cloud.paymentgateway.issuerswitch.v1.Rule}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_rules.list_rules.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchRules_ListRules_async
 */
  listRulesAsync(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRulesRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IRule>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listRules'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listRules.asyncIterate(
      this.innerApiCalls['listRules'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IRule>;
  }
 /**
 * List all rule metadata for a given rule identifier.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}/rules/{rule}`.
 * @param {number} request.pageSize
 *   The maximum number of rule metadata to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 50,
 *   at most 50 rule metadata will be returned. The maximum value is 1000;
 *   values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListRuleMetadataRequest` call.
 *   Specify this parameter to retrieve the next page of rule metadata.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [RuleMetadata]{@link google.cloud.paymentgateway.issuerswitch.v1.RuleMetadata}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listRuleMetadataAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listRuleMetadata(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadata[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataResponse
      ]>;
  listRuleMetadata(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadata>): void;
  listRuleMetadata(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataRequest,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadata>): void;
  listRuleMetadata(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadata>,
      callback?: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadata>):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadata[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listRuleMetadata(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}/rules/{rule}`.
 * @param {number} request.pageSize
 *   The maximum number of rule metadata to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 50,
 *   at most 50 rule metadata will be returned. The maximum value is 1000;
 *   values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListRuleMetadataRequest` call.
 *   Specify this parameter to retrieve the next page of rule metadata.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [RuleMetadata]{@link google.cloud.paymentgateway.issuerswitch.v1.RuleMetadata} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listRuleMetadataAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listRuleMetadataStream(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listRuleMetadata'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listRuleMetadata.createStream(
      this.innerApiCalls.listRuleMetadata as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listRuleMetadata`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is `projects/{project}/rules/{rule}`.
 * @param {number} request.pageSize
 *   The maximum number of rule metadata to return. The service may return fewer
 *   than this value. If unspecified or if the specified value is less than 50,
 *   at most 50 rule metadata will be returned. The maximum value is 1000;
 *   values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListRuleMetadataRequest` call.
 *   Specify this parameter to retrieve the next page of rule metadata.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [RuleMetadata]{@link google.cloud.paymentgateway.issuerswitch.v1.RuleMetadata}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_rules.list_rule_metadata.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchRules_ListRuleMetadata_async
 */
  listRuleMetadataAsync(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadata>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listRuleMetadata'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listRuleMetadata.asyncIterate(
      this.innerApiCalls['listRuleMetadata'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadata>;
  }
 /**
 * List all metadata values for a rule metadata identifier.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is
 *   `projects/{project}/rules/{rule}/metadata/{metadata}`.
 * @param {number} request.pageSize
 *   The maximum number of metadata values to return. The service may return
 *   fewer than this value. If unspecified or if the specified value is less
 *   than 1, at most 50 rule metadata values will be returned. The maximum
 *   value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token received from a previous `ListRuleMetadataValuesRequest`
 *   call. Specify this parameter to retrieve the next page of rule metadata
 *   values.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [RuleMetadataValue]{@link google.cloud.paymentgateway.issuerswitch.v1.RuleMetadataValue}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listRuleMetadataValuesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listRuleMetadataValues(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadataValue[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesResponse
      ]>;
  listRuleMetadataValues(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadataValue>): void;
  listRuleMetadataValues(
      request: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesRequest,
      callback: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadataValue>): void;
  listRuleMetadataValues(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadataValue>,
      callback?: PaginationCallback<
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesRequest,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesResponse|null|undefined,
          protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadataValue>):
      Promise<[
        protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadataValue[],
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesRequest|null,
        protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listRuleMetadataValues(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is
 *   `projects/{project}/rules/{rule}/metadata/{metadata}`.
 * @param {number} request.pageSize
 *   The maximum number of metadata values to return. The service may return
 *   fewer than this value. If unspecified or if the specified value is less
 *   than 1, at most 50 rule metadata values will be returned. The maximum
 *   value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token received from a previous `ListRuleMetadataValuesRequest`
 *   call. Specify this parameter to retrieve the next page of rule metadata
 *   values.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [RuleMetadataValue]{@link google.cloud.paymentgateway.issuerswitch.v1.RuleMetadataValue} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listRuleMetadataValuesAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listRuleMetadataValuesStream(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listRuleMetadataValues'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listRuleMetadataValues.createStream(
      this.innerApiCalls.listRuleMetadataValues as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listRuleMetadataValues`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent resource. The format is
 *   `projects/{project}/rules/{rule}/metadata/{metadata}`.
 * @param {number} request.pageSize
 *   The maximum number of metadata values to return. The service may return
 *   fewer than this value. If unspecified or if the specified value is less
 *   than 1, at most 50 rule metadata values will be returned. The maximum
 *   value is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token received from a previous `ListRuleMetadataValuesRequest`
 *   call. Specify this parameter to retrieve the next page of rule metadata
 *   values.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [RuleMetadataValue]{@link google.cloud.paymentgateway.issuerswitch.v1.RuleMetadataValue}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/issuer_switch_rules.list_rule_metadata_values.js</caption>
 * region_tag:issuerswitch_v1_generated_IssuerSwitchRules_ListRuleMetadataValues_async
 */
  listRuleMetadataValuesAsync(
      request?: protos.google.cloud.paymentgateway.issuerswitch.v1.IListRuleMetadataValuesRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadataValue>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listRuleMetadataValues'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listRuleMetadataValues.asyncIterate(
      this.innerApiCalls['listRuleMetadataValues'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.paymentgateway.issuerswitch.v1.IRuleMetadataValue>;
  }
  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified complaint resource name string.
   *
   * @param {string} project
   * @param {string} complaint
   * @returns {string} Resource name string.
   */
  complaintPath(project:string,complaint:string) {
    return this.pathTemplates.complaintPathTemplate.render({
      project: project,
      complaint: complaint,
    });
  }

  /**
   * Parse the project from Complaint resource.
   *
   * @param {string} complaintName
   *   A fully-qualified path representing Complaint resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromComplaintName(complaintName: string) {
    return this.pathTemplates.complaintPathTemplate.match(complaintName).project;
  }

  /**
   * Parse the complaint from Complaint resource.
   *
   * @param {string} complaintName
   *   A fully-qualified path representing Complaint resource.
   * @returns {string} A string representing the complaint.
   */
  matchComplaintFromComplaintName(complaintName: string) {
    return this.pathTemplates.complaintPathTemplate.match(complaintName).complaint;
  }

  /**
   * Return a fully-qualified complaintTransaction resource name string.
   *
   * @param {string} project
   * @param {string} transaction
   * @returns {string} Resource name string.
   */
  complaintTransactionPath(project:string,transaction:string) {
    return this.pathTemplates.complaintTransactionPathTemplate.render({
      project: project,
      transaction: transaction,
    });
  }

  /**
   * Parse the project from ComplaintTransaction resource.
   *
   * @param {string} complaintTransactionName
   *   A fully-qualified path representing ComplaintTransaction resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromComplaintTransactionName(complaintTransactionName: string) {
    return this.pathTemplates.complaintTransactionPathTemplate.match(complaintTransactionName).project;
  }

  /**
   * Parse the transaction from ComplaintTransaction resource.
   *
   * @param {string} complaintTransactionName
   *   A fully-qualified path representing ComplaintTransaction resource.
   * @returns {string} A string representing the transaction.
   */
  matchTransactionFromComplaintTransactionName(complaintTransactionName: string) {
    return this.pathTemplates.complaintTransactionPathTemplate.match(complaintTransactionName).transaction;
  }

  /**
   * Return a fully-qualified dispute resource name string.
   *
   * @param {string} project
   * @param {string} dispute
   * @returns {string} Resource name string.
   */
  disputePath(project:string,dispute:string) {
    return this.pathTemplates.disputePathTemplate.render({
      project: project,
      dispute: dispute,
    });
  }

  /**
   * Parse the project from Dispute resource.
   *
   * @param {string} disputeName
   *   A fully-qualified path representing Dispute resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromDisputeName(disputeName: string) {
    return this.pathTemplates.disputePathTemplate.match(disputeName).project;
  }

  /**
   * Parse the dispute from Dispute resource.
   *
   * @param {string} disputeName
   *   A fully-qualified path representing Dispute resource.
   * @returns {string} A string representing the dispute.
   */
  matchDisputeFromDisputeName(disputeName: string) {
    return this.pathTemplates.disputePathTemplate.match(disputeName).dispute;
  }

  /**
   * Return a fully-qualified financialTransaction resource name string.
   *
   * @param {string} project
   * @param {string} transaction
   * @returns {string} Resource name string.
   */
  financialTransactionPath(project:string,transaction:string) {
    return this.pathTemplates.financialTransactionPathTemplate.render({
      project: project,
      transaction: transaction,
    });
  }

  /**
   * Parse the project from FinancialTransaction resource.
   *
   * @param {string} financialTransactionName
   *   A fully-qualified path representing FinancialTransaction resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromFinancialTransactionName(financialTransactionName: string) {
    return this.pathTemplates.financialTransactionPathTemplate.match(financialTransactionName).project;
  }

  /**
   * Parse the transaction from FinancialTransaction resource.
   *
   * @param {string} financialTransactionName
   *   A fully-qualified path representing FinancialTransaction resource.
   * @returns {string} A string representing the transaction.
   */
  matchTransactionFromFinancialTransactionName(financialTransactionName: string) {
    return this.pathTemplates.financialTransactionPathTemplate.match(financialTransactionName).transaction;
  }

  /**
   * Return a fully-qualified mandateTransaction resource name string.
   *
   * @param {string} project
   * @param {string} transaction
   * @returns {string} Resource name string.
   */
  mandateTransactionPath(project:string,transaction:string) {
    return this.pathTemplates.mandateTransactionPathTemplate.render({
      project: project,
      transaction: transaction,
    });
  }

  /**
   * Parse the project from MandateTransaction resource.
   *
   * @param {string} mandateTransactionName
   *   A fully-qualified path representing MandateTransaction resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromMandateTransactionName(mandateTransactionName: string) {
    return this.pathTemplates.mandateTransactionPathTemplate.match(mandateTransactionName).project;
  }

  /**
   * Parse the transaction from MandateTransaction resource.
   *
   * @param {string} mandateTransactionName
   *   A fully-qualified path representing MandateTransaction resource.
   * @returns {string} A string representing the transaction.
   */
  matchTransactionFromMandateTransactionName(mandateTransactionName: string) {
    return this.pathTemplates.mandateTransactionPathTemplate.match(mandateTransactionName).transaction;
  }

  /**
   * Return a fully-qualified metadataTransaction resource name string.
   *
   * @param {string} project
   * @param {string} transaction
   * @returns {string} Resource name string.
   */
  metadataTransactionPath(project:string,transaction:string) {
    return this.pathTemplates.metadataTransactionPathTemplate.render({
      project: project,
      transaction: transaction,
    });
  }

  /**
   * Parse the project from MetadataTransaction resource.
   *
   * @param {string} metadataTransactionName
   *   A fully-qualified path representing MetadataTransaction resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromMetadataTransactionName(metadataTransactionName: string) {
    return this.pathTemplates.metadataTransactionPathTemplate.match(metadataTransactionName).project;
  }

  /**
   * Parse the transaction from MetadataTransaction resource.
   *
   * @param {string} metadataTransactionName
   *   A fully-qualified path representing MetadataTransaction resource.
   * @returns {string} A string representing the transaction.
   */
  matchTransactionFromMetadataTransactionName(metadataTransactionName: string) {
    return this.pathTemplates.metadataTransactionPathTemplate.match(metadataTransactionName).transaction;
  }

  /**
   * Return a fully-qualified project resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  projectPath(project:string) {
    return this.pathTemplates.projectPathTemplate.render({
      project: project,
    });
  }

  /**
   * Parse the project from Project resource.
   *
   * @param {string} projectName
   *   A fully-qualified path representing Project resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectName(projectName: string) {
    return this.pathTemplates.projectPathTemplate.match(projectName).project;
  }

  /**
   * Return a fully-qualified rule resource name string.
   *
   * @param {string} project
   * @param {string} rule
   * @returns {string} Resource name string.
   */
  rulePath(project:string,rule:string) {
    return this.pathTemplates.rulePathTemplate.render({
      project: project,
      rule: rule,
    });
  }

  /**
   * Parse the project from Rule resource.
   *
   * @param {string} ruleName
   *   A fully-qualified path representing Rule resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromRuleName(ruleName: string) {
    return this.pathTemplates.rulePathTemplate.match(ruleName).project;
  }

  /**
   * Parse the rule from Rule resource.
   *
   * @param {string} ruleName
   *   A fully-qualified path representing Rule resource.
   * @returns {string} A string representing the rule.
   */
  matchRuleFromRuleName(ruleName: string) {
    return this.pathTemplates.rulePathTemplate.match(ruleName).rule;
  }

  /**
   * Return a fully-qualified ruleMetadata resource name string.
   *
   * @param {string} project
   * @param {string} rule
   * @param {string} metadata
   * @returns {string} Resource name string.
   */
  ruleMetadataPath(project:string,rule:string,metadata:string) {
    return this.pathTemplates.ruleMetadataPathTemplate.render({
      project: project,
      rule: rule,
      metadata: metadata,
    });
  }

  /**
   * Parse the project from RuleMetadata resource.
   *
   * @param {string} ruleMetadataName
   *   A fully-qualified path representing RuleMetadata resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromRuleMetadataName(ruleMetadataName: string) {
    return this.pathTemplates.ruleMetadataPathTemplate.match(ruleMetadataName).project;
  }

  /**
   * Parse the rule from RuleMetadata resource.
   *
   * @param {string} ruleMetadataName
   *   A fully-qualified path representing RuleMetadata resource.
   * @returns {string} A string representing the rule.
   */
  matchRuleFromRuleMetadataName(ruleMetadataName: string) {
    return this.pathTemplates.ruleMetadataPathTemplate.match(ruleMetadataName).rule;
  }

  /**
   * Parse the metadata from RuleMetadata resource.
   *
   * @param {string} ruleMetadataName
   *   A fully-qualified path representing RuleMetadata resource.
   * @returns {string} A string representing the metadata.
   */
  matchMetadataFromRuleMetadataName(ruleMetadataName: string) {
    return this.pathTemplates.ruleMetadataPathTemplate.match(ruleMetadataName).metadata;
  }

  /**
   * Return a fully-qualified ruleMetadataValue resource name string.
   *
   * @param {string} project
   * @param {string} rule
   * @param {string} metadata
   * @param {string} value
   * @returns {string} Resource name string.
   */
  ruleMetadataValuePath(project:string,rule:string,metadata:string,value:string) {
    return this.pathTemplates.ruleMetadataValuePathTemplate.render({
      project: project,
      rule: rule,
      metadata: metadata,
      value: value,
    });
  }

  /**
   * Parse the project from RuleMetadataValue resource.
   *
   * @param {string} ruleMetadataValueName
   *   A fully-qualified path representing RuleMetadataValue resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromRuleMetadataValueName(ruleMetadataValueName: string) {
    return this.pathTemplates.ruleMetadataValuePathTemplate.match(ruleMetadataValueName).project;
  }

  /**
   * Parse the rule from RuleMetadataValue resource.
   *
   * @param {string} ruleMetadataValueName
   *   A fully-qualified path representing RuleMetadataValue resource.
   * @returns {string} A string representing the rule.
   */
  matchRuleFromRuleMetadataValueName(ruleMetadataValueName: string) {
    return this.pathTemplates.ruleMetadataValuePathTemplate.match(ruleMetadataValueName).rule;
  }

  /**
   * Parse the metadata from RuleMetadataValue resource.
   *
   * @param {string} ruleMetadataValueName
   *   A fully-qualified path representing RuleMetadataValue resource.
   * @returns {string} A string representing the metadata.
   */
  matchMetadataFromRuleMetadataValueName(ruleMetadataValueName: string) {
    return this.pathTemplates.ruleMetadataValuePathTemplate.match(ruleMetadataValueName).metadata;
  }

  /**
   * Parse the value from RuleMetadataValue resource.
   *
   * @param {string} ruleMetadataValueName
   *   A fully-qualified path representing RuleMetadataValue resource.
   * @returns {string} A string representing the value.
   */
  matchValueFromRuleMetadataValueName(ruleMetadataValueName: string) {
    return this.pathTemplates.ruleMetadataValuePathTemplate.match(ruleMetadataValueName).value;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.issuerSwitchRulesStub && !this._terminated) {
      return this.issuerSwitchRulesStub.then(stub => {
        this._terminated = true;
        stub.close();
      });
    }
    return Promise.resolve();
  }
}
