// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

/* global window */
import type * as gax from 'google-gax';
import type {Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback, GaxCall, IamClient, IamProtos, LocationsClient, LocationProtos} from 'google-gax';
import {Transform} from 'stream';
import * as protos from '../../protos/protos';
import jsonProtos = require('../../protos/protos.json');
/**
 * Client JSON configuration object, loaded from
 * `src/v1/registry_client_config.json`.
 * This file defines retry strategy and timeouts for all API methods in this library.
 */
import * as gapicConfig from './registry_client_config.json';
const version = require('../../../package.json').version;

/**
 *  The Registry service allows teams to manage descriptions of APIs.
 * @class
 * @memberof v1
 */
export class RegistryClient {
  private _terminated = false;
  private _opts: ClientOptions;
  private _providedCustomServicePath: boolean;
  private _gaxModule: typeof gax | typeof gax.fallback;
  private _gaxGrpc: gax.GrpcClient | gax.fallback.GrpcClient;
  private _protos: {};
  private _defaults: {[method: string]: gax.CallSettings};
  auth: gax.GoogleAuth;
  descriptors: Descriptors = {
    page: {},
    stream: {},
    longrunning: {},
    batching: {},
  };
  warn: (code: string, message: string, warnType?: string) => void;
  innerApiCalls: {[name: string]: Function};
  iamClient: IamClient;
  locationsClient: LocationsClient;
  pathTemplates: {[name: string]: gax.PathTemplate};
  registryStub?: Promise<{[name: string]: Function}>;

  /**
   * Construct an instance of RegistryClient.
   *
   * @param {object} [options] - The configuration object.
   * The options accepted by the constructor are described in detail
   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
   * The common options are:
   * @param {object} [options.credentials] - Credentials object.
   * @param {string} [options.credentials.client_email]
   * @param {string} [options.credentials.private_key]
   * @param {string} [options.email] - Account email address. Required when
   *     using a .pem or .p12 keyFilename.
   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
   *     .p12 key downloaded from the Google Developers Console. If you provide
   *     a path to a JSON file, the projectId option below is not necessary.
   *     NOTE: .pem and .p12 require you to specify options.email as well.
   * @param {number} [options.port] - The port on which to connect to
   *     the remote host.
   * @param {string} [options.projectId] - The project ID from the Google
   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
   *     the environment variable GCLOUD_PROJECT for your project ID. If your
   *     app is running in an environment which supports
   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
   *     your project ID will be detected automatically.
   * @param {string} [options.apiEndpoint] - The domain name of the
   *     API remote host.
   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
   *     Follows the structure of {@link gapicConfig}.
   * @param {boolean | "rest"} [options.fallback] - Use HTTP fallback mode.
   *     Pass "rest" to use HTTP/1.1 REST API instead of gRPC.
   *     For more information, please check the
   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
   *     need to avoid loading the default gRPC version and want to use the fallback
   *     HTTP implementation. Load only fallback version and pass it to the constructor:
   *     ```
   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
   *     const client = new RegistryClient({fallback: 'rest'}, gax);
   *     ```
   */
  constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback) {
    // Ensure that options include all the required fields.
    const staticMembers = this.constructor as typeof RegistryClient;
    const servicePath = opts?.servicePath || opts?.apiEndpoint || staticMembers.servicePath;
    this._providedCustomServicePath = !!(opts?.servicePath || opts?.apiEndpoint);
    const port = opts?.port || staticMembers.port;
    const clientConfig = opts?.clientConfig ?? {};
    const fallback = opts?.fallback ?? (typeof window !== 'undefined' && typeof window?.fetch === 'function');
    opts = Object.assign({servicePath, port, clientConfig, fallback}, opts);

    // Request numeric enum values if REST transport is used.
    opts.numericEnums = true;

    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.
    if (servicePath !== staticMembers.servicePath && !('scopes' in opts)) {
      opts['scopes'] = staticMembers.scopes;
    }

    // Load google-gax module synchronously if needed
    if (!gaxInstance) {
      gaxInstance = require('google-gax') as typeof gax;
    }

    // Choose either gRPC or proto-over-HTTP implementation of google-gax.
    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;

    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.
    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);

    // Save options to use in initialize() method.
    this._opts = opts;

    // Save the auth object to the client, for use by other methods.
    this.auth = (this._gaxGrpc.auth as gax.GoogleAuth);

    // Set useJWTAccessWithScope on the auth object.
    this.auth.useJWTAccessWithScope = true;

    // Set defaultServicePath on the auth object.
    this.auth.defaultServicePath = staticMembers.servicePath;

    // Set the default scopes in auth client if needed.
    if (servicePath === staticMembers.servicePath) {
      this.auth.defaultScopes = staticMembers.scopes;
    }
    this.iamClient = new this._gaxModule.IamClient(this._gaxGrpc, opts);
  
    this.locationsClient = new this._gaxModule.LocationsClient(
      this._gaxGrpc,
      opts
    );
  

    // Determine the client header string.
    const clientHeader = [
      `gax/${this._gaxModule.version}`,
      `gapic/${version}`,
    ];
    if (typeof process !== 'undefined' && 'versions' in process) {
      clientHeader.push(`gl-node/${process.versions.node}`);
    } else {
      clientHeader.push(`gl-web/${this._gaxModule.version}`);
    }
    if (!opts.fallback) {
      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);
    } else if (opts.fallback === 'rest' ) {
      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);
    }
    if (opts.libName && opts.libVersion) {
      clientHeader.push(`${opts.libName}/${opts.libVersion}`);
    }
    // Load the applicable protos.
    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);

    // This API contains "path templates"; forward-slash-separated
    // identifiers to uniquely identify resources within the API.
    // Create useful helper objects for these.
    this.pathTemplates = {
      apiPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/apis/{api}'
      ),
      apiDeploymentPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}'
      ),
      apiSpecPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}'
      ),
      apiVersionPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/apis/{api}/versions/{version}'
      ),
      instancePathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/instances/{instance}'
      ),
      locationPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}'
      ),
      projectPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}'
      ),
      projectLocationApiArtifactPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/apis/{api}/artifacts/{artifact}'
      ),
      projectLocationApiDeploymentArtifactPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}/artifacts/{artifact}'
      ),
      projectLocationApiVersionArtifactPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/apis/{api}/versions/{version}/artifacts/{artifact}'
      ),
      projectLocationApiVersionSpecArtifactPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}/artifacts/{artifact}'
      ),
      projectLocationArtifactPathTemplate: new this._gaxModule.PathTemplate(
        'projects/{project}/locations/{location}/artifacts/{artifact}'
      ),
    };

    // Some of the methods on this service return "paged" results,
    // (e.g. 50 results at a time, with tokens to get subsequent
    // pages). Denote the keys used for pagination and results.
    this.descriptors.page = {
      listApis:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'apis'),
      listApiVersions:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'apiVersions'),
      listApiSpecs:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'apiSpecs'),
      listApiSpecRevisions:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'apiSpecs'),
      listApiDeployments:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'apiDeployments'),
      listApiDeploymentRevisions:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'apiDeployments'),
      listArtifacts:
          new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'artifacts')
    };

    // Put together the default options sent with requests.
    this._defaults = this._gaxGrpc.constructSettings(
        'google.cloud.apigeeregistry.v1.Registry', gapicConfig as gax.ClientConfig,
        opts.clientConfig || {}, {'x-goog-api-client': clientHeader.join(' ')});

    // Set up a dictionary of "inner API calls"; the core implementation
    // of calling the API is handled in `google-gax`, with this code
    // merely providing the destination and request information.
    this.innerApiCalls = {};

    // Add a warn function to the client constructor so it can be easily tested.
    this.warn = this._gaxModule.warn;
  }

  /**
   * Initialize the client.
   * Performs asynchronous operations (such as authentication) and prepares the client.
   * This function will be called automatically when any class method is called for the
   * first time, but if you need to initialize it before calling an actual method,
   * feel free to call initialize() directly.
   *
   * You can await on this method if you want to make sure the client is initialized.
   *
   * @returns {Promise} A promise that resolves to an authenticated service stub.
   */
  initialize() {
    // If the client stub promise is already initialized, return immediately.
    if (this.registryStub) {
      return this.registryStub;
    }

    // Put together the "service stub" for
    // google.cloud.apigeeregistry.v1.Registry.
    this.registryStub = this._gaxGrpc.createStub(
        this._opts.fallback ?
          (this._protos as protobuf.Root).lookupService('google.cloud.apigeeregistry.v1.Registry') :
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (this._protos as any).google.cloud.apigeeregistry.v1.Registry,
        this._opts, this._providedCustomServicePath) as Promise<{[method: string]: Function}>;

    // Iterate over each of the methods that the service provides
    // and create an API call method for each.
    const registryStubMethods =
        ['listApis', 'getApi', 'createApi', 'updateApi', 'deleteApi', 'listApiVersions', 'getApiVersion', 'createApiVersion', 'updateApiVersion', 'deleteApiVersion', 'listApiSpecs', 'getApiSpec', 'getApiSpecContents', 'createApiSpec', 'updateApiSpec', 'deleteApiSpec', 'tagApiSpecRevision', 'listApiSpecRevisions', 'rollbackApiSpec', 'deleteApiSpecRevision', 'listApiDeployments', 'getApiDeployment', 'createApiDeployment', 'updateApiDeployment', 'deleteApiDeployment', 'tagApiDeploymentRevision', 'listApiDeploymentRevisions', 'rollbackApiDeployment', 'deleteApiDeploymentRevision', 'listArtifacts', 'getArtifact', 'getArtifactContents', 'createArtifact', 'replaceArtifact', 'deleteArtifact'];
    for (const methodName of registryStubMethods) {
      const callPromise = this.registryStub.then(
        stub => (...args: Array<{}>) => {
          if (this._terminated) {
            return Promise.reject('The client has already been closed.');
          }
          const func = stub[methodName];
          return func.apply(stub, args);
        },
        (err: Error|null|undefined) => () => {
          throw err;
        });

      const descriptor =
        this.descriptors.page[methodName] ||
        undefined;
      const apiCall = this._gaxModule.createApiCall(
        callPromise,
        this._defaults[methodName],
        descriptor,
        this._opts.fallback
      );

      this.innerApiCalls[methodName] = apiCall;
    }

    return this.registryStub;
  }

  /**
   * The DNS address for this API service.
   * @returns {string} The DNS address for this service.
   */
  static get servicePath() {
    return 'apigeeregistry.googleapis.com';
  }

  /**
   * The DNS address for this API service - same as servicePath(),
   * exists for compatibility reasons.
   * @returns {string} The DNS address for this service.
   */
  static get apiEndpoint() {
    return 'apigeeregistry.googleapis.com';
  }

  /**
   * The port for this API service.
   * @returns {number} The default port for this service.
   */
  static get port() {
    return 443;
  }

  /**
   * The scopes needed to make gRPC calls for every method defined
   * in this service.
   * @returns {string[]} List of default scopes.
   */
  static get scopes() {
    return [
      'https://www.googleapis.com/auth/cloud-platform'
    ];
  }

  getProjectId(): Promise<string>;
  getProjectId(callback: Callback<string, undefined, undefined>): void;
  /**
   * Return the project ID used by this class.
   * @returns {Promise} A promise that resolves to string containing the project ID.
   */
  getProjectId(callback?: Callback<string, undefined, undefined>):
      Promise<string>|void {
    if (callback) {
      this.auth.getProjectId(callback);
      return;
    }
    return this.auth.getProjectId();
  }

  // -------------------
  // -- Service calls --
  // -------------------
/**
 * Returns a specified API.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the API to retrieve.
 *   Format: `projects/* /locations/* /apis/*`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Api]{@link google.cloud.apigeeregistry.v1.Api}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.get_api.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_GetApi_async
 */
  getApi(
      request?: protos.google.cloud.apigeeregistry.v1.IGetApiRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApi,
        protos.google.cloud.apigeeregistry.v1.IGetApiRequest|undefined, {}|undefined
      ]>;
  getApi(
      request: protos.google.cloud.apigeeregistry.v1.IGetApiRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApi,
          protos.google.cloud.apigeeregistry.v1.IGetApiRequest|null|undefined,
          {}|null|undefined>): void;
  getApi(
      request: protos.google.cloud.apigeeregistry.v1.IGetApiRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApi,
          protos.google.cloud.apigeeregistry.v1.IGetApiRequest|null|undefined,
          {}|null|undefined>): void;
  getApi(
      request?: protos.google.cloud.apigeeregistry.v1.IGetApiRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApi,
          protos.google.cloud.apigeeregistry.v1.IGetApiRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApi,
          protos.google.cloud.apigeeregistry.v1.IGetApiRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApi,
        protos.google.cloud.apigeeregistry.v1.IGetApiRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.getApi(request, options, callback);
  }
/**
 * Creates a specified API.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of APIs.
 *   Format: `projects/* /locations/*`
 * @param {google.cloud.apigeeregistry.v1.Api} request.api
 *   Required. The API to create.
 * @param {string} request.apiId
 *   Required. The ID to use for the API, which will become the final component of
 *   the API's resource name.
 *
 *   This value should be 4-63 characters, and valid characters
 *   are /{@link 0-9|a-z}-/.
 *
 *   Following AIP-162, IDs must not have the form of a UUID.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Api]{@link google.cloud.apigeeregistry.v1.Api}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.create_api.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_CreateApi_async
 */
  createApi(
      request?: protos.google.cloud.apigeeregistry.v1.ICreateApiRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApi,
        protos.google.cloud.apigeeregistry.v1.ICreateApiRequest|undefined, {}|undefined
      ]>;
  createApi(
      request: protos.google.cloud.apigeeregistry.v1.ICreateApiRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApi,
          protos.google.cloud.apigeeregistry.v1.ICreateApiRequest|null|undefined,
          {}|null|undefined>): void;
  createApi(
      request: protos.google.cloud.apigeeregistry.v1.ICreateApiRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApi,
          protos.google.cloud.apigeeregistry.v1.ICreateApiRequest|null|undefined,
          {}|null|undefined>): void;
  createApi(
      request?: protos.google.cloud.apigeeregistry.v1.ICreateApiRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApi,
          protos.google.cloud.apigeeregistry.v1.ICreateApiRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApi,
          protos.google.cloud.apigeeregistry.v1.ICreateApiRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApi,
        protos.google.cloud.apigeeregistry.v1.ICreateApiRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.createApi(request, options, callback);
  }
/**
 * Used to modify a specified API.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.apigeeregistry.v1.Api} request.api
 *   Required. The API to update.
 *
 *   The `name` field is used to identify the API to update.
 *   Format: `projects/* /locations/* /apis/*`
 * @param {google.protobuf.FieldMask} request.updateMask
 *   The list of fields to be updated. If omitted, all fields are updated that
 *   are set in the request message (fields set to default values are ignored).
 *   If an asterisk "*" is specified, all fields are updated, including fields
 *   that are unspecified/default in the request.
 * @param {boolean} request.allowMissing
 *   If set to true, and the API is not found, a new API will be created.
 *   In this situation, `update_mask` is ignored.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Api]{@link google.cloud.apigeeregistry.v1.Api}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.update_api.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_UpdateApi_async
 */
  updateApi(
      request?: protos.google.cloud.apigeeregistry.v1.IUpdateApiRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApi,
        protos.google.cloud.apigeeregistry.v1.IUpdateApiRequest|undefined, {}|undefined
      ]>;
  updateApi(
      request: protos.google.cloud.apigeeregistry.v1.IUpdateApiRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApi,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiRequest|null|undefined,
          {}|null|undefined>): void;
  updateApi(
      request: protos.google.cloud.apigeeregistry.v1.IUpdateApiRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApi,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiRequest|null|undefined,
          {}|null|undefined>): void;
  updateApi(
      request?: protos.google.cloud.apigeeregistry.v1.IUpdateApiRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApi,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApi,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApi,
        protos.google.cloud.apigeeregistry.v1.IUpdateApiRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'api.name': request.api!.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.updateApi(request, options, callback);
  }
/**
 * Removes a specified API and all of the resources that it
 * owns.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the API to delete.
 *   Format: `projects/* /locations/* /apis/*`
 * @param {boolean} request.force
 *   If set to true, any child resources will also be deleted.
 *   (Otherwise, the request will only work if there are no child resources.)
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.delete_api.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_DeleteApi_async
 */
  deleteApi(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteApiRequest,
      options?: CallOptions):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.apigeeregistry.v1.IDeleteApiRequest|undefined, {}|undefined
      ]>;
  deleteApi(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteApiRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiRequest|null|undefined,
          {}|null|undefined>): void;
  deleteApi(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteApiRequest,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiRequest|null|undefined,
          {}|null|undefined>): void;
  deleteApi(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteApiRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.apigeeregistry.v1.IDeleteApiRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.deleteApi(request, options, callback);
  }
/**
 * Returns a specified version.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the version to retrieve.
 *   Format: `projects/* /locations/* /apis/* /versions/*`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiVersion]{@link google.cloud.apigeeregistry.v1.ApiVersion}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.get_api_version.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_GetApiVersion_async
 */
  getApiVersion(
      request?: protos.google.cloud.apigeeregistry.v1.IGetApiVersionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiVersion,
        protos.google.cloud.apigeeregistry.v1.IGetApiVersionRequest|undefined, {}|undefined
      ]>;
  getApiVersion(
      request: protos.google.cloud.apigeeregistry.v1.IGetApiVersionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiVersion,
          protos.google.cloud.apigeeregistry.v1.IGetApiVersionRequest|null|undefined,
          {}|null|undefined>): void;
  getApiVersion(
      request: protos.google.cloud.apigeeregistry.v1.IGetApiVersionRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiVersion,
          protos.google.cloud.apigeeregistry.v1.IGetApiVersionRequest|null|undefined,
          {}|null|undefined>): void;
  getApiVersion(
      request?: protos.google.cloud.apigeeregistry.v1.IGetApiVersionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiVersion,
          protos.google.cloud.apigeeregistry.v1.IGetApiVersionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiVersion,
          protos.google.cloud.apigeeregistry.v1.IGetApiVersionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiVersion,
        protos.google.cloud.apigeeregistry.v1.IGetApiVersionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.getApiVersion(request, options, callback);
  }
/**
 * Creates a specified version.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of versions.
 *   Format: `projects/* /locations/* /apis/*`
 * @param {google.cloud.apigeeregistry.v1.ApiVersion} request.apiVersion
 *   Required. The version to create.
 * @param {string} request.apiVersionId
 *   Required. The ID to use for the version, which will become the final component of
 *   the version's resource name.
 *
 *   This value should be 1-63 characters, and valid characters
 *   are /{@link 0-9|a-z}-/.
 *
 *   Following AIP-162, IDs must not have the form of a UUID.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiVersion]{@link google.cloud.apigeeregistry.v1.ApiVersion}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.create_api_version.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_CreateApiVersion_async
 */
  createApiVersion(
      request?: protos.google.cloud.apigeeregistry.v1.ICreateApiVersionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiVersion,
        protos.google.cloud.apigeeregistry.v1.ICreateApiVersionRequest|undefined, {}|undefined
      ]>;
  createApiVersion(
      request: protos.google.cloud.apigeeregistry.v1.ICreateApiVersionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiVersion,
          protos.google.cloud.apigeeregistry.v1.ICreateApiVersionRequest|null|undefined,
          {}|null|undefined>): void;
  createApiVersion(
      request: protos.google.cloud.apigeeregistry.v1.ICreateApiVersionRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiVersion,
          protos.google.cloud.apigeeregistry.v1.ICreateApiVersionRequest|null|undefined,
          {}|null|undefined>): void;
  createApiVersion(
      request?: protos.google.cloud.apigeeregistry.v1.ICreateApiVersionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiVersion,
          protos.google.cloud.apigeeregistry.v1.ICreateApiVersionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiVersion,
          protos.google.cloud.apigeeregistry.v1.ICreateApiVersionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiVersion,
        protos.google.cloud.apigeeregistry.v1.ICreateApiVersionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.createApiVersion(request, options, callback);
  }
/**
 * Used to modify a specified version.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.apigeeregistry.v1.ApiVersion} request.apiVersion
 *   Required. The version to update.
 *
 *   The `name` field is used to identify the version to update.
 *   Format: `projects/* /locations/* /apis/* /versions/*`
 * @param {google.protobuf.FieldMask} request.updateMask
 *   The list of fields to be updated. If omitted, all fields are updated that
 *   are set in the request message (fields set to default values are ignored).
 *   If an asterisk "*" is specified, all fields are updated, including fields
 *   that are unspecified/default in the request.
 * @param {boolean} request.allowMissing
 *   If set to true, and the version is not found, a new version will be
 *   created. In this situation, `update_mask` is ignored.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiVersion]{@link google.cloud.apigeeregistry.v1.ApiVersion}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.update_api_version.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_UpdateApiVersion_async
 */
  updateApiVersion(
      request?: protos.google.cloud.apigeeregistry.v1.IUpdateApiVersionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiVersion,
        protos.google.cloud.apigeeregistry.v1.IUpdateApiVersionRequest|undefined, {}|undefined
      ]>;
  updateApiVersion(
      request: protos.google.cloud.apigeeregistry.v1.IUpdateApiVersionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiVersion,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiVersionRequest|null|undefined,
          {}|null|undefined>): void;
  updateApiVersion(
      request: protos.google.cloud.apigeeregistry.v1.IUpdateApiVersionRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiVersion,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiVersionRequest|null|undefined,
          {}|null|undefined>): void;
  updateApiVersion(
      request?: protos.google.cloud.apigeeregistry.v1.IUpdateApiVersionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiVersion,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiVersionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiVersion,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiVersionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiVersion,
        protos.google.cloud.apigeeregistry.v1.IUpdateApiVersionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'api_version.name': request.apiVersion!.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.updateApiVersion(request, options, callback);
  }
/**
 * Removes a specified version and all of the resources that
 * it owns.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the version to delete.
 *   Format: `projects/* /locations/* /apis/* /versions/*`
 * @param {boolean} request.force
 *   If set to true, any child resources will also be deleted.
 *   (Otherwise, the request will only work if there are no child resources.)
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.delete_api_version.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_DeleteApiVersion_async
 */
  deleteApiVersion(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteApiVersionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.apigeeregistry.v1.IDeleteApiVersionRequest|undefined, {}|undefined
      ]>;
  deleteApiVersion(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteApiVersionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiVersionRequest|null|undefined,
          {}|null|undefined>): void;
  deleteApiVersion(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteApiVersionRequest,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiVersionRequest|null|undefined,
          {}|null|undefined>): void;
  deleteApiVersion(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteApiVersionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiVersionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiVersionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.apigeeregistry.v1.IDeleteApiVersionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.deleteApiVersion(request, options, callback);
  }
/**
 * Returns a specified spec.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the spec to retrieve.
 *   Format: `projects/* /locations/* /apis/* /versions/* /specs/*`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiSpec]{@link google.cloud.apigeeregistry.v1.ApiSpec}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.get_api_spec.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_GetApiSpec_async
 */
  getApiSpec(
      request?: protos.google.cloud.apigeeregistry.v1.IGetApiSpecRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec,
        protos.google.cloud.apigeeregistry.v1.IGetApiSpecRequest|undefined, {}|undefined
      ]>;
  getApiSpec(
      request: protos.google.cloud.apigeeregistry.v1.IGetApiSpecRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IGetApiSpecRequest|null|undefined,
          {}|null|undefined>): void;
  getApiSpec(
      request: protos.google.cloud.apigeeregistry.v1.IGetApiSpecRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IGetApiSpecRequest|null|undefined,
          {}|null|undefined>): void;
  getApiSpec(
      request?: protos.google.cloud.apigeeregistry.v1.IGetApiSpecRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IGetApiSpecRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IGetApiSpecRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec,
        protos.google.cloud.apigeeregistry.v1.IGetApiSpecRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.getApiSpec(request, options, callback);
  }
/**
 * Returns the contents of a specified spec.
 * If specs are stored with GZip compression, the default behavior
 * is to return the spec uncompressed (the mime_type response field
 * indicates the exact format returned).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the spec whose contents should be retrieved.
 *   Format: `projects/* /locations/* /apis/* /versions/* /specs/*`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [HttpBody]{@link google.api.HttpBody}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.get_api_spec_contents.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_GetApiSpecContents_async
 */
  getApiSpecContents(
      request?: protos.google.cloud.apigeeregistry.v1.IGetApiSpecContentsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.api.IHttpBody,
        protos.google.cloud.apigeeregistry.v1.IGetApiSpecContentsRequest|undefined, {}|undefined
      ]>;
  getApiSpecContents(
      request: protos.google.cloud.apigeeregistry.v1.IGetApiSpecContentsRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.api.IHttpBody,
          protos.google.cloud.apigeeregistry.v1.IGetApiSpecContentsRequest|null|undefined,
          {}|null|undefined>): void;
  getApiSpecContents(
      request: protos.google.cloud.apigeeregistry.v1.IGetApiSpecContentsRequest,
      callback: Callback<
          protos.google.api.IHttpBody,
          protos.google.cloud.apigeeregistry.v1.IGetApiSpecContentsRequest|null|undefined,
          {}|null|undefined>): void;
  getApiSpecContents(
      request?: protos.google.cloud.apigeeregistry.v1.IGetApiSpecContentsRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.api.IHttpBody,
          protos.google.cloud.apigeeregistry.v1.IGetApiSpecContentsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.api.IHttpBody,
          protos.google.cloud.apigeeregistry.v1.IGetApiSpecContentsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.api.IHttpBody,
        protos.google.cloud.apigeeregistry.v1.IGetApiSpecContentsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.getApiSpecContents(request, options, callback);
  }
/**
 * Creates a specified spec.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of specs.
 *   Format: `projects/* /locations/* /apis/* /versions/*`
 * @param {google.cloud.apigeeregistry.v1.ApiSpec} request.apiSpec
 *   Required. The spec to create.
 * @param {string} request.apiSpecId
 *   Required. The ID to use for the spec, which will become the final component of
 *   the spec's resource name.
 *
 *   This value should be 4-63 characters, and valid characters
 *   are /{@link 0-9|a-z}-/.
 *
 *   Following AIP-162, IDs must not have the form of a UUID.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiSpec]{@link google.cloud.apigeeregistry.v1.ApiSpec}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.create_api_spec.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_CreateApiSpec_async
 */
  createApiSpec(
      request?: protos.google.cloud.apigeeregistry.v1.ICreateApiSpecRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec,
        protos.google.cloud.apigeeregistry.v1.ICreateApiSpecRequest|undefined, {}|undefined
      ]>;
  createApiSpec(
      request: protos.google.cloud.apigeeregistry.v1.ICreateApiSpecRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.ICreateApiSpecRequest|null|undefined,
          {}|null|undefined>): void;
  createApiSpec(
      request: protos.google.cloud.apigeeregistry.v1.ICreateApiSpecRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.ICreateApiSpecRequest|null|undefined,
          {}|null|undefined>): void;
  createApiSpec(
      request?: protos.google.cloud.apigeeregistry.v1.ICreateApiSpecRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.ICreateApiSpecRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.ICreateApiSpecRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec,
        protos.google.cloud.apigeeregistry.v1.ICreateApiSpecRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.createApiSpec(request, options, callback);
  }
/**
 * Used to modify a specified spec.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.apigeeregistry.v1.ApiSpec} request.apiSpec
 *   Required. The spec to update.
 *
 *   The `name` field is used to identify the spec to update.
 *   Format: `projects/* /locations/* /apis/* /versions/* /specs/*`
 * @param {google.protobuf.FieldMask} request.updateMask
 *   The list of fields to be updated. If omitted, all fields are updated that
 *   are set in the request message (fields set to default values are ignored).
 *   If an asterisk "*" is specified, all fields are updated, including fields
 *   that are unspecified/default in the request.
 * @param {boolean} request.allowMissing
 *   If set to true, and the spec is not found, a new spec will be created.
 *   In this situation, `update_mask` is ignored.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiSpec]{@link google.cloud.apigeeregistry.v1.ApiSpec}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.update_api_spec.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_UpdateApiSpec_async
 */
  updateApiSpec(
      request?: protos.google.cloud.apigeeregistry.v1.IUpdateApiSpecRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec,
        protos.google.cloud.apigeeregistry.v1.IUpdateApiSpecRequest|undefined, {}|undefined
      ]>;
  updateApiSpec(
      request: protos.google.cloud.apigeeregistry.v1.IUpdateApiSpecRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiSpecRequest|null|undefined,
          {}|null|undefined>): void;
  updateApiSpec(
      request: protos.google.cloud.apigeeregistry.v1.IUpdateApiSpecRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiSpecRequest|null|undefined,
          {}|null|undefined>): void;
  updateApiSpec(
      request?: protos.google.cloud.apigeeregistry.v1.IUpdateApiSpecRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiSpecRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiSpecRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec,
        protos.google.cloud.apigeeregistry.v1.IUpdateApiSpecRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'api_spec.name': request.apiSpec!.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.updateApiSpec(request, options, callback);
  }
/**
 * Removes a specified spec, all revisions, and all child
 * resources (e.g., artifacts).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the spec to delete.
 *   Format: `projects/* /locations/* /apis/* /versions/* /specs/*`
 * @param {boolean} request.force
 *   If set to true, any child resources will also be deleted.
 *   (Otherwise, the request will only work if there are no child resources.)
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.delete_api_spec.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_DeleteApiSpec_async
 */
  deleteApiSpec(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRequest,
      options?: CallOptions):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRequest|undefined, {}|undefined
      ]>;
  deleteApiSpec(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRequest|null|undefined,
          {}|null|undefined>): void;
  deleteApiSpec(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRequest,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRequest|null|undefined,
          {}|null|undefined>): void;
  deleteApiSpec(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.deleteApiSpec(request, options, callback);
  }
/**
 * Adds a tag to a specified revision of a spec.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the spec to be tagged, including the revision ID.
 * @param {string} request.tag
 *   Required. The tag to apply.
 *   The tag should be at most 40 characters, and match `{@link a-z0-9-|a-z}{3,39}`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiSpec]{@link google.cloud.apigeeregistry.v1.ApiSpec}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.tag_api_spec_revision.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_TagApiSpecRevision_async
 */
  tagApiSpecRevision(
      request?: protos.google.cloud.apigeeregistry.v1.ITagApiSpecRevisionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec,
        protos.google.cloud.apigeeregistry.v1.ITagApiSpecRevisionRequest|undefined, {}|undefined
      ]>;
  tagApiSpecRevision(
      request: protos.google.cloud.apigeeregistry.v1.ITagApiSpecRevisionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.ITagApiSpecRevisionRequest|null|undefined,
          {}|null|undefined>): void;
  tagApiSpecRevision(
      request: protos.google.cloud.apigeeregistry.v1.ITagApiSpecRevisionRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.ITagApiSpecRevisionRequest|null|undefined,
          {}|null|undefined>): void;
  tagApiSpecRevision(
      request?: protos.google.cloud.apigeeregistry.v1.ITagApiSpecRevisionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.ITagApiSpecRevisionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.ITagApiSpecRevisionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec,
        protos.google.cloud.apigeeregistry.v1.ITagApiSpecRevisionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.tagApiSpecRevision(request, options, callback);
  }
/**
 * Sets the current revision to a specified prior revision.
 * Note that this creates a new revision with a new revision ID.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The spec being rolled back.
 * @param {string} request.revisionId
 *   Required. The revision ID to roll back to.
 *   It must be a revision of the same spec.
 *
 *     Example: `c7cfa2a8`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiSpec]{@link google.cloud.apigeeregistry.v1.ApiSpec}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.rollback_api_spec.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_RollbackApiSpec_async
 */
  rollbackApiSpec(
      request?: protos.google.cloud.apigeeregistry.v1.IRollbackApiSpecRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec,
        protos.google.cloud.apigeeregistry.v1.IRollbackApiSpecRequest|undefined, {}|undefined
      ]>;
  rollbackApiSpec(
      request: protos.google.cloud.apigeeregistry.v1.IRollbackApiSpecRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IRollbackApiSpecRequest|null|undefined,
          {}|null|undefined>): void;
  rollbackApiSpec(
      request: protos.google.cloud.apigeeregistry.v1.IRollbackApiSpecRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IRollbackApiSpecRequest|null|undefined,
          {}|null|undefined>): void;
  rollbackApiSpec(
      request?: protos.google.cloud.apigeeregistry.v1.IRollbackApiSpecRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IRollbackApiSpecRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IRollbackApiSpecRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec,
        protos.google.cloud.apigeeregistry.v1.IRollbackApiSpecRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.rollbackApiSpec(request, options, callback);
  }
/**
 * Deletes a revision of a spec.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the spec revision to be deleted,
 *   with a revision ID explicitly included.
 *
 *   Example:
 *   `projects/sample/locations/global/apis/petstore/versions/1.0.0/specs/openapi.yaml@c7cfa2a8`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiSpec]{@link google.cloud.apigeeregistry.v1.ApiSpec}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.delete_api_spec_revision.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_DeleteApiSpecRevision_async
 */
  deleteApiSpecRevision(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRevisionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec,
        protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRevisionRequest|undefined, {}|undefined
      ]>;
  deleteApiSpecRevision(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRevisionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRevisionRequest|null|undefined,
          {}|null|undefined>): void;
  deleteApiSpecRevision(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRevisionRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRevisionRequest|null|undefined,
          {}|null|undefined>): void;
  deleteApiSpecRevision(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRevisionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRevisionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiSpec,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRevisionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec,
        protos.google.cloud.apigeeregistry.v1.IDeleteApiSpecRevisionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.deleteApiSpecRevision(request, options, callback);
  }
/**
 * Returns a specified deployment.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the deployment to retrieve.
 *   Format: `projects/* /locations/* /apis/* /deployments/*`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiDeployment]{@link google.cloud.apigeeregistry.v1.ApiDeployment}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.get_api_deployment.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_GetApiDeployment_async
 */
  getApiDeployment(
      request?: protos.google.cloud.apigeeregistry.v1.IGetApiDeploymentRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment,
        protos.google.cloud.apigeeregistry.v1.IGetApiDeploymentRequest|undefined, {}|undefined
      ]>;
  getApiDeployment(
      request: protos.google.cloud.apigeeregistry.v1.IGetApiDeploymentRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IGetApiDeploymentRequest|null|undefined,
          {}|null|undefined>): void;
  getApiDeployment(
      request: protos.google.cloud.apigeeregistry.v1.IGetApiDeploymentRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IGetApiDeploymentRequest|null|undefined,
          {}|null|undefined>): void;
  getApiDeployment(
      request?: protos.google.cloud.apigeeregistry.v1.IGetApiDeploymentRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IGetApiDeploymentRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IGetApiDeploymentRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment,
        protos.google.cloud.apigeeregistry.v1.IGetApiDeploymentRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.getApiDeployment(request, options, callback);
  }
/**
 * Creates a specified deployment.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of deployments.
 *   Format: `projects/* /locations/* /apis/*`
 * @param {google.cloud.apigeeregistry.v1.ApiDeployment} request.apiDeployment
 *   Required. The deployment to create.
 * @param {string} request.apiDeploymentId
 *   Required. The ID to use for the deployment, which will become the final component of
 *   the deployment's resource name.
 *
 *   This value should be 4-63 characters, and valid characters
 *   are /{@link 0-9|a-z}-/.
 *
 *   Following AIP-162, IDs must not have the form of a UUID.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiDeployment]{@link google.cloud.apigeeregistry.v1.ApiDeployment}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.create_api_deployment.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_CreateApiDeployment_async
 */
  createApiDeployment(
      request?: protos.google.cloud.apigeeregistry.v1.ICreateApiDeploymentRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment,
        protos.google.cloud.apigeeregistry.v1.ICreateApiDeploymentRequest|undefined, {}|undefined
      ]>;
  createApiDeployment(
      request: protos.google.cloud.apigeeregistry.v1.ICreateApiDeploymentRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.ICreateApiDeploymentRequest|null|undefined,
          {}|null|undefined>): void;
  createApiDeployment(
      request: protos.google.cloud.apigeeregistry.v1.ICreateApiDeploymentRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.ICreateApiDeploymentRequest|null|undefined,
          {}|null|undefined>): void;
  createApiDeployment(
      request?: protos.google.cloud.apigeeregistry.v1.ICreateApiDeploymentRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.ICreateApiDeploymentRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.ICreateApiDeploymentRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment,
        protos.google.cloud.apigeeregistry.v1.ICreateApiDeploymentRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.createApiDeployment(request, options, callback);
  }
/**
 * Used to modify a specified deployment.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.apigeeregistry.v1.ApiDeployment} request.apiDeployment
 *   Required. The deployment to update.
 *
 *   The `name` field is used to identify the deployment to update.
 *   Format: `projects/* /locations/* /apis/* /deployments/*`
 * @param {google.protobuf.FieldMask} request.updateMask
 *   The list of fields to be updated. If omitted, all fields are updated that
 *   are set in the request message (fields set to default values are ignored).
 *   If an asterisk "*" is specified, all fields are updated, including fields
 *   that are unspecified/default in the request.
 * @param {boolean} request.allowMissing
 *   If set to true, and the deployment is not found, a new deployment will be
 *   created. In this situation, `update_mask` is ignored.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiDeployment]{@link google.cloud.apigeeregistry.v1.ApiDeployment}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.update_api_deployment.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_UpdateApiDeployment_async
 */
  updateApiDeployment(
      request?: protos.google.cloud.apigeeregistry.v1.IUpdateApiDeploymentRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment,
        protos.google.cloud.apigeeregistry.v1.IUpdateApiDeploymentRequest|undefined, {}|undefined
      ]>;
  updateApiDeployment(
      request: protos.google.cloud.apigeeregistry.v1.IUpdateApiDeploymentRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiDeploymentRequest|null|undefined,
          {}|null|undefined>): void;
  updateApiDeployment(
      request: protos.google.cloud.apigeeregistry.v1.IUpdateApiDeploymentRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiDeploymentRequest|null|undefined,
          {}|null|undefined>): void;
  updateApiDeployment(
      request?: protos.google.cloud.apigeeregistry.v1.IUpdateApiDeploymentRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiDeploymentRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IUpdateApiDeploymentRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment,
        protos.google.cloud.apigeeregistry.v1.IUpdateApiDeploymentRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'api_deployment.name': request.apiDeployment!.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.updateApiDeployment(request, options, callback);
  }
/**
 * Removes a specified deployment, all revisions, and all
 * child resources (e.g., artifacts).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the deployment to delete.
 *   Format: `projects/* /locations/* /apis/* /deployments/*`
 * @param {boolean} request.force
 *   If set to true, any child resources will also be deleted.
 *   (Otherwise, the request will only work if there are no child resources.)
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.delete_api_deployment.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_DeleteApiDeployment_async
 */
  deleteApiDeployment(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRequest,
      options?: CallOptions):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRequest|undefined, {}|undefined
      ]>;
  deleteApiDeployment(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRequest|null|undefined,
          {}|null|undefined>): void;
  deleteApiDeployment(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRequest,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRequest|null|undefined,
          {}|null|undefined>): void;
  deleteApiDeployment(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.deleteApiDeployment(request, options, callback);
  }
/**
 * Adds a tag to a specified revision of a
 * deployment.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the deployment to be tagged, including the revision ID.
 * @param {string} request.tag
 *   Required. The tag to apply.
 *   The tag should be at most 40 characters, and match `{@link a-z0-9-|a-z}{3,39}`.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiDeployment]{@link google.cloud.apigeeregistry.v1.ApiDeployment}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.tag_api_deployment_revision.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_TagApiDeploymentRevision_async
 */
  tagApiDeploymentRevision(
      request?: protos.google.cloud.apigeeregistry.v1.ITagApiDeploymentRevisionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment,
        protos.google.cloud.apigeeregistry.v1.ITagApiDeploymentRevisionRequest|undefined, {}|undefined
      ]>;
  tagApiDeploymentRevision(
      request: protos.google.cloud.apigeeregistry.v1.ITagApiDeploymentRevisionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.ITagApiDeploymentRevisionRequest|null|undefined,
          {}|null|undefined>): void;
  tagApiDeploymentRevision(
      request: protos.google.cloud.apigeeregistry.v1.ITagApiDeploymentRevisionRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.ITagApiDeploymentRevisionRequest|null|undefined,
          {}|null|undefined>): void;
  tagApiDeploymentRevision(
      request?: protos.google.cloud.apigeeregistry.v1.ITagApiDeploymentRevisionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.ITagApiDeploymentRevisionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.ITagApiDeploymentRevisionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment,
        protos.google.cloud.apigeeregistry.v1.ITagApiDeploymentRevisionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.tagApiDeploymentRevision(request, options, callback);
  }
/**
 * Sets the current revision to a specified prior
 * revision. Note that this creates a new revision with a new revision ID.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The deployment being rolled back.
 * @param {string} request.revisionId
 *   Required. The revision ID to roll back to.
 *   It must be a revision of the same deployment.
 *
 *     Example: `c7cfa2a8`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiDeployment]{@link google.cloud.apigeeregistry.v1.ApiDeployment}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.rollback_api_deployment.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_RollbackApiDeployment_async
 */
  rollbackApiDeployment(
      request?: protos.google.cloud.apigeeregistry.v1.IRollbackApiDeploymentRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment,
        protos.google.cloud.apigeeregistry.v1.IRollbackApiDeploymentRequest|undefined, {}|undefined
      ]>;
  rollbackApiDeployment(
      request: protos.google.cloud.apigeeregistry.v1.IRollbackApiDeploymentRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IRollbackApiDeploymentRequest|null|undefined,
          {}|null|undefined>): void;
  rollbackApiDeployment(
      request: protos.google.cloud.apigeeregistry.v1.IRollbackApiDeploymentRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IRollbackApiDeploymentRequest|null|undefined,
          {}|null|undefined>): void;
  rollbackApiDeployment(
      request?: protos.google.cloud.apigeeregistry.v1.IRollbackApiDeploymentRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IRollbackApiDeploymentRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IRollbackApiDeploymentRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment,
        protos.google.cloud.apigeeregistry.v1.IRollbackApiDeploymentRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.rollbackApiDeployment(request, options, callback);
  }
/**
 * Deletes a revision of a deployment.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the deployment revision to be deleted,
 *   with a revision ID explicitly included.
 *
 *   Example:
 *   `projects/sample/locations/global/apis/petstore/deployments/prod@c7cfa2a8`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [ApiDeployment]{@link google.cloud.apigeeregistry.v1.ApiDeployment}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.delete_api_deployment_revision.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_DeleteApiDeploymentRevision_async
 */
  deleteApiDeploymentRevision(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRevisionRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment,
        protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRevisionRequest|undefined, {}|undefined
      ]>;
  deleteApiDeploymentRevision(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRevisionRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRevisionRequest|null|undefined,
          {}|null|undefined>): void;
  deleteApiDeploymentRevision(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRevisionRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRevisionRequest|null|undefined,
          {}|null|undefined>): void;
  deleteApiDeploymentRevision(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRevisionRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRevisionRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IApiDeployment,
          protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRevisionRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment,
        protos.google.cloud.apigeeregistry.v1.IDeleteApiDeploymentRevisionRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.deleteApiDeploymentRevision(request, options, callback);
  }
/**
 * Returns a specified artifact.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the artifact to retrieve.
 *   Format: `{parent}/artifacts/*`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Artifact]{@link google.cloud.apigeeregistry.v1.Artifact}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.get_artifact.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_GetArtifact_async
 */
  getArtifact(
      request?: protos.google.cloud.apigeeregistry.v1.IGetArtifactRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IArtifact,
        protos.google.cloud.apigeeregistry.v1.IGetArtifactRequest|undefined, {}|undefined
      ]>;
  getArtifact(
      request: protos.google.cloud.apigeeregistry.v1.IGetArtifactRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IArtifact,
          protos.google.cloud.apigeeregistry.v1.IGetArtifactRequest|null|undefined,
          {}|null|undefined>): void;
  getArtifact(
      request: protos.google.cloud.apigeeregistry.v1.IGetArtifactRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IArtifact,
          protos.google.cloud.apigeeregistry.v1.IGetArtifactRequest|null|undefined,
          {}|null|undefined>): void;
  getArtifact(
      request?: protos.google.cloud.apigeeregistry.v1.IGetArtifactRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IArtifact,
          protos.google.cloud.apigeeregistry.v1.IGetArtifactRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IArtifact,
          protos.google.cloud.apigeeregistry.v1.IGetArtifactRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IArtifact,
        protos.google.cloud.apigeeregistry.v1.IGetArtifactRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.getArtifact(request, options, callback);
  }
/**
 * Returns the contents of a specified artifact.
 * If artifacts are stored with GZip compression, the default behavior
 * is to return the artifact uncompressed (the mime_type response field
 * indicates the exact format returned).
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the artifact whose contents should be retrieved.
 *   Format: `{parent}/artifacts/*`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [HttpBody]{@link google.api.HttpBody}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.get_artifact_contents.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_GetArtifactContents_async
 */
  getArtifactContents(
      request?: protos.google.cloud.apigeeregistry.v1.IGetArtifactContentsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.api.IHttpBody,
        protos.google.cloud.apigeeregistry.v1.IGetArtifactContentsRequest|undefined, {}|undefined
      ]>;
  getArtifactContents(
      request: protos.google.cloud.apigeeregistry.v1.IGetArtifactContentsRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.api.IHttpBody,
          protos.google.cloud.apigeeregistry.v1.IGetArtifactContentsRequest|null|undefined,
          {}|null|undefined>): void;
  getArtifactContents(
      request: protos.google.cloud.apigeeregistry.v1.IGetArtifactContentsRequest,
      callback: Callback<
          protos.google.api.IHttpBody,
          protos.google.cloud.apigeeregistry.v1.IGetArtifactContentsRequest|null|undefined,
          {}|null|undefined>): void;
  getArtifactContents(
      request?: protos.google.cloud.apigeeregistry.v1.IGetArtifactContentsRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.api.IHttpBody,
          protos.google.cloud.apigeeregistry.v1.IGetArtifactContentsRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.api.IHttpBody,
          protos.google.cloud.apigeeregistry.v1.IGetArtifactContentsRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.api.IHttpBody,
        protos.google.cloud.apigeeregistry.v1.IGetArtifactContentsRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.getArtifactContents(request, options, callback);
  }
/**
 * Creates a specified artifact.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of artifacts.
 *   Format: `{parent}`
 * @param {google.cloud.apigeeregistry.v1.Artifact} request.artifact
 *   Required. The artifact to create.
 * @param {string} request.artifactId
 *   Required. The ID to use for the artifact, which will become the final component of
 *   the artifact's resource name.
 *
 *   This value should be 4-63 characters, and valid characters
 *   are /{@link 0-9|a-z}-/.
 *
 *   Following AIP-162, IDs must not have the form of a UUID.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Artifact]{@link google.cloud.apigeeregistry.v1.Artifact}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.create_artifact.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_CreateArtifact_async
 */
  createArtifact(
      request?: protos.google.cloud.apigeeregistry.v1.ICreateArtifactRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IArtifact,
        protos.google.cloud.apigeeregistry.v1.ICreateArtifactRequest|undefined, {}|undefined
      ]>;
  createArtifact(
      request: protos.google.cloud.apigeeregistry.v1.ICreateArtifactRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IArtifact,
          protos.google.cloud.apigeeregistry.v1.ICreateArtifactRequest|null|undefined,
          {}|null|undefined>): void;
  createArtifact(
      request: protos.google.cloud.apigeeregistry.v1.ICreateArtifactRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IArtifact,
          protos.google.cloud.apigeeregistry.v1.ICreateArtifactRequest|null|undefined,
          {}|null|undefined>): void;
  createArtifact(
      request?: protos.google.cloud.apigeeregistry.v1.ICreateArtifactRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IArtifact,
          protos.google.cloud.apigeeregistry.v1.ICreateArtifactRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IArtifact,
          protos.google.cloud.apigeeregistry.v1.ICreateArtifactRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IArtifact,
        protos.google.cloud.apigeeregistry.v1.ICreateArtifactRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.createArtifact(request, options, callback);
  }
/**
 * Used to replace a specified artifact.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {google.cloud.apigeeregistry.v1.Artifact} request.artifact
 *   Required. The artifact to replace.
 *
 *   The `name` field is used to identify the artifact to replace.
 *   Format: `{parent}/artifacts/*`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Artifact]{@link google.cloud.apigeeregistry.v1.Artifact}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.replace_artifact.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_ReplaceArtifact_async
 */
  replaceArtifact(
      request?: protos.google.cloud.apigeeregistry.v1.IReplaceArtifactRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IArtifact,
        protos.google.cloud.apigeeregistry.v1.IReplaceArtifactRequest|undefined, {}|undefined
      ]>;
  replaceArtifact(
      request: protos.google.cloud.apigeeregistry.v1.IReplaceArtifactRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IArtifact,
          protos.google.cloud.apigeeregistry.v1.IReplaceArtifactRequest|null|undefined,
          {}|null|undefined>): void;
  replaceArtifact(
      request: protos.google.cloud.apigeeregistry.v1.IReplaceArtifactRequest,
      callback: Callback<
          protos.google.cloud.apigeeregistry.v1.IArtifact,
          protos.google.cloud.apigeeregistry.v1.IReplaceArtifactRequest|null|undefined,
          {}|null|undefined>): void;
  replaceArtifact(
      request?: protos.google.cloud.apigeeregistry.v1.IReplaceArtifactRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.cloud.apigeeregistry.v1.IArtifact,
          protos.google.cloud.apigeeregistry.v1.IReplaceArtifactRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.cloud.apigeeregistry.v1.IArtifact,
          protos.google.cloud.apigeeregistry.v1.IReplaceArtifactRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IArtifact,
        protos.google.cloud.apigeeregistry.v1.IReplaceArtifactRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'artifact.name': request.artifact!.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.replaceArtifact(request, options, callback);
  }
/**
 * Removes a specified artifact.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the artifact to delete.
 *   Format: `{parent}/artifacts/*`
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Empty]{@link google.protobuf.Empty}.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.delete_artifact.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_DeleteArtifact_async
 */
  deleteArtifact(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteArtifactRequest,
      options?: CallOptions):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.apigeeregistry.v1.IDeleteArtifactRequest|undefined, {}|undefined
      ]>;
  deleteArtifact(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteArtifactRequest,
      options: CallOptions,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteArtifactRequest|null|undefined,
          {}|null|undefined>): void;
  deleteArtifact(
      request: protos.google.cloud.apigeeregistry.v1.IDeleteArtifactRequest,
      callback: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteArtifactRequest|null|undefined,
          {}|null|undefined>): void;
  deleteArtifact(
      request?: protos.google.cloud.apigeeregistry.v1.IDeleteArtifactRequest,
      optionsOrCallback?: CallOptions|Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteArtifactRequest|null|undefined,
          {}|null|undefined>,
      callback?: Callback<
          protos.google.protobuf.IEmpty,
          protos.google.cloud.apigeeregistry.v1.IDeleteArtifactRequest|null|undefined,
          {}|null|undefined>):
      Promise<[
        protos.google.protobuf.IEmpty,
        protos.google.cloud.apigeeregistry.v1.IDeleteArtifactRequest|undefined, {}|undefined
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.deleteArtifact(request, options, callback);
  }

 /**
 * Returns matching APIs.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of APIs.
 *   Format: `projects/* /locations/*`
 * @param {number} request.pageSize
 *   The maximum number of APIs to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListApis` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListApis` must match
 *   the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [Api]{@link google.cloud.apigeeregistry.v1.Api}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listApisAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listApis(
      request?: protos.google.cloud.apigeeregistry.v1.IListApisRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApi[],
        protos.google.cloud.apigeeregistry.v1.IListApisRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListApisResponse
      ]>;
  listApis(
      request: protos.google.cloud.apigeeregistry.v1.IListApisRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApisRequest,
          protos.google.cloud.apigeeregistry.v1.IListApisResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApi>): void;
  listApis(
      request: protos.google.cloud.apigeeregistry.v1.IListApisRequest,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApisRequest,
          protos.google.cloud.apigeeregistry.v1.IListApisResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApi>): void;
  listApis(
      request?: protos.google.cloud.apigeeregistry.v1.IListApisRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApisRequest,
          protos.google.cloud.apigeeregistry.v1.IListApisResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApi>,
      callback?: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApisRequest,
          protos.google.cloud.apigeeregistry.v1.IListApisResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApi>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApi[],
        protos.google.cloud.apigeeregistry.v1.IListApisRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListApisResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listApis(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of APIs.
 *   Format: `projects/* /locations/*`
 * @param {number} request.pageSize
 *   The maximum number of APIs to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListApis` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListApis` must match
 *   the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [Api]{@link google.cloud.apigeeregistry.v1.Api} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listApisAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listApisStream(
      request?: protos.google.cloud.apigeeregistry.v1.IListApisRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listApis'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listApis.createStream(
      this.innerApiCalls.listApis as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listApis`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of APIs.
 *   Format: `projects/* /locations/*`
 * @param {number} request.pageSize
 *   The maximum number of APIs to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListApis` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListApis` must match
 *   the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [Api]{@link google.cloud.apigeeregistry.v1.Api}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.list_apis.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_ListApis_async
 */
  listApisAsync(
      request?: protos.google.cloud.apigeeregistry.v1.IListApisRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.apigeeregistry.v1.IApi>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listApis'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listApis.asyncIterate(
      this.innerApiCalls['listApis'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.apigeeregistry.v1.IApi>;
  }
 /**
 * Returns matching versions.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of versions.
 *   Format: `projects/* /locations/* /apis/*`
 * @param {number} request.pageSize
 *   The maximum number of versions to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListApiVersions` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListApiVersions` must
 *   match the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [ApiVersion]{@link google.cloud.apigeeregistry.v1.ApiVersion}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listApiVersionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listApiVersions(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiVersionsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiVersion[],
        protos.google.cloud.apigeeregistry.v1.IListApiVersionsRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListApiVersionsResponse
      ]>;
  listApiVersions(
      request: protos.google.cloud.apigeeregistry.v1.IListApiVersionsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiVersionsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiVersionsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiVersion>): void;
  listApiVersions(
      request: protos.google.cloud.apigeeregistry.v1.IListApiVersionsRequest,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiVersionsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiVersionsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiVersion>): void;
  listApiVersions(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiVersionsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiVersionsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiVersionsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiVersion>,
      callback?: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiVersionsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiVersionsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiVersion>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiVersion[],
        protos.google.cloud.apigeeregistry.v1.IListApiVersionsRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListApiVersionsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listApiVersions(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of versions.
 *   Format: `projects/* /locations/* /apis/*`
 * @param {number} request.pageSize
 *   The maximum number of versions to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListApiVersions` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListApiVersions` must
 *   match the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [ApiVersion]{@link google.cloud.apigeeregistry.v1.ApiVersion} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listApiVersionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listApiVersionsStream(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiVersionsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listApiVersions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listApiVersions.createStream(
      this.innerApiCalls.listApiVersions as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listApiVersions`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of versions.
 *   Format: `projects/* /locations/* /apis/*`
 * @param {number} request.pageSize
 *   The maximum number of versions to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListApiVersions` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListApiVersions` must
 *   match the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [ApiVersion]{@link google.cloud.apigeeregistry.v1.ApiVersion}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.list_api_versions.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_ListApiVersions_async
 */
  listApiVersionsAsync(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiVersionsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.apigeeregistry.v1.IApiVersion>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listApiVersions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listApiVersions.asyncIterate(
      this.innerApiCalls['listApiVersions'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.apigeeregistry.v1.IApiVersion>;
  }
 /**
 * Returns matching specs.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of specs.
 *   Format: `projects/* /locations/* /apis/* /versions/*`
 * @param {number} request.pageSize
 *   The maximum number of specs to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListApiSpecs` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListApiSpecs` must match
 *   the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields except contents.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [ApiSpec]{@link google.cloud.apigeeregistry.v1.ApiSpec}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listApiSpecsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listApiSpecs(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiSpecsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec[],
        protos.google.cloud.apigeeregistry.v1.IListApiSpecsRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListApiSpecsResponse
      ]>;
  listApiSpecs(
      request: protos.google.cloud.apigeeregistry.v1.IListApiSpecsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiSpecsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiSpecsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiSpec>): void;
  listApiSpecs(
      request: protos.google.cloud.apigeeregistry.v1.IListApiSpecsRequest,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiSpecsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiSpecsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiSpec>): void;
  listApiSpecs(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiSpecsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiSpecsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiSpecsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiSpec>,
      callback?: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiSpecsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiSpecsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiSpec>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec[],
        protos.google.cloud.apigeeregistry.v1.IListApiSpecsRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListApiSpecsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listApiSpecs(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of specs.
 *   Format: `projects/* /locations/* /apis/* /versions/*`
 * @param {number} request.pageSize
 *   The maximum number of specs to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListApiSpecs` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListApiSpecs` must match
 *   the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields except contents.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [ApiSpec]{@link google.cloud.apigeeregistry.v1.ApiSpec} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listApiSpecsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listApiSpecsStream(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiSpecsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listApiSpecs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listApiSpecs.createStream(
      this.innerApiCalls.listApiSpecs as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listApiSpecs`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of specs.
 *   Format: `projects/* /locations/* /apis/* /versions/*`
 * @param {number} request.pageSize
 *   The maximum number of specs to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListApiSpecs` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListApiSpecs` must match
 *   the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields except contents.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [ApiSpec]{@link google.cloud.apigeeregistry.v1.ApiSpec}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.list_api_specs.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_ListApiSpecs_async
 */
  listApiSpecsAsync(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiSpecsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.apigeeregistry.v1.IApiSpec>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listApiSpecs'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listApiSpecs.asyncIterate(
      this.innerApiCalls['listApiSpecs'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.apigeeregistry.v1.IApiSpec>;
  }
 /**
 * Lists all revisions of a spec.
 * Revisions are returned in descending order of revision creation time.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the spec to list revisions for.
 * @param {number} request.pageSize
 *   The maximum number of revisions to return per page.
 * @param {string} request.pageToken
 *   The page token, received from a previous ListApiSpecRevisions call.
 *   Provide this to retrieve the subsequent page.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [ApiSpec]{@link google.cloud.apigeeregistry.v1.ApiSpec}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listApiSpecRevisionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listApiSpecRevisions(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec[],
        protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsResponse
      ]>;
  listApiSpecRevisions(
      request: protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiSpec>): void;
  listApiSpecRevisions(
      request: protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsRequest,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiSpec>): void;
  listApiSpecRevisions(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiSpec>,
      callback?: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiSpec>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiSpec[],
        protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listApiSpecRevisions(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the spec to list revisions for.
 * @param {number} request.pageSize
 *   The maximum number of revisions to return per page.
 * @param {string} request.pageToken
 *   The page token, received from a previous ListApiSpecRevisions call.
 *   Provide this to retrieve the subsequent page.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [ApiSpec]{@link google.cloud.apigeeregistry.v1.ApiSpec} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listApiSpecRevisionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listApiSpecRevisionsStream(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    const defaultCallSettings = this._defaults['listApiSpecRevisions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listApiSpecRevisions.createStream(
      this.innerApiCalls.listApiSpecRevisions as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listApiSpecRevisions`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the spec to list revisions for.
 * @param {number} request.pageSize
 *   The maximum number of revisions to return per page.
 * @param {string} request.pageToken
 *   The page token, received from a previous ListApiSpecRevisions call.
 *   Provide this to retrieve the subsequent page.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [ApiSpec]{@link google.cloud.apigeeregistry.v1.ApiSpec}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.list_api_spec_revisions.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_ListApiSpecRevisions_async
 */
  listApiSpecRevisionsAsync(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiSpecRevisionsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.apigeeregistry.v1.IApiSpec>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    const defaultCallSettings = this._defaults['listApiSpecRevisions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listApiSpecRevisions.asyncIterate(
      this.innerApiCalls['listApiSpecRevisions'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.apigeeregistry.v1.IApiSpec>;
  }
 /**
 * Returns matching deployments.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of deployments.
 *   Format: `projects/* /locations/* /apis/*`
 * @param {number} request.pageSize
 *   The maximum number of deployments to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListApiDeployments` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListApiDeployments` must
 *   match the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [ApiDeployment]{@link google.cloud.apigeeregistry.v1.ApiDeployment}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listApiDeploymentsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listApiDeployments(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment[],
        protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsResponse
      ]>;
  listApiDeployments(
      request: protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiDeployment>): void;
  listApiDeployments(
      request: protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsRequest,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiDeployment>): void;
  listApiDeployments(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiDeployment>,
      callback?: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiDeployment>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment[],
        protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listApiDeployments(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of deployments.
 *   Format: `projects/* /locations/* /apis/*`
 * @param {number} request.pageSize
 *   The maximum number of deployments to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListApiDeployments` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListApiDeployments` must
 *   match the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [ApiDeployment]{@link google.cloud.apigeeregistry.v1.ApiDeployment} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listApiDeploymentsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listApiDeploymentsStream(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listApiDeployments'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listApiDeployments.createStream(
      this.innerApiCalls.listApiDeployments as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listApiDeployments`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of deployments.
 *   Format: `projects/* /locations/* /apis/*`
 * @param {number} request.pageSize
 *   The maximum number of deployments to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListApiDeployments` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListApiDeployments` must
 *   match the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [ApiDeployment]{@link google.cloud.apigeeregistry.v1.ApiDeployment}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.list_api_deployments.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_ListApiDeployments_async
 */
  listApiDeploymentsAsync(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiDeploymentsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.apigeeregistry.v1.IApiDeployment>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listApiDeployments'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listApiDeployments.asyncIterate(
      this.innerApiCalls['listApiDeployments'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.apigeeregistry.v1.IApiDeployment>;
  }
 /**
 * Lists all revisions of a deployment.
 * Revisions are returned in descending order of revision creation time.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the deployment to list revisions for.
 * @param {number} request.pageSize
 *   The maximum number of revisions to return per page.
 * @param {string} request.pageToken
 *   The page token, received from a previous ListApiDeploymentRevisions call.
 *   Provide this to retrieve the subsequent page.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [ApiDeployment]{@link google.cloud.apigeeregistry.v1.ApiDeployment}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listApiDeploymentRevisionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listApiDeploymentRevisions(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment[],
        protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsResponse
      ]>;
  listApiDeploymentRevisions(
      request: protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiDeployment>): void;
  listApiDeploymentRevisions(
      request: protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsRequest,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiDeployment>): void;
  listApiDeploymentRevisions(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiDeployment>,
      callback?: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsRequest,
          protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IApiDeployment>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IApiDeployment[],
        protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listApiDeploymentRevisions(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the deployment to list revisions for.
 * @param {number} request.pageSize
 *   The maximum number of revisions to return per page.
 * @param {string} request.pageToken
 *   The page token, received from a previous ListApiDeploymentRevisions call.
 *   Provide this to retrieve the subsequent page.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [ApiDeployment]{@link google.cloud.apigeeregistry.v1.ApiDeployment} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listApiDeploymentRevisionsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listApiDeploymentRevisionsStream(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    const defaultCallSettings = this._defaults['listApiDeploymentRevisions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listApiDeploymentRevisions.createStream(
      this.innerApiCalls.listApiDeploymentRevisions as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listApiDeploymentRevisions`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.name
 *   Required. The name of the deployment to list revisions for.
 * @param {number} request.pageSize
 *   The maximum number of revisions to return per page.
 * @param {string} request.pageToken
 *   The page token, received from a previous ListApiDeploymentRevisions call.
 *   Provide this to retrieve the subsequent page.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [ApiDeployment]{@link google.cloud.apigeeregistry.v1.ApiDeployment}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.list_api_deployment_revisions.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_ListApiDeploymentRevisions_async
 */
  listApiDeploymentRevisionsAsync(
      request?: protos.google.cloud.apigeeregistry.v1.IListApiDeploymentRevisionsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.apigeeregistry.v1.IApiDeployment>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'name': request.name ?? '',
    });
    const defaultCallSettings = this._defaults['listApiDeploymentRevisions'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listApiDeploymentRevisions.asyncIterate(
      this.innerApiCalls['listApiDeploymentRevisions'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.apigeeregistry.v1.IApiDeployment>;
  }
 /**
 * Returns matching artifacts.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of artifacts.
 *   Format: `{parent}`
 * @param {number} request.pageSize
 *   The maximum number of artifacts to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListArtifacts` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListArtifacts` must
 *   match the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields except contents.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is Array of [Artifact]{@link google.cloud.apigeeregistry.v1.Artifact}.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed and will merge results from all the pages into this array.
 *   Note that it can affect your quota.
 *   We recommend using `listArtifactsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listArtifacts(
      request?: protos.google.cloud.apigeeregistry.v1.IListArtifactsRequest,
      options?: CallOptions):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IArtifact[],
        protos.google.cloud.apigeeregistry.v1.IListArtifactsRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListArtifactsResponse
      ]>;
  listArtifacts(
      request: protos.google.cloud.apigeeregistry.v1.IListArtifactsRequest,
      options: CallOptions,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListArtifactsRequest,
          protos.google.cloud.apigeeregistry.v1.IListArtifactsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IArtifact>): void;
  listArtifacts(
      request: protos.google.cloud.apigeeregistry.v1.IListArtifactsRequest,
      callback: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListArtifactsRequest,
          protos.google.cloud.apigeeregistry.v1.IListArtifactsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IArtifact>): void;
  listArtifacts(
      request?: protos.google.cloud.apigeeregistry.v1.IListArtifactsRequest,
      optionsOrCallback?: CallOptions|PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListArtifactsRequest,
          protos.google.cloud.apigeeregistry.v1.IListArtifactsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IArtifact>,
      callback?: PaginationCallback<
          protos.google.cloud.apigeeregistry.v1.IListArtifactsRequest,
          protos.google.cloud.apigeeregistry.v1.IListArtifactsResponse|null|undefined,
          protos.google.cloud.apigeeregistry.v1.IArtifact>):
      Promise<[
        protos.google.cloud.apigeeregistry.v1.IArtifact[],
        protos.google.cloud.apigeeregistry.v1.IListArtifactsRequest|null,
        protos.google.cloud.apigeeregistry.v1.IListArtifactsResponse
      ]>|void {
    request = request || {};
    let options: CallOptions;
    if (typeof optionsOrCallback === 'function' && callback === undefined) {
      callback = optionsOrCallback;
      options = {};
    }
    else {
      options = optionsOrCallback as CallOptions;
    }
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    this.initialize();
    return this.innerApiCalls.listArtifacts(request, options, callback);
  }

/**
 * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of artifacts.
 *   Format: `{parent}`
 * @param {number} request.pageSize
 *   The maximum number of artifacts to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListArtifacts` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListArtifacts` must
 *   match the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields except contents.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Stream}
 *   An object stream which emits an object representing [Artifact]{@link google.cloud.apigeeregistry.v1.Artifact} on 'data' event.
 *   The client library will perform auto-pagination by default: it will call the API as many
 *   times as needed. Note that it can affect your quota.
 *   We recommend using `listArtifactsAsync()`
 *   method described below for async iteration which you can stop as needed.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 */
  listArtifactsStream(
      request?: protos.google.cloud.apigeeregistry.v1.IListArtifactsRequest,
      options?: CallOptions):
    Transform{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listArtifacts'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listArtifacts.createStream(
      this.innerApiCalls.listArtifacts as GaxCall,
      request,
      callSettings
    );
  }

/**
 * Equivalent to `listArtifacts`, but returns an iterable object.
 *
 * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.parent
 *   Required. The parent, which owns this collection of artifacts.
 *   Format: `{parent}`
 * @param {number} request.pageSize
 *   The maximum number of artifacts to return.
 *   The service may return fewer than this value.
 *   If unspecified, at most 50 values will be returned.
 *   The maximum is 1000; values above 1000 will be coerced to 1000.
 * @param {string} request.pageToken
 *   A page token, received from a previous `ListArtifacts` call.
 *   Provide this to retrieve the subsequent page.
 *
 *   When paginating, all other parameters provided to `ListArtifacts` must
 *   match the call that provided the page token.
 * @param {string} request.filter
 *   An expression that can be used to filter the list. Filters use the Common
 *   Expression Language and can refer to all message fields except contents.
 * @param {object} [options]
 *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
 * @returns {Object}
 *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
 *   When you iterate the returned iterable, each element will be an object representing
 *   [Artifact]{@link google.cloud.apigeeregistry.v1.Artifact}. The API will be called under the hood as needed, once per the page,
 *   so you can stop the iteration when you don't need more results.
 *   Please see the
 *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
 *   for more details and examples.
 * @example <caption>include:samples/generated/v1/registry.list_artifacts.js</caption>
 * region_tag:apigeeregistry_v1_generated_Registry_ListArtifacts_async
 */
  listArtifactsAsync(
      request?: protos.google.cloud.apigeeregistry.v1.IListArtifactsRequest,
      options?: CallOptions):
    AsyncIterable<protos.google.cloud.apigeeregistry.v1.IArtifact>{
    request = request || {};
    options = options || {};
    options.otherArgs = options.otherArgs || {};
    options.otherArgs.headers = options.otherArgs.headers || {};
    options.otherArgs.headers[
      'x-goog-request-params'
    ] = this._gaxModule.routingHeader.fromParams({
      'parent': request.parent ?? '',
    });
    const defaultCallSettings = this._defaults['listArtifacts'];
    const callSettings = defaultCallSettings.merge(options);
    this.initialize();
    return this.descriptors.page.listArtifacts.asyncIterate(
      this.innerApiCalls['listArtifacts'] as GaxCall,
      request as {},
      callSettings
    ) as AsyncIterable<protos.google.cloud.apigeeregistry.v1.IArtifact>;
  }
/**
 * Gets the access control policy for a resource. Returns an empty policy
 * if the resource exists and does not have a policy set.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.resource
 *   REQUIRED: The resource for which the policy is being requested.
 *   See the operation documentation for the appropriate value for this field.
 * @param {Object} [request.options]
 *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
 *   `GetIamPolicy`. This field is only used by Cloud IAM.
 *
 *   This object should have the same structure as [GetPolicyOptions]{@link google.iam.v1.GetPolicyOptions}
 * @param {Object} [options]
 *   Optional parameters. You can override the default settings for this call, e.g, timeout,
 *   retries, paginations, etc. See [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html} for the details.
 * @param {function(?Error, ?Object)} [callback]
 *   The function which will be called with the result of the API call.
 *
 *   The second parameter to the callback is an object representing [Policy]{@link google.iam.v1.Policy}.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [Policy]{@link google.iam.v1.Policy}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  getIamPolicy(
    request: IamProtos.google.iam.v1.GetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.GetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ):Promise<IamProtos.google.iam.v1.Policy> {
    return this.iamClient.getIamPolicy(request, options, callback);
  }

/**
 * Returns permissions that a caller has on the specified resource. If the
 * resource does not exist, this will return an empty set of
 * permissions, not a NOT_FOUND error.
 *
 * Note: This operation is designed to be used for building
 * permission-aware UIs and command-line tools, not for authorization
 * checking. This operation may "fail open" without warning.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.resource
 *   REQUIRED: The resource for which the policy detail is being requested.
 *   See the operation documentation for the appropriate value for this field.
 * @param {string[]} request.permissions
 *   The set of permissions to check for the `resource`. Permissions with
 *   wildcards (such as '*' or 'storage.*') are not allowed. For more
 *   information see
 *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 * @param {Object} [options]
 *   Optional parameters. You can override the default settings for this call, e.g, timeout,
 *   retries, paginations, etc. See [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html} for the details.
 * @param {function(?Error, ?Object)} [callback]
 *   The function which will be called with the result of the API call.
 *
 *   The second parameter to the callback is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 */
  setIamPolicy(
    request: IamProtos.google.iam.v1.SetIamPolicyRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.Policy,
          IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.Policy,
      IamProtos.google.iam.v1.SetIamPolicyRequest | null | undefined,
      {} | null | undefined
    >
  ):Promise<IamProtos.google.iam.v1.Policy> {
    return this.iamClient.setIamPolicy(request, options, callback);
  }

/**
 * Returns permissions that a caller has on the specified resource. If the
 * resource does not exist, this will return an empty set of
 * permissions, not a NOT_FOUND error.
 *
 * Note: This operation is designed to be used for building
 * permission-aware UIs and command-line tools, not for authorization
 * checking. This operation may "fail open" without warning.
 *
 * @param {Object} request
 *   The request object that will be sent.
 * @param {string} request.resource
 *   REQUIRED: The resource for which the policy detail is being requested.
 *   See the operation documentation for the appropriate value for this field.
 * @param {string[]} request.permissions
 *   The set of permissions to check for the `resource`. Permissions with
 *   wildcards (such as '*' or 'storage.*') are not allowed. For more
 *   information see
 *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 * @param {Object} [options]
 *   Optional parameters. You can override the default settings for this call, e.g, timeout,
 *   retries, paginations, etc. See [gax.CallOptions]{@link https://googleapis.github.io/gax-nodejs/interfaces/CallOptions.html} for the details.
 * @param {function(?Error, ?Object)} [callback]
 *   The function which will be called with the result of the API call.
 *
 *   The second parameter to the callback is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
 * @returns {Promise} - The promise which resolves to an array.
 *   The first element of the array is an object representing [TestIamPermissionsResponse]{@link google.iam.v1.TestIamPermissionsResponse}.
 *   The promise has a method named "cancel" which cancels the ongoing API call.
 *
 */
  testIamPermissions(
    request: IamProtos.google.iam.v1.TestIamPermissionsRequest,
    options?:
      | gax.CallOptions
      | Callback<
          IamProtos.google.iam.v1.TestIamPermissionsResponse,
          IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      IamProtos.google.iam.v1.TestIamPermissionsResponse,
      IamProtos.google.iam.v1.TestIamPermissionsRequest | null | undefined,
      {} | null | undefined
    >
  ):Promise<IamProtos.google.iam.v1.TestIamPermissionsResponse> {
    return this.iamClient.testIamPermissions(request, options, callback);
  }

/**
   * Gets information about a location.
   *
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   Resource name for the location.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Promise} - The promise which resolves to an array.
   *   The first element of the array is an object representing [Location]{@link google.cloud.location.Location}.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods)
   *   for more details and examples.
   * @example
   * ```
   * const [response] = await client.getLocation(request);
   * ```
   */
  getLocation(
    request: LocationProtos.google.cloud.location.IGetLocationRequest,
    options?:
      | gax.CallOptions
      | Callback<
          LocationProtos.google.cloud.location.ILocation,
          | LocationProtos.google.cloud.location.IGetLocationRequest
          | null
          | undefined,
          {} | null | undefined
        >,
    callback?: Callback<
      LocationProtos.google.cloud.location.ILocation,
      | LocationProtos.google.cloud.location.IGetLocationRequest
      | null
      | undefined,
      {} | null | undefined
    >
  ): Promise<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.getLocation(request, options, callback);
  }

/**
   * Lists information about the supported locations for this service. Returns an iterable object.
   *
   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
   * @param {Object} request
   *   The request object that will be sent.
   * @param {string} request.name
   *   The resource that owns the locations collection, if applicable.
   * @param {string} request.filter
   *   The standard list filter.
   * @param {number} request.pageSize
   *   The standard list page size.
   * @param {string} request.pageToken
   *   The standard list page token.
   * @param {object} [options]
   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
   * @returns {Object}
   *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
   *   When you iterate the returned iterable, each element will be an object representing
   *   [Location]{@link google.cloud.location.Location}. The API will be called under the hood as needed, once per the page,
   *   so you can stop the iteration when you don't need more results.
   *   Please see the
   *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
   *   for more details and examples.
   * @example
   * ```
   * const iterable = client.listLocationsAsync(request);
   * for await (const response of iterable) {
   *   // process response
   * }
   * ```
   */
  listLocationsAsync(
    request: LocationProtos.google.cloud.location.IListLocationsRequest,
    options?: CallOptions
  ): AsyncIterable<LocationProtos.google.cloud.location.ILocation> {
    return this.locationsClient.listLocationsAsync(request, options);
  }

  // --------------------
  // -- Path templates --
  // --------------------

  /**
   * Return a fully-qualified api resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} api
   * @returns {string} Resource name string.
   */
  apiPath(project:string,location:string,api:string) {
    return this.pathTemplates.apiPathTemplate.render({
      project: project,
      location: location,
      api: api,
    });
  }

  /**
   * Parse the project from Api resource.
   *
   * @param {string} apiName
   *   A fully-qualified path representing Api resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromApiName(apiName: string) {
    return this.pathTemplates.apiPathTemplate.match(apiName).project;
  }

  /**
   * Parse the location from Api resource.
   *
   * @param {string} apiName
   *   A fully-qualified path representing Api resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromApiName(apiName: string) {
    return this.pathTemplates.apiPathTemplate.match(apiName).location;
  }

  /**
   * Parse the api from Api resource.
   *
   * @param {string} apiName
   *   A fully-qualified path representing Api resource.
   * @returns {string} A string representing the api.
   */
  matchApiFromApiName(apiName: string) {
    return this.pathTemplates.apiPathTemplate.match(apiName).api;
  }

  /**
   * Return a fully-qualified apiDeployment resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} api
   * @param {string} deployment
   * @returns {string} Resource name string.
   */
  apiDeploymentPath(project:string,location:string,api:string,deployment:string) {
    return this.pathTemplates.apiDeploymentPathTemplate.render({
      project: project,
      location: location,
      api: api,
      deployment: deployment,
    });
  }

  /**
   * Parse the project from ApiDeployment resource.
   *
   * @param {string} apiDeploymentName
   *   A fully-qualified path representing ApiDeployment resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromApiDeploymentName(apiDeploymentName: string) {
    return this.pathTemplates.apiDeploymentPathTemplate.match(apiDeploymentName).project;
  }

  /**
   * Parse the location from ApiDeployment resource.
   *
   * @param {string} apiDeploymentName
   *   A fully-qualified path representing ApiDeployment resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromApiDeploymentName(apiDeploymentName: string) {
    return this.pathTemplates.apiDeploymentPathTemplate.match(apiDeploymentName).location;
  }

  /**
   * Parse the api from ApiDeployment resource.
   *
   * @param {string} apiDeploymentName
   *   A fully-qualified path representing ApiDeployment resource.
   * @returns {string} A string representing the api.
   */
  matchApiFromApiDeploymentName(apiDeploymentName: string) {
    return this.pathTemplates.apiDeploymentPathTemplate.match(apiDeploymentName).api;
  }

  /**
   * Parse the deployment from ApiDeployment resource.
   *
   * @param {string} apiDeploymentName
   *   A fully-qualified path representing ApiDeployment resource.
   * @returns {string} A string representing the deployment.
   */
  matchDeploymentFromApiDeploymentName(apiDeploymentName: string) {
    return this.pathTemplates.apiDeploymentPathTemplate.match(apiDeploymentName).deployment;
  }

  /**
   * Return a fully-qualified apiSpec resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} api
   * @param {string} version
   * @param {string} spec
   * @returns {string} Resource name string.
   */
  apiSpecPath(project:string,location:string,api:string,version:string,spec:string) {
    return this.pathTemplates.apiSpecPathTemplate.render({
      project: project,
      location: location,
      api: api,
      version: version,
      spec: spec,
    });
  }

  /**
   * Parse the project from ApiSpec resource.
   *
   * @param {string} apiSpecName
   *   A fully-qualified path representing ApiSpec resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromApiSpecName(apiSpecName: string) {
    return this.pathTemplates.apiSpecPathTemplate.match(apiSpecName).project;
  }

  /**
   * Parse the location from ApiSpec resource.
   *
   * @param {string} apiSpecName
   *   A fully-qualified path representing ApiSpec resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromApiSpecName(apiSpecName: string) {
    return this.pathTemplates.apiSpecPathTemplate.match(apiSpecName).location;
  }

  /**
   * Parse the api from ApiSpec resource.
   *
   * @param {string} apiSpecName
   *   A fully-qualified path representing ApiSpec resource.
   * @returns {string} A string representing the api.
   */
  matchApiFromApiSpecName(apiSpecName: string) {
    return this.pathTemplates.apiSpecPathTemplate.match(apiSpecName).api;
  }

  /**
   * Parse the version from ApiSpec resource.
   *
   * @param {string} apiSpecName
   *   A fully-qualified path representing ApiSpec resource.
   * @returns {string} A string representing the version.
   */
  matchVersionFromApiSpecName(apiSpecName: string) {
    return this.pathTemplates.apiSpecPathTemplate.match(apiSpecName).version;
  }

  /**
   * Parse the spec from ApiSpec resource.
   *
   * @param {string} apiSpecName
   *   A fully-qualified path representing ApiSpec resource.
   * @returns {string} A string representing the spec.
   */
  matchSpecFromApiSpecName(apiSpecName: string) {
    return this.pathTemplates.apiSpecPathTemplate.match(apiSpecName).spec;
  }

  /**
   * Return a fully-qualified apiVersion resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} api
   * @param {string} version
   * @returns {string} Resource name string.
   */
  apiVersionPath(project:string,location:string,api:string,version:string) {
    return this.pathTemplates.apiVersionPathTemplate.render({
      project: project,
      location: location,
      api: api,
      version: version,
    });
  }

  /**
   * Parse the project from ApiVersion resource.
   *
   * @param {string} apiVersionName
   *   A fully-qualified path representing ApiVersion resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromApiVersionName(apiVersionName: string) {
    return this.pathTemplates.apiVersionPathTemplate.match(apiVersionName).project;
  }

  /**
   * Parse the location from ApiVersion resource.
   *
   * @param {string} apiVersionName
   *   A fully-qualified path representing ApiVersion resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromApiVersionName(apiVersionName: string) {
    return this.pathTemplates.apiVersionPathTemplate.match(apiVersionName).location;
  }

  /**
   * Parse the api from ApiVersion resource.
   *
   * @param {string} apiVersionName
   *   A fully-qualified path representing ApiVersion resource.
   * @returns {string} A string representing the api.
   */
  matchApiFromApiVersionName(apiVersionName: string) {
    return this.pathTemplates.apiVersionPathTemplate.match(apiVersionName).api;
  }

  /**
   * Parse the version from ApiVersion resource.
   *
   * @param {string} apiVersionName
   *   A fully-qualified path representing ApiVersion resource.
   * @returns {string} A string representing the version.
   */
  matchVersionFromApiVersionName(apiVersionName: string) {
    return this.pathTemplates.apiVersionPathTemplate.match(apiVersionName).version;
  }

  /**
   * Return a fully-qualified instance resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} instance
   * @returns {string} Resource name string.
   */
  instancePath(project:string,location:string,instance:string) {
    return this.pathTemplates.instancePathTemplate.render({
      project: project,
      location: location,
      instance: instance,
    });
  }

  /**
   * Parse the project from Instance resource.
   *
   * @param {string} instanceName
   *   A fully-qualified path representing Instance resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromInstanceName(instanceName: string) {
    return this.pathTemplates.instancePathTemplate.match(instanceName).project;
  }

  /**
   * Parse the location from Instance resource.
   *
   * @param {string} instanceName
   *   A fully-qualified path representing Instance resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromInstanceName(instanceName: string) {
    return this.pathTemplates.instancePathTemplate.match(instanceName).location;
  }

  /**
   * Parse the instance from Instance resource.
   *
   * @param {string} instanceName
   *   A fully-qualified path representing Instance resource.
   * @returns {string} A string representing the instance.
   */
  matchInstanceFromInstanceName(instanceName: string) {
    return this.pathTemplates.instancePathTemplate.match(instanceName).instance;
  }

  /**
   * Return a fully-qualified location resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @returns {string} Resource name string.
   */
  locationPath(project:string,location:string) {
    return this.pathTemplates.locationPathTemplate.render({
      project: project,
      location: location,
    });
  }

  /**
   * Parse the project from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).project;
  }

  /**
   * Parse the location from Location resource.
   *
   * @param {string} locationName
   *   A fully-qualified path representing Location resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromLocationName(locationName: string) {
    return this.pathTemplates.locationPathTemplate.match(locationName).location;
  }

  /**
   * Return a fully-qualified project resource name string.
   *
   * @param {string} project
   * @returns {string} Resource name string.
   */
  projectPath(project:string) {
    return this.pathTemplates.projectPathTemplate.render({
      project: project,
    });
  }

  /**
   * Parse the project from Project resource.
   *
   * @param {string} projectName
   *   A fully-qualified path representing Project resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectName(projectName: string) {
    return this.pathTemplates.projectPathTemplate.match(projectName).project;
  }

  /**
   * Return a fully-qualified projectLocationApiArtifact resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} api
   * @param {string} artifact
   * @returns {string} Resource name string.
   */
  projectLocationApiArtifactPath(project:string,location:string,api:string,artifact:string) {
    return this.pathTemplates.projectLocationApiArtifactPathTemplate.render({
      project: project,
      location: location,
      api: api,
      artifact: artifact,
    });
  }

  /**
   * Parse the project from ProjectLocationApiArtifact resource.
   *
   * @param {string} projectLocationApiArtifactName
   *   A fully-qualified path representing project_location_api_artifact resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationApiArtifactName(projectLocationApiArtifactName: string) {
    return this.pathTemplates.projectLocationApiArtifactPathTemplate.match(projectLocationApiArtifactName).project;
  }

  /**
   * Parse the location from ProjectLocationApiArtifact resource.
   *
   * @param {string} projectLocationApiArtifactName
   *   A fully-qualified path representing project_location_api_artifact resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationApiArtifactName(projectLocationApiArtifactName: string) {
    return this.pathTemplates.projectLocationApiArtifactPathTemplate.match(projectLocationApiArtifactName).location;
  }

  /**
   * Parse the api from ProjectLocationApiArtifact resource.
   *
   * @param {string} projectLocationApiArtifactName
   *   A fully-qualified path representing project_location_api_artifact resource.
   * @returns {string} A string representing the api.
   */
  matchApiFromProjectLocationApiArtifactName(projectLocationApiArtifactName: string) {
    return this.pathTemplates.projectLocationApiArtifactPathTemplate.match(projectLocationApiArtifactName).api;
  }

  /**
   * Parse the artifact from ProjectLocationApiArtifact resource.
   *
   * @param {string} projectLocationApiArtifactName
   *   A fully-qualified path representing project_location_api_artifact resource.
   * @returns {string} A string representing the artifact.
   */
  matchArtifactFromProjectLocationApiArtifactName(projectLocationApiArtifactName: string) {
    return this.pathTemplates.projectLocationApiArtifactPathTemplate.match(projectLocationApiArtifactName).artifact;
  }

  /**
   * Return a fully-qualified projectLocationApiDeploymentArtifact resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} api
   * @param {string} deployment
   * @param {string} artifact
   * @returns {string} Resource name string.
   */
  projectLocationApiDeploymentArtifactPath(project:string,location:string,api:string,deployment:string,artifact:string) {
    return this.pathTemplates.projectLocationApiDeploymentArtifactPathTemplate.render({
      project: project,
      location: location,
      api: api,
      deployment: deployment,
      artifact: artifact,
    });
  }

  /**
   * Parse the project from ProjectLocationApiDeploymentArtifact resource.
   *
   * @param {string} projectLocationApiDeploymentArtifactName
   *   A fully-qualified path representing project_location_api_deployment_artifact resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationApiDeploymentArtifactName(projectLocationApiDeploymentArtifactName: string) {
    return this.pathTemplates.projectLocationApiDeploymentArtifactPathTemplate.match(projectLocationApiDeploymentArtifactName).project;
  }

  /**
   * Parse the location from ProjectLocationApiDeploymentArtifact resource.
   *
   * @param {string} projectLocationApiDeploymentArtifactName
   *   A fully-qualified path representing project_location_api_deployment_artifact resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationApiDeploymentArtifactName(projectLocationApiDeploymentArtifactName: string) {
    return this.pathTemplates.projectLocationApiDeploymentArtifactPathTemplate.match(projectLocationApiDeploymentArtifactName).location;
  }

  /**
   * Parse the api from ProjectLocationApiDeploymentArtifact resource.
   *
   * @param {string} projectLocationApiDeploymentArtifactName
   *   A fully-qualified path representing project_location_api_deployment_artifact resource.
   * @returns {string} A string representing the api.
   */
  matchApiFromProjectLocationApiDeploymentArtifactName(projectLocationApiDeploymentArtifactName: string) {
    return this.pathTemplates.projectLocationApiDeploymentArtifactPathTemplate.match(projectLocationApiDeploymentArtifactName).api;
  }

  /**
   * Parse the deployment from ProjectLocationApiDeploymentArtifact resource.
   *
   * @param {string} projectLocationApiDeploymentArtifactName
   *   A fully-qualified path representing project_location_api_deployment_artifact resource.
   * @returns {string} A string representing the deployment.
   */
  matchDeploymentFromProjectLocationApiDeploymentArtifactName(projectLocationApiDeploymentArtifactName: string) {
    return this.pathTemplates.projectLocationApiDeploymentArtifactPathTemplate.match(projectLocationApiDeploymentArtifactName).deployment;
  }

  /**
   * Parse the artifact from ProjectLocationApiDeploymentArtifact resource.
   *
   * @param {string} projectLocationApiDeploymentArtifactName
   *   A fully-qualified path representing project_location_api_deployment_artifact resource.
   * @returns {string} A string representing the artifact.
   */
  matchArtifactFromProjectLocationApiDeploymentArtifactName(projectLocationApiDeploymentArtifactName: string) {
    return this.pathTemplates.projectLocationApiDeploymentArtifactPathTemplate.match(projectLocationApiDeploymentArtifactName).artifact;
  }

  /**
   * Return a fully-qualified projectLocationApiVersionArtifact resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} api
   * @param {string} version
   * @param {string} artifact
   * @returns {string} Resource name string.
   */
  projectLocationApiVersionArtifactPath(project:string,location:string,api:string,version:string,artifact:string) {
    return this.pathTemplates.projectLocationApiVersionArtifactPathTemplate.render({
      project: project,
      location: location,
      api: api,
      version: version,
      artifact: artifact,
    });
  }

  /**
   * Parse the project from ProjectLocationApiVersionArtifact resource.
   *
   * @param {string} projectLocationApiVersionArtifactName
   *   A fully-qualified path representing project_location_api_version_artifact resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationApiVersionArtifactName(projectLocationApiVersionArtifactName: string) {
    return this.pathTemplates.projectLocationApiVersionArtifactPathTemplate.match(projectLocationApiVersionArtifactName).project;
  }

  /**
   * Parse the location from ProjectLocationApiVersionArtifact resource.
   *
   * @param {string} projectLocationApiVersionArtifactName
   *   A fully-qualified path representing project_location_api_version_artifact resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationApiVersionArtifactName(projectLocationApiVersionArtifactName: string) {
    return this.pathTemplates.projectLocationApiVersionArtifactPathTemplate.match(projectLocationApiVersionArtifactName).location;
  }

  /**
   * Parse the api from ProjectLocationApiVersionArtifact resource.
   *
   * @param {string} projectLocationApiVersionArtifactName
   *   A fully-qualified path representing project_location_api_version_artifact resource.
   * @returns {string} A string representing the api.
   */
  matchApiFromProjectLocationApiVersionArtifactName(projectLocationApiVersionArtifactName: string) {
    return this.pathTemplates.projectLocationApiVersionArtifactPathTemplate.match(projectLocationApiVersionArtifactName).api;
  }

  /**
   * Parse the version from ProjectLocationApiVersionArtifact resource.
   *
   * @param {string} projectLocationApiVersionArtifactName
   *   A fully-qualified path representing project_location_api_version_artifact resource.
   * @returns {string} A string representing the version.
   */
  matchVersionFromProjectLocationApiVersionArtifactName(projectLocationApiVersionArtifactName: string) {
    return this.pathTemplates.projectLocationApiVersionArtifactPathTemplate.match(projectLocationApiVersionArtifactName).version;
  }

  /**
   * Parse the artifact from ProjectLocationApiVersionArtifact resource.
   *
   * @param {string} projectLocationApiVersionArtifactName
   *   A fully-qualified path representing project_location_api_version_artifact resource.
   * @returns {string} A string representing the artifact.
   */
  matchArtifactFromProjectLocationApiVersionArtifactName(projectLocationApiVersionArtifactName: string) {
    return this.pathTemplates.projectLocationApiVersionArtifactPathTemplate.match(projectLocationApiVersionArtifactName).artifact;
  }

  /**
   * Return a fully-qualified projectLocationApiVersionSpecArtifact resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} api
   * @param {string} version
   * @param {string} spec
   * @param {string} artifact
   * @returns {string} Resource name string.
   */
  projectLocationApiVersionSpecArtifactPath(project:string,location:string,api:string,version:string,spec:string,artifact:string) {
    return this.pathTemplates.projectLocationApiVersionSpecArtifactPathTemplate.render({
      project: project,
      location: location,
      api: api,
      version: version,
      spec: spec,
      artifact: artifact,
    });
  }

  /**
   * Parse the project from ProjectLocationApiVersionSpecArtifact resource.
   *
   * @param {string} projectLocationApiVersionSpecArtifactName
   *   A fully-qualified path representing project_location_api_version_spec_artifact resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationApiVersionSpecArtifactName(projectLocationApiVersionSpecArtifactName: string) {
    return this.pathTemplates.projectLocationApiVersionSpecArtifactPathTemplate.match(projectLocationApiVersionSpecArtifactName).project;
  }

  /**
   * Parse the location from ProjectLocationApiVersionSpecArtifact resource.
   *
   * @param {string} projectLocationApiVersionSpecArtifactName
   *   A fully-qualified path representing project_location_api_version_spec_artifact resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationApiVersionSpecArtifactName(projectLocationApiVersionSpecArtifactName: string) {
    return this.pathTemplates.projectLocationApiVersionSpecArtifactPathTemplate.match(projectLocationApiVersionSpecArtifactName).location;
  }

  /**
   * Parse the api from ProjectLocationApiVersionSpecArtifact resource.
   *
   * @param {string} projectLocationApiVersionSpecArtifactName
   *   A fully-qualified path representing project_location_api_version_spec_artifact resource.
   * @returns {string} A string representing the api.
   */
  matchApiFromProjectLocationApiVersionSpecArtifactName(projectLocationApiVersionSpecArtifactName: string) {
    return this.pathTemplates.projectLocationApiVersionSpecArtifactPathTemplate.match(projectLocationApiVersionSpecArtifactName).api;
  }

  /**
   * Parse the version from ProjectLocationApiVersionSpecArtifact resource.
   *
   * @param {string} projectLocationApiVersionSpecArtifactName
   *   A fully-qualified path representing project_location_api_version_spec_artifact resource.
   * @returns {string} A string representing the version.
   */
  matchVersionFromProjectLocationApiVersionSpecArtifactName(projectLocationApiVersionSpecArtifactName: string) {
    return this.pathTemplates.projectLocationApiVersionSpecArtifactPathTemplate.match(projectLocationApiVersionSpecArtifactName).version;
  }

  /**
   * Parse the spec from ProjectLocationApiVersionSpecArtifact resource.
   *
   * @param {string} projectLocationApiVersionSpecArtifactName
   *   A fully-qualified path representing project_location_api_version_spec_artifact resource.
   * @returns {string} A string representing the spec.
   */
  matchSpecFromProjectLocationApiVersionSpecArtifactName(projectLocationApiVersionSpecArtifactName: string) {
    return this.pathTemplates.projectLocationApiVersionSpecArtifactPathTemplate.match(projectLocationApiVersionSpecArtifactName).spec;
  }

  /**
   * Parse the artifact from ProjectLocationApiVersionSpecArtifact resource.
   *
   * @param {string} projectLocationApiVersionSpecArtifactName
   *   A fully-qualified path representing project_location_api_version_spec_artifact resource.
   * @returns {string} A string representing the artifact.
   */
  matchArtifactFromProjectLocationApiVersionSpecArtifactName(projectLocationApiVersionSpecArtifactName: string) {
    return this.pathTemplates.projectLocationApiVersionSpecArtifactPathTemplate.match(projectLocationApiVersionSpecArtifactName).artifact;
  }

  /**
   * Return a fully-qualified projectLocationArtifact resource name string.
   *
   * @param {string} project
   * @param {string} location
   * @param {string} artifact
   * @returns {string} Resource name string.
   */
  projectLocationArtifactPath(project:string,location:string,artifact:string) {
    return this.pathTemplates.projectLocationArtifactPathTemplate.render({
      project: project,
      location: location,
      artifact: artifact,
    });
  }

  /**
   * Parse the project from ProjectLocationArtifact resource.
   *
   * @param {string} projectLocationArtifactName
   *   A fully-qualified path representing project_location_artifact resource.
   * @returns {string} A string representing the project.
   */
  matchProjectFromProjectLocationArtifactName(projectLocationArtifactName: string) {
    return this.pathTemplates.projectLocationArtifactPathTemplate.match(projectLocationArtifactName).project;
  }

  /**
   * Parse the location from ProjectLocationArtifact resource.
   *
   * @param {string} projectLocationArtifactName
   *   A fully-qualified path representing project_location_artifact resource.
   * @returns {string} A string representing the location.
   */
  matchLocationFromProjectLocationArtifactName(projectLocationArtifactName: string) {
    return this.pathTemplates.projectLocationArtifactPathTemplate.match(projectLocationArtifactName).location;
  }

  /**
   * Parse the artifact from ProjectLocationArtifact resource.
   *
   * @param {string} projectLocationArtifactName
   *   A fully-qualified path representing project_location_artifact resource.
   * @returns {string} A string representing the artifact.
   */
  matchArtifactFromProjectLocationArtifactName(projectLocationArtifactName: string) {
    return this.pathTemplates.projectLocationArtifactPathTemplate.match(projectLocationArtifactName).artifact;
  }

  /**
   * Terminate the gRPC channel and close the client.
   *
   * The client will no longer be usable and all future behavior is undefined.
   * @returns {Promise} A promise that resolves when the client is closed.
   */
  close(): Promise<void> {
    if (this.registryStub && !this._terminated) {
      return this.registryStub.then(stub => {
        this._terminated = true;
        stub.close();
        this.iamClient.close();
        this.locationsClient.close();
      });
    }
    return Promise.resolve();
  }
}
